,body,date
0,"his former company was called ximian, which was started to do commercial gnome development.  this new company is called xamarin to do commercial mono development.  those are some pretty confusing names.",2011-05-16 20:29:46
1,"I didn't really find the article that interesting, however looking at this <a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a> company I'm extremely intrigued by the product.",2011-06-18 12:38:32
2,"There are other ways to do it: <a href=""http://android.xamarin.com/"" rel=""nofollow"">http://android.xamarin.com/</a>",2011-07-30 08:59:09
3,"Well:<p>&#62; No it isn't. Instead I would say that the JVM, which took ages to release version 7 (and we'll probably wait another 2 years for version 8), is light-years ahead of .NET<p>...<p>&#62; while the DLR is somewhere in limbo<p>...<p>&#62; Btw, speaking of Java's garbage collector, it's so kick ass that no other VM comes close.<p>...<p>etc<p>I didn't downvote, but saying stuff like that without a single bit of concrete information to back up the those arguments is pretty useless.<p>Then you have:<p>&#62; Personally, I consider it a lot more awesome when some dude I never heard of appears from nowhere with a usable LISP implementation (Clojure).<p>Which disregards that non Microsoft employed people create languages for .NET too. Nemerle is a great example, and that's how the Iron projects initially started before MS got involved.<p>and also:<p>&#62; The fact that .NET is only usable on Windows has been its major flaw since for me ever since I heard about it. It might as well be the most awesome technology in the world (although that would be a stretch of imagination), but it's completely useless if I can't run it wherever I want.<p>Which is just almost ignorant. I used to be employed writing ASP.NET web apps that ran on linux servers before I switched jobs. Then you have xamarin which lets you develop .NET apps for iOS and Android. Needless to say you get that ability automatically for Windows phones, etc. So all in all to me it seems like .NET's reach is pretty impressive.",2011-09-15 13:52:37
4,You can also use mono touch (xamarin product) to develop iOS apps using c#. you still will require Mac,2011-11-28 15:40:09
5,".NET is <i>huge</i> for job prospects.  Outside of the valley I see more .NET than any other language. There are a lot of government/military contracts as well as large corporations who have their whole infrastructure on Microsoft and so all development is done on it.<p>That being said, if you are reading HN you are probably interested in the startup community and you will not find as many startups using it.<p>If you like .NET you can also do iPhone and Android development using <a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a>.",2011-12-29 17:40:55
6,Thanks sontek xamarin sounds pretty  interesting,2011-12-29 20:58:37
7,"igualmente :].<p>co-founder of a very-recently Google &#38; Atlas Venture backed startup (so not an investment deterrent; no issues on the engineering deep-dive during diligence, and received kudos on our architecture and some clever stuff we developed).   love .NET and the MSFT support &#38; team over at azure... been on it since beta circa 09'.   I'm also an avid python numpy &#38; matlab programmer, even submit patches to and support a few open source python libraries (ps: flask is my favorite web framework).<p>in this discourse (and that of the original article and its comments) of the original article) I've encountered a tremendous amount of opinion/perspective that contrast my own/teams, and the experiences we've had - so I'm sharing my thoughts below. I may not address each questions but it's at least a stream of consciousness evoked by the topic.<p>(btw: I came from an all-java shop (oracle) by way of a company they acquired in '07.)<p>our language is C#, target framework 4.0.<p>- misc: C# is semantically equivalent to Java, virtually the same for the core libraries; syntax and the nuance of the latter aside it's easy to embrace engineers from the opposing worlds within each others framework.
- diamonds in the rough: there is a treasure-trove of very smart previously inaccessible engineers toiling away in corporate waste-land, skilled in C#, and ineligible (by syntax/familiarity guidelines) for lots of startup reqs. example: we have a brilliant mathematician on our team that's been coding in C# since its release, working for investment banks where C# was the internal language of choice. as always, it's really about the person, not the language (look at what php's done to push the envelope with PHP... mysql...).<p>- .NET in terms of limited capability: we've written some pretty heavy non-linear optimization frameworks, stuff that while easy to prototype in python, we've found much more maintainable in C# due to the VS IDE, static typing, and the effectiveness &#38; patterns they beget.  also the efficiency inherent in some of the data structures to their static nature has been noticeably performant. (btw, latest CLR has truly dynamic types, and an independent fully dynamic runtime DLR.)<p>- prototyping: django's beautiful admin framework aside, .NET MVC 2 via C# and Django via Python yield very similar efforts for prototyping.  MVC has a struts-like template for pushing admin stuff up quickly.<p>- cool/weird stuff: we've built (and had one of the best software engineering companies attest to) an incredibly innovative multi-dimensional-map for 'moving' throughout a highly constrained NP solution space during non-linear optimization.  C# and Java do not support generic generics (think maps of N # of maps with X type). we have code-generate this, and their super efficient.  it's something you could just bang away on at python or in lisp to prototype quickly, but you would need careful optimize and code to get performant, and also maintainable and provable (mathematically) across a multitude of types inherited for varying different sources throughout a framework. object-oriented languages w/static typing afford you this.  yes it could have been done in open source C++, C or Java, but we did do it in .NET.  It's one of the fun and weird things we've worked on.  inspiration is/should not be limited by a language, regardless if it's correlated, it's not causal.  please see auto vector regression by one of this years nobel laureate in economics or this: <a href=""http://www.venganza.org/about/open-letter/"" rel=""nofollow"">http://www.venganza.org/about/open-letter/</a> - for quick intuition as to why. :]<p>- liquidity/exit event, and the choice: we didn't choose .NET due to a likelihood of acquisition, or not choose it in fear of it preventing one (I mean this as in every sense except that in which .NET made our business look more compelling; hone our competitive advantage, etc.) I agree for a framework company (solely depending upon the level of the framework) this could be critical, but for most companies where at least one level of abstraction (framework included) obviates development platform dependency from a decision to use the service, it's negligible.  we chose it because of how pervasive windows and its embedded and compact environments were in some of the disparate systems we're integrating with.  it made life easier.  it's worth stating that, whilst I stand by my first sentence, a couple of our most likely acquirers do have predominantly microsoft stacks, or are c++ based and could assimilate our development ethos quickly.<p>- cost of tech: we're bizspark'd which made this venture possible, I agree, without that .NET would not have been feasible decision.  we would have went java or python (especially given the fantastic client-side deployments dropbox was doing w/it at the time). we would not have chosen MONO - at the time ASP.NET via Mono scaled poorly and MVC didn't exist for it (digression: absolutely no way in hell anyone should build on the old asp.net forms paradigm or hold it against .NET now that MVC is an option: even excluding the IoC weirdness and its terrible pattern, I still cringe when I see .aspx extension on a site. that said MONO for our integration platform would have been perfectly fine.<p>- long term cost (post 3 years): azure is not expensive, like all platforms (I have EC2 and app-engine experience) if you optimize for it, you can make it cost-effective.  more importantly, if you're not earning $ or in some cases raise/preserve capital after 3 years (or until you hit $1.5m in rev per the bizspark restrictions) what kind of business are running?<p>- source control: TFS (team foundation server) is fantastic, from its testing framework, bug repository, and with some hacking its workflow systems it's a tool I've found as powerful (but easier to configure) than clear case, the systems we used at oracle, and myriad other variants I've worked with over the years. it's not source safe :].<p>- complexity: we've had to lift up the hood quite a bit to accomplish what we wanted.  ""the ability to patch and pull in req's for changes to FOSS software"" is but one way to customize.  .NET offers many, down to the many ways you can override/overload/extend even the most isolated libraries with the latest syntax sugar, to getting your hands a little dirty in MSIL. while not the FOSS way, it's possible.  whether or not it's ideal is a matter of perception - e.g. when you work in (and accept) a proprietary environment.<p>- developer vs. engineer culture: semantics here. probably the b&#38;b of this article, I think culture, pervasiveness (not independent of the former), and founding team/CTO experience, and biz strategy sum up to the decision as to why people do or do not use .NET.  I find it difficult to place a coefficient on each of those terms but it's empirically manifest that more often than not they weigh against the choice to use .NET.  strategy includes cost, only recently (~3 yrs) obviated by bizspark. it's also the market stuff I mentioned. FOSS has existed for years as an alternative - this is why it's pervaded (among other reasons).  I have no data on founder XP, but I've met very few others that have experience working in .NET languages, I think this is a big contributor to start culture &#38; personality types and where most .NET developers dwell - that's why I labeled that intersection 'diamonds in the rough'. last statement should show how those terms are not mutually exclusive.<p>- language/tech zealots: agreed, they're everywhere. even people I respect tremendously just have this natural predilection toward their preferred tech and its advantages.<p>my .2e-1<p>observation: have you seen the wonderful and cross-platform [android, ios, win phone] natively compiled .NET tech miguel's team @ xamarin have been working on?  I suspect the # of corp clients that are leveraging that tech and the exposure to consumers the app-serving end-devices have will inspire those corp developers to create their own apps eventually... could bring a lot of .NET favoring newcomers (and different demographic) into the startup scene - neither a bad thing.",2011-12-29 23:10:00
8,"I was in a similar situation a few years ago, but I opted for Monotouch [1]. I still had to learn UIKit, Foundation etc, but I didn't have to learn a ""new"" language. I did have to hack together a Visual Studio package to trick it into loading monotouch project files, but it was like 10 lines of code, and now you don't have to.<p>I did spend several months developing (and shipping) two Objective-C apps for the few months that Apple banned Adobe AIR (and everything else along with it), and despite having spent 30 years programming, and a good part of that in C and C++, the full awfulness of ObjC was a surprise. But if all you've ever done is C#/WPF, ObjectiveC is going to be quite a shock. In fact there'll be a lot of cognitive dissonance.<p>[1] <a href=""http://xamarin.com/monotouch"" rel=""nofollow"">http://xamarin.com/monotouch</a>",2012-02-21 08:25:06
9,"MonoTouch <a href=""http://xamarin.com/monotouch"" rel=""nofollow"">http://xamarin.com/monotouch</a>",2012-05-01 21:50:12
10,"The guys who made this blog post make some software called MonoTouch.<p><a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a><p>It costs $400 for a license, though. But boy I am tempted... I know, I know- you need to go with the native languages for the best experience. But keeping a huge chunk of my codebase between platforms is a very, very interesting idea to me.",2012-05-01 21:51:06
11,"I'll be great if they support F#, but seems like not, 0 answers from googling, except for this request:
<a href=""https://xamarin.uservoice.com/forums/144858-xamarin-suggestions/suggestions/2699180-extend-monodroid-and-monotouch-to-support-f-"" rel=""nofollow"">https://xamarin.uservoice.com/forums/144858-xamarin-suggesti...</a>",2012-05-02 00:35:11
12,"Right, which means we can't handle generic virtual methods, since we cannot JIT compile them. See: <a href=""http://docs.xamarin.com/ios/about/limitations#Generic_Virtual_Methods"" rel=""nofollow"">http://docs.xamarin.com/ios/about/limitations#Generic_Virtua...</a>",2012-05-02 15:16:47
13,"Take a look at MonoDroid (<a href=""http://xamarin.com/monoforandroid"" rel=""nofollow"">http://xamarin.com/monoforandroid</a>) and MonoTouch (<a href=""http://xamarin.com/monotouch"" rel=""nofollow"">http://xamarin.com/monotouch</a>). C# for 3 platforms: WP7, Android, iOS.<p>Mobile web will never have the same benefits that a native app has: high performance, less data to transfer, nicely integrated in the OS (live tiles, etc.).",2012-06-05 15:33:00
14,"As far as I know MonoTouch uses Ahead Of Compilation [1] on iOS. So there is no JIT in compiled binaries.<p>[1] <a href=""http://docs.xamarin.com/ios/about/limitations"" rel=""nofollow"">http://docs.xamarin.com/ios/about/limitations</a>",2012-06-18 18:04:42
15,"C#? (<a href=""http://xamarin.com/monotouch"" rel=""nofollow"">http://xamarin.com/monotouch</a>)",2012-06-18 19:37:10
16,"Prototypes, sure, but people always mention it to say You can write apps in Python on Android. Thats simply not true.<p>SL4A is kinda like PhoneGap: you can use it, but you will not get a quality app out of it. That might be fine for your use case, but its definitely not on par to using the canonical platform.<p>Other quick notes: The last commit on the Scala for Android project is from two years ago and says add 2.2 support, the related blog post is from one year ago. Same deal with Android ObjC: last commit April 2010. I would never trust either of these for production development.<p>Im sorry but languages other than Java and C++ for Android development are closer to vaporware than reality right now. The only good alternative is Mono <a href=""http://xamarin.com/monoforandroid"" rel=""nofollow"">http://xamarin.com/monoforandroid</a> which is actually working and supported and not a forgotten weekend hack.<p>Please note: Im perfectly fine with Java.",2012-06-18 22:35:37
17,"Fair enough. I'm just concerned in that trying to downsize to save money, Nokia has missed the opportunity to take what was a profitable business (Trolltech's 2007 numbers (in NOK): 174m Rev, 46.5m Profit, 26.7% Net Profit Margin, 227 employees), and salvage it by spinning it back out into a separate business.<p>In dollar terms, Trolltech in 2007 was doing $30m Rev and making $8m profit. Obviously that's 5 years ago and I don't know what the current fundamentals are, but it would be interesting to know if that business within Nokia was doing more revenue or less, and what it's costs were.<p>If I were a former TrollTech employee, I would suggest taking a leaf out of Xamarin's book: <a href=""http://gigaom.com/2011/12/12/xamarin-mono/"" rel=""nofollow"">http://gigaom.com/2011/12/12/xamarin-mono/</a>",2012-06-23 12:53:11
18,"&#62; The ObjC runtime is poorly architected, shows its age, and is not sufficiently well designed to permit the implementation of features that would grossly simplify the use of the language.<p>The first two points are not defined in a sufficient way that would allow us to have a meaningful conversation about them.  What does it mean to be poorly-designed?  What does it mean to be old, and why is old bad?  We cannot make progress here without semantic introspection.  On the third topic, however:<p>&#62; In support of this I mentioned a number of features that simply are non-implementable on the current runtime, including automatic handling of reference cycles<p>I'd like to examine this particular assertion in substantial detail, because it is apparent to me I have not communicated clearly:<p>1) First of all, the statement ""automatic handling of reference cycles is not possible to implement because of the Objective-C runtime"" is false.  It is false because it has in fact been implemented, in spite of the Objective-C runtime: <a href=""https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/GarbageCollection/Articles/gcUsing.html#//apple_ref/doc/uid/TP40008006-SW2"" rel=""nofollow"">https://developer.apple.com/library/mac/#documentation/Cocoa...</a><p>2) I've made the general argument that many features are not useful on a 5w computer.  Now I will make the specific argument that detecting retain cycles is not useful on a 5w computer:<p>&#62; We have no heap scans, no whole-app pauses, and no non-deterministic releases.  We really think that a smooth, fluid interface is important to our customers, and that great battery life is also important.  And with that, GC is deprecated. - Apple, WWDC 2012 session 406, about 34 minutes in<p>Now extending this two-case line of reasoning to the general list of features: I do not believe (and you have provided no evidence to support) that the Objective-C runtime is the limiting factor for any feature you have listed.  I also do not believe (and you have provided no evidence to support) that any feature is useful on a 5w computer.  In this particular most-favored case, both of these problems apply, but I believe at least one problem applies to every feature you have listed.<p>&#62; Somebody should tell Microsoft and the MonoTouch guys. Even Android's GC is usable, and it's an fairly primitive mark-and-sweep collector.<p>I think they already know:<p>&#62; The occurrence of this is non-deterministic, and may happen at inopportune times (e.g. in the middle of graphics rendering). If you see this message, you may want to perform an explicit collection elsewhere, or you may want to try to reduce the lifetime of peer objects.  <a href=""http://docs.xamarin.com/android/advanced_topics/garbage_collection"" rel=""nofollow"">http://docs.xamarin.com/android/advanced_topics/garbage_coll...</a><p>As I understand it, MonoTouch's optional SGen does a better job, but still uses a stop-the-world algorithm for ""large"" objects.  Given the memory constraints of most iOS devices, lots of things are large relative to the amount of memory you have available.  For example, my real-world iPad currently has 90MB in the free pool, which means that a single layer that draws to screen is 10% of the immediately available memory in pure graphics buffer allocations.  (It is possible to increase the available pool, and in fact iOS will instruct apps to dump what they can if more is requested, but this is slow and also not being a good memory citizen).",2012-07-08 05:52:46
19,"The way this argument is going is a very eloquent ""he said, he said"".  I'd like to push it into a better discussion.  Could you drop the rhetoric about ""parroting the WWDC line"" and ""Apple stumbling about"", the ad-hominem characterizations of developers who haven't implemented a GC, etc.?  I'm going to require you to provide hard facts or examples to support your claims, and not present conclusions as arguments, and not muddy the waters.<p>&#62; The ObjC runtime is poorly designed in part due to the fact that it fails to cleanly and adequately represent the necsessary metadata to support new features, and thus requires repeated ABI breakage as Apple stumbles about trying to implement enhancements.<p>The ABI was ""changed"" once.  When I say it was ""changed"", I really mean that the new ABI was released for the first time on new architectures that did not previously have an ABI at all, and the old architectures' ABI did not change.  Assuming that your objection to ABI ""breakage"" was compatibility-based in nature, this objection would be unfounded.<p>You have also failed to make a claim that any particular feature is both useful and unimplementable, and also failed to support such a claim.  Please make and support claims, not conclusions.<p>&#62; As for accepting Apple's assertions about GC at face value -- this is the same organization that proudly trumpeted their poor implementation of GC at WWDCs past, and migrated their entire set of Mac OS frameworks to support it.<p>To be fair, garbage collection was released before iOS was released.  Apple's position is today, and has always been, that garbage collection is infeasible on iOS.  What has changed between 2006 and 2012 is that it now makes a lot of sense from both a developer mindshare point of view and an Apple engineer cost/benefit point of view to make Mac OS be as close to iOS as possible, because that's where the money is.  There are very good reasons why (e.g. non-deterministic finalization) it is impossible to share code and illogical to share engineers between ARC and GC codebases.<p>&#62; GC at Apple died because of a poor implementation, political fallout from it, and lack of adequate investment in it.<p>This contradiction is baseless (e.g. unsupported), so on that basis I am not compelled to respond.  It also contradicts my discussions with engineers who were involved in the decision, so if you were to provide a basis, I have first-hand accounts with which to refute you.<p>&#62;  Regardless of that, Apple should be capable of bringing more computer science firepower to this problem than Mono is.<p>And here is the fundamental disconnect: you believe that currently-known GC algorithms are ""good enough"" for general use on iOS.  I do not.  Apple does not.<p>Thinking it through logically, there are three possible root causes for this disagreement:<p>1.  You and I could have a different conception of the hardware capabilities of iOS devices<p>2.  You and I could have a different conception of the performance characteristics for currently-known GC algorithms<p>3.  You and I could have a different threshold for user pain, so you might characterize a certain performance penalty as ""acceptable"" that I would characterize as ""unacceptable.""<p>We've danced a little bit around #1 and #2, and we can talk some more about those.  But I think the real issue might be #3.<p>For example, the native screen refresh rate is 60fps.  I would consider it unacceptable to skip five consecutive frames, and unacceptable to skip more than 15 frames as a sustained average over many seconds.  Mono documents ""major collections"" to take a second, which fails both criteria. [1]<p>I would also consider it unacceptable that, upon returning to the run loop (or equivalent common synchronization point), more than 15% of garbage bytes remain uncollected.  There's just not that much memory to go around.<p>At this point, I have laid out in very specific detail what I mean by ""performs acceptably"".  Now, you can either A) tell me that my demands are insane, in which case we simply have a very different idea of what ""responsive user interface"" means, and there's really nothing more to be said to convince the other.  Or, B) demonstrate that there exists some GC implementation which fulfills these requirements, and additionally demonstrate that it cannot be implemented with the current ObjC runtime.<p>I think this is the the healthiest way forward for the discussion, because it leaves open the possibility that we may learn something.  If instead we return to the things I listed in the first paragraph, I think we both have better uses of our time.<p>[1] <a href=""http://android.xamarin.com/index.php?title=Documentation/GC"" rel=""nofollow"">http://android.xamarin.com/index.php?title=Documentation/GC</a>",2012-07-09 07:36:45
20,"MonoTouch is $79/student ('currently enrolled at an accredited institution [...] even publish to Apple's App Store') per <a href=""http://support.xamarin.com/customer/portal/articles/177042-do-you-have-any-student-or-academic-discounts-"" rel=""nofollow"">http://support.xamarin.com/customer/portal/articles/177042-d...</a><p>Be sure to check out MonoDevelop, which has a few full-or-most-time paid developers behind it: <a href=""http://monodevelop.com/Screenshots"" rel=""nofollow"">http://monodevelop.com/Screenshots</a>",2012-07-20 00:26:43
21,"We just blogged a case study from the PictureTHIS, an app from the guys that did Draw a Stickman:<p><a href=""http://blog.xamarin.com/2012/08/07/picturethis-fun-for-both-ios-and-an_ro_d-users/"" rel=""nofollow"">http://blog.xamarin.com/2012/08/07/picturethis-fun-for-both-...</a><p>They have a nice case study.<p>You do not have to pay before you try, the evaluation version lets you do all your development on the simulator.  If you like it, you can buy it and deploy to device.   And if you are unhappy, you can return it within 30 days.<p>That said, we will work hard to make sure you are delighted with our product, and keep you as a user.",2012-08-09 02:15:32
22,"This is slightly off topic, but I don't really understand Miguel de Icaza.<p>He is a ""free software programmer"" according to Wikipedia, and I really value his contributions to both the GNOME and MONO projects.<p>I am not trying to in anyway put down his acheivements but his comments on social media (G+ and twitter) are often about ordering truckloads of Apple products.<p>Was there a falling out with the Gnome project or why is he such an avid supporter of the Apple brand? Perhaps its just a case that he has moved on from his free software roots. I appreciate that his company xamarin are working solidly on Mono which is open source, but a number of their products are not open source such as Mono Touch and Mono for Android.<p>I'm not saying that he shouldn't be allowed to sell software but I am curious what has caused this shift in philosophy or perhaps his involvement with the free and open source software was simply about producing code rather than the free principles behind it.",2012-08-25 10:46:19
23,"&#62;<i>This is slightly off topic, but I don't really understand Miguel de Icaza.</i><p>It might be that you have a narrow view of free/open source software. The idea behind it is not all about GNU or Linux or anything. iTerm 2 is a mighty fine open source software -- for OS X.<p>Open source is not incompatible with Apple or Windows. Nor it is a religion/principle thing to everyone, some see it more casually.<p>&#62;<i>I appreciate that his company xamarin are working solidly on Mono which is open source, but a number of their products are not open source such as Mono Touch and Mono for Android.</i><p>Well, he also has to make money. He tried the open source non commercial approach with Evolution et al, and it didn't work very well for them (or for the Nautilus guys). If it wasn't for Novell buying them they would have nothing to show for today.",2012-08-25 15:33:21
24,"I been told by my boss to use a framework named Xamarin's MonoTouch (http://xamarin.com/), I don't want to use it, anyone has good reasons to not use it instead of native apps (that is licensed and on C# doesn't count) Edit: added framework name",2012-08-26 13:40:31
25,"List of limitations.<p><a href=""http://docs.xamarin.com/ios/about/limitations"" rel=""nofollow"">http://docs.xamarin.com/ios/about/limitations</a>",2012-08-26 15:05:20
26,"Or [Xamarin](<a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a>) for C#'ers.<p><i>Note to pg: support subset of markdown for HN v2?</i>",2012-09-14 13:11:16
27,"Waited for the official answer. It's bad, there's no answer. As someone who started learning Titanium, this is really deal-breaker for me! Off to phonegap, xamarin, or native ...",2012-09-21 23:29:44
28,"After losing the support of Novell they refocused (see xamarin.com). They really did an amazing job with what they had, though.<p>That said, Mono benchmarked about 4x slower on my web apps.<p>For me, better to use two Windows instances rather than deal with the ongoing Mono compatibility drama across 8 Linux machines.",2012-10-02 00:57:51
29,"I'm referring specifically to portable class libraries (PCL) (<a href=""http://stackoverflow.com/questions/5238955/what-is-a-portable-class-library"" rel=""nofollow"">http://stackoverflow.com/questions/5238955/what-is-a-portabl...</a>) that allow you to write code that is 'cross platform'.<p>(ie. PCL --&#62; One code base that compiles and runs on multiple c# runtimes; a <i>key feature</i> of writing cross platform c# applications)<p>Support is currently limited, see: <a href=""http://docs.xamarin.com/ios/tutorials/Cross_Platform/Building_Cross_Platform_Applications/Part_3_-_Setting_Up_A_Xamarin_Cross_Platform_Solution#Portable_Class_Libraries_(PCL)"" rel=""nofollow"">http://docs.xamarin.com/ios/tutorials/Cross_Platform/Buildin...</a><p>Of course you can copy and paste your code into different projects manually, and compile it for a specific runtime. Or... you can use visual studio.",2012-10-21 15:47:39
30,"Not my app, but you could check out iCircuit's experience:
<a href=""http://praeclarum.org/post/31799384896/icircuit-code-reuse-the-fourth-edition"" rel=""nofollow"">http://praeclarum.org/post/31799384896/icircuit-code-reuse-t...</a><p>He achieves anywhere from 69-87% code reuse depending on the platform. They did a bit of a case study a while ago where Frank talks about it - <a href=""http://blog.xamarin.com/2011/10/26/java-to-ipad-in-2-months/"" rel=""nofollow"">http://blog.xamarin.com/2011/10/26/java-to-ipad-in-2-months/</a>",2012-10-22 19:24:56
31,"Xamarin are booming (they are a cross-platform, open-source-based development tools company who are big contributors to mono). 190,000 developers and 10,000 customers already <a href=""http://blog.xamarin.com/2012/11/08/xamarin-evolve-2013-our-first-developer-conference/"" rel=""nofollow"">http://blog.xamarin.com/2012/11/08/xamarin-evolve-2013-our-f...</a><p>So mono's future is secured - Android, iPhone, iOS, OS X, linux, windows 8, ... no other high-level-to-native tools get this reach and none based on a language as c# (so much better than java).  F# looks like nice added sauce to this.",2012-11-09 12:30:35
32,"See above - Xamarin are big contributors to mono. They have 190,000 developers and 10,000 customers already <a href=""http://blog.xamarin.com/2012/11/08/xamarin-evolve-2013-our-first-developer-conference/"" rel=""nofollow"">http://blog.xamarin.com/2012/11/08/xamarin-evolve-2013-our-f...</a><p>so mono's future looks secure now",2012-11-09 12:32:26
33,"...the only thing that could motivate me nowadays to write a BB version of a mobile app would be the ability to use HTML5 and javascript and just have the same app on both Android and BB... so if the browser is better than what 90% of Android users have, I wouldn't care, because I'd be targeting the Android webkit browser... Android won, so they should first strive for compatibility first (and HTML5 apps seems the only way for them) and then show off any superior features their OS may have on top of this...<p>...it seems that they are running through the woods without a map (AGAIN!) right now, and it really doesn't matter how fast they can run or climb trees if they don't know where they're going<p>[EDIT: added what's next]
my 2 cents for RIM: throw some money at Xamarin (<a href=""http://xamarin.com"" rel=""nofollow"">http://xamarin.com</a>) to make BB a target for their app development platform... putting your eggs in the multiplatform basket would seem like the only sensible decision now that your basket is hosed / on fire, and enterprise devs that would be more inclined to target BB will probably prefer C#...",2012-11-10 06:48:43
34,"C# can ""go native"" right now.<p>NGEN precompiles the IL into native code if you use the normal framework.<p>Mono AOT compiles (and links) code into various architectures, but MonoTouch and Mono for Android (<a href=""http://xamarin.com"" rel=""nofollow"">http://xamarin.com</a>) would be the major public uses for it - native iOS / Android apps using C#.<p>If you wonder ""can they be any good"": go get the new Rdio app. It's done in MonoTouch (and their Android one, in beta, is done in Mono for Android)",2012-11-28 13:27:09
35,"That's for an enterprise-level license -- the 'professional' license is $399: <a href=""https://store.xamarin.com/"" rel=""nofollow"">https://store.xamarin.com/</a>",2012-12-12 18:03:39
36,"A few diferences:<p>1. Xamarin.Mac comes with a commercial license, so you can ship to the Mac App Store (not allowed under MonoMac's LGPL license).<p>2. Xamarin.Mac comes with commercial support.<p>3. Xamarin.Mac includes bindings for several new APIs, including CoreBluetooth, GameKit, StoreKit, SceneKit, and the new Mountain Lion AppKit classes.<p>You can see a full list of differences here: <a href=""http://docs.xamarin.com/mac/guides"" rel=""nofollow"">http://docs.xamarin.com/mac/guides</a>",2012-12-12 20:08:23
37,"<p><pre><code>    Interesting, reading that makes it sound like a C# developer that wants to work with MonoTouch will have to verge off to learning at least some Objective C if they want to have shippable code.
</code></pre>
Yes, you'll definitely need to learn some things about Objective C. This isn't really about learning the language itself though. It's more about understanding iOS and ObjC runtime.<p>The closest analogy to C# develop would be COM and P/Invoke. C# provides tools to interface with COM and native libraries, but you still need to learn some marshalling fundamentals so you can ensure GC doesn't collect objects while they are being used by native code, you need to implement IDisposable and not forget to free unmanaged resources, etc.<p>It's similar with MonoTouch: you need to understand that MonoTouch classes wrap native objects, that disposing of wrappers doesn't necessarily kill native objects because other native objects may still link to it, and that sometimes GC can't know for sure if an object is eligible for killing, and will never collect it.<p>In general, this comes down to: don't rely on .NET GC to kill native objects, do it yourself. My life got so much better after I started doing so.<p>Things that confused me most (and which are all you really need to know about ObjC memory management):<p><a href=""http://stackoverflow.com/questions/13058521/is-this-a-bug-in-monotouch-gc"" rel=""nofollow"">http://stackoverflow.com/questions/13058521/is-this-a-bug-in...</a><p><a href=""http://stackoverflow.com/questions/13064669/why-cant-monotouch-gc-kill-managed-objects-with-refcount-1"" rel=""nofollow"">http://stackoverflow.com/questions/13064669/why-cant-monotou...</a><p>This is a great screencast I wish I saw <i>before</i> I started coding in MonoTouch:<p><a href=""http://forums.xamarin.com/discussion/33/finding-memory-leaks-in-your-apps"" rel=""nofollow"">http://forums.xamarin.com/discussion/33/finding-memory-leaks...</a><p>It explains how to find native memory leaks.<p>How much time does it take to learn this? No more than a week. But it takes more to find memory leaks in existing app so it's better to get some understanding and learn to profile early. For me, fixing a two-month-old codebase took about week and a half.",2012-12-12 22:29:23
38,"How did you learn your F#?! Have never had any problem writing reusable functions.<p>On windows 8,000 nuget packages works for me as an ecosystem. on linux/osx/droid we have xamarin booming along.",2012-12-18 02:21:04
39,"You have misunderstood. iOS and Android apps built using C# have access to 100% of the native API of the underlying platform. So all of the UI is fully native. Take a look at our API documentation on iOS, for example:<p><a href=""http://iosapi.xamarin.com/?link=root%3a%2fMonoTouch-lib"" rel=""nofollow"">http://iosapi.xamarin.com/?link=root%3a%2fMonoTouch-lib</a><p>You can see thousands of iOS APIs bound, including all of UIKit:
<a href=""http://iosapi.xamarin.com/?link=N%3aMonoTouch.UIKit"" rel=""nofollow"">http://iosapi.xamarin.com/?link=N%3aMonoTouch.UIKit</a>",2013-01-02 19:29:33
40,"i havent seen anyone mentioning things like <a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a><p>Write your business logic in C# and just build the View for every platform with native components. Sounds like the ideal tradeoff for me!",2013-01-06 09:37:37
41,"Mostly on mobile I would guess. Xamarin has a showcase on their site: <a href=""http://xamarin.com/apps"" rel=""nofollow"">http://xamarin.com/apps</a> .<p>Also every game made in Unity is using Mono, which is _a lot_ of games. The Playstation Vita and Wii U uses Mono as well for third party development.",2013-01-11 13:28:12
42,"Well, you can write C# without having to develop on windows through the Mono framework, and Xamarin's products - <a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a><p>These days, you can be a C# developer without having to do an ounce of ""Microsoft Stack"" programming if you didn't want to.",2013-01-22 15:51:12
43,"(in response to marknutter's comment below, for some reason the reply button was previously not available. HN bug?):<p>You can (and we do):<p>iOS: <a href=""http://xamarin.com/monotouch"" rel=""nofollow"">http://xamarin.com/monotouch</a>
android: <a href=""http://xamarin.com/monoforandroid"" rel=""nofollow"">http://xamarin.com/monoforandroid</a><p>You should give it a shot. And as much as I like HN and its content, its mobile UX is pretty shabby (dare I say incompatible? ;)).",2013-02-11 14:07:46
44,"I don't think RubyMotion exists because like Obj-C it was inspired by SmallTalk. Well maybe it is, but that doesn't mean it's an insurmountable barrier that would render a similar project in python impossible or ""un-python like"". C#/.NET got the treatment a long time ago, <a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a>. It's just that (it appears) no company or OS developer has taken on the challenge of creating the tooling for python.",2013-02-13 22:11:28
45,"From <a href=""http://docs.xamarin.com/guides/ios/getting_started/installation/windows#24-limitations"" rel=""nofollow"">http://docs.xamarin.com/guides/ios/getting_started/installat...</a><p>""No iOS simulator on Windows. The iOS Simulator runs on Mac OS X, so its necessary to switch to the Macs screen when testing on the simulator.""",2013-02-20 14:40:35
46,"I don't own a Mac, but have an Ipad. If I jalbreak my Ipad, would I then be able to deploy applications built with xamarin studio or visual studio for testing?",2013-02-20 14:58:35
47,"This is great and looks very interesting. First question - what happened to the Windows Phone 8 support? Won't we be able to develop Windows Phone applications using Xamarin?<p>It says on <a href=""http://xamarin.com/Windows"" rel=""nofollow"">http://xamarin.com/Windows</a> that Xamarin does support all three platforms, but I don't see anything about the Xamarin studio there.",2013-02-20 15:01:08
48,"I am a bit ambivalent - on one side, as I think about new product ideas that will naturally be multiplaform, something like this is very appealing in theory, but my experience tells me that the lowest-common-denominator approach has almost always failed.<p>I wonder how folks are thinking about that problem - i.e., if you are starting a new app from scratch - even if you are doing iOS only initially - do you go objective-c or xamarin/c# ?<p>it's quite hard to make an educated decision.<p>any thoughts?",2013-02-20 15:09:49
49,"It isn't a lowest-common-denominator approach. We expose the entire native API on each platform. So anything you can do in Objective-C, you can do in C#.<p><a href=""http://xamarin.com/how-it-works"" rel=""nofollow"">http://xamarin.com/how-it-works</a>",2013-02-20 15:11:30
50,"I have mixed feeling about this. I have a current Mono for Android Profession subscription and use the Visual Studio integration a lot. My subscription is due for renewal next month and if I want to continue to use VS with Xamarin 2.0 then I have to renew at the Business edition level. I paid for my sub out of my own pocket because I liked the technology so much, but $399 for the pro version last year was a stretch and I just can't justify $1k to renew. Xamarin Studio might be superb, but I've been using VS since 1995 and I really don't need to learn another new IDE right now.<p>Any comments from Miguel or anyone from Xamarin?<p>That said, the Indie edition is something that a lot or people were asking for and the price is attractive. The components look good too. I think its going to be a big success.<p>Edit: See Nat Friedman's response below [1]. Existing Pro subscribers are automatically upgraded to Business and can renew at their existing renewal price. This is described in the FAQ [2] which I didn't read far enough down.<p>[1] <a href=""http://news.ycombinator.com/item?id=5250922"" rel=""nofollow"">http://news.ycombinator.com/item?id=5250922</a><p>[2] <a href=""http://xamarin.com/xamarin-2.0-faq"" rel=""nofollow"">http://xamarin.com/xamarin-2.0-faq</a>",2013-02-20 15:23:53
51,"We wrote the equivalent of a linker, which only brings the pieces that you actually reference.<p><a href=""http://docs.xamarin.com/guides/ios/advanced_topics/linker"" rel=""nofollow"">http://docs.xamarin.com/guides/ios/advanced_topics/linker</a>",2013-02-20 15:44:55
52,"I'm also curious about this.  Promisingly, F# is explicitly mentioned under the ""Extensible"" heading here: <a href=""http://xamarin.com/studio"" rel=""nofollow"">http://xamarin.com/studio</a>.",2013-02-20 16:54:47
53,"MonoDevelop, MonoMac, and Mono itself are still all open source.<p><a href=""http://github.com/mono/monodevelop"" rel=""nofollow"">http://github.com/mono/monodevelop</a><p><a href=""http://github.com/mono/monomac"" rel=""nofollow"">http://github.com/mono/monomac</a><p><a href=""http://github.com/mono/maccore"" rel=""nofollow"">http://github.com/mono/maccore</a><p><a href=""http://github.com/mono/mono"" rel=""nofollow"">http://github.com/mono/mono</a><p>Xamarin also has a number of open source modules on github: <a href=""https://github.com/xamarin"" rel=""nofollow"">https://github.com/xamarin</a>",2013-02-20 17:21:07
54,"Hi,<p>Our servers buckled a little bit under the load. We load-tested, but missed a piece of infrastructure in the chaos. We've since beefed up that last piece of infrastructure, and you should be all set now to use the download form at <a href=""http://xamarin.com/download"" rel=""nofollow"">http://xamarin.com/download</a>. If you're still having trouble, contact our support at support@xamarin.com. Cheers!",2013-02-20 18:51:40
55,"Ars review here: <a href=""http://arstechnica.com/information-technology/2013/02/xamarin-2-0-reviewed-ios-development-finally-comes-to-visual-studio/2/"" rel=""nofollow"">http://arstechnica.com/information-technology/2013/02/xamari...</a>",2013-02-20 22:19:50
56,"Hah, I knew I should've pulled the trigger on buying MonoTouch last week!<p>Oh well, at least I can do some testing on a real device without buying anything for the moment.<p>From looking at the comparison chart on <a href=""https://store.xamarin.com/"" rel=""nofollow"">https://store.xamarin.com/</a> , the LLVM optimising compiler only seems to be available for Business or above. What does this mean in practice?",2013-02-21 02:07:54
57,"OP here...  wow... people are calling me an idiot on twitter <a href=""https://twitter.com/0xSina/status/304657083435991041"" rel=""nofollow"">https://twitter.com/0xSina/status/304657083435991041</a> and my blog server is crashing...  easy people, I am not making fun of your mother, it's just a programming language...<p>I am all about learning new languages.  I love c#, python, ruby and javascript...  But objective-c has to be one of the most verbose language out there and is syntacticly fugly...<p>When I programmed in python after 15 years of .net/c-type languages, I picked it up in 1 day.  It was simple and beautiful.  The same for ruby...  But obj-c, after 2 weeks of using it, I find myself hating it more and more every day...<p>chill out people...<p>PS: the image on my blog s from <a href=""http://xamarin.com/how-it-works"" rel=""nofollow"">http://xamarin.com/how-it-works</a>",2013-02-21 18:29:23
58,"They are NOT MY EXAMPLES man...  It's a screenshot from <a href=""http://xamarin.com/how-it-works"" rel=""nofollow"">http://xamarin.com/how-it-works</a> and YES I have TOTAL LACK of understanding of obj-c...  My entire experience with it is less than 4 weeks.  But so is my experience with python - which I instantly loved.",2013-02-21 18:40:52
59,How to add database addin to xamarin studio  to get database access ?,2013-02-22 06:51:48
60,"well, personally i use monodevelop(xamarinstudio) 4.0 and mono 3.0.3 in archlinux.<p>you need a fork of the fsharpbindings project 
<a href=""https://github.com/xamarin/fsharpbinding"" rel=""nofollow"">https://github.com/xamarin/fsharpbinding</a><p>have you tried using fsharpx from nuget? monodevelop has nuget support as of now.
<a href=""https://github.com/squidge/monodevelop-nuget-addin/tree/xs-nuget-addin"" rel=""nofollow"">https://github.com/squidge/monodevelop-nuget-addin/tree/xs-n...</a><p>I also just built fsharpx.core and fsharpx.http with monodevelop(right now) and it built fine for me.",2013-02-24 04:11:09
61,"When was the last time you tried MonoDevelop? Xamarin has put in a lot of work on MonoDevelop over the past year or so -- in fact, they just released a major new version (4.0) and even contributed a bunch of improvements to the F# bindings:<p><a href=""https://github.com/mono/monodevelop"" rel=""nofollow"">https://github.com/mono/monodevelop</a>
<a href=""https://github.com/xamarin/fsharpbinding"" rel=""nofollow"">https://github.com/xamarin/fsharpbinding</a><p>BTW, F# also has emacs support, and from what I hear vim support is on the way:<p><a href=""https://github.com/fsharp/fsharpbinding"" rel=""nofollow"">https://github.com/fsharp/fsharpbinding</a>",2013-02-24 05:16:46
62,I've spent about 3hrs trying to get the fsharp binding working in xamarin studio but no luck. How did you get it working?,2013-02-24 09:28:43
63,"Have you considered creating this as a Xamarin theme component? <a href=""http://components.xamarin.com/"" rel=""nofollow"">http://components.xamarin.com/</a> It could be an easy way to get the theme in front of more buyers.",2013-03-06 21:07:56
64,"Or, if we disregard costs, C# and use Xamarin's (<a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a>) products.",2013-03-07 14:46:18
65,"You should try another IDE. Eclipse isn't maintained by Google. Xamarin Studio is very nice. <a href=""http://xamarin.com/studio"" rel=""nofollow"">http://xamarin.com/studio</a>",2013-03-12 15:09:14
66,"If it were me, I'd develop in something like Xamarin/mono (<a href=""http://xamarin.com"" rel=""nofollow"">http://xamarin.com</a>) and if a convergence does happen, you'd imagine Xamarin would likely figure out a way to allow your apps to run on the new platform.",2013-03-14 01:56:16
67,"Check out Xamarin Studio.  It's a full blown IDE and it's quite impressive in terms of native feel.  Apparently written in C#, Mono and GTK#.<p><a href=""http://xamarin.com/studio"" rel=""nofollow"">http://xamarin.com/studio</a>",2013-03-19 15:37:25
68,"I don't have information, but by focusing on NGEN for .NET 2.0 you forgot all the other implementations I mentioned.<p>Bartok compiler for Singularity uses another approach of code generation.<p><a href=""http://en.wikipedia.org/wiki/Bartok_%28compiler%29"" rel=""nofollow"">http://en.wikipedia.org/wiki/Bartok_%28compiler%29</a><p><a href=""http://singularity.codeplex.com/SourceControl/changeset/view/69631"" rel=""nofollow"">http://singularity.codeplex.com/SourceControl/changeset/view...</a><p>Windows Phone 8 only runs native code. .NET IL gets compiled down to native
code when uploaded to the Windows App Store, by making use of an optimizing IL to
native compiler.<p><a href=""http://channel9.msdn.com/Shows/Going+Deep/Mani-Ramaswamy-and-Peter-Sollich-Inside-Compiler-in-the-Cloud-and-MDIL"" rel=""nofollow"">http://channel9.msdn.com/Shows/Going+Deep/Mani-Ramaswamy-and...</a><p><a href=""http://channel9.msdn.com/Events/Build/2012/3-005"" rel=""nofollow"">http://channel9.msdn.com/Events/Build/2012/3-005</a><p>Mono also compiles to native code on iOS and other systems as well<p><a href=""http://docs.xamarin.com/guides/ios/advanced_topics/compilation"" rel=""nofollow"">http://docs.xamarin.com/guides/ios/advanced_topics/compilati...</a><p>The IL2CPU compiler used in the Cosmos project, which is still not fully implemented<p><a href=""http://www.codeproject.com/Articles/220071/Csharp-Open-Source-Managed-Operating-System-Quick"" rel=""nofollow"">http://www.codeproject.com/Articles/220071/Csharp-Open-Sourc...</a>
<a href=""http://cosmos.codeplex.com/SourceControl/changeset/view/101100#1753855"" rel=""nofollow"">http://cosmos.codeplex.com/SourceControl/changeset/view/1011...</a>
<a href=""http://cosmos.codeplex.com/SourceControl/changeset/view/101100#1408070"" rel=""nofollow"">http://cosmos.codeplex.com/SourceControl/changeset/view/1011...</a><p>Going back to the runtime code generation (JIT), there is also SPUR being used at Microsoft Research<p><a href=""http://research.microsoft.com/en-us/projects/spur/"" rel=""nofollow"">http://research.microsoft.com/en-us/projects/spur/</a><p>Don't mix languages with their implementations.",2013-04-05 08:21:36
69,"I couldn't get it to install properly when I tried it long ago.<p>They've changed licensing models fairly recently; you can deploy to the app store for free with a limit on app size (complexity). They also have a 30-day money-back guarantee -- seem to be really reaching out for mind share.<p>Obviously the important question is if it's worth the time to learn the abstraction layer!<p>Edit: I'm sure they'll be swinging by once they are not so busy; check out the livestream of the conference going on right now: <a href=""http://blog.xamarin.com/live-streaming-xamarin-evolve-2013/"" rel=""nofollow"">http://blog.xamarin.com/live-streaming-xamarin-evolve-2013/</a>",2013-04-16 16:09:31
70,"I do C# on my day job and I did take a stab a learning xamarin's android sdk but to be honest after spending 3 days learning it, poking around their samples, I felt like there was still a lot to learn. I ended up going the java route simply because there is more support for it from the community, many many open source controls/libs to begin with and stays up to date with Android releases.",2013-04-16 16:21:23
71,"Maybe they had Xamarin in mind when they asked you that: <a href=""http://xamarin.com/monotouch"" rel=""nofollow"">http://xamarin.com/monotouch</a>",2013-04-25 20:24:29
72,"We are only using appcelerator cloud, our app is actually built in C# with <a href=""http://xamarin.com"" rel=""nofollow"">http://xamarin.com</a>
Appcelerator has free usage package<p>I have probably tried everyone one of those on the list, and a lot of it really depends which SDK some of those services offer.",2013-04-26 20:28:47
73,"Earlier this year I wrote my first Android app using Eclipse. After finishing the project, I decided I hated Eclipse enough to not waste any more time on the platform. I don't really like the Java language either, it somehow feels 'old'. But recently discovered Xamarin[1] and later this year will try to write an Android app again, but this time in C# using Xamarin Studio. I think it's a great alternative for Eclipse, though I will definitely check out Android Studio as well, if it's going to be free.<p>[1]: <a href=""http://xamarin.com"" rel=""nofollow"">http://xamarin.com</a>",2013-05-15 17:13:09
74,"Erm. .NET is alive and well, especially on the game and mobile phone development front<p>Xamarin (the monodevs) are doing some really interesting stuff:<p><a href=""http://xamarin.com/evolve/2013"" rel=""nofollow"">http://xamarin.com/evolve/2013</a><p>Frameworks such as MvvmCross allow you to target iOS, Android, Windows 8 Mobile, Windows 8 Store, WinRT, WPF all using the same codebase using the MVVM Pattern. Write your code business logic in a PCL and share it across all platforms, i.e. 80% code re-use on mobile, write your UI for each platform and link against your shared core business logic PCL.<p><a href=""https://github.com/slodge/MvvmCross"" rel=""nofollow"">https://github.com/slodge/MvvmCross</a><p>Oh, you can do all of the above, program for all those platforms (iOS included) in Visual Studio with either C# or F# using async/await and linq.<p>Disclaimer: I went to #evolve, if you use .NET and didn't go then sorry to say you missed out ;-)<p>Personal highlights from the conference include:<p>- C# async/await on iOS, Android announced and available in the beta update channel.<p>- Xamarin acquires Calaba.sh (lesspainful), announces the future of automated mobile phone testing: <a href=""http://xamarin.com/evolve/2013#session-xcjpj20d6s"" rel=""nofollow"">http://xamarin.com/evolve/2013#session-xcjpj20d6s</a><p>- 80% code reuse case study:  <a href=""http://xamarin.com/evolve/2013#session-shy07zqsoz"" rel=""nofollow"">http://xamarin.com/evolve/2013#session-shy07zqsoz</a><p>- Behind the scenes with the award winning game Bastion (monogame): <a href=""http://xamarin.com/evolve/2013#session-mazw2c15qr"" rel=""nofollow"">http://xamarin.com/evolve/2013#session-mazw2c15qr</a><p>- (Scott Hanselman) How C# Saved my Marriage, Enhanced my Career and Made Me an Inch Taller: <a href=""http://xamarin.com/evolve/2013#session-umfpnw90c9"" rel=""nofollow"">http://xamarin.com/evolve/2013#session-umfpnw90c9</a><p>- (Josh Collins - @GlobalMoxie) Buttons are a hack: can't wait for vid to be uploaded...",2013-05-16 03:58:12
75,"If going by the stats that Xamarin gave[1] for Dalvik versus Mono on Android 4.0, Dalvik is also much slower than Mono. Though obviously Xamarin is not the most independent source in the findings, but I would believe it to outperform Dalvik in my own uses of both it and Dalvik for Android apps (I bought a license for it 6 months ago).<p>There's also some results by Koush Dutta[1] (Cyanogenmod contributer and Clockwork Recovery developer) from 2009 showing similar findings, though obviously that's way old and before Dalvik had JIT added in Android 2.2. We had a discussion sometime ago about that article on hn as well[3]<p>[1] <a href=""http://blog.xamarin.com/android-in-c-sharp/"" rel=""nofollow"">http://blog.xamarin.com/android-in-c-sharp/</a><p>[2] <a href=""http://www.koushikdutta.com/2009/01/dalvik-vs-mono.html"" rel=""nofollow"">http://www.koushikdutta.com/2009/01/dalvik-vs-mono.html</a><p>[3] <a href=""https://news.ycombinator.com/item?id=421862"" rel=""nofollow"">https://news.ycombinator.com/item?id=421862</a>",2013-05-16 11:31:31
76,"1) You don't need Parallels: <a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a> have a lovely ide for OS X built on Mono (open source. NET), I much prefer this to VS-in-Parallels although I'm on a lowly macbook air with 4gb of ram.  There's also free alternatives to Parallels, and Microsoft certainly don't ""require"" it for .NET development.<p>2) There are cheaper windows licenses<p>3) There is a free version of Visual Studio: <a href=""http://www.microsoft.com/visualstudio/eng/products/visual-studio-express-products"" rel=""nofollow"">http://www.microsoft.com/visualstudio/eng/products/visual-st...</a><p>4) Resharper is great but it's a luxury and an optional one",2013-05-16 19:08:28
77,"instead of relying on HTML5 as your base tech stack for mobile apps i am much more a fan of approaches like xamarin (<a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a>)<p>Basically you write the core of your app in C# and then use the bindings to the native SDKs of iOS, Android, WP to build real native UIs on top of it. Its a bit more work and you need to learn C# (which is awesome) but imo its an optimal compromise between speed of development/maintainability and the resulting user experience.",2013-05-18 11:42:45
78,"I wish I didn&#x27;t have to write my f##$@$ing apps in java and then again in objective-C and then again in C# said every developer, ever...<p>Edit, for your benefit: xamarin, unity.",2013-07-03 15:11:44
79,"Have you seen this?  <a href=""http://xamarin.com/studio"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;studio</a>.<p>I traded my VM + VS in for that a few months ago, makes a huge difference on my Air.  No Resharper but unfortunately.",2013-07-13 05:42:38
80,"<a href=""http://www.xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.xamarin.com</a> compiles C# to native apps for Android, iOS and Windows Phone.",2013-07-15 11:21:00
81,"<a href=""http://blog.xamarin.com/introducing-ios-7-support/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;introducing-ios-7-support&#x2F;</a>",2013-07-15 19:08:33
82,"Hey xamarin guys, i know you visit this site.  Can you call my boss and convince him to use your product for me :D<p>we got a growing staff with an expertise in C#, and he&#x27;s decided to have one of his guys write each new mobile app in java or objective c, despite the fact that no one else has experience in these languages.<p>but most of all, i know i&#x27;m one day going to have to look at the code base for one of these apps, and I dread it.",2013-07-18 04:53:38
83,Just wrapped up my first project at work with xamarin.ios and also used monomac for some tools. It was awesome. The app used a bunch of opengl-es on ios and everything went very smoothly. I&#x27;m always glad to see them pop up on HN.,2013-07-18 06:12:41
84,"The test cloud feature alone is impressive!<p><a href=""http://xamarin.com/test-cloud"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;test-cloud</a><p>It&#x27;s also not restricted to just using their solution, any native iOS &#x2F; Android &#x2F; Whatever platform apps can use them.",2013-07-18 10:26:14
85,"to be fair monodevelop and xamarin studio are not equal. The first is low supported and full of bug but free ( i think that is voluntary), the second is not free (at least not if you want to do something decent) and is the main focus of xamarin.
I would say they try to &quot;trap&quot; you in mono with monodevelop to then oblige you to buy something more decent as xamarin studio.",2013-07-18 10:37:40
86,"We used to use monotouch a lot, but as soon as we tried to use any third party sdk it was a huge mess.  All of the ones supplied by xamarin never quite worked&#x2F;were out of date and threw a bunch of weird errors.<p>Of course there is a way to write your own bindings, but the those threw a bunch of undecipherable error messages as well and never really worked either.  The main problem was that there were way too many possible sources of the errors to try and just diagnose the problem and the error messages themselves were useless.<p>So basically xamarin was great as long as you didn&#x27;t need to use a third party sdk and there is 0 chance that down the road you might need to use a third party sdk.<p>That was really the deal breaker for us, that we were severely limiting our future capabilities on any app we made with monotouch.<p>Also it is often difficult to pull in third party c# libraries because monotouch uses weird versions of all the main .net references.  But this was not the main problem.<p>In the end it is just much easier to bite the bullet and use obj C.",2013-07-18 12:38:38
87,Drop me an email - nat@xamarin.com. We&#x27;ll help you out :-),2013-07-18 15:41:51
88,"Oh, my bad in this case.
So why there is not a linux version of xamarin studio? Or it is just because there is not a linux version of the plugins?",2013-07-18 16:42:53
89,"Mostly because they would have to provide their own Mono runtime as there&#x27;s too many variations in the vast number of Linux Distros out there. That combined with demand is much lower than that of Windows and OSX for Mono.<p><a href=""http://stackoverflow.com/questions/15900963/is-it-possible-to-run-xamarin-mono-on-linux"" rel=""nofollow"">http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;15900963&#x2F;is-it-possible-t...</a>",2013-07-18 17:53:58
90,"also phonegap is free, while xamarin.android and xamarin.ios have high license costs for developer and platform<p><a href=""https://store.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a>",2013-07-25 00:07:37
91,"More or less<p>you get a 10% discount on the total price if you buy multiple licences at the same time<p>You can see all here: <a href=""https://store.xamarin.com/#purchase"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;#purchase</a>",2013-07-25 01:11:36
92,"As i see in the link above the support for xamarin is only in the business package so it starts at $999&#x2F;year (please correct me if i am wrong).<p>Anyway i was not talking about the support option, but about the chance of deploy a full serious multios app. With phonegap you have that for free, with xamarin you have to pay (299*2) minus discount of 10%. Just this.",2013-07-25 01:32:01
93,"disclaimer: using Xamarin, using MvvmCross and went to Evolve 2013.<p>- Write your core business logic API once (in a Portable Class Library) using the ModelView ViewModel pattern.<p>- Design native user interfaces for iOS, Android, Mac, Windows Phone 7.x, Windows Phone 8.x, Windows Store (RT and Desktop) and Windows WPF.<p>- Bind your user interfaces against the core business logic.<p>Multiple platforms, native user interface designed for each platform, sharing one core business library, maximum code reuse (90%+!), using either C# or F# with async&#x2F;await&#x2F;linq&#x2F;lambdas&#x2F;anonymous types, etc.<p>You can use Visual Studio or MonoDevelop.<p>Rewriting your business logic multiple times over in different languages to target multiple platforms does not make sense. I&#x27;m curious why would anyone not use Xamarin?<p>Evolve 2013 Videos: <a href=""http://xamarin.com/evolve/2013"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;evolve&#x2F;2013</a><p>Recommended ModelView ViewModel Frameworks: <a href=""https://github.com/slodge/MvvmCross"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;slodge&#x2F;MvvmCross</a> or  <a href=""http://www.reactiveui.net/"" rel=""nofollow"">http:&#x2F;&#x2F;www.reactiveui.net&#x2F;</a>",2013-07-25 01:45:29
94,True if you pay a not insignificant amount of money to get both xamarin.ios and xamarin.android.,2013-07-30 14:38:09
95,"I am a devops who love to explore almost any platform in which I enter in contact and, for this and others reasons, I ever prefer to work in a startup environment and not in a corporate one.<p>So in the last months i was exploring for my first time .NET using c# and, wow, it&#x27;s an amazing platform! Then I started to look for a job in a startup in which I could learn it better and with more motivation but... it seems no one is using it. I also looked for some startup based on mobile platforms thinking that, thanks to mono, someone is starting to use xamarin products to target the three main mobile os (android, ios, wp) and share some code. But it seems also in the startup world they prefer to have a team for each language&#x2F;os rather that using that solution.<p>So, after a month of research i am curious to get the real reason behind it. It&#x27;s because no one like Microsoft &#x27;cause it seems no cool? License costs? Support? Community?<p>I would like to hear your opinions<p>edit: I forgot to say that, in contrast, in the corporate world, i found a lot of jobs in which .NET is used. Almost as many jobs as those who require java knowledge.",2013-08-02 17:54:49
96,"well if i remember correctly in the &#x2F;build&#x2F; of this year I saw a part in which some of the microsoft staff were talking about xamarin and the integration with visual studio.
At the same time the CTO Miguel De Icasa is a microsoft MVP.<p>So maybe the idea of buying them is not so strange.",2013-08-02 19:36:57
97,"Interface Vision - Santa Cruz, CA - Cooper Street<p>You are bored at work. You are distraught. Your tests arent passing because green is the new red. You want to be a part of something that will change the future. You wish you were challenged more. So, you check us out at <a href=""http://www.interfacevision.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.interfacevision.com</a>.<p>Wow, you think. A visual language of some kind? Its been attempted before by many brilliant people. You ponder if they have some magical solution or have been partaking in some illicit chemical exploration.<p>Then you realize that, if a holy grail did exist, the way we make software would change forever. You see the Vision.
So, you contact us.<p>About the Position:
* You are given the freedom to create.
* You must be open minded, have the ability to speak your mind and also be willing to listen.
* Optimally, we would like you to be with us in Santa Cruz, CA. However, if we can pull it off, you can work from anywhere (Were going to be implementing remote collaboration, so we might as well eat our own dog food).
* The magic is done in C# Mono with Xamarin.iOS and Xamarion.Android (www.xamarin.com). Xamarin is an awesome company. Go check them out if you havent already.
* We dont have a specific software development position to fill so tell us what you would bring to the table and what you want to do - we will listen to everyone.
* We really need help extending our GUI for both iOS and Android.
* We are interested in extending our framework to include OpenCL, OpenGL, REST (and general API support), extensive math library, etc.<p>Your Abilities:
* What is your specialty?
* What do you like to work on?
* What have you done?
* Why do we want you?<p>We cant wait to hear from you - simply check out our career section on-line at <a href=""http://www.interfacevision.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.interfacevision.com</a> and send us your info and resume&#x2F;CV (depending on where you are from).",2013-08-05 17:50:14
98,"It&#x27;s getting better: <a href=""http://www.businessinsider.com/microsoft-and-xamarin-getting-friendly-2013-7"" rel=""nofollow"">http:&#x2F;&#x2F;www.businessinsider.com&#x2F;microsoft-and-xamarin-getting...</a>",2013-08-12 23:36:59
99,"If you have no problems spending a bit in license the good solution for you can be using Xamarin.ios and Xamarin.android. Obviously if you know at least a bit of c# (but i think any developer can learn it very fast)<p>With it you can target both ios and android using a single language and the (almost)full .NET framework, recycling a lot of code and also, in the future, you will easily develop also for wp and w8 still recycling code<p>BONUS: xamarin allows for native ui development.",2013-08-19 01:51:30
100,"Xamian also ported Android to C# a year ago. <a href=""http://blog.xamarin.com/android-in-c-sharp/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;</a>",2013-09-15 00:26:01
101,"I wasn&#x27;t referencing Mono for Android, although that is a neat product.<p>About a year ago, Xamarin did a direct port of the entire Android operating system to C# as a research project to improve their automated tooling. It&#x27;s called [XobotOS](<a href=""https://github.com/xamarin/XobotOS"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;XobotOS</a>). It&#x27;s open source, unmaintained, and entirely unsupported.",2013-09-16 04:23:43
102,"You could try to leverage your experience in c#&#x2F;.net by using Xamarin for iOS <a href=""http://xamarin.com/monotouch"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;monotouch</a> .",2013-09-20 04:25:54
103,"I would love to run mono in production, it&#x27;s just so slow and buggy that this isn&#x27;t possible.<p>The simple fact is that server is not a priority for xamarin; mobile is. And this is probably a valid optimization.<p>BizSpark helps though, as far as licensing issues goes.",2013-09-23 12:43:04
104,"You could go down the path most traveled and learn Java - this is preferred, because the Android developer site has all its documentation in Java. However, if you&#x27;re averse to Java, you can also use C# (xamarin.com)",2013-10-06 18:41:26
105,"This is one of the main reasons CouchBase was created. Its community has fragmented as the company tries to figure out how to make money, but it would be worth your time to check it out. Here the Xamarin folks explain their new CouchBase Lite wrapper: <a href=""http://blog.xamarin.com/simplifying-persistence-with-a-document-database/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;simplifying-persistence-with-a-docum...</a>",2013-10-06 20:51:40
106,"Xamarin is wonderful. There&#x27;s a huge .NET OSS ecosystem out there. You might be surprised with what can be done with it.<p><a href=""http://xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com</a>",2013-10-10 08:30:39
107,Unfortunately it looks like xamarin has completely abandoned linux as a platform.,2013-10-10 10:35:46
108,"xamarin studio is great to work with. Mono has a c# repl. OTOH if you said c# is practically unusable without resharper, I&#x27;d have some sympathy.",2013-10-23 05:38:01
109,"Xamarin now also supports writing iOS and Android apps in F#; it&#x27;s only a &quot;preview&quot; at the moment, but some of the Mono developers have been getting more involved in the F# open-source community and Xamarin recently hired a well-known, very skilled F# contractor to help improve their support for the language.<p>Xamarin&#x27;s website has a bit more information: <a href=""http://docs.xamarin.com/guides/cross-platform/fsharp/fsharp_support_overview/"" rel=""nofollow"">http:&#x2F;&#x2F;docs.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;fsharp&#x2F;fsharp_...</a>",2013-11-02 17:35:50
110,Why would xamarin want to sell?  What advantage would it bring them?,2013-11-02 17:48:55
111,"I am interested to know more about developer experiences with Xamarin. can you share some apps (ios, android ) that you have developed using xamarin?",2013-11-02 19:46:49
112,"Look here for samples:<p><a href=""http://xamarin.com/apps"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;apps</a>",2013-11-02 19:52:33
113,"I skimmed through the article...<p>While referring to a xamarin app there is a screenshot of a sample app with a caption
&quot;The same application with native controls and sharing almost 75% of the code base.&quot;<p>Is this xamarin code base shared somewhere?<p>Also, if there is a significant growth in the share of Windows phone ? Would you use still use Xamarin to develop for Windows phone or would you use Visual Studio?",2013-11-02 19:54:28
114,"In fact, MOST apps in the store are C# and XAML. It&#x27;s the best way to make an app that runs anywhere, using xamarin for other platforms.",2013-11-03 01:45:06
115,"Well, then you can unlearn Java right now!<p><a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>
<a href=""http://phonegap.com/"" rel=""nofollow"">http:&#x2F;&#x2F;phonegap.com&#x2F;</a>
<a href=""http://www.orubase.com/"" rel=""nofollow"">http:&#x2F;&#x2F;www.orubase.com&#x2F;</a>
etc.
etc.
etc.",2013-11-10 14:48:11
116,"I think you mean <a href=""http://xamarin.com/studio"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;studio</a>",2013-11-12 17:24:10
117,"The scenario I keep hoping for is: ms buys xamarin, MIT licenses the entire xamarin cross platform ecosystem (while charging for build services like phonegap does), adds a &quot;compile to html&#x2F;css&#x2F;js&quot; feature so you can write your web frontend in c#.<p>This scenario leads to the following:  C# wins as the &quot;cross platform mobile language,&quot; window phone is the default first environment for cross platform apps, and as developers we get an elegant &quot;write once* run everywhere&quot; that&#x27;s based on c#.<p>The asterisk: once plus ui customizations on each platform, so more like write (1 + (.1 * num_non_wp8_platforms)) times<p>Unfortunately, though I think these moves would make ms a dominating player in mobile and web for decades, I doubt they&#x27;ll do this.",2013-11-13 16:07:27
118,"I think XAML is that format, but it isn&#x27;t without its pain points. You pretty much can&#x27;t do animation without a tool like Blend unless you&#x27;re a sadist.<p>It looks like Xamarin uses .AXML for Android (maybe a XAML flavor) but has to adhere to Interface Builder for iOS (<a href=""http://docs.xamarin.com/guides/cross-platform/application_fundamentals/building_cross_platform_applications/part_1_-_understanding_the_xamarin_mobile_platform/"" rel=""nofollow"">http:&#x2F;&#x2F;docs.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;application_fu...</a>, specifically the Visual Designer section). XAML likely won&#x27;t gain any traction on those platforms though due to NiH on all sides. HTML&#x2F;CSS is likely as close as we get for now but that isn&#x27;t a &quot;native view&quot; in any of the platforms mentioned.",2013-11-13 16:43:05
119,"&gt;What are your experiences with Phonegap?<p>I started very early in PhoneGap.  Keeping up with the changes as the product has matured has been a pain, but expected.  You&#x27;ll be glad it&#x27;s pretty mature at this point.<p>That said, starting with v3.0 the move to NPM has taken development reliability back a few steps in my opinion.  I like the new command line interface, I just wish it worked more consistently.  I&#x27;m sure it will get better.<p>&gt;Is it generally permissibe for making enterprise mobile applications?<p>That&#x27;s what I use it for.  It works well for this purpose.  I wouldn&#x27;t use it for B2C apps though, especially for Android because the browser on Android performs poorly, especially for scrolling - very laggy and spastic.<p>&gt;What features could be missing?<p>There are a lot of plugins that fill in the gaps.  I don&#x27;t recall not being able to do something a native app could do.  I&#x27;ve used, the GPS, photo gallery, camera, enabled &quot;Open In&quot;, FileTransfer, media recording, and probably a few other plugins.<p>&gt;Why doesn&#x27;t everyone use Phonegap if it can deploy to multiple platforms?<p>Because there are other platforms that could be used.  If C# is your thing, you could check out <a href=""http://xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com</a>  With that you could write apps in a MVVM style and reuse your ViewModels in a PCL that could be reused across Windows Phone, Android, and iOS.<p>The thing is, mobile apps are now typically an extension of a web app, so if you already have web developers then PhoneGap gets you there faster.  The end result will be a good product, but will never be a truly great product.",2013-11-13 17:51:30
120,"Here is the MSFT announcement: <a href=""http://blogs.msdn.com/b/dotnet/archive/2013/11/13/pcl-and-net-nuget-libraries-are-now-enabled-for-xamarin.aspx"" rel=""nofollow"">http:&#x2F;&#x2F;blogs.msdn.com&#x2F;b&#x2F;dotnet&#x2F;archive&#x2F;2013&#x2F;11&#x2F;13&#x2F;pcl-and-ne...</a>",2013-11-13 17:57:56
121,"They have open-sourced quite a lot (aspnet webstack, reactive extensions, etc). The problem is that a lot of their compiled binaries, delivered via nuget packages have been restricted to windows. This is slowly being undone ( <a href=""http://blogs.msdn.com/b/dotnet/archive/2013/11/13/pcl-and-net-nuget-libraries-are-now-enabled-for-xamarin.aspx"" rel=""nofollow"">http:&#x2F;&#x2F;blogs.msdn.com&#x2F;b&#x2F;dotnet&#x2F;archive&#x2F;2013&#x2F;11&#x2F;13&#x2F;pcl-and-ne...</a> ).<p>Another problem is that they don&#x27;t run their open source projects in an open manner. Contributing requires a CLA and a signature from your boss. Issues and planning are often behind closed doors, but that seems to be slowing changing too (see KatanaProject &#x2F; signalr).<p>If they really wanted to grow their ecosystem 10x, and give windows phone the possibility of a fighting chance, making VS Pro free would be the required.",2013-11-13 17:59:58
122,"You can bind objective-c libraries so that they&#x27;re usable from a Xamarin app:
<a href=""http://docs.xamarin.com/guides/ios/advanced_topics/binding_objective-c/"" rel=""nofollow"">http:&#x2F;&#x2F;docs.xamarin.com&#x2F;guides&#x2F;ios&#x2F;advanced_topics&#x2F;binding_o...</a><p>Same goes for Java libs:
docs.xamarin.com&#x2F;guides&#x2F;android&#x2F;advanced_topics&#x2F;java_integration_overview&#x2F;binding_a_java_library_(.jar)&#x2F;",2013-11-13 19:46:24
123,"You guys are talking about different things.<p>The licences of the projects (EntityFramework, ASP.NET) are opensource, but the licence only applies to the sources.<p>Nuget packages, however, are binary. And they might have a different licence. So to avoid the latter, you just need to compile the sources yourself instead of using the Nuget packages.<p>EDIT: actually, the last paragraph is not true anymore, thanks to this: <a href=""http://blogs.msdn.com/b/dotnet/archive/2013/11/13/pcl-and-net-nuget-libraries-are-now-enabled-for-xamarin.aspx"" rel=""nofollow"">http:&#x2F;&#x2F;blogs.msdn.com&#x2F;b&#x2F;dotnet&#x2F;archive&#x2F;2013&#x2F;11&#x2F;13&#x2F;pcl-and-ne...</a>",2013-11-14 10:48:43
124,"From my quick review, Ionic is a framework for building mobile applications using web standard technologies (HTML5&#x2F;JS&#x2F;CSS).  You then build your application using PhoneGap -- which builds a native mobile application wrapped in a WebView.  This would be similar to writing a web app using jQuery Mobile and building a mobile app using PhoneGap.  Ionic gives you a nice starting point, just like when you use Bootstrap for a website instead of writing all of your styles from scratch.<p>Titanium apps are written in JavaScript (using Titanium libraries) that hook into native functionality.  Your apps are then compiled into fully native mobile applications (not WebViews).  It really comes down to the differences between running fully native apps vs. web views wrapped in a native application.  There is a good explanation of the differences between here: <a href=""http://stackoverflow.com/questions/17249500/xamarin-2-0-vs-appcelerator-titanium-vs-phonegap"" rel=""nofollow"">http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;17249500&#x2F;xamarin-2-0-vs-a...</a>.",2013-11-22 15:21:14
125,"I think you&#x27;re right to make this distinction. Titanium doesn&#x27;t belong in the &#x27;wrappers&#x27; family and would be better grouped with other &#x27;cross-platform native&#x27; solutions like Xamarin [1], perhaps a 4th category in parent&#x27;s list.<p>[1] <a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>",2013-11-29 15:37:49
126,"Yes, but Xamarin Studio isn&#x27;t supported on Linux: <a href=""https://bugzilla.xamarin.com/show_bug.cgi?id=142"" rel=""nofollow"">https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=142</a>",2013-12-04 07:13:12
127,"Xamarin actually ported Android to C#:<p><a href=""http://blog.xamarin.com/android-in-c-sharp/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;</a><p>And has some cute benchmarks to show off for it.<p>But go one more level deep: Despite Microsoft&#x27;s Community Promise, many places and legal teams will still view a potential threat if MS has a copyright on APIs used in Mono (not to mention patents).<p>It&#x27;s a great win-win for Microsoft. They get to trumpet their PR and gain face with open source people, as well as deflect some criticism. But they know it&#x27;ll still not hurt them as much as if they officially blessed Mono with a full, proper, transitive license.",2013-12-04 21:36:41
128,"They are the official way supported by Microsoft to target iOS and Android with .NET.<p><a href=""http://xamarin.com/pr/xamarin-microsoft-partner"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;pr&#x2F;xamarin-microsoft-partner</a>",2013-12-06 06:25:46
129,"<p><pre><code>    The idea that MS is out to envelope developers by enticing 
    them into a language that requires massive cash outlays or
    *ongoing licensing fees* is not supported by reality.
</code></pre>
...<p><pre><code>    The only requirement being that they run on a Windows OS
</code></pre>
Mhm.<p>Yes, I suppose you <i>can</i> run <i>some</i> C# on a non-windows machine, but it&#x27;ll have bugs, break, some libraries won&#x27;t be supported and there&#x27;s no tooling support.<p>...but don&#x27;t worry, you can happily tell everyone how free and open source it is. That&#x27;s really important!<p>(by comparison, have a look at go which actually bothered to make a commitment to supporting various platforms; and don&#x27;t even start with that whole &#x27;xamarin is awesome&#x27; stuff; yes it is, but it in no ways acts as a caveat for microsoft&#x27;s &#x27;we&#x27;ll make the spec public, that&#x27;s good enough right?&#x27; behaviour)",2013-12-28 11:00:39
130,"The problem with Java 8 on Android is JDK 7, as it introduced invokeDynamic that will have to be supported by Dalvik, plus I think the additions to the standard library are also a work in progress. It will happen though.<p>For Android you can use Scala and many people do it. There&#x27;s a SBT plugin for painless setup and you can work with IntelliJ IDEA as your IDE. Some people even go for Clojure. For iOS, there&#x27;s RoboVM [1] and you can also use that in combination with Scala - it&#x27;s very promising.<p>Java the language sucks, but the JVM and the ecosystem are great and you&#x27;ve got mature languages designed to run on top of it, languages with big communities behind them. Of course, learning a new language and finding the best stuff in a huge ecosystem where choices abound takes time and patience, but I think you&#x27;ll learn to appreciate it - or if you like C# so much, there&#x27;s always Xamarin, though it&#x27;s a little pricey.<p>[1] <a href=""http://www.robovm.org/"" rel=""nofollow"">http:&#x2F;&#x2F;www.robovm.org&#x2F;</a><p>[2] <a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>",2014-01-04 21:55:14
131,"There&#x27;s an App Showcase on Xamarin&#x27;s website: <a href=""http://xamarin.com/apps"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;apps</a><p>Out of those, I use Rdio daily and played Bastion a lot and they work great. I didn&#x27;t know they were made with Mono until now.",2014-01-09 10:30:15
132,"&gt;<i>I want to see some good Xamarin &amp; PhoneGap apps, honestly the ones I&#x27;ve seen don&#x27;t come close to natively built ones.</i><p>I don&#x27;t know, what&#x27;s bad about these <a href=""http://xamarin.com/apps"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;apps</a> , e.g. Rdio which I&#x27;ve used and is fine?<p>Xamarin is a binding to Cocoa and other libs, it doesn&#x27;t recreate any UI itself. So the &quot;don&#x27;t come close to natively built ones&quot; doesn&#x27;t even make sense from a technical standpoint. Not to mention that C# is compiled AOT.<p>&gt;<i>The article is pretty much spot on. For most people who want to write great software, the client side is currently a mess.</i><p>The article isn&#x27;t even about those people in the first place. He even laments that &quot;UX-quality bar on mobile is high&quot; as a reason why mobile sucks.",2014-01-09 10:35:09
133,"this is awesome!<p>btw if you plan to make an iOS app, maybe you&#x27;ll be delighted to know that you can apply as an open source developer to free Xamarin licenses: <a href=""http://resources.xamarin.com/open-source-contributor.html"" rel=""nofollow"">http:&#x2F;&#x2F;resources.xamarin.com&#x2F;open-source-contributor.html</a><p>(I guess writing F# would make you happier than ObjectiveC, given that you wrote your server side in Haskell ;)",2014-01-09 10:40:00
134,"There are iOS bindings for F# [1] with some level of support from Xamarin [2]. I&#x27;m not aware of any others.<p>There are <i>Cocoa</i> bindings for a number of languages [3], but I&#x27;m fairly certain they are desktop-only.<p>[1] <a href=""http://fsharp.org/use/ios/"" rel=""nofollow"">http:&#x2F;&#x2F;fsharp.org&#x2F;use&#x2F;ios&#x2F;</a><p>[2] <a href=""https://forums.xamarin.com/discussion/3465/f-language-binding-add-in-for-xamarin-studio-4-1-0"" rel=""nofollow"">https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;3465&#x2F;f-language-bindin...</a><p>[3] <a href=""http://en.wikipedia.org/wiki/Cocoa_(API)#Other_bindings"" rel=""nofollow"">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Cocoa_(API)#Other_bindings</a>",2014-01-09 11:21:41
135,"Yes, just like how no one would use C# if it weren&#x27;t for Microsoft or Go if it wasn&#x27;t for Google.<p>There are a lot of people who like Objective C including myself. If people didn&#x27;t the majority of iOS apps would be developed in straight C, C++, Ruby, C#, Delphi, or Actionscript.<p><a href=""http://www.embarcadero.com/products/cbuilder/ios-development"" rel=""nofollow"">http:&#x2F;&#x2F;www.embarcadero.com&#x2F;products&#x2F;cbuilder&#x2F;ios-development</a><p><a href=""http://www.rubymotion.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.rubymotion.com</a><p><a href=""http://xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com</a><p><a href=""http://www.embarcadero.com/products/delphi/ios-development"" rel=""nofollow"">http:&#x2F;&#x2F;www.embarcadero.com&#x2F;products&#x2F;delphi&#x2F;ios-development</a><p><a href=""http://www.adobe.com/devnet/air/air_for_ios.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.adobe.com&#x2F;devnet&#x2F;air&#x2F;air_for_ios.html</a><p>If no one liked Objective C you wouldn&#x27;t have people like Mattt Thompson taking time to write his excellent NSHipster columns.<p><a href=""http://nshipster.com"" rel=""nofollow"">http:&#x2F;&#x2F;nshipster.com</a><p><a href=""https://github.com/mattt"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;mattt</a><p><a href=""http://postgresapp.com"" rel=""nofollow"">http:&#x2F;&#x2F;postgresapp.com</a><p>You not liking a language is not a benchmark of language popularity. If it were, my own biases would dictate that Javascript is a language no one likes, propped up by Mozilla and ECMA.",2014-01-23 08:58:48
136,"Mono and Xamarin [2] are things you should be looking at.<p>[1]- <a href=""http://www.mono-project.com/Main_Page"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;Main_Page</a>
[2]- <a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>",2014-02-04 08:01:39
137,"Looking at puppet labs documentation site, http:&#x2F;&#x2F;docs.puppetlabs.com&#x2F;, or xamarin&#x27;s documentation site http:&#x2F;&#x2F;docs.xamarin.com&#x2F;guides&#x2F; are really great technical documentation sites.<p>What tools (paid or free) exists to build these types of technical documentation sites?",2014-02-04 18:15:14
138,"Windows Phone 8 ... not open-source, doesn&#x27;t have anything like CyanogenMod, cannot be forked, does not allow app installs from third-party sources, doesn&#x27;t allow replacing Bing&#x27;s search with anything else (and the available setting in IExplorer for setting the in-browser search provider doesn&#x27;t work) and wifi tethering must be explicitly allowed by the mobile career (which is a PITA since my mobile career couldn&#x27;t wire the settings so I&#x27;d have to take my phone to them).<p>That last point is one of the reasons for why I switched away from iOS to Android. I have yet to encounter an Android phone that doesn&#x27;t do Wifi tethering because the mobile career says so. And my prior mobile career also had the nerve to ask me for an extra 4 EUR per month for wifi tethering. It&#x27;s my device damn it and I feel that Windows Phone is a shitty iOS replacement, without the sexy.<p>&gt; <i>How many languages can you use to write apps for your iPhone or Android device? Objective C and Java respectively and that&#x27;s about it.</i><p>For targeting iOS you can actually use Ruby [1], C# [2], Java [3]. Many iOS games are using Lua for scripting. Speaking of which, Unity 3D is a platform for building games and you can use Javascript, C#, Boo or UnityScript (a sort of ActionScript). The problem with iOS is that Apple had artificial restrictions that disallowed virtual machines, so bytecode and virtual machines were out. I think they lifted those restrictions, though iOS is what I call a defective by design platform.<p>On Android there are no limits. People build stuff with Java, because it&#x27;s the least painful path and works fairly well. Games are still being built with C++. I have used Scala and it works well. Many people are also building apps with JRuby and Clojure ... though Dalvik is not as capable as a real JVM, so dynamic stuff has performance issues.<p>Even if you target the browser, you can compile C++ to asm.js and for replacing Javascript there are full-featured replacements available that use Javascript as bytecode - like Dart or ClojureScript.<p>&gt; <i>server side development which is in a sense a niche</i><p>Err, what? 99.9% of all software being built today is either server-side or has indispensable business logic that&#x27;s handled server-side.<p>&gt; <i>[Linux, server-side] could have co-existed with Microsoft perfectly happily</i><p>You&#x27;re probably too young to remember all the shit Microsoft did to prevent Linux and the web as a platform from happening. That&#x27;s OK, you&#x27;ll live and learn.<p>[1] <a href=""http://www.rubymotion.com/"" rel=""nofollow"">http:&#x2F;&#x2F;www.rubymotion.com&#x2F;</a><p>[2] <a href=""https://xamarin.com/studio"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;studio</a><p>[3] <a href=""http://www.robovm.org/"" rel=""nofollow"">http:&#x2F;&#x2F;www.robovm.org&#x2F;</a>",2014-02-04 21:46:51
139,"Wow, literally everything you say is false.<p>&gt; The world of Google and Apple (Samsung and FOSS aren&#x27;t even a player) is a world of closed computing platforms<p>As a user of Omnirom and a donator to Replicant I don&#x27;t understand how you come to this conclusion.<p>Agreed, the alternatives to google apps are not too good today, but that could relatively easily be changed. But if compared to windows phone. Really? How?<p>&gt; where people can&#x27;t control their own devices<p>If installing a different operating system with the tools from the official SDK is not controlling my own devices, what is?<p>Again, the proprietary drivers is a bad situation, but compared to windows phone, what exactly do they more openly?<p>&gt; and can&#x27;t and don&#x27;t code for them.<p>All the tools required to build apks are open source. The eclipse android plugin was open source and android studio is open source. Enabling installing your own apps directly is natively built in and can literally be enabled in seconds. If you &quot;can&#x27;t and don&#x27;t code for&quot; android even if you want, then there is really nobody but yourself to blame.<p>&gt; More languages? I don&#x27;t think so. How many languages can you use to write apps for your iPhone or Android device?<p>As others have said, you may want to use android&#x27;s gui toolkit, but other than that native applications can rather easily be wrapped. As it is linux, you may even run command line programs in any language you can compile for arm or compile an interpreter for directly.<p>&gt; Objective C and Java respectively and that&#x27;s about it.<p>Have you actually heard about xamarin&#x27;c c# for mobile devices? python + kivy? ...?<p>&gt; With Google not only do you not control your apps&#x2F;device<p>Well, I can compile the operating system myself and remove any apps I don&#x27;t like in the process. I could also remove them from the device because I have root rights. There is literally nothing but the proprietary drivers and firmware I don&#x27;t control, but again, how exactly does that get better with windows phone?<p>&gt; even your data isn&#x27;t under your control any more.<p>I use the google apps for convenience but you can use your android device without them perfectly fine. Install f-droid. Install only open source apps. Try doing this with windows phone?<p>&gt; Yes, Microsoft&#x27;s business practices weren&#x27;t so great, but I don&#x27;t agree the new world is much better.<p>With android being open source you can see the benefits directly: Other systems like Blackberry OS (or whatever it is called) or Sailfish OS can (rather) easily implement android&#x27;s runtime and run almost all android apps natively. Compare this with what wine has to do?<p>&gt; As a developer it actually feels worse.<p>It feels worse not to have proprietary microsoft specific tools that lock you into the microsoft ecosystem forever?",2014-02-06 09:17:17
140,"Xamarin allows you to use Visual Studio and .NET&#x2F;Mono to target Android and other platforms. [1]<p>dot42 focuses on Android exclusively and targets dex&#x2F;dalvik instead of the Mono runtime. [2]<p>[1] <a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>
[2] <a href=""https://www.dot42.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.dot42.com</a>",2014-02-09 01:38:58
141,"Windows is on more than 90% of PCs (including a lot of Macs), Visual Studio is one of the most popular development environments, and C# is one of the most sought-after skills in the job market. And as others have noted, Xamarin for Visual Studio lets you develop for iOS and Android as well.
<a href=""https://xamarin.com/visual-studio"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;visual-studio</a><p>Also, C# isn&#x27;t compulsory because you can develop in HTML5 instead.<p>So, it might be impossible to get people who specialize in iOS apps to develop for WP8, but it should be possible to grow a comparable ecosystem. And making apps run on both W8 and WP8 would be a good move in that direction.<p>The short term view may be bleak but the future is uncertain, and the long term _could_ look different.",2014-02-10 13:09:15
142,"The company I work for recently decided to develop some cross-platform apps. After researching a few different things, we decided Cordova (Phonegap, but not branded) best fit our needs.<p>Aside from Titanium, we also looked at MonoTouch[0] and Xamarin[1], which I believe (didn&#x27;t completely read through) is built on both Cordova and Mono.<p>If you were building from scratch, maybe another one of those would make sense for you. We are working within an existing project (mixed native and webview), and Cordova seemed to best fit our requirements there.<p>[0] <a href=""http://www.mono-project.com/Main_Page"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;Main_Page</a>
[1] <a href=""https://xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;</a>",2014-02-20 13:49:22
143,"Rdio is probably one of the bigger success stories for Xamarin&#x2F;Mono
You can see a list here: <a href=""https://xamarin.com/apps"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;apps</a>",2014-02-26 16:29:21
144,rdio is using the xamarin tools for ios and android.<p>mvc + mono website on linux success story - i haven&#x27;t seen one.,2014-02-26 16:33:24
145,"Xamarin (<a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>) - San Francisco, full time, relocation available<p>At Xamarin, we believe that great, native mobile user experiences have the power to transform customer relationships and employee productivity. Unlike other cross-platform mobile frameworks that deliver lowest common denominator experiences through UI abstraction libraries, we make 100% of the iOS and Android APIs available through our native bindings. Xamarin developers deliver high performance, fully native experiences and also share on average 75% of their source code across platforms.<p>Xamarin is the only platform with complete API coverage and deep code-sharing capabilities across iOS, Android and Windows apps, for a total of 2.6 billion devices you can reach in C#.<p>We have a number of positions available (<a href=""http://xamarin.com/jobs"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs</a>), but I&#x27;m looking for Customer Success Engineers (<a href=""http://xamarin.com/jobs/oHTMXfw3"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;oHTMXfw3</a>) to join our team.<p>Basically, you will become our customers&#x27; trusted advisor  providing technical expertise, on-boarding project guidance, and implementation assistance.<p>It&#x27;s a great opportunity if you already have the technical chops, but want to explore a different aspect of the business.<p>Shoot me an email at valentin@xamarin.com if you have questions or would like to apply.",2014-03-01 17:34:11
146,"F# for several reasons 1) Tooling, I like proper thick IDE&#x27;s like xamarins or VS. 2) better platform support (I&#x27;m serious, it isnt tied so much to windows as you might think but is one of few languages you can e.g make a 3-platform mobile app with today!). Running Haskell in the same IDE with the same compiler on several platforms is hard. Making android&#x2F;iOS or web apps with it is also tricky. 3) I like ML more than Haskell, 4) trivial to slap a non-functional C# front end on F# business logic should that be necessary, much harder to do from Haskell or ML without having to resort to C&#x2F;C++.",2014-03-14 06:48:41
147,"Xamarin maps iOS and Android API&#x27;s 1:1, and you usually have access to bindings within days (sometimes hours?) of SDK releases.<p>Note the date:
<a href=""http://blog.xamarin.com/introducing-ios-7-support/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;introducing-ios-7-support&#x2F;</a>",2014-03-18 03:22:48
148,"Dr. Dobb&#x27;s did a review of this experience:
<a href=""http://www.drdobbs.com/tools/xamarin-20-review/240150634"" rel=""nofollow"">http:&#x2F;&#x2F;www.drdobbs.com&#x2F;tools&#x2F;xamarin-20-review&#x2F;240150634</a>",2014-03-18 08:17:29
149,"Great news if true. I&#x27;ve always thought MS should be more involved in the Mono&#x2F;Xamarin platform. It makes far more sense for MS&#x27;s mobile strategy than adding Android compatibility to WP. Instead, encourage devs to create a single .NET app that can be deployed to Android, iOS, and OSX, in addition to first-class support on WP and W8. You&#x27;d lose out on the current hot apps, but for the future it makes sense. For instance, several Nokia X Android apps were ported from their WP counterparts using Xamarin - <a href=""http://blog.xamarin.com/nokia-x-for-csharp/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;nokia-x-for-csharp&#x2F;</a> .<p>My only concerns if this were to happen are,<p>* What happens to Mono on Linux, BSD &amp; OSX? Does Mono simply become a deployment target for mobile devices?<p>* What happens to MonoDevelop?  Will VS be the only way to develop such apps?<p>* What about the web? I&#x27;d love to see a Mono port to pNACL or asm.js. An NACL port already exists, but it would be great to have one codebase targeting almost all platforms.<p>Either way, as someone considering using .NET with ServiceStack on the backend and Xamarin on the frontend, it&#x27;s very exciting.",2014-03-18 08:52:08
150,"It makes strategic sense when they&#x27;re in 3rd place and theyre buying a cross platform tool that is about an order of magnitude better than any of the others.<p>Because theyre in 3rd place, theres basically zero cannibalization cost and only the potential upside of &quot;owning the cross platform framework (i.e. the java) of mobile&quot;<p>As I&#x27;ve said before: I want to live in a world where ms buys xamarin, open sources or provides the software for nearly free.  Ms could plausibly win the app wars this way, and by extension mobile.<p>Of the three&#x2F;four mobile languages C# is tied with JavaScript for the one I&#x27;d most like to spend my weeks working in, and alone in first for the one id most like to mentor a child in.<p>&quot;code for windows phone, get iOS and android for nearly free&quot; is an extremely compelling proposition.<p>What makes this not a strategic disaster like OS&#x2F;2 or android on bberry in my opinion is 1) it is a 3 legged race not a 2 way race and 2) it is a &quot;write in our language, we&#x27;ll compile to the competitors&quot; not a &quot;we can run our competitors apps&quot;",2014-03-18 11:44:10
151,"&gt; As I&#x27;ve said before: I want to live in a world where ms buys xamarin, open sources or provides the software for nearly free<p>I want to live in a world where Mono implements the full .NET Framework and I can run PowerShell scripts on Linux. Somehow I doubt that is part of Microsoft&#x27;s plan here :-(",2014-03-18 13:37:55
152,"&quot;As it stands, Xamarin may have nearly saturated the market it has available to it.&quot;<p>The key part of that is &quot;the market available to <i>it</i>&quot; (Xamarin).<p>Right now a .NET&#x2F;Windows shop that wants to have an iPhone app has a choice between doing (1) xamarin, (2) having devs learn native iOS development, (3) try one of the HTML5 app frameworks, or (4) contracts the work out. Certainly in the cases of (2), and (4), and maybe (3), it&#x27;s entirely possible that a Windows phone version of the app will never be built.<p>While the &quot;.NET shops only use stuff from Microsoft&quot; meme isn&#x27;t exactly true, it&#x27;s accurate in a decent number of cases. If Xamarin is &quot;from Microsoft&quot;, though, all of a sudden all of these .NET shops that might be considering options 2, 3, or 4 have a much bigger reason to choose option 1. And hey, now that Xamarin&#x27;s from Microsoft, I bet they make it <i>really</i> easy to build your iOS&#x2F;Android app for WP, too.<p>The way I see it, at this point, Microsoft doesn&#x27;t want to compete on apps. They&#x27;re never going to be the primary target for most apps until they have the market share to justify it. So, how to best level the playing field, apps-wise? Make it super-simple to build an app for iOS, Android, and WP at the same time.",2014-03-18 14:58:11
153,"I miss &quot;Platform&#x2F;OS&quot; -&gt; OS&#x27;s like Linux, BSD.. Platforms like browsers, xamarin, cordova, etc<p>Those are not on the &quot;Software development tools&quot; category.. :&#x2F;",2014-03-19 19:57:19
154,"I&#x27;m guessing it&#x27;s something like Xamarin: <a href=""https://store.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a><p>(Albeit way cheaper)",2014-03-20 14:18:05
155,"Also, thanks to xamarin, c# now is often used in those mobile-shop that want to keep a single codebase and publish for all the main mobile platforms (wp, android, ios)<p>Less context switch and faster develop than having 3 different codebases and different teams for each one.",2014-03-21 12:20:46
156,Anyone here tried xamarin? It&#x27;s a 1:1 map of the iOS &#x2F;Mac API. I love c# and wish I could use it to write native code. C++ is just too clunky to me to use daily. The one thing about iOS and Mac dev that I hate is the interface builder. Worst. ui. designer. ever.,2014-03-22 02:06:49
157,"Have you considered PyObjC for programming Mac OS in Python?<p><a href=""https://pythonhosted.org/pyobjc/"" rel=""nofollow"">https:&#x2F;&#x2F;pythonhosted.org&#x2F;pyobjc&#x2F;</a><p>Or Xamarin for programming iOS using Mono&#x2F;C#?<p><a href=""http://docs.xamarin.com/guides/ios/getting_started/hello,_world/"" rel=""nofollow"">http:&#x2F;&#x2F;docs.xamarin.com&#x2F;guides&#x2F;ios&#x2F;getting_started&#x2F;hello,_wo...</a><p>Or F-Script for programming Mac OS X from a command-line shell?<p><a href=""http://www.fscript.org/"" rel=""nofollow"">http:&#x2F;&#x2F;www.fscript.org&#x2F;</a><p>All three are quite well established and work pretty well for what they do.",2014-03-22 02:07:58
158,"Close.  According to <a href=""http://xamarin.com/how-it-works"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;how-it-works</a> , they do Ahead-Of-Time compilation to go straight to ARM binaries for iOS.",2014-03-28 15:11:59
159,"There are rumors that Microsoft is considering the purchase of Xamarin [1].  And now Microsoft is now previewing their .NET AOT compiler for X64 and ARM.  I see great things in C#&#x2F;.NET&#x27;s future in mobile and cross platform development.<p>On another note, I wonder if Microsoft addressed the inherent limitations of AOT in C# [2]. I wonder if it&#x27;s a compile-time error, or if that segment of code is interpreted.  I doubt it&#x27;s interpreted, as that&#x27;s a giant perf loss.<p>[1] <a href=""http://www.wpcentral.com/microsoft-reportedly-considering-acquisition-xamarin"" rel=""nofollow"">http:&#x2F;&#x2F;www.wpcentral.com&#x2F;microsoft-reportedly-considering-ac...</a><p>[2] <a href=""http://www.mono-project.com/AOT#Limitation:_Generic_Interface_Instantiation"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;AOT#Limitation:_Generic_Interfac...</a>",2014-04-02 20:19:54
160,"This seems to be the sole source of those rumors:<p><a href=""http://www.crn.com/news/mobility/300072056/sources-microsoft-in-talks-to-acquire-mobile-app-development-startup-xamarin.htm"" rel=""nofollow"">http:&#x2F;&#x2F;www.crn.com&#x2F;news&#x2F;mobility&#x2F;300072056&#x2F;sources-microsoft...</a><p>&quot;Microsoft is in the final stages of negotiations that could lead to either an acquisition or major investment in Xamarin, sources with knowledge of the discussions told CRN recently.&quot;<p>The article is from march 17th and there doesn&#x27;t seem to be anything newer.",2014-04-02 21:45:14
161,"This could lead to a way to build a dynamic language on top of .NET and eventually be usable in iOS? I ask because: <a href=""http://docs.xamarin.com/guides/ios/advanced_topics/limitations/"" rel=""nofollow"">http:&#x2F;&#x2F;docs.xamarin.com&#x2F;guides&#x2F;ios&#x2F;advanced_topics&#x2F;limitatio...</a> aka: No Dynamic Code Generation",2014-04-03 13:03:23
162,"How this affects the (pretty high) Xamarin prices?
<a href=""https://store.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a>",2014-04-03 22:34:44
163,"I tried to log onto my IM client (Pidgin) and found that my google account had been disabled.  I clicked their contact&#x2F;appeal link, and the response I received gave no information whatsoever -- just repeated the same message to review the policies for over a dozen Google services to try and figure out on my own what I might have done to get my account disabled.<p>The google account I created 4 months ago to use for IM (over gtalk XMPP) is only used for this one thing -- Pidgin IM with my coworkers.  2 of my coworkers google accounts they created for this purpose were also disabled on the same day.  When I created a new google account, it was disabled within an hour.<p>My normal personal google account I use for gmail, and my business google account I use for google apps, still works without a hitch.  The only thing I can assume, is that Google no longer allows you to use them exclusively for XMPP instant messaging - unless you use their google talk interface built into gmail.<p>Especially frustrating because there is no way to tell if this is true.  I&#x27;m just taking a guess, because that&#x27;s all I can do.  If there&#x27;s some other reason my account might have been disabled, there&#x27;s no way for me to find out.  Now I&#x27;m worried about the lifespan of my other google accounts.  Don&#x27;t really know what to do, because Google won&#x27;t give me any information about what I did wrong.  But it makes me afraid they might one day shut down my gmail account also, without telling me why or giving me any means to find out why.<p>Some google products I like, and some I don&#x27;t.  I hate google+, for example.  But webmail is something I rely on, and until yesterday, gmail was such a slick implementation that I had no reason to investigate using anything else.  Now I realize relying on a behemoth corp for something that&#x27;s mission-critical (to me) may no longer be acceptable.<p>It&#x27;s ironic and a little bit weird (in a Twilight Zone kind of way), that Google seems to be behaving more and more like the Microsoft of old, and yet I&#x27;m watching the annual MS developer conference that&#x27;s taking place this week (channel9.msdn.com for the video), and the things they&#x27;re doing -- git support in team foundation server, universal apps built in JS that work on pc&#x2F;tablet&#x2F;phone&#x2F;xbox (and maybe ios&#x2F;android soon through cooperation with xamarin), open-sourcing the .net compiler, etc -- make them seem like more like the google of a decade ago.<p>Creepy.  I&#x27;m not sure how to react.",2014-04-04 06:44:00
164,"Also, I want to understand how its creator monetarize this? Or it is just a no-profit project?<p>Anyway I&#x27;m happy to see competion against xamarin. Now I only want also a javascript to native (and not just webview-running) for any platform",2014-04-12 14:06:53
165,"&gt; Xamarin is ... not too cheap if you just want to play around with stuff.<p>If you just want to play around then take note that the starter plans are free [1].<p>[1] <a href=""https://store.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a>",2014-04-13 07:01:07
166,"&quot;I still really like the .NET environment and C# language, ... &quot;<p>This is not my case, but I really do find value in learning a technology that helps you build cross-platform solution. I seriously considered using it.<p>&quot;Thankfully, there is the Mono .NET implementation that I can use and it is really well supported.&quot;<p>But it&#x27;s kind of unsupported and most of the time it lags behind. Currently on my brand new ubuntu system, it&#x27;s version 3.2, on my &quot;stable&quot; ubuntu its 2.10. The current version is 3.4.<p>&quot; As well as being open source, Mono also has a company, Xamarin, sponsoring its development as they use the mono system for their IOS and Android ...&quot;<p>You cannot develop iOS nor Android application on Linux with Xamarin, You need Windows or OS X.<p>This is old bug still accurate.
<a href=""https://bugzilla.xamarin.com/show_bug.cgi?id=142"" rel=""nofollow"">https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=142</a><p>This is an actual deal breaker for us. Haft of the team is using OS X and the other haft Ubuntu.",2014-04-28 14:56:13
167,"Have they fixed the bug where you can&#x27;t copy&#x2F;paste between mono apps and native OS X apps yet?<p><a href=""https://bugzilla.xamarin.com/show_bug.cgi?id=3106"" rel=""nofollow"">https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=3106</a><p>--<p>Steps to reproduce the problem:<p>1. Copy some text in any non-mono application<p>2. Paste it to mono application.<p>Actual Results:<p>Copy&amp;Paste doesn&#x27;t work.<p>Expected Results:<p>Working clipboard.<p>How often does this happen?<p>Always.<p>--<p>Wow. So by cross platform they mean &quot;unusable GUI apps on Macs&quot;",2014-04-28 15:07:51
168,"Thank you for the correction; I seem to have had Xamarin on Android confused with Xamarin on iOS, which does compile to native code.[1]<p>1) <a href=""http://docs.xamarin.com/guides/ios/advanced_topics/limitations/"" rel=""nofollow"">http:&#x2F;&#x2F;docs.xamarin.com&#x2F;guides&#x2F;ios&#x2F;advanced_topics&#x2F;limitatio...</a>",2014-04-28 17:05:16
169,"&gt;If C# worked on iOS and Linux<p><a href=""https://xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;</a> imho a much better alternative to C++.  I really like C# as a language, it&#x27;s got that general purpose excellence, but when you get on with things like LINQ,Rx,TPL it&#x27;s very hard to go back to a language without such first class citizen frameworks.",2014-05-02 14:36:40
170,"No it definitely also runs on iOS, and, interestingly, Xamarin: <a href=""http://docs.xamarin.com/samples/PaintCode/"" rel=""nofollow"">http:&#x2F;&#x2F;docs.xamarin.com&#x2F;samples&#x2F;PaintCode&#x2F;</a><p>I met the authors in person &gt; 1 year ago, when they were thinking about whether Java (Android) code generation would make sense. Would love to learn that they made it happen too.",2014-05-07 19:09:57
171,ASP.net vNext was specifically about this.<p>And you don&#x27;t need VS to do .net development; check out monodevelop or xamarin studio (they&#x27;re the same basic thing),2014-05-13 19:26:44
172,"similar, only better.
In Codename One you end up with 1 java project to maintain for all supported platforms, in xamarin you end up with 2 project to maintain in c# (1 for each platform: iOS, Android)",2014-05-28 13:00:09
173,Are you limited to a particular version of the jdk or can we use 7+?<p>Re xamarin... anything they do well that you do not (yet)?,2014-05-28 13:50:18
174,"It&#x27;s a Java 5 subset, but we have plans for Java 8.
Re xamarin - it&#x27;s a good product targeted for c# devs",2014-05-28 14:19:43
175,"Xamarin.Forms is designed to work with MVVM and data bindings: <a href=""http://xamarin.com/forms"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;forms</a>",2014-05-28 15:30:51
176,"We have support for Azure, Parse, and others already:<p><a href=""http://components.xamarin.com/view/azure-mobile-services"" rel=""nofollow"">http:&#x2F;&#x2F;components.xamarin.com&#x2F;view&#x2F;azure-mobile-services</a><p><a href=""http://components.xamarin.com/view/parse"" rel=""nofollow"">http:&#x2F;&#x2F;components.xamarin.com&#x2F;view&#x2F;parse</a>",2014-05-28 15:31:34
177,"It&#x27;s fully released and supported. You can download here:<p><a href=""http://xamarin.com/download"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;download</a>",2014-05-28 15:33:30
178,"Thanks for all the kind words, everyone! This release was the result of a lot of hard work; especially the new visual designer for iOS, which took two years to build.<p>You can read more about our platform here:<p><a href=""http://xamarin.com/platform"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;platform</a>
<a href=""http://xamarin.com/studio"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;studio</a>
<a href=""http://xamarin.com/visual-studio"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;visual-studio</a><p>And our new Xamarin.Forms library is explained here:
<a href=""http://xamarin.com/forms"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;forms</a>",2014-05-28 15:38:08
179,"Yep, totally not responding and I have no idea what a xamarin is.<p>EDIT:<p>Looks like the main website is up:<p><a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a><p>They let you build apps for other platforms in C# which is cool.",2014-05-28 15:41:30
180,"You have two options:<p>1. You can bind the native iOS or Android library into C#, which is relatively straightforward:<p><a href=""http://developer.xamarin.com/guides/ios/advanced_topics/binding_objective-c/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;advanced_topics&#x2F;bind...</a><p><a href=""http://developer.xamarin.com/guides/android/advanced_topics/java_integration_overview/binding_a_java_library_"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;android&#x2F;advanced_topics&#x2F;...</a>(.jar)&#x2F;<p>2. Or you could create a single, managed library in C#, which would also make it easier to get Windows support.<p>Option 2 is more work.",2014-05-28 15:53:52
181,Drop me a note - nat@xamarin.com,2014-05-28 16:00:45
182,Sorry to hear about the error message. Can you email your logs and the storyboard file to support@xamarin.com?,2014-05-28 16:07:34
183,"Surely today with this news, the one on xamarin and that on codenameone it is likey orgasm-day for all the crossplatform tools lovers.",2014-05-28 21:19:45
184,"Go is a great language.<p>...but to be fair, writing UI and graphical applications has never been it&#x27;s strong point, and still is not.<p>Although you can write NDK applications which steal the raw graphics context to do whatever they like (mandala, xamarin, unity, etc.), tapping into the android UI layer is significantly slower and more complex.<p>Given that the NDK website still says:<p><pre><code>    In general, you should only use the NDK if it is essential to your 
    appnever because you simply prefer to program in C&#x2F;C++.
</code></pre>
I&#x27;m pretty skeptical Google is going to push anything based off of it as a first class citizen, ever.<p>(That said, the upcoming I&#x2F;O has what, 4 or 5 slots devoted to NDK related things; clearly despite the android team, at least someone is paying attention to the fact that people use it. <i>A lot</i>. So you never know~)",2014-06-04 13:37:50
185,"Your opinions are fine, but some of your facts are incorrect.<p><a href=""http://xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com</a><p><a href=""http://www.rubymotion.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.rubymotion.com</a><p><a href=""http://www.appcelerator.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.appcelerator.com</a><p><a href=""http://unity3d.com"" rel=""nofollow"">http:&#x2F;&#x2F;unity3d.com</a><p><a href=""http://developer.coronalabs.com"" rel=""nofollow"">http:&#x2F;&#x2F;developer.coronalabs.com</a>",2014-06-07 05:06:01
186,"Very interesting!  To help give some context is it similar to Xamarin&#x27;s approach but uses Javascript instead of C# as the base language?<p>Also curious if you will be encouraging&#x2F;hosting a components store similar to <a href=""http://components.xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;components.xamarin.com&#x2F;</a>?",2014-06-13 13:09:32
187,Another .NET dev here in the same boat as OP. I really want to play with xamarin but the cost puts me off :(,2014-06-21 21:24:32
188,"Visual Studio certainly is an option for Android, iOS and OSX development, when combined with Xamarin. I even think this is the best crossplatform mobile toolset that currently exitst and others think so too [1].<p>If you think the Android SDK is very good, have you ever started the emulator and tried to debug an app? It&#x27;s horrendously slow and buggy, if it works at all. iOS and especially WP are so much faster and easier to develop for.<p>[1] <a href=""http://www.drdobbs.com/tools/xamarin-3-enterprise-edition-reviewed/240168321?pgno=2"" rel=""nofollow"">http:&#x2F;&#x2F;www.drdobbs.com&#x2F;tools&#x2F;xamarin-3-enterprise-edition-re...</a>",2014-06-24 18:52:02
189,"You can&#x27;t really compare them. MonoCross is a crossplat MVC framework that you use on top of Xamarin&#x27;s Monotouch&#x2F;droid&#x2F;etc. to increase your shared code. Xamarin allows you to write about the same code for multiple platforms, but it doesn&#x27;t make it easier to share the same exact code. E.g <a href=""http://components.xamarin.com/view/xamarin.mobile"" rel=""nofollow"">http:&#x2F;&#x2F;components.xamarin.com&#x2F;view&#x2F;xamarin.mobile</a><p>The code looks similar across platforms, but it&#x27;s not exactly, the same - you can&#x27;t make one change and have it carry across to all platforms. Monocross brings you closer to a write-once for all platforms experience.<p>A better comparison is Monocross v.s. MvvmCross",2014-06-27 15:59:29
190,"We just did a webinar about Xamarin Studio last week in case you&#x27;re interested <a href=""http://xamarin.wistia.com/medias/z797ghqlps"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.wistia.com&#x2F;medias&#x2F;z797ghqlps</a>",2014-06-27 16:22:58
191,"If you prefer Ruby that&#x27;s cool, but I feel like I should mention that Xamarin is also statically compiled on Apple platforms: <a href=""http://developer.xamarin.com/guides/ios/advanced_topics/limitations/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;advanced_topics&#x2F;limi...</a><p>In fact, every app in the Apple app store is statically compiled. App store guidelines prohibit dynamic code generation, preventing the use of a JIT compiler: <a href=""http://stackoverflow.com/questions/21689993/xamarin-ahead-of-time-aot-compiler-vs-an-ordinary-compiler"" rel=""nofollow"">http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;21689993&#x2F;xamarin-ahead-of...</a>",2014-06-27 17:07:03
192,"Sure. It&#x27;s probably better to link to the blog post that has the video and the slides available: <a href=""http://blog.xamarin.com/webinar-recording-native-mobile-apps-in-xamarin-studio/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;webinar-recording-native-mobile-apps...</a>",2014-06-27 17:53:06
193,We recently introduced pricing for SMBs and Start Ups. You can shoot an email to hello@xamarin.com if interested.,2014-06-27 20:04:09
194,"BOSTON Full-time
<i></i>Xamarin<i></i> is hiring <i></i>Release Engineer<i></i> <a href=""http://xamarin.com/jobs/oV5xYfwf"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;oV5xYfwf</a><p>Come join the team in the Boston office!  <i></i>Xamarin<i></i> is redefining cross-platform mobile development by unifying fully native app development for iOS, Android, Mac and Windows in a single C#-based platform!<p>Email me (paula@xamarin.com) if you have questions!",2014-07-01 13:55:08
195,"C# and&#x2F;or F# + Xamarin: <a href=""http://fwaris.wordpress.com/2014/03/26/xamarin-f-experience-report/"" rel=""nofollow"">http:&#x2F;&#x2F;fwaris.wordpress.com&#x2F;2014&#x2F;03&#x2F;26&#x2F;xamarin-f-experience-...</a><p>(I have not yet tried, but am going to)<p>PS: why hate XML? It has its place. JSON is not meant to be extensible and it&#x27;s a data, not mark-up language.",2014-07-01 19:29:20
196,"What about Xamarin though:<p><a href=""https://xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;</a><p>I&#x27;ve been kind of avoiding mobile development after getting my fingers slightly singed by spending too much time with jQuery Mobile before giving up - the one thing that tempts me to try doing some mobile development is the Xamarin tool set.",2014-07-07 09:45:57
197,"Two reasons:<p>a) I can&#x27;t imagine somebody bothering to support .net software on the Linux desktop without being paid for it. I know those guys[1] are a minority, but it takes only a minority to create an absolutely toxic atmosphere. Maintaining a end user product can lead to frustrating interactions, and it doesn&#x27;t really help if your choice of technology means that there exists a significant number of people who literally want you, your spouse, your three year old daughter and the family dog to die in a fucking fire.<p>b) Mono was always a bad choice for asp.net, which means that the software people <i>are</i> actually paid for doesn&#x27;t run well on Linux. That was mostly a problem outside of xamarins control, and I hope it becomes better not that the devdiv MS seems to be somewhat committed to work together to make it truly interoperable.<p>[1] Just look at the comments at <a href=""http://techrights.org/2013/02/09/tombye/"" rel=""nofollow"">http:&#x2F;&#x2F;techrights.org&#x2F;2013&#x2F;02&#x2F;09&#x2F;tombye&#x2F;</a>.",2014-07-07 11:07:00
198,"Windows.  Mac.  iOS.  Android.  Windows Phone.<p><a href=""http://xamarin.com/platform"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;platform</a>",2014-07-12 12:26:49
199,"Rdio<p>Dow Jones<p>Tesco<p>Microsoft<p>Bosch-Siemens<p>Direct Energy<p>Ara<p>Sennheiser<p>Kimberley-Clark<p>Xactware<p>National Instruments<p>To pick just the people on <a href=""http://xamarin.com/customers"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;customers</a>",2014-07-12 14:41:05
200,"I also dislike their pricing.  But their CEO was very open to discussing it by email the other month when they had a big new release, someone more articulate than me may convince them on the merits of a different model.<p><a href=""https://news.ycombinator.com/item?id=7810310"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=7810310</a> =&gt; nat@xamarin.com.",2014-08-04 22:16:26
201,"Did they get rid of the eval period (30 day money back guarantee is not the same as an eval period) when they switched to a monthly subscription model?<p>Edit: the trial is mentioned in the extended FAQ <a href=""http://xamarin.com/faq#pricing"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;faq#pricing</a><p>One thing I didn&#x27;t realize was that it any app built with the trial version can only be used for a 24 period. My plan was to build a LOB app, get my company to see the value in it and then have them purchase the full license. The 24 hour window makes that really difficult.",2014-08-04 22:28:37
202,"Indeed! <a href=""http://developer.xamarin.com/releases/studio/xamarin.studio_5.2/xamarin.studio_5.2/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;releases&#x2F;studio&#x2F;xamarin.studio_...</a>",2014-08-04 23:04:14
203,Well not having a linux working version ( at least of xamarin.android) is not helping to fight back that sentiment,2014-08-04 23:04:31
204,"There are some case studies here: <a href=""http://xamarin.com/customers"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;customers</a>",2014-08-05 02:47:40
205,"<a href=""https://bugzilla.xamarin.com/show_bug.cgi?id=17170"" rel=""nofollow"">https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=17170</a>",2014-08-12 23:55:17
206,"F# is supported in Xamarin Studio: <a href=""http://developer.xamarin.com/guides/cross-platform/fsharp/fsharp_support_overview/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;fsharp&#x2F;fs...</a>",2014-08-13 09:07:31
207,"It is. It&#x27;s also unavoidable with anything that doesn&#x27;t compile to dalvik bytecode because none of the UI is exposed natively.  If you want to see at a high level the horror involved check out this documentation from Xamarin:<p><a href=""http://developer.xamarin.com/guides/android/under_the_hood/architecture/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;android&#x2F;under_the_hood&#x2F;a...</a><p>Still, it performs better than you&#x27;d expect.",2014-08-14 18:51:19
208,"It&#x27;s moderately interesting because it was built using Xamarin. So the top iPad app (at least for a little while) was built using C#.<p><a href=""http://blog.xamarin.com/tom-hanks-vintage-typewriter-inspired-hanx-writer-app/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;tom-hanks-vintage-typewriter-inspire...</a>",2014-08-19 17:34:07
209,"BTX Trader - <a href=""https://www.gocelery.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.gocelery.com</a> - New York, NY - Full-Time - Mobile Developer<p>- Who are we<p>We&#x27;re a funded bitcoin startup focused on broad digital currency adoption. Our primary product, Celery, is a easy and fast way for customer to acquire digital currency.<p>We launched a month ago and the response has been positive and overwhelming. We need to get build new features, release a mobile app, scale our infrastructure while still doing a good job at handling our current customer order flow and performing bug fixes.<p>Our stack: JavaScript, Python, Scala, C, AppEngine, EC2, S3, Backbone, Node, Compass, D3, Redis, SQS, ELB<p>What we&#x27;re looking for<p>Broadly, we&#x27;re looking for a developer passionate about coding. Knowledge of JavaScript helps a lot these days but other languages are fine too.<p>Currently though, we need someone to take charge of building our mobile app. Want to go native? use cordova, titanium, xamarin? -- you decide. Don&#x27;t know what to use? That&#x27;s cool too as long as you&#x27;re willing to learn.<p>What we&#x27;re offering<p><pre><code>  - Competitive compensation
  - Small team (6 folks right now)
  - Ability to traverse up and down the tech stack
  - Sweet co-working space with free beer (WeWork)
  - Learn stuff about the hot digital currency and payments space
  - Buy new hardware for yourself
</code></pre>
How to apply<p>Shoot us an email to careers@gocelery.com",2014-09-01 14:11:58
210,"Another viable  and possibly more enjoyable  approach would be to use C# for the full stack, irrespective of platform. See <a href=""http://xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com</a>",2014-09-07 10:57:49
211,"No offense against C# (I like the language) but Xamarin is a commercial product <a href=""https://store.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a> which makes you dependent on Xamarin. Xamarin is definitely more advanced and I guess you can also do cross compiling UI apps. But before going the Xamarin road I would look more into QT.",2014-09-07 11:10:02
212,"(This is a reply to this whole sub-thread, not just this comment.)<p>Most well-known approaches to cross-platform mobile app development have left me dissatisfied. The root problem is the required bridging overhead between the cross-platform code and the platform&#x27;s native runtime (the ObjC runtime on iOS; Dalvik&#x2F;ART on Android). Using C&#x2F;C++ for the cross-platform code is the lowest overhead approach on iOS, but it&#x27;s suboptimal on Android.<p>So why does this matter in practice? A few reasons:<p>Multiple coexisting memory management systems: In general, my understanding is that a garbage collector behaves best when all memory, or very near all of it, is under the collector&#x27;s control. My fuzzy intuition is that the least optimal situation is two coexisting garbage collectors, e.g. Xamarin.Android or a JavaScript engine other than Rhino on Android. But mixing a garbage collector with reference counting or manual memory management, such as with native code on Android or RoboVM or Xamarin.iOS, also seems to be suboptimal. If a significant amount of memory is allocated outside the scope of the GC, then the GC doesn&#x27;t have as much information with which to intelligently decide when and how much to collect. Also, in hybrid systems like the ones being discussed here, objects under the GC&#x27;s control sometimes have to be pinned so they can be accessed by the outside code; this interferes with copying or compacting collectors.<p>More information:<p><a href=""http://developer.android.com/training/articles/perf-tips.html"" rel=""nofollow"">http:&#x2F;&#x2F;developer.android.com&#x2F;training&#x2F;articles&#x2F;perf-tips.htm...</a> (see the section &quot;Use Native Methods Carefully&quot;)<p><a href=""http://developer.xamarin.com/guides/android/advanced_topics/garbage_collection/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;android&#x2F;advanced_topics&#x2F;...</a><p><a href=""http://developer.xamarin.com/guides/cross-platform/application_fundamentals/memory_perf_best_practices/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;applicati...</a><p><a href=""http://www.virtualdub.org/blog/pivot/entry.php?id=360"" rel=""nofollow"">http:&#x2F;&#x2F;www.virtualdub.org&#x2F;blog&#x2F;pivot&#x2F;entry.php?id=360</a><p>Basically, having two coexisting memory management systems is messy. I&#x27;d rather avoid it.<p>Bridging adds overhead: Consider the cost of copying strings between the cross-platform component and the native string implementation, or mapping an array of cross-platform objects to a native array of wrappers so the objects can be used from UI code. There&#x27;s always some overhead for marshaling. Maybe it&#x27;s not much in practice, and I&#x27;m just being anal. But just knowing that it&#x27;s there bothers me. The best way to keep software fast is simply to minimize the amount of pointless crap it has to do. So it seems best to minimize indirection and overhead by having just one implementation of strings, collections, etc.<p>Heavy use of external functions obstructs whole-program optimization: The Android performance tips document referenced above mentions this in the context of JNI methods and JIT compilation. I imagine the same applies to ART&#x27;s AOT compilation, since the native methods are still opaque to the compiler, unlike the Dex bytecode. And for combinations such as Xamarin.Android or a JS engine other than Rhino on Android, there are two JIT compilers working suboptimally, because neither of them can see into the other&#x27;s world.<p>Hybrid setups thwart obfuscation on Android: It&#x27;s common for Android developers to use ProGuard (or its commercial big brother DexGuard) to shrink, obfuscate, and optimize their apps. Having a significant non-Java component in the app seriously limits the effectiveness of this practice.<p>Hybrid setups limit the usefulness of debuggers: If you&#x27;re mixing Java and native code on Android, or using Xamarin, RoboVM, or a JavaScript engine, can you get a single useful stack trace across the platform-specific and cross-platform components when something goes wrong, as it inevitably will?<p>So are we doomed to rewrite the same common logic in Objective-C for iOS, Java for Android, JavaScript for client-side web apps, and (C#|JavaScript|C++) for Windows Phone, if we want that code to integrate well with the host platform? Luckily, no.<p>RubyMotion has the right idea, I think, and there&#x27;s apparently an Android version on the way, but nothing for Windows Phone&#x2F;WinRT or client-side web apps.<p>Another option is to write common code in Java, then use J2ObjC for iOS, IKVM.NET for Windows and Windows Phone, and GWT for the Web. Some teams within Google are doing this (minus the part about IKVM.net on Windows, AFAIK), including the team that developed J2ObjC. This approach certainly doesn&#x27;t have the polish of a commercial product like RubyMotion or the Xamarin tools. But on the other hand, all the tools are free, so this should appeal to cash-strapped indie developers. One thing I don&#x27;t like about J2ObjC is that the JRE emulation library has a larger footprint than I&#x27;d like. On a more aesthetic level, I don&#x27;t like the fact that this approach takes Java, which is designed to be a platform unto itself, and tries to make it work on other host platforms.<p>And then there&#x27;s RemObjects Elements (<a href=""http://www.remobjects.com/elements/"" rel=""nofollow"">http:&#x2F;&#x2F;www.remobjects.com&#x2F;elements&#x2F;</a>), a compiler toolchain with two language front-ends and three platform back-ends. On the language side, we have a choice of C# or Oxygene (a language based on Object Pascal). Either of these languages can be compiled to .NET bytecode, JVM bytecode (and from there to Dalvik bytecode for Android), or native code for the Objective-C runtime. (Note that the C# language front-end only provides the language; it doesn&#x27;t attempt to bring the .NET class library to the other platforms.) Each platform back-end uses the target platform&#x27;s preferred memory management system. That means GC for .NET and Java, and automatic reference counting for the Objective-C runtime. There&#x27;s a cross-platform standard library called Sugar for things like collections, date&#x2F;time manipulation, making HTTP requests, and XML, but emphatically <i>not</i> UI. Sugar has a very small footprint; in fact, many Sugar classes and methods are mapped to their platform-provided counterparts at compile time. Like the Xamarin suite, RemObjects C# and Oxygene are commercial products, but the pricing is very reasonable. I&#x27;m looking forward to trying this toolchain on a real project, probably using the C# front-end.<p>I know this has been a long comment; it covers a topic I&#x27;ve been thinking about a lot for more than a year. I know a lot of developers will just accept the added complexity and inefficiency I&#x27;ve described, for the sake of getting things done, i.e. accepting complexity and runtime inefficiency in exchange for developer efficiency. But then, added complexity translates to developer inefficiency at some point, especially when something goes wrong. And inflicting runtime inefficiency feels wrong when the machines in question aren&#x27;t ours. That is, the trade-off between programmer time and machine time is different for client-side apps than for server-side apps. Luckily, it appears we can have the best of all worlds, especially with the RemObjects products, at least if we&#x27;re willing and able to pay for excellent tools and accept that some of those tools will be closed-source.<p>(I guess readers will have to trust that this whole comment isn&#x27;t actually a marketing piece for RemObjects. I just discovered the RemObjects products last night, and they don&#x27;t seem to be well known, so I&#x27;m excited about them.)",2014-09-07 16:01:23
213,"Google Cache version: <a href=""http://webcache.googleusercontent.com/search?q=cache:https://gist.github.com/sadxamarinuser/2717d68996daea0e2f17"" rel=""nofollow"">http:&#x2F;&#x2F;webcache.googleusercontent.com&#x2F;search?q=cache:https:&#x2F;...</a>",2014-09-22 07:11:38
214,"Since the original file seems to be missing now, here&#x27;s the full text for reference<p>I just stumbled upon this <a href=""https://gist.github.com/anonymous/38850edf6b9105ee1f8a"" rel=""nofollow"">https:&#x2F;&#x2F;gist.github.com&#x2F;anonymous&#x2F;38850edf6b9105ee1f8a</a> and decided to write one too. I don&#x27;t have affiliation with the OP, but I like his idea and really understand his points.<p>I used Xamarin for the past year or something, not givin real date to keep this anonymous so they dont block my account ;) All the information here is subjective, I&#x27;m just expressing my rage in a very emotional way, take it with a grain of salt. Xamarin, if you&#x27;re reading this, PLEASE TAKE SOMETHING POSITIVE FROM THIS AND GO FIX SOME BUGS.<p>TL;DR: I love C# more than any other language, but Xamarin is HORRIBLE. I wish it and mono were never invented. It&#x27;s a disgrace, completely broken and buggy and just the most broken thing in the entire universe, but I still use it.<p>Why? Because I can write for 2 platforms as if it was one. haha, not really ... but because I work on small apps, I don&#x27;t have to write all the business crap twice. That is good about Xamarin, that is the only thing. They can actually compile plain C# ... hooray. If only the rest of the crap expensive broken Xamarin crap library actually worked as advertised.<p>I&#x27;m sorry for being so dramatic, but really if something costs a thousand dollars a year per platform, you kind of expect the damn company to put some love into the thing. You would expect bugs to get fixed, and for things to work. But no, that is not the case.<p>Look at Xamarin Forms. Oh a shiney new thing that builds real cross platform UI, so nice. EXCEPT THAT THERE ARE MILLION BUGS IN IT. Fundamental bugs, crashes, memory leaks and other memory issues, broken resource handling ... just serious things that normal company would never release to public, but Xamarin debugs on paying customers, on customers who pay thousands of dollars.<p>If you don&#x27;t believe me, go to <a href=""https://bugzilla.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;</a> and look at the bugs, or look at mono release notes. Just look at the list of shiny features of Mono (<a href=""http://www.mono-project.com/docs/"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;docs&#x2F;</a>). Well half of that crap is either broken, or was never implemented, or just doesn&#x27;t work as documented. Everything is just a lie that should make it look good. Xamarin does thousand things, they release new iOS SDK the same day Apple releases it ... wow ... if only they waited a year and then released a working version instead. They make thousand cool features, but they&#x27;re all broken.<p>All developers make mistakes, we all create bugs ... but software that costs a thousand dollars should work. It shouldn&#x27;t leak memory like a total noob, it shouldn&#x27;t crash the compiler when you compile, and it should work the same way when you compile once and when you compile twice, really the compiler is sometimes just so broken.<p>PLEASE STOP ADDING NEW THINGS, STOP MAKING INTERFACE BUILDERS AND SHIT THAT WILL NEVER WORK, AND JUST FIX SOME BUGS. I want to say something positive, but really I just want to scream and cry and I don&#x27;t know what to say.<p>I wish I could use something else, I wish I could go back to doing things native, but the things I work on are too invested in Xamarin that there is no way back ... I guess I&#x27;ll just have to run away.<p>Oh btw, in case you&#x27;re writing something important, like something working with money, or human lives, or just moving around pictures of cats, pick some other technology, maybe go with native C++ if you want to share your biz logic. Maybe write it as a native things, just please, be careful. There are dragons here.<p>A closing thought. Xamarin is trying to do something amazing. Xamarin.Forms is an amazing technology and makes me really happy at times ... but then I try to do something special and find 50000 completely stupid bugs on each platform, and I start raging again.<p>Please Xamarin, I&#x27;m begging you, allocate more humans to fix the bugs, stability is important. And if you manage to accidentaly fix something, please don&#x27;t break it. I&#x27;m always shitting my pants whenever there&#x27;s a new update, because almost always things get broken.<p>P.S. I&#x27;m writing this anonymous because I&#x27;m trying to say what is really in my heart. I wouldn&#x27;t be able to do this in any ot her way, because if certain people found out, I could lose my job, and I value it too much. But still I think this is the right thing to do. I&#x27;m not trying to put a bad light on Xamarin, I just want to express my feelings.",2014-09-22 11:47:53
215,"This is the bug report you provided:<p><pre><code>    Nice updates to Xamarin Studio. Too bad they can&#x27;t fix that pesky &quot;indenting pukes on itself&quot; or &quot;lines disappearing in the editor&quot;.
</code></pre>
And all I did was ask you for information about this, purely because I had not experienced it myself:<p><pre><code>     @edropple bug report please
</code></pre>
But for the record, you do not need to sign up for our bug tracking system.   You can email your concerns, complains to support@xamarin.com who will be happy to shepherd your problem through our developers.<p>As for filing the bug with the exception: I am merely trying to prioritize someone with a bug right then.   We do get crash reports with the exceptions, and we go through those and fix those.<p>The only reason to ask for the exception is to provide you with better support and address your fix faster.",2014-09-22 18:53:51
216,"I&#x27;ve been enjoying RubyMotion since its inception, so I&#x27;m always surprised by how many people <i>haven&#x27;t</i> tried it.  It&#x27;s been a huge boon to writing apps.<p>I cut my teeth on app builder&#x2F;interface builder about 10 years ago, back in college, and I have never learned to love the GUI approach to building UI (nor do I care for the XML&#x2F;XAML approach of android&#x2F;xamarin - just code, thank you).<p>Since then I learned python, ruby, and don&#x27;t feel any desire to go back to strongly typed languages.  Anyway, I hope more and more people get fed up with Swift and join us in the RubyMotion camp.  It&#x27;s a ton &#x27;o&#x27; fun. ;-)",2014-09-30 22:59:30
217,"The biggest shift I&#x27;ve noticed in Microsoft in recent years is its support and push for open source, cross platform  components and projects. It seems that there may be a paradigm shift towards selling tools and an integrated platform while providing more choice and making inroads into the open source comminities.<p>This is exciting for me because I absolutely love .net and friends, but I&#x27;m also a Linux engineer and lean heavily toward open source and cross platform technologies. In recent years I have noted that with the existence of mono and mono develop(xamarin) C#&#x2F;F# is right on the verge of being an excellent choice for open source tools and projects. I&#x27;ve been lamenting the fact that Microsoft&#x27;s early platform lock in approach has prevented .net from being a serious java alternative(or the alternative it deserves to be).  Its nature stiffling the open source ecosysytem  .<p>The outlook has been getting rosier over the past 2 years though.  Now we have OWIN, ASP.NET vNext, MVC6, entity framework 7, F#, and a strange officially unofficial interest in mono.  Projects on github!  These are welcome steps in an attempt to boost relevancy IMHO.",2014-10-11 18:06:47
218,"I am pretty sure the Forms in this case refers to Xamarin.Forms developed in the last year.<p><a href=""http://developer.xamarin.com/guides/cross-platform/xamarin-forms/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;xamarin-f...</a>",2014-10-13 13:19:23
219,"See also <a href=""http://blog.xamarin.com/xamarin-acquires-petzold/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-acquires-petzold&#x2F;</a>",2014-10-13 13:40:50
220,"Nice! Xamarin Studio (commercial cross-platform [including mobile] C#) recently released support for what they&#x27;re calling &#x27;Sketches&#x27;.<p><a href=""http://developer.xamarin.com/guides/cross-platform/sketches/introduction/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;sketches&#x2F;...</a>",2014-10-23 17:52:52
221,"When unity got their mono license xamarin wasn&#x27;t yet a business, hence the license was most likely zero.",2014-10-23 21:21:03
222,"Its essentially branded monodevelop with bundled addins(or is mono develop now unbranded xamarin?).  In any case, it has improved dramatically over the past couple years.  I write services&#x2F;daemons in it and find the C# functionality to be fantastic now.  F# is coming along too.",2014-10-24 05:05:41
223,"&gt; It was not written from scratch 3 times.<p>No, but did it also use <i>java translation</i>? That would involve writing wrappers for many of the native libraries. They would also have to do View&#x2F;Controllers in objective-c (or some equivalent translator). And finally, they would have to special-case operating systems everywhere. This framework would not at all suffice to do multi-platform development; xamarin, robovm, cordova, and titanium all get much closer to this goal.",2014-10-24 20:11:38
224,"The Mono team ported Android to C#, and got some significant performance wins. <a href=""http://blog.xamarin.com/android-in-c-sharp/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;</a><p>One wonders how much better the world would be if Google had hired some first employees that preferred expressive languages.",2014-10-27 16:15:17
225,"To be fair thats pretty much exactly what xamarin have done for ios, android and mac.",2014-11-12 16:04:47
226,"<a href=""http://blog.xamarin.com/microsoft-and-xamarin-expand-global-partnership/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;microsoft-and-xamarin-expand-global-...</a><p><i>&quot;Today were excited to take the partnership to the next level, by announcing:<p>1. Support for Visual Studio 2015  Today, we released support for the Visual Studio 2015 Preview release, which includes Xamarin templates that make it easier to discover and download Xamarin from within the IDE.<p>2. Free Xamarin Starter Edition for Visual Studio Users  Today, Microsoft announced a new, free edition to Visual StudioVisual Studio Community. Visual Studio Community contains support for extensions, which means it will be Xamarin compatible with from day one. We want to help make Visual Studio Community a tool for anyone to create native apps for iOS and Android, so we are announcing our plans to enable our freely available Xamarin Starter Edition to work with Visual Studio Community. We are also doubling the size limit on apps that can be created with Xamarin Starter Edition, so that you can build even more capable apps for free. This will be available in the coming weeks.<p>3. Special offers for MSDN Subscribers  Weve worked with Microsoft to create a  20% discount for Visual Studio Premium and Ultimate MSDN subscribers to purchase Xamarin Business or Enterprise Editions, or world-class mobile development training with Xamarin University, available up to 60 days after the Visual Studio Purchase.&quot;</i>",2014-11-12 16:49:33
227,"If the support for osx and linux depends on xamarin, the future of .NET on those platforms is very dubious.",2014-11-12 16:51:21
228,"I&#x27;m not from Xamarin but their latest blog post sounds positive: <a href=""http://blog.xamarin.com/microsoft-and-xamarin-expand-global-partnership/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;microsoft-and-xamarin-expand-global-...</a>",2014-11-12 16:56:12
229,"This is incredible, perfect for xamarin or phonegag. Cant wait to use it",2014-11-12 18:52:17
230,"They plan to change it, from <a href=""http://blog.xamarin.com/microsoft-and-xamarin-expand-global-partnership/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;microsoft-and-xamarin-expand-global-...</a><p><pre><code>  Free Xamarin Starter Edition for Visual Studio Users  
  Today, Microsoft announced a new, free edition to Visual   
  StudioVisual Studio Community. Visual Studio Community 
  contains support for extensions, which means it will be 
  Xamarin compatible with from day one. We want to help make   
  Visual Studio Community a tool for anyone to create native
  apps for iOS and Android, so we are announcing our plans to
  enable our freely available Xamarin Starter Edition to work 
  with Visual Studio Community. We are also doubling the size 
  limit on apps that can be created with Xamarin Starter Edition, 
  so that you can build even more capable apps for free. 
  This will be available in the coming weeks.</code></pre>",2014-11-12 20:50:24
231,"I don&#x27;t think a company like Google will tolerate the hyperbuggy software of xamarin, xamarin just pushes new features with ever fixing anything.",2014-11-21 03:51:30
232,"<p><pre><code>  * C# (and&#x2F;or F#) to build iPhone, Android, and Windows Phone apps [1] 
  * F# code that compiles to JavaScript for front-ends [2] 
  * C# (and&#x2F;or F#) code for Windows and *nix clients [3] 
</code></pre>
They are not perfect (nor the tooling are free), but it is possible.<p>[1] - <a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a><p>[2] - <a href=""http://websharper.com/"" rel=""nofollow"">http:&#x2F;&#x2F;websharper.com&#x2F;</a><p>[3] - <a href=""http://www.mono-project.com/"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;</a>",2014-12-01 03:54:56
233,"Currently if you include xamarin, .net is among the best platforms if you care about cross platform development(with the ability to deploy native apps). And i don&#x27;t see anybody who can replace that in the near term.",2014-12-05 12:13:59
234,"Sorry, I missed this response.  If you want to chat about the app I am happy to do so, no charge for that.  My email is in my profile.<p>We don&#x27;t work with Parse, but it seems like a viable solution.  We generally write native apps for each platform without translators, although we have some shared libraries we generally use.  This can be more expensive sometimes, but in the end the reduced number of issues and the app capability is vastly better being native.  We have used xamarin a few times, but honestly we find a lot of times a hybrid application (like LinkedIn or Facebook) works better from our experience -- e.g. Native app with web services and html served from the server.",2014-12-19 18:04:18
235,"pre&#x2F;post conditions can be handled via <a href=""https://github.com/ghuntley/conditions"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;ghuntley&#x2F;conditions</a> or via code contracts. Conditions runs on all platforms (mono&#x2F;windows&#x2F;xamarin mobile) and does runtime inspection vs Code Contracts which unfortunately runs only on Windows but does have the added advantage of being able to specify behaviour on interfaces and validation being performed at compile time. There was a project w&#x2F;GSOC back in 2010 that tried to bring Code Contracts across <a href=""http://monocodecontracts.blogspot.com.au/"" rel=""nofollow"">http:&#x2F;&#x2F;monocodecontracts.blogspot.com.au&#x2F;</a>  which got merged w&#x2F; Mono 3.0 but the corresponding tooling in MonoDevelop is missing so it is useless. See <a href=""http://www.mono-project.com/docs/about-mono/compatibility/"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;docs&#x2F;about-mono&#x2F;compatibility&#x2F;</a> for more information and please bump this  ticket <a href=""https://bugzilla.xamarin.com/show_bug.cgi?id=8400"" rel=""nofollow"">https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=8400</a> in support.",2015-01-11 22:09:05
236,"re: if open source<p>Free for open source () =&gt; <a href=""http://resources.xamarin.com/open-source-contributor.html"" rel=""nofollow"">http:&#x2F;&#x2F;resources.xamarin.com&#x2F;open-source-contributor.html</a><p>re: if free<p>Free for students () =&gt; <a href=""https://xamarin.com/student"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;student</a><p>re: if cheaper<p>So $25&#x2F;month is too much for capability to ship on all three mobile platforms - native development - using a shared codebase written in one of the nicest languages (F#&#x2F;C#) in existence? If you&#x27;re a startup w&#x2F; at least three people in your team just send them a email to work something your in your favour.",2015-01-22 10:03:24
237,"I have implemented application for clients using xamarin and have been pleased.  Portions of the code can truly be written once, compiled once and bundled into iOS or Android, using portable class libraries. Xamarin can call into native code on either platform, as well as has support for opengl.<p>That said, I don&#x27;t think you could write cross platform opengl code unless there was an abstraction. However, there is a framework called monogame, which depending on what you&#x27;re trying to do, may be useful. See <a href=""http://www.monogame.net/showcase/"" rel=""nofollow"">http:&#x2F;&#x2F;www.monogame.net&#x2F;showcase&#x2F;</a><p>I keep a lot of business logic and networking code in shared modules, then have the UI be very thin. These shared pieces can be tested on a desktop system. The biggest negative about Xamarin is it feels like they push some things out the door too soon, without sufficient quality or documentation.<p>If you have any questions, feel free to shoot me an email at curtis [at] saltydogtechnology [dot] com.",2015-01-26 04:40:27
238,"C# via Mono using Xamarin tooling is realistic.<p><a href=""https://xamarin.com/platform"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;platform</a>",2015-01-28 19:56:28
239,"The free version of the Xamarin tools seem to have limited app size and doesn&#x27;t include their UI integration (Xamarin.Forms):<p><a href=""https://store.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a>",2015-01-28 21:39:36
240,"Microsoft .NET is MIT:<p><a href=""https://github.com/Microsoft/dotnet/blob/master/LICENSE"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;dotnet&#x2F;blob&#x2F;master&#x2F;LICENSE</a><p>Xamarin&#x2F;Mono is LGPLv2:<p><a href=""http://xamarin.com/licensing"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;licensing</a><p>Purchasing a Xamarin license removes the LGPLv2 restrictions. If you have a established open source project then you can apply for free Xamarin licenses @ <a href=""http://resources.xamarin.com/open-source-contributor.html"" rel=""nofollow"">http:&#x2F;&#x2F;resources.xamarin.com&#x2F;open-source-contributor.html</a>",2015-01-28 21:55:40
241,"Boston, MA - Xamarin - Full time onsite<p>Founded in May 2011, Xamarin is a fast-growing mobile startup with offices in San Francisco, Boston, London, rhus and Buenos Aires. We have almost 1 million developers and over 14,000 customers using Xamarin because we provide the best platform to create and test fully native mobile apps for iOS, Android, Mac and Windows.<p>Miguel and his talented engineering team in Boston are looking for:
Xamarin Studio Lead Software QA Engineer
<a href=""http://xamarin.com/jobs/oddnZfww"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;oddnZfww</a><p>Complete list of all Xamarin Opportunities (multiple locations):
<a href=""http://xamarin.com/jobs"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs</a><p>Interested to learn more, chat about what it&#x27;s like to work at Xamarin?  Email me:  paula@xamarin.com",2015-02-01 19:16:06
242,"if you can attach and debug a process through sublime text, then maybe.<p>as it stands there is no real replacement for visual studio (save maybe xamarin studio &#x2F; mono develop)",2015-02-03 19:29:37
243,"What about F#&#x2F;C#? <a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>",2015-02-05 10:38:20
244,".NET!<p>C# - Project Orleans -&gt; <a href=""http://vimeo.com/113730934"" rel=""nofollow"">http:&#x2F;&#x2F;vimeo.com&#x2F;113730934</a><p>F# - Path to relaxation -&gt; <a href=""https://www.youtube.com/watch?v=s_iMgFAY0lk"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=s_iMgFAY0lk</a><p>Xamarin - iOS&#x2F;Android&#x2F;Windows Phone apps using F#&#x2F;C#  -&gt; <a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>",2015-02-05 10:47:43
245,"San Francisco - Full-time @ Xamarin<p>Xamarin San Francisco is looking for a Technical Senior Product Manager for our newest product offering, Xamarin Test Cloud: <a href=""http://xamarin.com/jobs/o4qeZfwr"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;o4qeZfwr</a>.<p>We also have a number of other roles in SF, Boston, and the UK!  For a complete list go to: <a href=""http://xamarin.com/jobs"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs</a>.<p>If you&#x27;re interested in chatting to hear more about us or want to discuss opportunities, please feel free to email me: steph@xamarin.com.",2015-02-05 22:09:25
246,Used it plenty of times in the past and always been pleased with it&#x27;s ease of use both in server side situations as well as mobile. More recently we&#x27;ve also used it in xamarin.<p>Is it posted here because something new has happened?,2015-02-09 06:34:00
247,"Xamarin For Android and iOS only have &quot;crazy&quot; licensing fees IF you want the professional editions... The Starter edition is free, and their Indie edition is $25 per month: <a href=""https://store.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a>.",2015-02-10 12:52:19
248,"For mobile forms-based applications, Xamarin.Forms looks pretty good: <a href=""http://xamarin.com/forms"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;forms</a><p>For cross-platform desktop applications, I&#x27;ve been keeping an eye on Perspex: <a href=""https://github.com/grokys/Perspex"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;grokys&#x2F;Perspex</a>",2015-02-10 17:38:26
249,".NET&#x2F;C# implementation as a portable class library for server side and client (xamarin&#x2F;windows phone) @ <a href=""https://github.com/michael-wolfenden/Polly"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;michael-wolfenden&#x2F;Polly</a>",2015-02-14 07:48:00
250,"Check out <a href=""https://github.com/paulcbetts/refit"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;paulcbetts&#x2F;refit</a> &amp;&amp; <a href=""https://github.com/akavache/Akavache"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;akavache&#x2F;Akavache</a> &amp;&amp; <a href=""https://github.com/michael-wolfenden/Polly"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;michael-wolfenden&#x2F;Polly</a><p>Then check out <a href=""http://arteksoftware.com/resilient-network-services-with-xamarin/"" rel=""nofollow"">http:&#x2F;&#x2F;arteksoftware.com&#x2F;resilient-network-services-with-xam...</a> for the pattern&#x2F;inspiration how to glue them together to obtain a x-platform resilient, performant and data caching network stack. Write once, enjoy on every platform.",2015-02-27 04:08:09
251,"I avoid storyboard, and interface builder.
 But my xamarin experience has been pretty impressive. They&#x27;ve mapped the APIs on to c# really well.",2015-03-01 09:33:32
252,"In case you are not aware, last fall they doubled the free edition size limit and introduced a $25&#x2F;month subscription option (eventually the same price at $300&#x2F;yr).<p><a href=""https://store.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a><p>Xamarin is free for students.<p><a href=""https://xamarin.com/student"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;student</a>",2015-03-03 16:30:08
253,"For your networking stack use the following:<p>- <a href=""https://github.com/paulcbetts/refit"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;paulcbetts&#x2F;refit</a><p>- <a href=""https://github.com/akavache/Akavache"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;akavache&#x2F;Akavache</a><p>- <a href=""https://github.com/paulcbetts/Fusillade"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;paulcbetts&#x2F;Fusillade</a><p>- <a href=""https://github.com/michael-wolfenden/Polly"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;michael-wolfenden&#x2F;Polly</a><p>Glue to them together as such <a href=""http://arteksoftware.com/resilient-network-services-with-xamarin/"" rel=""nofollow"">http:&#x2F;&#x2F;arteksoftware.com&#x2F;resilient-network-services-with-xam...</a>",2015-03-10 20:30:35
254,"re: MvvmCross &amp;&amp; ReactiveUI<p>MvvmCross = imperative programming, mutable state in your UI &amp; pub&#x2F;sub messaging based API design.<p>ReactiveUI = declarative&#x2F;functional reactive programming, reactive extensions &amp; subscription&#x2F;observable based API design.<p>Considering he is a intern&#x2F;newbie, just getting started and has a deadline of a month I  wouldn&#x27;t suggest these two at all. Both projects have a vibrant community but have not crossed the chasm, samples and documentation needed to onboard absolute newbies is far and few between.<p>If you are targeting only WPF then check out <a href=""https://github.com/Caliburn-Micro/Caliburn.Micro"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Caliburn-Micro&#x2F;Caliburn.Micro</a> instead.<p>re: MahApps.Metro<p>Highly recommended, amazing library.<p>re: Networking Stack
Use:<p>- <a href=""https://github.com/paulcbetts/refit"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;paulcbetts&#x2F;refit</a><p>- <a href=""https://github.com/akavache/Akavache"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;akavache&#x2F;Akavache</a><p>- <a href=""https://github.com/paulcbetts/Fusillade"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;paulcbetts&#x2F;Fusillade</a><p>- <a href=""https://github.com/michael-wolfenden/Polly"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;michael-wolfenden&#x2F;Polly</a><p>Glue to them together as such <a href=""http://arteksoftware.com/resilient-network-services-with-xamarin/"" rel=""nofollow"">http:&#x2F;&#x2F;arteksoftware.com&#x2F;resilient-network-services-with-xam...</a>",2015-03-10 20:38:02
255,"I don&#x27;t think there&#x27;s a drop-in alternative to the Flash API other than OpenFL, but you can achieve the same outcomes in pretty much any language.<p>If you&#x27;re just looking for multi-platform stuff, that&#x27;s almost a minimum requirement now: unity3d, unreal engine, xamarin, javascript etc.",2015-03-13 19:11:35
256,"I must say, I&#x27;m very impressed with all of the open source moves that MS has done lately.  I wonder if that will drive more adoption of C# and cause Oracle to open up Java.  I&#x27;m not a fan of C# because it&#x27;s basically only used on windows systems, despite xamarin and et al.",2015-03-19 07:12:54
257,"Cool to see this. By my count we now have, in no particular order:<p>- React Native from Facebook (<a href=""https://github.com/facebook/react-native"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;react-native</a>)<p>- Appcelerator&#x27;s Titanium and Alloy Frameworks (<a href=""http://appcelerator.com"" rel=""nofollow"">http:&#x2F;&#x2F;appcelerator.com</a>)<p>- Telerik&#x27;s Native Script (<a href=""http://telerik.com/nativescript"" rel=""nofollow"">http:&#x2F;&#x2F;telerik.com&#x2F;nativescript</a>)<p>- Xamarin (<a href=""http://xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com</a>)<p>As I understand it, all three of these frameworks have a JS (or C#) runtime that is compiled along with the app. This JS runtime is what drives the app and uses the native features of each platform (iOS &#x2F; Android).<p>I&#x27;ve been building on Appcelerator for the last 4 months on some basic apps, and it works pretty well.<p>I look forward to trying out some toy apps on the other platforms.",2015-03-26 19:53:52
258,"San Francisco | Boston | Xamarin - Full time<p>#TheXamarinStory
We created Xamarin because we knew there had to be a better way to build mobile apps. Were developers, so we know what developers want: a modern programming language, powerful tools, an efficient and delightful workflow and the power to create the best user experiences. We are on a mission to make it fast, easy and fun to build great mobile apps.<p>#Boston | Xamarin Studio Lead Software QA Engineer  
Prior experience developing or enhancing an automated UI testing framework for a desktop application.
Solid background in C# as a developer or tester.
Previous experience using Xamarin Studio preferred.
Demonstrated ability to lead a small (4-6 person) team of QA testers. More details here: <a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;obsI0fw5"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;obsI0fw5</a><p>#SanFrancisco | Senior Software Engineer, Xamarin Test Cloud
Prior experience building mobile apps on iOS and&#x2F;or Android
Experience with Ruby, Java, Objective-C and C# a plus
Experience with mobile testing
Strong debugging&#x2F;analytics skills
More details here: <a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;oW8i0fw6"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;oW8i0fw6</a><p>Curious about other openings posted here: <a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;jobs"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs</a> ? Send an email to me paula@xamarin.com with your questions - we love to hear from you!",2015-04-01 14:06:11
259,"System Engineer - Boston - Fulltime<p>Systems Engineering Intern - San Francisco - INTERN<p>Xamarin IT is looking for an FTE systems engineer in Boston, and an intern in SF to come in and help build out our internal infrastructure. These are both hands on roles helping to build our internal infrastructure, improve monitoring tooling, and help drive automation and standardization.<p>if you&#x27;re interested please email me at Nick.IT at xamarin dot com",2015-04-01 16:00:14
260,"Hi there, I&#x27;m the CEO of Xamarin. I&#x27;m really sorry to hear that you had issues with consuming third-party libraries. This is actually something we&#x27;ve been recently very focused on improving.<p>First of all, in December we released a new tool called Objective Sharpie that can automatically bind Objective-C libraries into C#:<p><a href=""http:&#x2F;&#x2F;forums.xamarin.com&#x2F;categories&#x2F;ObjectiveSharpie"" rel=""nofollow"">http:&#x2F;&#x2F;forums.xamarin.com&#x2F;categories&#x2F;ObjectiveSharpie</a><p>If you&#x27;re skilled enough to build the Objective-C library, then you&#x27;ll be able to use Objective Sharpie to create a C# binding. We also have docs on doing this for Java on developer.xamarin.com.<p>Some of our customers don&#x27;t have the time or skill to do this themselves, and so we&#x27;ve recently created a bindings team that wraps third-party native libraries for our customers. Many of these end up published on <a href=""http:&#x2F;&#x2F;components.xamarin.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;components.xamarin.com&#x2F;</a> (there are over 300 components now). But some of them we can&#x27;t immediately publish because we need to get permission from the original library author to redistribute their library. This is especially true for commercial SDKs. But if you contact us directly, we might be able to give you something.<p>We also do custom bindings through our support team. This is something that unfortunately we haven&#x27;t made very obvious. But you can just email support@xamarin.com and we can create a binding for you.<p>Like I said, this is an area we&#x27;re pretty focused on. If you have any feedback, please feel free to let me know directly: nat@xamarin.com.",2015-04-04 18:58:45
261,"Hey there, I am James Montemagno a developer evangelist at Xamarin. I have been developing native apps with Xamarin for nearly 4 years now across iOS, Android, and of course Windows (I was a customer for 2 years before joining Xamarin). I just wanted to clarify a bit about Xamarin and Xamarin.Forms. It is important to know that Xamarin.Forms is a cross platform UI layer that sits on top of the core Xamarin platform. Using native Xamarin you are still sharing your backend C#&#x2F;.NET code and then building out native user interfaces for each platform.<p>The Xamarin.Forms library adds an abstraction over common controls available on iOS, Android, and Windows Phone. Xamarin.Forms is extremely extensible, but it is not for every app, especially if you need a lot of custom UI or API access. For data entry, proofs-of-concept, or other simple apps it is great and we have a guide to help you select: <a href=""http:&#x2F;&#x2F;cdn1.xamarin.com&#x2F;Architecture%20Selector.pdf"" rel=""nofollow"">http:&#x2F;&#x2F;cdn1.xamarin.com&#x2F;Architecture%20Selector.pdf</a>. The nice thing here is that either approach can use a shared-code backend.<p>I think I can address some of your concerns below:<p>1.) I would love to know which components you were having issues with and I can work with the team. There are a lot of settings in Visual Studio and Xamarin Studio as far as when to break on exceptions so I would love to help out here.<p>2.) If you are exclusive to using Xamarin.Forms then yes you will have a limited set of controls, since Xamarin.Forms is a subset of common controls. It is extensible via CustomRenderers, but that require some work and if you need a lot of them then it might be worth looking into the native approach without Xamarin.Forms as this approach will automatically give you access to every control on each platform you are creating.<p>3.) We are always looking to expand our documentation across all of our products and highly recommend checking out our updated developer portal: <a href=""http:&#x2F;&#x2F;developer.xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com</a> there is a plethora of Xamarin.Forms related documentation as well as <a href=""http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;xamarin-forms&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;xamarin-f...</a> It is pretty extensive, but if there is something missing please please please let us know and we will work with the documentation team to add it. In addition to this documentation we do have a book that has been written by Charles Petzold on Xamarin.Forms that is freely available: <a href=""http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;xamarin-forms&#x2F;creating-mobile-apps-xamarin-forms&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;xamarin-f...</a><p>4.) For XAML intellisense it is built right into Xamarin Studio, for Visual Studio there is an extension that you can install: <a href=""http:&#x2F;&#x2F;www.cazzulino.com&#x2F;mobileessentials.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.cazzulino.com&#x2F;mobileessentials.html</a>  This will be integrated automatically in the future. I apologize that this is tricky to find.<p>Hopefully this helps out a bit with some of the issues that you have run into, but again please please feel free to email me with any questions, encounter any problems please reach out to us so we know and can fix them. You have my direct line: james@xamarin.com.",2015-04-04 19:31:53
262,"I&#x27;ve been using Xamarin forms a lot now.
They are miles from being as good as native development.
Soooo many bugs in xamarin itself.
When using Xamarin forms, you will not provide as good of product as you would native.
There are also very little controls.
Xaml works, but is really slow. And the layout is SOOO inefficient !
But the problem is even greater, you can&#x27;t merge Android and iOS layout passes.
On one platform, measuring is really fast and the other really slow ...
Xamarin forms can&#x27;t compensate and give native performance to this.
They don&#x27;t even have listview recycling ...
One developer even said &quot;RelativeLayout is probably best for you here and can do this&quot; to the question what the fastest layout is.
For Android, this is the WORST layout possible.<p>Anyway, you will spend a LOT of time fixing Xamarin bugs and developer their controls.<p>However, I LOVED .net functions, especially LINQ !<p>Anyway, development was really slow and performance is no were near to native.<p>So if you want to deliver a simple app to a client and be cross platform, then sure. But don&#x27;t try to maintain that app, you will regret it.<p>I&#x27;m afraid the whole Xamarin thing won&#x27;t solve &quot;cross-platform&quot; which isn&#x27;t a real problem but sure.
Its just another horse that Microsoft is betting on.<p>Oh and for the people that will have to do it anyway.
Use Resharper ! Xaml IntelliSense !!! It will help you a lot.<p>I&#x27;m sorry I&#x27;m so negative, but it was genuinely the worst development I had.",2015-04-04 19:59:18
263,it would be nice if xamarin implemented it.,2015-04-04 22:17:43
264,"Hey, I&#x27;m the CEO of Xamarin. I&#x27;m really sorry that you had a bad experience with Xamarin.Forms.<p>Did you try doing native development with Xamarin? I do want to be clear that Xamarin.Forms is not Xamarin. It&#x27;s a library that we built to help people quickly write very simple, data-entry style apps. That&#x27;s why it&#x27;s called &quot;Forms.&quot; It&#x27;s not intended to be highly performant or to replicate all the per-platform APIs in Xamarin.iOS and Xamarin.Android. For that, you should use the native APIs. We have a little more information about that here:<p><a href=""http:&#x2F;&#x2F;cdn1.xamarin.com&#x2F;Architecture%20Selector.pdf"" rel=""nofollow"">http:&#x2F;&#x2F;cdn1.xamarin.com&#x2F;Architecture%20Selector.pdf</a><p>And the &quot;What Xamarin approach is right for you?&quot; section on the Xamarin.Forms page:<p><a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;forms"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;forms</a><p>Before release, we had internally called Xamarin.Forms &quot;duplo,&quot; to emphasize that it was for childishly-simple apps and screens, but we couldn&#x27;t use that (trademarked) name for the release, unfortunately.<p>That said, of course we still want to address all the issues that you found with Forms. Would you mind dropping me an email - nat@xamarin.com?",2015-04-05 00:41:13
265,"Right now we have a huge amount of content available on <a href=""http:&#x2F;&#x2F;developer.xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com</a><p>This includes hundreds of samples:
<a href=""http:&#x2F;&#x2F;developer.xamarin.com&#x2F;samples-all&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;samples-all&#x2F;</a><p>And lots of detailed guides:
<a href=""http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;</a><p>And dozens of videos too:
<a href=""http:&#x2F;&#x2F;developer.xamarin.com&#x2F;videos&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;videos&#x2F;</a><p>As for Xamarin University, the vast majority of that experience is live, interactive learning with a teacher. That&#x27;s why it costs money. The recorded versions of those interactive classes aren&#x27;t that useful on their own. But, we&#x27;re working on developing some good standalone e-learning content and when we do it will be widely available.",2015-04-05 00:48:26
266,"The approach with Xamarin is that you are able to build out a shared C#&#x2F;.NET business logic layer. All of your platform independent code such as Models, ViewModels, Database code, Restful Service calls, etc. You get to use the power of C# and .NET to build this out. Then you build out user interfaces for iOS, Android, and Windows and tie this logic all together. Xamarin apps are native so you follow the same paradigms for building the UIs out such as Android XML and iOS Storyboard or XIB files, but you can build these out in the Xamarin Designers for both iOS and Android inside of Visual Studio or Xamarin Studio.<p>On the code behind side of iOS&#x2F;Android (UIViewController or Activity) you write all of this in C# with C# features like LINQ, events, delegates, etc. and you have access to 100% of the iOS and Android APIs of the platform as well.<p>Now we do have the Xamarin.Forms library which adds on top of this to build on a shared UI layer for iOS, Android, and Windows Phone as well. However it is not for every app and we have guidance at www.xamarin.com&#x2F;forms. Hopefully this is a nice overview of the platform.",2015-04-05 00:50:16
267,"Hey, Xamarin CEO here, thanks for your feedback. A couple comments&#x2F;questions on the issues you raised.<p>1) We aren&#x27;t aware of any debugger issues like this. Is it possible you were debugging optimized code which had the local variables optimized away? Similarly, when an uncaught exception is thrown, it comes with a stack trace with line numbers. Were you not getting these?<p>2) Xamarin does map the entire set of iOS and Android APIs into C#, so yes it is a &quot;wrapper,&quot; but you should NOT be limited in what native features you can use. We literally cover almost 100% of the entire set of native APIs. What limitations were you running into?<p>3) We have a ton of docs at <a href=""http:&#x2F;&#x2F;developer.xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com</a> including nearly 300 sample apps and a lot of very detailed guides: <a href=""http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;</a> Which part of the docs did you find inadequate?<p>4) We do include XAML intellisense in Xamarin Studio. To get it in Visual Studio you have to install an extension: <a href=""http:&#x2F;&#x2F;www.cazzulino.com&#x2F;mobileessentials.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.cazzulino.com&#x2F;mobileessentials.html</a> This will be included by default in a future version of Xamarin.<p>I&#x27;m sorry about the trouble you had, and I&#x27;d like to get to the bottom of those issues. Please feel free to contact me at nat@xamarin.com.",2015-04-05 01:39:00
268,"<a href=""http:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;comment&#x2F;30355"" rel=""nofollow"">http:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;comment&#x2F;30355</a><p>This to me sums up my experience with Xamarin. It has A LOT of potential, and I did generally enjoy working with it. However, the amount of small issues I dealt with that were never solved (and still haven&#x27;t been solved 2 years later) are what drove me away. That and the cost...",2015-04-05 03:53:11
269,"I using xamarin in last 16 months<p>From my experience, xamarin take wrong UI improvement strategy<p>Dont get me wrong, this is a good product, i love it, but just going to wrong direction<p>This is the big 2 mistakes:<p>1. You change the API class and method name to .net version<p>For first time user, this is good approach, but i must rename every sample snippet code from stackoverflow<p>You should save the resource for renaming API to something else more valueble ( hint : fixbug )<p>Are you rename the API because of patent and legal issue?<p>2. Xamarin form<p>This is the worst strategy.<p>Maybe this is good for B2B<p>And maybe B2B is good money<p>But for me, indie programmer, B2C product, i dont need xamarin form<p>I need best approach to use UI library<p>Stop xamarin form, there is other way to get 90 percent shared library<p>Support more on MVVM cross<p>Duplicate total of the xamarin component store<p>Improvement object sharpie to support UIKit.h<p>Object sharpie not working if using UI library<p>Android binding still design for eclipse project, not android studio<p>I&#x27;m wasting 1 week to bind 
ListViewAnimation android, and still not working<p>My point is, it really hard to bind UI library on xamarin<p>Conclusion,<p>Please please turn around and go back to your real core value.<p>We like native, improve native, do not recreate the UI component<p>You know what happend when you try recreate UI?<p>Go check java se and Qt",2015-04-05 04:22:08
270,"Hi james,<p>I&#x27;m following your blog.<p>In last month, you try to prove UI xamarin form capable do all layout<p>Here is the idea, if you dont mind, would you convert ListViewAnimation android to xamarin component<p>(Warning: this is not a light library)<p>At the moment, there is no listview xamarin component support drag and drop swap row.<p>Need that to move and reorder and row sequence<p>I&#x27;m sure every project need powerfull listview<p>Love your work
Thx",2015-04-05 04:38:30
271,"Macincloud is enough.<p>If you dont have mac, and belive in xamarin,<p>My sugestion is try build on android first,<p>If have good respond from customer, then buy mac and porting to iOS<p>Porting xamarin android to iOS is very easy if you have mvvm knowledge",2015-04-05 04:46:24
272,"Hi, I am not affiliated with Xamarin but I have been using Xamarin in production for the last two years on many applications and could not imagine doing native development in any other way.<p>Two weeks ago a enterprise company that previously was &quot;iPhone&#x2F;iPad only&quot; from the top-down by a board level mandate has started seriously considering moving over to Android for purely handset cost reasons. I knew this would eventually happen and deliberately designed&#x2F;developed the application using the Xamarin platform as a way to reduce risk&#x2F;hedge bets.<p>If the application was not developed using Xamarin then the enterprise company would be facing a complete rewrite of the application in another language whereby the engineering costs to achieve this outcome would outweigh the savings and re-implementing the functionality would introduce substantial product quality&#x2F;project risks.<p>Now &quot;all that is required&quot; is to start work on a Android user experience, implement it and then sew it up against the core library. It also means that developers can concurrently patch bugs + ship features to both platforms during the migration phase.<p>Anyway there seems to be a quite of bit of confusion that Xamarin.Forms == Xamarin and this is not the case.<p>Xamarin.Forms is a package that runs on top of the Xamarin platform that provides a DSL to rapidly create CRUD enterprise applications that spits out the equivalent native user interface implementation depending on which platform you run on. It is extendable and becoming highly customizable. Can&#x27;t wait until they drop the &quot;sealed&quot; modifiers - hint, hint, nudge, nudge @natfriedman!<p>Xamarin itself is a way to use either F# or C# on Android and iOS. All of the native platform specific API&#x27;s you&#x27;re used are available to you to use in any way you see fit. Admitely the there has been some minor naming changes to be in accordance with the <a href=""http:&#x2F;&#x2F;www.amazon.com&#x2F;Framework-Design-Guidelines-Conventions-Libraries&#x2F;dp&#x2F;0321545613"" rel=""nofollow"">http:&#x2F;&#x2F;www.amazon.com&#x2F;Framework-Design-Guidelines-Convention...</a> but if your coming from a .NET background then it makes complete sense.<p>That said if you&#x27;re coming directly from .NET, thinking that you can ship iOS or Android without learning the domain knowledge of each platform then you&#x27;re in for a royally rude awakening. Xamarin does not abstract away the differences between the platforms - ie. push notifications, application suspension or any of that jazz.<p>With the correct software architecture you can write your business logic, data transport, caching and persistence layer once and  share it between every non-web platform in existence - Android, iOS, Windows Phone and desktop applications on Linux, Mac &amp; Windows&#x2F;WPF&#x2F;Store.<p>Step one in decent architecture is to divide your application up into a Core library and use interfaces to bait and switch in a different concrete implementation depending on what platform is running your application.  For more info see: <a href=""http:&#x2F;&#x2F;log.paulbetts.org&#x2F;the-bait-and-switch-pcl-trick&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;log.paulbetts.org&#x2F;the-bait-and-switch-pcl-trick&#x2F;</a><p>Step two is to use a solid MVVM framework such as <a href=""http:&#x2F;&#x2F;reactiveui.net"" rel=""nofollow"">http:&#x2F;&#x2F;reactiveui.net</a> which is a functional reactive programming framework that uses the Reactive Extensions for .NET to create elegant, testable User Interfaces that run on any mobile or desktop platform. Supports Xamarin.iOS, Xamarin.Android, Xamarin.Mac, WPF, Windows Forms, Windows Phone 8 and Windows Store apps. It is the framework that powers GitHub for Windows and various other undisclosed projects ;-)<p>Step three is to architect your network services and data persistence exactly as detailed here: <a href=""http:&#x2F;&#x2F;arteksoftware.com&#x2F;resilient-network-services-with-xamarin&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;arteksoftware.com&#x2F;resilient-network-services-with-xam...</a><p>For more information on the above see <a href=""https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=voa44OHBKME"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=voa44OHBKME</a> - &quot;Writing Mobile Apps the Github Way by Paul Betts&quot;<p>(disclaimer: contributor to the ReactiveUI project ;-)",2015-04-05 09:42:31
273,"hi miguel,<p>thx for responding my comment. after read your explanation, i agree with your argument about xamarin form. it just need more feature and more sample. Xamarin sample layout is not esthetic. You should look at telerik example. And last one, when feature listview drag and drop swap row available on android ?<p>thx",2015-04-08 21:32:18
274,"If you are interested in general front-end development as your title suggests:<p><a href=""http:&#x2F;&#x2F;www.qtcentre.org&#x2F;forum.php"" rel=""nofollow"">http:&#x2F;&#x2F;www.qtcentre.org&#x2F;forum.php</a><p><a href=""https:&#x2F;&#x2F;forums.xamarin.com&#x2F;categories&#x2F;xamarin-forms"" rel=""nofollow"">https:&#x2F;&#x2F;forums.xamarin.com&#x2F;categories&#x2F;xamarin-forms</a><p><a href=""https:&#x2F;&#x2F;social.msdn.microsoft.com&#x2F;Forums&#x2F;vstudio&#x2F;en-US&#x2F;home?forum=wpf"" rel=""nofollow"">https:&#x2F;&#x2F;social.msdn.microsoft.com&#x2F;Forums&#x2F;vstudio&#x2F;en-US&#x2F;home?...</a>",2015-04-23 08:18:49
275,"Dont, please dont. Save people resource to focus on visual studio windows. Maybe the better solution is use different approach, send minor team to assist xamarin fixing xamarin studio fixbug",2015-04-24 23:21:44
276,"<i>&gt; Not everyone is ... working on mobile apps</i><p><a href=""http:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-passes-1-million-developer-milestone&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-passes-1-million-developer-m...</a>",2015-05-01 11:41:42
277,"This is a significantly more compelling use for Dart than anything else I&#x27;ve seen.<p>Dart team; stop screwing around and pay attention to this! Dart has failed as a browser script language, but its a good language in itself.<p>A cross platform language for building high performance apps, with a good package management solution and tooling... Thats a compelling use case. Something like a cross platform Swift...<p>Add some compiles to native binaries (or some kind of runtime bundling like xamarin do) and you&#x27;d have a pretty interesting piece of tech there.<p>(&#x27;lets focus on our to javascript compiler for the dart compiled from typescript because the dart runtime is never going into Chrome or any other browser&#x27; is not. Stop running down that ridiculous road already)",2015-05-02 09:39:54
278,"So, I&#x27;ve actually been working for the past while on a project to allow building more native apps on Android using Python. It is built on the Kivy tools, but I have had to make some changes to python-for-android specifically because it&#x27;s not as seperated from Kivy as the developers think. I&#x27;ve also had to make a small change to PyJNIus, as it has a dependency on SDL when on Android.<p>The reason I chose to work on this is while you can already create an application using Kivy, it sort of exists in its own world compared to standard Android apps. Because you don&#x27;t have separate activities, you can&#x27;t really do stuff like have one of them be launched to handle a specific file or URL (disclaimer: what I&#x27;m building can&#x27;t either yet). There&#x27;s also the same issues you get with mobile apps that are web apps in an APK, where someone has attempted to reimplement native UI widgets and there&#x27;s certain behaviours that are not quite right or missing, or you can&#x27;t use them yet because they haven&#x27;t been replicated in your environment yet.<p>So basically what I&#x27;m doing is the Python equivalent of Xamarin.Android (<a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;Android&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;Android&#x2F;</a> ) built on some of the Kivy tools. The idea is that you&#x27;d have the bulk of your logic in cross platform Python and a thin UI layer for any platforms you had. And in the future if someone made a similar thing for iOS, you could build a layer overlying the two of them and get actually native behaviour on both.<p>Overall I&#x27;ve gotten it to the stage where you can create activities, access some standard UI elements and launch third-party apps via Python code, but like I said, it&#x27;s still at a pretty early stage.<p>I&#x27;d intended to open source it when it got to a more usable state, as it&#x27;s pretty much in proof of concept state atm. (bugs ahoy, tests and docs are very lacking, feature coverage is low, setup is a PITA, and the API is too close to the Java API to make for nice Python). These are problems I believe are fixable. If you want to see the current state of it though, it&#x27;s on <a href=""https:&#x2F;&#x2F;bitbucket.org&#x2F;tonyfinn&#x2F;pydroid"" rel=""nofollow"">https:&#x2F;&#x2F;bitbucket.org&#x2F;tonyfinn&#x2F;pydroid</a> , but it&#x27;s a bit off how far I&#x27;d like to be before sharing it.",2015-05-03 21:37:38
279,"You realize this is officially abandoned right?<p><a href=""https:&#x2F;&#x2F;forums.unrealengine.com&#x2F;showthread.php?54595-I-want-Feedback-from-Epic-about-Mono-for-Unreal-Engine&amp;highlight=xamarin"" rel=""nofollow"">https:&#x2F;&#x2F;forums.unrealengine.com&#x2F;showthread.php?54595-I-want-...</a><p>&amp;tldr; Epic saw the Unity thing and went &#x27;nope; not unless you make it free forever&#x27;.<p>(Also, don&#x27;t bother. It doesn&#x27;t work with the most recent version of the engine either)",2015-05-14 11:54:50
280,"Devils in the details huh? <a href=""https:&#x2F;&#x2F;store.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a><p>Doesn&#x27;t look free to me.<p>(and I&#x27;m not being narky. <i>This</i> is the point I&#x27;m making; it&#x27;s only superficially free. Then you have to say, ship a game, and woa~ wait, it has to be GPL now if you bundle the runtime, or you have to pay a licensing fee?)",2015-05-14 12:50:51
281,"I don&#x27;t use Xamarin myself, but I don&#x27;t think it&#x27;s very accurate to say nobody is using their tools: <a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;customers"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;customers</a><p>If you spend any time at all talking with .NET developers (of which there are millions), many are very excited about Xamarin and being able to use their existing knowledge to build native cross-platform apps.",2015-05-18 16:28:49
282,tldr; asking for a port of a C# app to windows phone and android gets you a lot of xamarin developers,2015-05-27 22:05:27
283,"If user experience is your advantage, then you should go native. Some product like xamarin or nativescript able to provide standard native experience with little effort. You can call it write once read anywhere. But if you want big customize UI just like snapchat or instagram, i think there isn&#x27;t any shortcut.",2015-06-17 18:05:58
284,"xamarin is what you are looking for. I can&#x27;t believe this answer hasn&#x27;t been posted. xamarin is supported by microsoft and targets both ios, andriod and windows.",2015-06-23 02:14:00
285,"sorry for double submit, link changed after 1 hour deadline.<p>Correct link:
http:&#x2F;&#x2F;www.whitneyland.com&#x2F;2015&#x2F;07&#x2F;xamarin-review-2015.html",2015-07-01 15:54:55
286,"You can actually do that with a lot of languages now.  C# with xamarin, java&#x2F;clojure with robovm, java with j2objc, etc.<p>I was tempted with robovm, but found the 30s minimum build &amp; run cycle for trivial code changes too slow for me.<p>And the performance is pretty good for these guys, they&#x27;re all as fast as objective-c:<p><a href=""https:&#x2F;&#x2F;medium.com&#x2F;@harrycheung&#x2F;mobile-app-performance-redux-e512be94f976"" rel=""nofollow"">https:&#x2F;&#x2F;medium.com&#x2F;@harrycheung&#x2F;mobile-app-performance-redux...</a><p>At my last job we did the C++ cross platform layer, and it was very painful.  C++ is slow to compile and can create bloated binaries.  There can be something said for the freedom of having separate platform teams with just a server api.",2015-07-02 00:11:50
287,"I wouldn&#x27;t say &#x27;double&#x27; the engineers.  In my last company&#x27;s case, you still need to write the iOS and Android &quot;UI&quot; part, and waiting for the C++ engineers to finally make this relatively simple thing could take longer than it should.  Sometimes it was just faster for the two UI engineers to implement it in the UI than it was for the two C++ engineers to make it themselves.<p>Then the UI engineers often had to create wrappers for the C++ objects (in the iOS Objective-C++ case at least), because  ObjC objects only take NSString, while the C++ types only give C++ strings and other such glue things.<p>Then lazy engineers &#x2F; deadlines would move business logic into the UI layer wrappers, because development speed wise it was much easier to work with there than to put inside the C++ layer.<p>Cross platform makes it&#x27;s own work.  But this was with a &#x27;homegrown&#x27; C++ solution, so maybe something made by a third party like xamarin might be a very different experience.",2015-07-02 16:57:34
288,"Well you are getting native app with xamarin, so it must be better.",2015-07-06 15:43:28
289,"The downside of xamarin is slightly unstable tooling, the occasional regression, and headaches associated with using native oss libs, though it is very much possible. And of course price.<p>On the other hand, native-equivalent performance is no joke and c#&#x2F;f# are great languages. Xamarin comes with some very sophisticated stuff like databinding, and high-level concurrency like rx, async&#x2F;await, and akka.net which can really be a boon for performance, especially compared with js&#x27;s comparatively meager concurrency options.",2015-07-06 21:40:34
290,"Application for Open Source Project Subscription
 - <a href=""http:&#x2F;&#x2F;resources.xamarin.com&#x2F;open-source-contributor.html"" rel=""nofollow"">http:&#x2F;&#x2F;resources.xamarin.com&#x2F;open-source-contributor.html</a>",2015-07-08 23:48:46
291,"The primary reason to use an alternative is iOS support.<p><a href=""https:&#x2F;&#x2F;appthwack.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;appthwack.com&#x2F;</a><p><a href=""http:&#x2F;&#x2F;keynote.com&#x2F;solutions&#x2F;testing&#x2F;mobile-testing"" rel=""nofollow"">http:&#x2F;&#x2F;keynote.com&#x2F;solutions&#x2F;testing&#x2F;mobile-testing</a><p><a href=""http:&#x2F;&#x2F;mobileportland.com&#x2F;device-lab"" rel=""nofollow"">http:&#x2F;&#x2F;mobileportland.com&#x2F;device-lab</a><p><a href=""http:&#x2F;&#x2F;perfectomobile.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;perfectomobile.com&#x2F;</a><p><a href=""http:&#x2F;&#x2F;testdroid.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;testdroid.com&#x2F;</a><p><a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;test-cloud"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;test-cloud</a><p>etc.",2015-07-09 15:45:30
292,"Xamarin offers a free starter edition[1] and you can request free full licenses for use with Open Source projects[2].<p>Getting started on your own project or doing an Open Source project that relies on Xamarin&#x27;s tools is perfectly possible. In fact we use such free licenses to produce OS X and iOS versions of the Tomboy note taking app[3].<p>[1] <a href=""https:&#x2F;&#x2F;store.xamarin.com"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com</a>
[2] <a href=""http:&#x2F;&#x2F;resources.xamarin.com&#x2F;open-source-contributor.html"" rel=""nofollow"">http:&#x2F;&#x2F;resources.xamarin.com&#x2F;open-source-contributor.html</a>
[3] <a href=""https:&#x2F;&#x2F;github.com&#x2F;tomboy-notes"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;tomboy-notes</a>",2015-07-09 15:56:30
293,"On a brief look, it appears that all of these choices (Including Amazon&#x27;s new one) only support Android devices and not iOS?<p>I believe Xamarin Test Cloud includes iOS, although I&#x27;m not certain if it integrates outside of the Xamarin framework.
<a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;test-cloud"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;test-cloud</a><p>Seems like a gap they should all be trying to fill.",2015-07-09 16:00:59
294,"My question is which shift do you follow then, the app bubble is there and it&#x27;s about to burst. Web is trying to build once deploy everywhere. It may not be ideal, but xamarin and other technologies don&#x27;t offer an easier solution.<p>I do agree that browsers should be reviewed and revised and trimmed down to the essentials with added functionality through encapsulated plugins or so, the browser tries to solve too much imho",2015-07-20 11:08:59
295,With xamarin you can.,2015-07-20 14:44:21
296,"Just a quick note after losing a lot of time today with this.  VirtualBox (all versions) are having issues starting develop environments under Windows 10 RTM and this is affecting a lot of people who are upgrading to Windows 10.<p>List of relevant VirtualBox dependent projects affected:
- vagrant
- boot2docker
- docker machine
- xamarin android player
- probably more...<p>Details:
- https:&#x2F;&#x2F;www.virtualbox.org&#x2F;ticket&#x2F;14040#comment:25
- https:&#x2F;&#x2F;github.com&#x2F;boot2docker&#x2F;boot2docker&#x2F;issues&#x2F;1015
- https:&#x2F;&#x2F;github.com&#x2F;mitchellh&#x2F;vagrant&#x2F;issues&#x2F;6059",2015-07-31 01:08:27
297,"Yes - both are under MIT<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;strongloop&#x2F;loopback-sdk-xamarin"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;strongloop&#x2F;loopback-sdk-xamarin</a>
<a href=""https:&#x2F;&#x2F;github.com&#x2F;strongloop&#x2F;loopback"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;strongloop&#x2F;loopback</a>",2015-08-05 15:44:08
298,"There are at least two such libraries for C# - XWT [1] and Xamarin [2] which AFAIR is based on XWT.<p>[1] <a href=""https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;xwt"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;xwt</a><p>[2] <a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;platform"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;platform</a>",2015-08-09 21:41:34
299,"I&#x27;ve used Ionic Framework[0], which is basically Cordova + Angular = Mobile Development.  If you know Angular, it&#x27;s a really good place to start, along with ngCordova[1].<p>If you don&#x27;t know Angular, then straight Cordova isn&#x27;t so bad.  I actually did some Google Glass development that way.  There are Cordova plugins for just about every mobile function you can imagine, with varying degrees of quality.  To learn them, I basically took sample projects and examined them, made a few changes, and checks to see what broke.<p>If you know C#, you can also look at Xamarin[2].  I don&#x27;t have any experience with it, though.<p>Edit: formatting<p>0. <a href=""http:&#x2F;&#x2F;ionicframework.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;ionicframework.com&#x2F;</a><p>1. <a href=""http:&#x2F;&#x2F;ngcordova.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;ngcordova.com&#x2F;</a><p>2. <a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>",2015-08-20 23:55:49
300,"why I use Windows 10 on my desktop for daily work:<p>- best hardware support, no driver problems for example with my graphics card or thinkpad dock<p>- updates etc. just work without any configurations or reading manuals<p>- Visual Studio is yet only available to Windows, whereas it evolves to the most compelling cross platform 
development tool (xamarin, universal apps, android and ios support)<p>- productive cortana search<p>- fast, even on old hardware<p>- the desktop is much more faster and fluent than e.g. gnome<p>- I don&#x27;t care sending over metrics to Microsoft, this is needed to make software better<p>- I can see edge evolve<p>I use linux vms on some severs where I need to scale things. But it has only one reason: fast deployment times because of smaller os images.",2015-08-27 08:16:33
301,"After reading this: <a href=""https:&#x2F;&#x2F;medium.com&#x2F;@harrycheung&#x2F;mobile-app-performance-redux-e512be94f976"" rel=""nofollow"">https:&#x2F;&#x2F;medium.com&#x2F;@harrycheung&#x2F;mobile-app-performance-redux...</a><p>I found the free packet a little bit to late in the market.<p>Anyone from RubyMotion dev maybe can explain way is so slow, and I should use it instead of robovm, swift, xamarin, etc.",2015-09-04 09:55:22
302,"Omnisharp[1] is build on top of Roslyn so as for now it supports only C# &#x2F; VB. As far as I know they are working on adding plugin support for it for non-Roslyn language so maybe in the future we will have F# plugin there ( actually, as far as I know, that&#x27;s MSFT plan for adding F# support in VS Code)<p>F# has had opensourced compiler[2] (written in F#) before it was cool in .Net stack and for most tooling things we are using FSharp.Compiler.Services[3] project - which basically provides all features of F# compiler (and much more) as normal .Net library. Projects like Visual F# Power Tools[4] and Xamarin Studio F# support[5] are using it to provide very interesting F# IDE features.<p>Since Vim, Emacs, Sublime and Atom (even though Ionide is written in F# and compiled to JS we can&#x27;t use all .Net libraries) don&#x27;t have direct access to .Net assemblies, community have created FsAutoComplete[6] project which is just command line wrapper around FSharp.Compiler.Services and works as &quot;standard I&#x2F;O server&quot; where we send requests (for example if user wants completion list) and get appropriate responses.<p>[1] <a href=""http:&#x2F;&#x2F;www.omnisharp.net&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.omnisharp.net&#x2F;</a><p>[2] <a href=""https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;visualfsharp"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;visualfsharp</a><p>[3] <a href=""https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;FSharp.Compiler.Service"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;FSharp.Compiler.Service</a><p>[4] <a href=""https:&#x2F;&#x2F;github.com&#x2F;fsprojects&#x2F;VisualFSharpPowerTools"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fsprojects&#x2F;VisualFSharpPowerTools</a><p>[5] <a href=""https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;xamarin-monodevelop-fsharp-addin"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;xamarin-monodevelop-fsharp-addin</a><p>[6] <a href=""https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;FsAutoComplete"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;FsAutoComplete</a>",2015-09-19 20:32:36
303,"i hear the same bullshit since the time when iphone was released ( and without apps support )<p>yet, there isn&#x27;t a single &quot;amazing&quot;  case of webapp.
( the same for xamarin, phonegap, cordova, name_your_cross_app_development_here )<p>i call it laziness to learn how to code native apps.<p>the only cross development that works, is for games ( almost all top 10 mobile games are in unreal or unity ( or cocosx ) )",2015-09-25 00:59:26
304,"San Francisco, CA | Full Time Onsite + Remote<p>#TheXamarinStory. We created Xamarin (<a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;</a>) because we knew there had to be a better way to build mobile apps. Were developers, so we know what developers want: a modern programming language, powerful tools, an efficient and delightful workflow and the power to create the best user experiences. We are on a mission to make it fast, easy and fun to build great mobile apps.<p>Systems Engineer (SF Onsite) <a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;ojxx0fw7"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;ojxx0fw7</a> Would you like to be part of the beginnings of Xamarin&#x27;s internal tech ops team? This is the challenge you have been waiting for! You will be heavily involved with both server and identity infrastructure automation, network operations, and infrastructure support and security.<p>Mobile Architect (SF Onsite + Remote)  <a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;ou6n0fwH"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;ou6n0fwH</a> We are looking for Senior Mobile Consultants to join our small Strategic Client Services team across the globe to help our clients realize the most out of their investment in our products (Xamarin Platform, TestCloud, and Insights).  Successful candidates are multidimensional developers and client facing leaders that love to architect, build and optimize exciting mobile apps across every single industry around the world.<p>Junior Mobile Development Trainer (Remote Contract-to-Perm) <a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;oLLxZfwM"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;oLLxZfwM</a> Do you have an ability to teach and inspire others regarding technical concepts and skills? Do you love C# and mobile development? Would you take pride in helping individuals and companies transform themselves and achieve their mobile strategy objectives? Yes to all - send us a note and tell us why - Xamarin University is excited to hear from you!<p>We have more jobs available in Boston, San Francisco and London including a few REMOTE positions! Complete list of all Xamarin opportunities (multiple locations): <a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;jobs"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;jobs</a><p>Interested to learn more, chat about what its like to work at Xamarin? My direct: paula@xamarin.com",2015-10-01 15:19:17
305,"This is not going after xamarin, it&#x27;s just a toy problem.",2015-10-14 18:59:11
306,"Xamarin, Inc. | San Francisco, CA | FULL-TIME, ON-SITE, REMOTE<p>Xamarin makes software to help you build &amp; design a mobile app using our cross-platform development software which simplifies mobile application creation.<p>I&#x27;m looking for a full time Customer Success Engineer that is familiar with C# or iOS&#x2F;Android Development. CSEs are responsible for Onboarding, In-depth product knowledge, product feedback to engineering team, and evangelism of new products&#x2F;APIs within accounts. Position description here: <a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;ocwA0fw2"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;ocwA0fw2</a><p>Come join us! It&#x27;s a great team; we like to have fun, and work hard too.",2015-11-02 18:09:16
307,"SRXP.com | C# &#x2F; Xamarin | Onsite in Amsterdam | Full Time<p>ABOUT: SRXP offers an efficient and user-friendly solution to digitise expense reporting. The tool consists of a mobile app and online portal and is innovated continuously. We sell to large Dutch and international corporates, such as Bugaboo, Randstad, and CheapTickets.
The team consists now of 15 members and is growing quickly. Our office is situated at Amsterdam Science Park. We offer flat hierarchy, good salary, organised lunches, and a professional and fun team. Successes are celebrated every Friday with some drinks.<p>JOB: We are looking for an experienced C# developer who is eager to start as soon as possible at our company. We have a lot of cool features lined-up that that we want to release quickly so were looking for someone who wants to work at least 32 hours a week. Also our new designer just started, so we are also on the verge of a complete redesign.
We have just started to work with Xamarin to release more quickly across all platforms (Android, iOS, and Windows Phone). Other tools we work with are AWS, Git, Bitbucket, and JIRA.
Our app developers are expected to think proactively about the user-friendliness of the apps as well. Taking initiative to introduce new features is highly appreciated.<p>More info: <a href=""http:&#x2F;&#x2F;www.srxp.com&#x2F;company&#x2F;jobs&#x2F;xamarin-developer&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.srxp.com&#x2F;company&#x2F;jobs&#x2F;xamarin-developer&#x2F;</a>",2015-11-02 18:13:01
308,"&gt; Also, Mono is licensed under the LGPL and Xamarin&#x27;s interpretation of that license precludes using the runtime in a closed-source program without a alternative license from them<p>Citation?  I&#x27;ve never heard anyone interpret the GPL and LGPL as the same.<p>Embedding mono is different than using mono.  <a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;licensing"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;licensing</a>",2015-11-03 12:20:55
309,"&gt; Don&#x27;t we have enough cross platform dev kits anyways?<p>Absolutely not. Right now the choices are very, very small for the platforms you&#x27;d actually want to use. React-native, before Flutter, was the only one (that I know of at least) that uses real, native components but uses a different language for orchestrating them.<p>Beyond that everything else is either &quot;shove html in a web view&quot; or the xamarin approach which, and please correct me if I&#x27;m wrong, is closer to the approach of QT in that it renders all its own controls.<p>We need more options in the first camp, the one where real native components are used but can use a common language across the mobile operating systems.<p>I only wish react-native and this supported Windows Phone. It&#x27;s such an awesome OS but no one will ever use it because of the lack of apps :(",2015-11-06 15:30:00
310,"Beyond that everything else is either &quot;shove html in a web view&quot; or the xamarin approach which, and please correct me if I&#x27;m wrong, is closer to the approach of QT in that it renders all its own controls.<p>Xamarin uses native components, in a similar manner to react-native. (Or more accurately, the other way round, Xamarin pre-dating react-native.)<p>I also wish react-native or NativeScript would actually provide&#x2F;finish Windows Mobile&#x2F;UWP support, but I&#x27;m not currently holding my breath. (That said, at least Windows supports JS as a native build stack so maybe you don&#x27;t really need react-native&#x2F;NativeScript to support Windows, you just need some glue scripts...)",2015-11-06 18:02:53
311,"Actually this is just applying for a free copy, and you must be an existing ios&#x2F;android&#x2F;steam&#x2F;wii developer with at least one already-published title, and they are manually processing the applications.  Nice initiative but not as nice as it could be.<p><pre><code>    Thank you!

    Your form has been submitted.

    Due to very high interest in this offer, we 
    anticipate completing review of your application 
    within 2-3 business days. If you have any questions, 
    please don&#x27;t hesitate to reach out to us at 
    hello@xamarin.com.

    We cant wait to see what you create!</code></pre>",2015-12-16 13:34:22
312,"I&#x27;m wondering why doesn&#x27;t Google ditch Java entirely and create something like XobotOS[1]. I know it wouldn&#x27;t be a popular move but at least the devs will get a decent language to use (C#) and users will have a better performing OS[2]<p>[1]: <a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;XobotOS"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;XobotOS</a>
 [2]: <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;</a>",2016-01-06 09:02:23
313,"the comparison between dalvik &amp; xamarin is not that interesting anymore (it was in 2012 though). It would be interesting to remake this bench.<p>Why doesn&#x27;t Google ditch java ?<p>Because such a switch would be very costly and there are many more cost effective ways to improve the platform (like for example databinding).<p>I also doubt that Google would choose a language controlled by Microsoft, they had enough trouble with the java lawsuit..<p><i>if</i> the rumors of the merge of Android &amp; ChromeOS are true, maybe this will be accompanied with with a big framework change ?  
It will depend on how this plan materialize exactly but that would be the right time for that.",2016-01-06 13:43:21
314,"Xamarin Starter Edition is free. There are some tough app size restrictions but apparently they want developers to at least be able to kick the tires!<p><a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;starter"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;starter</a>",2016-01-06 17:38:33
315,If you are coming from .net look into xamarin else XCode is the way to go,2016-01-26 17:48:01
316,"if you want multiplatform support (or just really like c#&#x2F;VS), xamarin can be a good choice for an hobby app.<p>Otherwise, Kotlin borrows many niceties with c# and allows you to directly use the platform APIs.",2016-01-28 13:24:07
317,"Off Base Productions - <a href=""http:&#x2F;&#x2F;www.offbaseproductions.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.offbaseproductions.com</a> - San Francisco, ONSITE<p>We are seeking a skilled Xamarin developer to work on mobile apps in the games industry. The applications are for marketing and informational executions in support of industry publishers. This is a contract-to-hire position based in San Francisco with an immediate opening.<p>As the second native developer on the team, you would have a great deal of influence on the direction of these projects and our future work.<p>More information is available at our Xamarin Forums post: <a href=""http:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;60058&#x2F;xamarin-developer-needed-san-francisco-ca"" rel=""nofollow"">http:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;60058&#x2F;xamarin-developer...</a> - Contact cogwheel@offbaseproductions.com if you&#x27;re interested.",2016-02-01 20:45:22
318,"D.<p>* C&#x2F;C++ like familiar syntax.
 * as fast as C++ (faster in some, slower in others)
 * type inference (auto keyword)
 * Garbage collected language by default.
 * Multiple compiler implementation (DMD, GDC, LDC)
 * Debugging symbol support
 * Package management with versioning and pkg repo
 * IDE&#x2F;Editor support - Visual studio&#x2F;xamarin&#x2F;emacs
 * Very easy C FFI
 * compile type function evaluation
 * meta programming
 * The concurrency story is more &quot;mainstream&quot; than Go&#x27;s (no  &quot;goroutine&quot; and other fancy stuff).
 * Multiple new books on the topic<p>D has a lot going for it, except for breathless fans :) (not knocking breathless fans here. D can use some)",2016-02-03 21:43:20
319,"Here is a blog post from the creator of this demo:<p><a href=""http:&#x2F;&#x2F;praeclarum.org&#x2F;post&#x2F;132881570743&#x2F;live-coding-with-xamarin-ios"" rel=""nofollow"">http:&#x2F;&#x2F;praeclarum.org&#x2F;post&#x2F;132881570743&#x2F;live-coding-with-xam...</a><p>There is also a demo using F#:<p><a href=""https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bbSawlDetOU"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bbSawlDetOU</a>",2016-02-08 15:27:55
320,"Easiest way to ease yourself into ASP.NET programming on a Mac is probably to use Xamarin Studio:<p><a href=""http:&#x2F;&#x2F;lastexitcode.com&#x2F;blog&#x2F;2016&#x2F;01&#x2F;01&#x2F;DNXSupportInXamarinStudio&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;lastexitcode.com&#x2F;blog&#x2F;2016&#x2F;01&#x2F;01&#x2F;DNXSupportInXamarinS...</a><p>It&#x27;s free too (use the download link at the end of the page):<p><a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;studio"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;studio</a>",2016-02-18 23:14:38
321,"Wow! Congratulations Nat Friedman and Miguel de Icaza (of Ximian fame). I remember reading this blogpost like it was yesterday: <a href=""http:&#x2F;&#x2F;nat.org&#x2F;blog&#x2F;2011&#x2F;05&#x2F;xamarin&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;nat.org&#x2F;blog&#x2F;2011&#x2F;05&#x2F;xamarin&#x2F;</a>",2016-02-24 19:11:42
322,"There is already a free option of Xamarin for students.[1] Earlier there used to be a separate application process but now it is rolled into DreamSpark<p>[1]<a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;student"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;student</a>",2016-02-24 19:30:38
323,I hope they do. I&#x27;m pretty sure that pricing is the key factor that is stopping xamarin from being way more popular,2016-02-24 19:36:22
324,"There&#x27;s also the &quot;Starter Edition&quot; for everyone else:<p><a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;starter"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;starter</a>",2016-02-24 19:38:30
325,How long before Apple kicks them out of the apple store? I thought Apple always had a policy of limited tolerance toward xamarin (after having banned them once). Isn&#x27;t them becoming MSFT a <i>casus belli</i>?,2016-02-24 19:52:22
326,Whats .net core got to do with xamarin.forms<p>Xamarin.forms has nothing to do with winforms.<p>It&#x27;s a cross platform mobile UI library.,2016-02-24 20:24:32
327,"Very HUGE, now microsoft can put ads on xamarin software!",2016-02-24 21:18:28
328,"Relevant <a href=""http:&#x2F;&#x2F;www.estaun.net&#x2F;blog&#x2F;some-thoughts-after-almost-a-year-of-real-xamarin-use&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.estaun.net&#x2F;blog&#x2F;some-thoughts-after-almost-a-year...</a>",2016-02-24 21:59:16
329,"Both points are endemic of smaller and newer companies (does xamarin still qualify?), poor legacy and deprecation strategies &#x2F; product roadmap, bad pricing structure. I think Microsoft can aid in both categories.",2016-02-24 22:50:29
330,"I hope this means visual studio integration comes for free. 
As a paid indie developer for xamarin, being vs integration not included in indie license, was the worst thing about xamarin for me.<p>for the issue in uservoice 2700votes ATM:<a href=""https:&#x2F;&#x2F;xamarin.uservoice.com&#x2F;forums&#x2F;234640-xamarin-suggestions&#x2F;suggestions&#x2F;3682605-visual-studio-support-at-the-indie-level"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.uservoice.com&#x2F;forums&#x2F;234640-xamarin-suggesti...</a>",2016-02-24 23:23:44
331,"You may be thinking of <a href=""http:&#x2F;&#x2F;tirania.org&#x2F;blog&#x2F;archive&#x2F;2014&#x2F;Apr-09.html"" rel=""nofollow"">http:&#x2F;&#x2F;tirania.org&#x2F;blog&#x2F;archive&#x2F;2014&#x2F;Apr-09.html</a><p>and <a href=""http:&#x2F;&#x2F;www.pcworld.com&#x2F;article&#x2F;2847032&#x2F;xamarin-integrates-with-free-visual-studio-community-to-let-developers-build-android-ios-apps.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.pcworld.com&#x2F;article&#x2F;2847032&#x2F;xamarin-integrates-wi...</a>",2016-02-24 23:24:07
332,"I don&#x27;t, I&#x27;ve written a prototype for my lib a year ago in C# and  probably have that lying around somewhere but since then we&#x27;ve ported it to C++ and done heavy refactoring&#x2F;development - I could probably spend some time and try to get that prototype working on JSIL but I need to see how the xamarin story plays out before I invest significant time into this.<p>IIRC LLILC is ways off from actually being usable as a static compiler and you&#x27;ll still have to figure out how to ship a runtime and do GC in asm.js (realistically can&#x27;t) and not to mention it&#x27;s single threaded so it&#x27;s a question if you can even get CoreCLR to run in such enviroment without heavy modifications.<p>It would be huge if we could just write everything in C# (frontend&#x2F;lib and backend) but I don&#x27;t see this realistically being possible for at least two years given the development pace of webasm.",2016-02-25 00:53:08
333,"It will be interesting to see what happens to RoboVM which allows you to develop iOS and Android application using Java with shared code base. (Similar to what Xamarin does with C#) With third party JavaFX implementation even shared GUI code is possible with RoboVM.<p>RoboVM was acquired by Xamarin in Oct. 2015 (<a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;pr&#x2F;xamarin-acquires-robovm"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;pr&#x2F;xamarin-acquires-robovm</a>)",2016-02-25 05:33:13
334,"i guess it depends on what one means by headaches.  mono on linux has never been a significant interest for xamarin, and core-clr is nowhere near production ready.<p>maybe if jetbrains&#x27; project rider gains traction and core-clr and&#x2F;or mono-on-linux matures it will be a broadly appealing option.",2016-02-25 15:59:01
335,"Yes, the most noticeable differences are implemented. But this is very a superficial look. From the developer&#x27;s page:<p><a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;forms"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;forms</a><p>Xamarin.Forms is best for:
 Apps that require little platform-specific functionality<p>Xamarin.iOS &amp; Xamarin.Android are best for:
 Apps with interactions that require native behavior",2016-02-26 00:29:36
336,That&#x27;s no different than appcellerator or xamarin though. And in the case where you <i>are</i> just using embedded webviews you can easily write native code alongside them. Cordova is written in objective-c and is easy to understand.,2016-02-27 02:26:50
337,"TL;DR here: <a href=""https:&#x2F;&#x2F;github.com&#x2F;simonebrunozzi&#x2F;MNMN&#x2F;blob&#x2F;master&#x2F;Weekly-Summaries&#x2F;2016-10.md#3-microsoft-acquires-xamarin"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;simonebrunozzi&#x2F;MNMN&#x2F;blob&#x2F;master&#x2F;Weekly-Su...</a>",2016-02-29 05:45:33
338,"----------------------<p>New York, NY | Good Uncle | Full Stack Javascript Engineer | Full Time Onsite<p>Were looking for a full-stack Javascript engineer to help us build out mobile, web, and backend applications in Js. We believe in:<p>* ES6<p>* BDD<p>* Scrum<p>* CI&#x2F;CD<p>* Documenting all the things.<p>* Open-sourcing as much as possible.<p>* Under-promising and over-delivering.<p>As a Js engineer, youll be working up and down the stack. Front-end single-page-applications in Angular, backend microservices in Node.js, and mobile apps using React Native. We need someone who is comfortable in Javascript regardless of the context. Experience in particular frameworks is not required; but a desire to learn quickly on the job is!<p>Here&#x27;s the full job description: <a href=""https:&#x2F;&#x2F;goo.gl&#x2F;DKgM8F"" rel=""nofollow"">https:&#x2F;&#x2F;goo.gl&#x2F;DKgM8F</a><p>Please email me at malcolm@gooduncle.com if you&#x27;re interested.<p>----------------------<p>Keywords: javascript, js, node, node.js, nodejs, gulp, gulpjs, grunt, express, expressjs, restify, hapi, yeoman, angular, angularjs, ember, react, react native, derby, backbone, phonegap, titanium, xamarin, cordova, es6, es2015, html, css, css3, knockout, jquery, mootools, bootstrap, foundation, mongo, mongodb, dynamodb, sqs, ec2, neo4j, rabbitmq, aws, linode, digital ocean, mocha, jasmine, should, promises, let, var, docker, containers, codeship, travis, manhattan, brooklyn, queens, staten, nyc, funded",2016-03-01 15:24:57
339,"Technical Lead, Xamarin Insights (<a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;insights"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;insights</a>)<p>Side Projects:
<a href=""https:&#x2F;&#x2F;github.com&#x2F;skizzehq&#x2F;skizze"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;skizzehq&#x2F;skizze</a> - High-throughput probalistic data structure service. Also working on it&#x27;s Golang and Node.js client bindings (see the org.)<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;njpatel&#x2F;grpcc"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;njpatel&#x2F;grpcc</a> - a nice-to-use gRPC CLI for testing&#x2F;debugging gRPC services<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;njpatel&#x2F;HiveKit"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;njpatel&#x2F;HiveKit</a> - a British gas Hive Heating -&gt; HomeKit bridge<p>Also working on another little utility for devs around sending files between machines, should be out by the weekend!",2016-03-08 10:34:17
340,"hope they port the full thing to linux (i mean xamarin studio, not visual studio)<p>i was kinda always turned off, that xamarin treated linux as a second class citizen",2016-03-31 15:57:38
341,"You can download Xamarin Studio for OS X or Visual Studio with Xamarin here <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;download"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;download</a>",2016-03-31 15:59:21
342,"This is cool. They updated the pricing page: <a href=""https:&#x2F;&#x2F;store.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a>. Hint, it&#x27;s free.",2016-03-31 16:03:48
343,"&gt; &quot;Microsoft will also be open sourcing the Xamarin SDK over the next few months.&quot; ... &quot;Included in this open sourcing is the Xamarin Forms library that provides a cross-platform toolkit for building user interfaces.&quot;<p>This is great news! For those that aren&#x27;t familiar...<p><a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms</a>",2016-03-31 16:05:23
344,"Right now xamarin is offered &quot;for free&quot; in the vs2015 install but the catch is that it only allows making apps under a certain size (and no xamarin forms), still requiring the pricy offers for the full functionality.
Now the article (or perhaps even microsoft) is just vague with this whole &quot;integrated in visual studio&quot; stuff.
For all we know they could still require a license for anything that aren&#x27;t really small apps.<p>I&#x27;d like to figure out if this is going to be the case or if there will be a way for even hobbist users to do something useful with xamarin with the new stuff, there&#x27;s not enough info to know right now though",2016-03-31 16:12:45
345,"<a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;tvos&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;tvos&#x2F;</a>",2016-03-31 16:13:50
346,"At my previous job, mobile projects were all done in xamarin (after like 2013&#x2F;14 or so) and the developers who did those projects raved about it, often. If I were going to make a mobile app right now, I would definitely use it. However, I&#x27;m much more at home in C# than I am javascript. To each their own.",2016-03-31 16:13:50
347,so should you use react-native or xamarin now?<p>how much &#x27;write-once-run-everywhere&#x27; is available in xamarin vs react-native?<p>I&#x27;ve long avoided .net and c# but now I&#x27;m getting interested because these things are becoming open source.,2016-03-31 16:18:34
348,We&#x27;ll give you a full refund. Drop a note to hello@xamarin.com.,2016-03-31 16:20:13
349,"The thing that makes me most excited about microsoft buying xamarin, is I have high hopes that mono + core will improve.  While libraries are being ported, there&#x27;s still a bunch of dependencies on 4.5, which I understand dnx uses mono for.  I&#x27;ve wasted several hours trying to deploy my MVC app to a linux server only to learn that the fix is to downgrade the version of mono i&#x27;m using :(",2016-03-31 16:26:04
350,I think you can still download xamarin studio.,2016-03-31 16:28:35
351,"tvOS has been supported since October: <a href=""https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;52477&#x2F;xamarin-ios-9-3-preview-for-ios-9-1-tvos-9-0-and-watchos-2-0"" rel=""nofollow"">https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;52477&#x2F;xamarin-ios-9-3-...</a>",2016-03-31 16:41:03
352,"The great thing about Xamarin Forms is you can use Dependency Injection [1] to access the Native features.
I started with Xamarin Forms without any pre-knowledge of iOS or Android development. I use Xamarin Forms on a daily basis and share 99% of my code.<p>[1] <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;xamarin-forms&#x2F;dependency-service&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;xamarin-forms&#x2F;dependenc...</a>",2016-03-31 16:47:41
353,"Thanks for the kudos everyone! This is a very exciting day for those of us who have been working on Mono and Xamarin for many years.<p>We have some more details on our blog:
<a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-for-all&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-for-all&#x2F;</a>",2016-03-31 17:20:32
354,"There are some good tutorials about Xamarin Forms, e.g. <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;xamarin-forms&#x2F;getting-started&#x2F;introduction-to-xamarin-forms&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;xamarin-forms&#x2F;getting-s...</a>.<p>Xamarin Forms Labs is a great open source project for controls and services using Xamarin Forms: <a href=""https:&#x2F;&#x2F;github.com&#x2F;XLabs&#x2F;Xamarin-Forms-Labs"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;XLabs&#x2F;Xamarin-Forms-Labs</a>",2016-03-31 19:02:46
355,"I&#x27;m leading a small team in building an ionic app right now.<p>The edge that cordova&#x2F;phonegap&#x2F;ionic will retain is the HTML and CSS part. As well as, at least for a little while, a more robust plugin ecosystem.  Though that second one will change VERY rapidly.<p>The other developers on my team are very much frontend &amp; CSS types.<p>I would be too much of a bottleneck if I were the only developer able to write the code for the app.<p>If xamarin were free when I started, I may have given it more time in evaluation, but at the end of the day, I think that the choice would have remained ionic.<p>Even react-native isn&#x27;t ready yet if you&#x27;re a windows based shop. But maybe that&#x27;s come along in the last couple  months too.",2016-03-31 19:37:01
356,"Honestly, I think it still has its place.<p>HTML+CSS means we don&#x27;t have to retrain our web developers but can still produce work for our clients that meets their needs.<p>Personally,  I&#x27;d like to go more native and xamarin could enable that, but in consideration for the team holistically, HTML&amp;CSS&amp;js was the way to go.",2016-03-31 19:40:07
357,"Incidentally, JetBrains is starting out with Project Rider (a C# IDE).<p>I&#x27;ve been working professionally with Xamarin for the past month, honestly I&#x27;m shocked how half-baked Xamarin Studio is, both in terms of stability and features. (Since we develop for iOS, we use Macs and VS is not an option).<p>Of course now that Microsoft has stepped in all the way, things may turn around, but my feeling is that the best window of opportunity for JetBrains would be to provide compelling Xamarin tooling on non-Windows platforms. That&#x27;s the weak spot of their mammoth competitor as far as C# goes<p><a href=""https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;62250&#x2F;vote-for-project-rider-xamarin-project-support"" rel=""nofollow"">https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;62250&#x2F;vote-for-project...</a><p><a href=""https:&#x2F;&#x2F;youtrack.jetbrains.com&#x2F;oauth?state=%2Fissue%2FRIDER-618"" rel=""nofollow"">https:&#x2F;&#x2F;youtrack.jetbrains.com&#x2F;oauth?state=%2Fissue%2FRIDER-...</a>",2016-03-31 20:12:11
358,"That&#x27;s what Xamarin.Forms (<a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms</a>) does, for iOS, Android and UWP (desktop, mobile, xbox). My preference is still to go the native UI route though. If you take an MVVM approach, you&#x27;ll naturally keep the logic in the shared code - the models and viewmodels - and you then can build views specifically for each platform and bind them on.",2016-03-31 22:59:02
359,"You could have hooked a Mac up to Visual Studio for building and Deploying Xamarin apps. I used to have a Mac mini on my desk for this.<p>Here&#x27;s the instructions btw.
<a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;getting_started&#x2F;installation&#x2F;windows&#x2F;connecting-to-mac&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;getting_started&#x2F;ins...</a>",2016-04-01 03:53:27
360,"&gt; Then why is it excluded as an option for Xamarin.Forms or iOS&#x2F;Android projects in Studio?<p>Try the preview version (6.0) where F# is enabled for those project types as well:<p><a href=""https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;53121&#x2F;preview-release-xamarin-studio-6-0-with-roslyn-support"" rel=""nofollow"">https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;53121&#x2F;preview-release-...</a>",2016-04-01 04:32:45
361,What would be great is to be able to also run VB on xamarin,2016-04-01 06:55:30
362,"A shame :(<p>I wonder what your thougts are on this - personally ofc. - you probably thought about it at some point given your work on moonlight and xamarin. Even the MS implementation was ported to osx, you could strip codec&#x2F;DRM stuff - you could get a fully featured GUI toolkit native to .NET - a <i>lot</i> of work went in to that before Microsoft pulled the plug - now that it&#x27;s laying dead and new MS OSS trend it doesn&#x27;t seem that far fetched that they could OSS it.",2016-04-02 15:39:36
363,"Does anyone know how that compares to the Xamarin Player? <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;android-player"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;android-player</a>",2016-04-07 19:38:03
364,"I recently came across this situation when attempting to hack on Keepass2Android [0], a Keepass client for Android. It was written with Xamarin, which was a closed-source framework at the time. Having to download and use software with a 30-day trial to hack on an open-source project seemed wrong.<p>Now that the Xamarin SDK is open-source[1] it looks like it&#x27;s moving towards being freed, which I think is a good thing. That said, I&#x27;m not sure the IDE is available on Linux yet, so I guess it&#x27;s still relying on non-free software.<p>[0] <a href=""https:&#x2F;&#x2F;keepass2android.codeplex.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;keepass2android.codeplex.com&#x2F;</a><p>[1] <a href=""http:&#x2F;&#x2F;arstechnica.com&#x2F;information-technology&#x2F;2016&#x2F;03&#x2F;xamarin-now-free-in-visual-studio&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;arstechnica.com&#x2F;information-technology&#x2F;2016&#x2F;03&#x2F;xamari...</a>",2016-04-10 03:13:26
365,"Then I guess you didn&#x27;t click on the documentation link at the top of the roboVM page.<p><i>Why RoboVM?
We love mobile. We love the Java ecosystem. If you feel like we do, you will love RoboVM:<p>Create truly native mobile apps for iOS and Android.
Use libraries, tools and languages from the vast Java ecosystem.
Share code between platforms.</i><p>It seems to be an alternative to xamarin focused on Java or at least the JVM.",2016-04-15 14:00:43
366,That&#x27;s JNI pain + C++ pain (this is coming from a guy who just did a C++ project full time for &gt;year - C# and C++ aren&#x27;t in the same league when it comes to productivity) - and C++ has no access to android java api - xamarin is just a whole different kind of solution to this - you can literally have all code in one language across all platforms - C++ can&#x27;t do this without a custom UI like QT,2016-04-15 17:36:26
367,"There is some traction with being able to use Swift for android development.  Then why bother with xamarin at that point :)<p>Port to android in swift code base:
<a href=""https:&#x2F;&#x2F;github.com&#x2F;apple&#x2F;swift&#x2F;pull&#x2F;1442"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;apple&#x2F;swift&#x2F;pull&#x2F;1442</a>",2016-04-18 17:58:46
368,"It has been super exciting watching this all unfold over the last year, for those wondering where to get started in the new world of .NET open source - start here:<p>.NET CLR Managed Runtime - <a href=""https:&#x2F;&#x2F;gitter.im&#x2F;dotnet&#x2F;coreclr"" rel=""nofollow"">https:&#x2F;&#x2F;gitter.im&#x2F;dotnet&#x2F;coreclr</a><p>.NET Framework - <a href=""https:&#x2F;&#x2F;gitter.im&#x2F;dotnet&#x2F;corefx"" rel=""nofollow"">https:&#x2F;&#x2F;gitter.im&#x2F;dotnet&#x2F;corefx</a><p>.NET Compiler as a Service (&quot;Roslyn&quot;) - <a href=""https:&#x2F;&#x2F;gitter.im&#x2F;dotnet&#x2F;roslyn"" rel=""nofollow"">https:&#x2F;&#x2F;gitter.im&#x2F;dotnet&#x2F;roslyn</a><p>.NET Orleans Actor Framework - <a href=""https:&#x2F;&#x2F;gitter.im&#x2F;dotnet&#x2F;orleans"" rel=""nofollow"">https:&#x2F;&#x2F;gitter.im&#x2F;dotnet&#x2F;orleans</a><p>Mono Framework - <a href=""https:&#x2F;&#x2F;gitter.im&#x2F;mono&#x2F;mono"" rel=""nofollow"">https:&#x2F;&#x2F;gitter.im&#x2F;mono&#x2F;mono</a><p>Xamarin iOS, Watch, Mac Bindings and Framework - <a href=""https:&#x2F;&#x2F;gitter.im&#x2F;xamarin&#x2F;xamarin-macios"" rel=""nofollow"">https:&#x2F;&#x2F;gitter.im&#x2F;xamarin&#x2F;xamarin-macios</a><p>Xamarin Android Bindings and Framework - <a href=""https:&#x2F;&#x2F;gitter.im&#x2F;xamarin&#x2F;xamarin-android"" rel=""nofollow"">https:&#x2F;&#x2F;gitter.im&#x2F;xamarin&#x2F;xamarin-android</a><p>Everything is licensed under the MIT license w&#x2F;patent pledges.",2016-04-27 15:17:30
369,"Depends on how you learn. Some learn by being around others, social interaction, asking questions and absorbing knowledge. It&#x27;s clear you fall into the latter category which likes to learn by diving right into the code, so here it is:<p>.NET CLR Managed Runtime - <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;coreclr"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;coreclr</a><p>.NET Framework - <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;corefx"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;corefx</a><p>.NET Compiler as a Service (&quot;Roslyn&quot;) - <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;roslyn"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;roslyn</a><p>.NET Orleans Actor Framework - <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;orleans"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;orleans</a><p>Mono Framework - <a href=""https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;mono"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;mono</a><p>Xamarin iOS, Watch, Mac Bindings and Framework - 
<a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-macios"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-macios</a><p>Xamarin Android Bindings and Framework - <a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-android"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-android</a>",2016-04-27 15:54:21
370,"Slack and GitHub are mentioned on their customers page.<p>There&#x27;s a list with some more companies here: <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers</a>",2016-04-27 16:59:10
371,I believe you can code in xamarin (for free) using visual studio 2015,2016-04-27 17:04:00
372,"Of course, you can use it. Tools are under products at <a href=""http:&#x2F;&#x2F;open.xamarin.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;open.xamarin.com&#x2F;</a><p>Microsoft has not open sourced Visual studio (VS) so similarly they will not open source Xamarin. You can also use .net framework without using VS. Just use command line tools",2016-04-27 17:43:45
373,Is linux support for xamarin.android planned?,2016-04-27 17:49:46
374,"I&#x27;m not sure how credible this is but there might be comming something.
<a href=""https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;programmerchat&#x2F;comments&#x2F;4dxpcp&#x2F;i_am_miguel_de_icaza_i_started_xamarin_mono_gnome&#x2F;d1vdfwz"" rel=""nofollow"">https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;programmerchat&#x2F;comments&#x2F;4dxpcp&#x2F;i_am...</a>",2016-04-27 18:30:11
375,"&gt; they open source to get PR, build a community; I hope that helps and it&#x27;s not their last resort<p>It&#x27;s not that: Microsoft acquired Xamarin earlier this year [1].<p>Xamarin is also holding a conference [2] right now, so I suspect this announcement is part of that.<p>Edit: Yes, it was. [3]<p>[1] <a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=11169215"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=11169215</a><p>[2] <a href=""https:&#x2F;&#x2F;evolve.xamarin.com&#x2F;live"" rel=""nofollow"">https:&#x2F;&#x2F;evolve.xamarin.com&#x2F;live</a><p>[3] <a href=""https:&#x2F;&#x2F;adtmag.com&#x2F;articles&#x2F;2016&#x2F;04&#x2F;27&#x2F;xamarin-evolve-16.aspx"" rel=""nofollow"">https:&#x2F;&#x2F;adtmag.com&#x2F;articles&#x2F;2016&#x2F;04&#x2F;27&#x2F;xamarin-evolve-16.asp...</a>",2016-04-27 19:04:46
376,"Recording and playing back input events, at least, shouldn&#x27;t be that expensive unless you&#x27;re emulating the entire stack up to the application. If the logic is written in some portable manner (Xamarin [1], etc.) you could just re-execute on the server with the same logic as the client. It requires a fair amount of discipline to keep everything deterministic, too. The real difficulty would be identifying the AI players from the humans; you&#x27;d basically have to recreate re-captcha&#x27;s humanity checkbox, and that&#x27;s still not a guarantee.<p>Or, identify that your business need is just to provide &#x27;some&#x27; sort of ranking and compare the user against their Facebook&#x2F;G+&#x2F;Twitter friends, who are probably less likely to cheat.<p>[1]: <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a>",2016-04-27 20:09:20
377,"There is a Xamarin Evolve 16 session shown free on their live channel starting in a few minutes at 5:30pm ET (Wed Apr 27):<p>&quot;Everyone Can Create Beautiful Apps with Material Design&quot;<p><a href=""https:&#x2F;&#x2F;evolve.xamarin.com&#x2F;live"" rel=""nofollow"">https:&#x2F;&#x2F;evolve.xamarin.com&#x2F;live</a>",2016-04-27 21:28:55
378,"I too hate cross-platform schlockware but it sounds like you are not familiar with the technology.<p>&quot;controls are mapped to platform-specific native user interface elements; for example, a Xamarin.Forms Entry becomes a UITextView on iOS, an EditText on Android, and a TextBox on Windows.&quot;<p><a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms</a>",2016-04-27 23:49:38
379,"<i>You&#x27;re talking about it like it&#x27;s some stupid ORM wrapper or wonky Widget UI library. It is not.</i><p>Again, <i>this</i> conversation is about Xamarin the mobile app studio. There is zero ambiguity in this, so it is perplexing that you keep bringing this up.<p><a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a><p>The context is the cross-platform app creation toolset. It generates extremely poor quality code, usually at a significantly increased development time (quite contrary to the promise). This is the case found by almost everyone who uses it, which is exactly why most teams have an Android project, fully using the tools of the platform, and an iOS project, fully using the tools of the platform. If Xamarin were heavily used, Windows Phone wouldn&#x27;t be so generally unsupported.",2016-04-28 23:41:43
380,"Not just slower , it does not fit to native look and feel, You are not going to believe me how much time I spent for fixing ridiculous font rendering for Android Studio, at the end I just gave up (in Ubuntu. I tried all kind of patches, TuxJdk, changing arguments for OpenJdk, OracleJdk , changing fontconfig, using infinality and anything you can imagine. nothing works). Right now I am switching to Xamarin,Perfect support from Microsoft (because it is important strategic product for Microsoft. I remember one year ago I predict Microsoft will buy xamarin and open source it).Bash is coming to Windows and lets be honest , none of java&#x27;s IDEs can compete with Visual Studio.<p>and one of the worst thing about google is they don&#x27;t deliverer feature they promise. I did a lot of NDK development. I use emacs for that , but eclipse was acceptable too. But I remember last year they promised full NDK support in android studio, but they haven&#x27;t introduced it yet. This is what absolutely  I will not tolerate from a company. If it is not ready , then don&#x27;t introduce it in development conference , if it is ready why it took so long (1 year ??? and still no news).<p>another point about Google is they don&#x27;t absolutely care about developers. Who are we kidding ? no one can deny for years developer begged google for new,faster,better Android emulator. But they did nothing. Right after Microsoft introduced their Hyper-V based android emulator which is fast as hell, They developed new virtual machine. (they use qt5 for its interface). Because they felt threatened by Microsoft.I promise if it wasn&#x27;t for that the old emulator was still there.",2016-04-29 19:18:19
381,"----------------------<p>New York, NY | Good Uncle | Full Stack Javascript Engineer | Full Time Onsite - 4 month contract<p>Were looking for a full-stack Javascript engineer to help us build out mobile, web, and backend applications in Js. We believe in:<p>* ES6<p>* BDD<p>* Scrum<p>* CI&#x2F;CD<p>* Documenting all the things.<p>* Open-sourcing as much as possible.<p>* Under-promising and over-delivering.<p>As a Js engineer, youll be working up and down the stack. Front-end single-page-applications in Angular, backend microservices in Node.js, and mobile apps using React Native. We need someone who is comfortable in Javascript regardless of the context. Experience in particular frameworks is not required; but a desire to learn quickly on the job is!<p>Here&#x27;s the full job description: <a href=""https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;1p2S0X086d4dQM5CmplGsqpzxaBeX7TlZ9jskJu4ZNv4&#x2F;edit?usp=sharing"" rel=""nofollow"">https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;1p2S0X086d4dQM5CmplGsqpzx...</a><p>Note: This is a 4 month contract position, and would require working on-site in NYC.<p>Please email me at malcolm@gooduncle.com if you&#x27;re interested.<p>----------------------<p>Keywords: javascript, js, node, node.js, nodejs, gulp, gulpjs, grunt, express, expressjs, restify, hapi, yeoman, angular, angularjs, ember, react, react native, derby, backbone, phonegap, titanium, xamarin, cordova, es6, es2015, html, css, css3, knockout, jquery, mootools, bootstrap, foundation, mongo, mongodb, dynamodb, sqs, ec2, neo4j, rabbitmq, aws, linode, digital ocean, mocha, jasmine, should, promises, let, var, docker, containers, codeship, travis, manhattan, brooklyn, queens, staten, nyc, funded",2016-05-04 21:12:09
382,"I am. But I as I do contracting and choose interesting projects I tend to be a generalist so my outlook is skewed.<p>If you were just starting out, I&#x27;d suggest you work with Xamarin to do your app development in, and Unity3d if you were doing games or 3d work (Though you could use monogame with xamarin if you were so inclined). But then again, my comfort zone is C#.<p>Android and iOS apps these days tend to look very similar, with the main difference being a soft back button for iOS and none for Android. Windows phone can look very different if you use the Metro design language but quite a few apps that I&#x27;ve used seem to be mostly ignoring it (admittedly niche ones) and looking like the big two.<p>Whatever developer you hire will be &quot;better&quot; (or at least more comfortable) at one platform than another.<p>Have you done your market research? Are you targeting a particular market that is likely to have one phone type rather than another? I&#x27;ve noticed that the different platforms tend to attract different types of people. App Annie is a good source on this market data though you&#x27;ll have to ignore the most-popular apps as you&#x27;re not going to be the next facebook&#x2F;ebay etc no matter how hard you try.",2016-05-05 21:02:03
383,"Nothing for GTK and desktop Cocoa, but they provide Xamarin.Forms for iOS&#x2F;Android&#x2F;WindowsPhone8&#x2F;UniversalWindows: <a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms</a>",2016-05-05 23:50:26
384,"Hey, Yavor on the Realm team here. A reactive database allows you to structure your code so that you &quot;react&quot; to changes in your data layer - you don&#x27;t have to re-run queries to get updates, because Realm updates all your data objects to point to the newest version of your data. Check out the sample code in your blog post: <a href=""https:&#x2F;&#x2F;realm.io&#x2F;news&#x2F;introducing-realm-xamarin"" rel=""nofollow"">https:&#x2F;&#x2F;realm.io&#x2F;news&#x2F;introducing-realm-xamarin</a>",2016-05-10 16:19:01
385,"I must say .net is a bit of an exception in this sad sight of microsoft&#x27;s decay. Pretty much everything they have done in the past 3 years in the .net space makes sense and is nice to Microsoft&#x27;s customers (open sourcing .net, finally delivering on platform-independence, visual studio community being pretty much a complete and fully functional IDE, buying and making xamarin free, etc).<p>For the other divisions. Windows has become an absolute shit show. Every time I go on the Azure portal I get lost. My xbox one is blowing like a leaf blower. They stopped developing Office 15 years ago (ah no, they changed the color from blue to green) and my surface pro is reminding me of my Windows 98 BSOD days.<p>Ha not, their mouses are still pretty decent.",2016-05-27 11:07:57
386,"https:&#x2F;&#x2F;channel9.msdn.com&#x2F;Events&#x2F;dotnetConf&#x2F;2016&#x2F;NET-Conf-Day-1-Keynote-Scott-Hunter<p>for those who does not want to watch the full video 
.NET standard- One standard library across all the platforms full .net framework,Xamarin,.NET Core 
c#,vb.net and F# support
standardise tooling across xamarin,VS code and VS- msbuild (project.json will be merged with csproj)",2016-06-08 04:15:02
387,"This is all I need usually:<p><pre><code>    sudo apt-key adv --keyserver hkp:&#x2F;&#x2F;keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
    echo &quot;deb http:&#x2F;&#x2F;download.mono-project.com&#x2F;repo&#x2F;debian wheezy main&quot; | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;mono-xamarin.list
    sudo apt-get install -y mono-complete fsharp monodevelop</code></pre>",2016-06-10 14:08:01
388,"Release notes [1] say: <i>This is a preview of the upcoming Xamarin Studio 6.1 release.</i><p>Is it already released?<p>[1] <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;releases&#x2F;studio&#x2F;xamarin.studio_6.1&#x2F;xamarin.studio_6.1&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;releases&#x2F;studio&#x2F;xamarin.studio...</a>",2016-06-10 15:53:14
389,"You must know how the UI work in both oses if you want to be capable of using xamarin efficently. Yeah, there is XamarinForms that tries to solve that problem, but it is very... bad, right now.",2016-06-12 14:18:23
390,"There is Omnisharp [1] - plugin for Atom, Brackets, Emacs, SublimeText, Vim and is built-in VisualStudio Code [2]. Also you may try Mono-develop&#x2F;Xamarin Studio [3] but it worth noting they were made especially for Mono. Both solutions are really pleasant to use and personally I prefer the second one since I use macOS&#x2F;Linux a lot.<p>[1]: <a href=""http:&#x2F;&#x2F;www.omnisharp.net&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.omnisharp.net&#x2F;</a><p>[2]: <a href=""https:&#x2F;&#x2F;code.visualstudio.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;code.visualstudio.com&#x2F;</a><p>[3]: <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;studio"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;studio</a>",2016-06-27 21:16:46
391,"yea, xamarin.forms targets UWP.<p>and looks like there&#x27;s a forms mac branch being somewhat worked on: <a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms&#x2F;tree&#x2F;mac"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms&#x2F;tree&#x2F;mac</a>",2016-06-27 22:44:24
392,"Thanks for point out this, I can explain more details here:
It&#x27;s easy to write apps in C language to support both android and ios platform if using libphone. Write once, target both.
There is a similar project xamarin but it use C# and it is IDE, libphone is just a library though with also some tools for platform resources generating and layout.",2016-06-30 07:34:10
393,"If you want cross platform that compiles down to native - and gives you the option to extend with native-specific functionality - then you can&#x27;t beat Xamarin - specifically Xamarin Forms.
<a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms</a>",2016-07-06 06:23:33
394,"because you can write&#x2F;try ios app (without recompilation, live too!), using Native iOS Libraries (UIKit, SceneKit, SpriteKit, Foundation, CoreImage) and .NET with xamarin (Xamarin.Forms, mscorlib, System.Core, FSharp.Core).<p>see the website <a href=""http:&#x2F;&#x2F;continuous.codes&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;continuous.codes&#x2F;</a> , it deserve a slow scroll.",2016-07-07 10:04:39
395,"I hear xamarin&#x27;s toolset compiles to multiple platforms, if you know csharp. kinda the route im going for my game.",2016-07-10 21:45:19
396,"I think it&#x27;s rather that the java and .net framework are pretty good out of the box. So there is only a need for additional framework for certain corner cases. And then some get bought by Microsoft and integrated out of the box, like the datavisualization libraries or xamarin.<p>JavaScript on the other side is a language that only its conceptor could love. All these frameworks are sort of required to be barely productive. Which is why you end up with these big frameworks to abstract the various browsers, introduce databinding, or add static typing.",2016-07-16 14:56:12
397,I&#x27;m not sure the point if I were going to develop an app today I would probably use xamarin because it could be developed a lot cheaper for both platforms.,2016-07-27 14:50:47
398,"Those are just webviews.<p>Nativescript, titanium, xamarin, or qt is where react native would be categorized with",2016-07-28 02:43:11
399,"Exactly, that is why they bought xamarin in first place. Xamarin was key product. They will push Xamarin as hard as they can in all platforms simultaneously and since they are biggest software company in planet, I see a bright future for Xamarin.",2016-08-05 22:16:56
400,"The important point is to be able to effectively use a single (non-JS ^) programming language for mobile, browser and server-side. Ideally, to cut down on the technologies folks would have to come up to speed on and allow them to go deep with a particular language. This is beyond isomorphic apps, though, these are included. So, F# can theoretically run on the server, in the browser (via Fable [1]) and on mobile (via Xamarin Studio [2]). Clojure has a similar story since JVM languages can run on Android mobile phones&#x2F;tablets and there is ClojureScipt [3]. These are just some examples of ones I am aware of. (I wonder if there is something like Fable for Swift?)<p>Is this a pipe dream, or is there real value to this approach?<p>^ Why non-JS? Mainly because I am interested in exploring other languages that can include statically typed, compiled languages.<p>[1] https:&#x2F;&#x2F;fsprojects.github.io&#x2F;Fable&#x2F;
[2] https:&#x2F;&#x2F;www.xamarin.com&#x2F;studio
[3] https:&#x2F;&#x2F;github.com&#x2F;clojure&#x2F;clojurescript<p>Edit: styling, grammar",2016-08-10 14:12:17
401,"In addition to the .net core push seems a likely candidate to unify things (xamarin, .net core in Linux, etc...)",2016-08-23 15:01:22
402,"There are plenty of options (all biased by personal opinion) for this task. Maybe one of these projects is a good fit for you (creating consistent uis should be easy with all of these).<p>- <a href=""https:&#x2F;&#x2F;crosswalk-project.org&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;crosswalk-project.org&#x2F;</a><p>- <a href=""https:&#x2F;&#x2F;cordova.apache.org&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;cordova.apache.org&#x2F;</a><p>- <a href=""https:&#x2F;&#x2F;kivy.org&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;kivy.org&#x2F;</a><p>- <a href=""https:&#x2F;&#x2F;www.nativescript.org&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.nativescript.org&#x2F;</a><p>- <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a><p>- <a href=""https:&#x2F;&#x2F;facebook.github.io&#x2F;react-native&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;facebook.github.io&#x2F;react-native&#x2F;</a><p>#<p>- <a href=""https:&#x2F;&#x2F;www.wxwidgets.org&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.wxwidgets.org&#x2F;</a><p>- <a href=""http:&#x2F;&#x2F;nwjs.io&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;nwjs.io&#x2F;</a><p>- <a href=""http:&#x2F;&#x2F;electron.atom.io&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;electron.atom.io&#x2F;</a>",2016-08-28 13:53:02
403,"Gtk# only suppports gtk2.<p>(well last beta release of gtk3 binding was released 2014-06-04, but lot of APIs are missing and buggy)<p>(Xamarin said that they would not going to port xamarin studio to gtk3)<p>since gtk2 doesn&#x27;t support hi-dpi scaling, I would not recommend it.",2016-08-28 23:11:35
404,"Xamarin, I reckon?[1]<p>[1]: <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a>",2016-09-12 19:36:19
405,"You mean, like Java, C++, C#, F#?<p><a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;platform"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;platform</a><p><a href=""https:&#x2F;&#x2F;software.intel.com&#x2F;en-us&#x2F;multi-os-engine"" rel=""nofollow"">https:&#x2F;&#x2F;software.intel.com&#x2F;en-us&#x2F;multi-os-engine</a>",2016-09-14 06:46:56
406,"I know Java since it was introduced in 1996 and had experience targeting J2ME, so learning Android wasn&#x27;t that complicated to me.<p>I own a few PacktPub books that I like, namely:<p><a href=""https:&#x2F;&#x2F;www.packtpub.com&#x2F;application-development&#x2F;asynchronous-android-programming-second-edition"" rel=""nofollow"">https:&#x2F;&#x2F;www.packtpub.com&#x2F;application-development&#x2F;asynchronou...</a><p><a href=""https:&#x2F;&#x2F;www.packtpub.com&#x2F;application-development&#x2F;android-application-development-cookbook-second-edition"" rel=""nofollow"">https:&#x2F;&#x2F;www.packtpub.com&#x2F;application-development&#x2F;android-app...</a><p><a href=""https:&#x2F;&#x2F;www.packtpub.com&#x2F;application-development&#x2F;android-database-programming"" rel=""nofollow"">https:&#x2F;&#x2F;www.packtpub.com&#x2F;application-development&#x2F;android-dat...</a><p><a href=""https:&#x2F;&#x2F;www.packtpub.com&#x2F;application-development&#x2F;android-ui-design"" rel=""nofollow"">https:&#x2F;&#x2F;www.packtpub.com&#x2F;application-development&#x2F;android-ui-...</a><p>I don&#x27;t know that book, so I cannot judge it, but it is important to try to use your interests as an idea for a possible app that you could use as learning process.<p>If you stay on Java side than using something like LibGDX will help on the game programing ideas. Or if you prefer to jump into the &quot;wonders&quot; of NDK, then something like SDL or Cocos2D-x.<p>For the Xamarin side, have you read the Petzold book?<p><a href=""https:&#x2F;&#x2F;blogs.msdn.microsoft.com&#x2F;microsoft_press&#x2F;2016&#x2F;03&#x2F;31&#x2F;free-ebook-creating-mobile-apps-with-xamarin-forms&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blogs.msdn.microsoft.com&#x2F;microsoft_press&#x2F;2016&#x2F;03&#x2F;31&#x2F;...</a><p>Regarding about using wanted programming languages, my experience with Turbo Pascal, Delphi, Oberon, Smalltalk and many other languages is that straying away from the true path of OS SDK supported languages usually ends in pain as the productivity gains get wasted battling interoperability issues, lack of tool support from the OS vendor and writing FFI bindings.<p>So nowadays although I dabble in lot of languages, for production code I only use the OS SDK supported languages.",2016-09-20 10:13:36
407,It&#x27;s the API definition that will be shared by .net Core&#x2F;full framework&#x2F;asp.net&#x2F;xamarin.,2016-09-26 17:51:14
408,"I believe Xamarin is now free post the MS acquisition with various parts and pieces even becoming open source:<p><a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-for-all&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-for-all&#x2F;</a>",2016-09-27 21:11:25
409,"I was actually looking here:
<a href=""https:&#x2F;&#x2F;store.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a><p>Apparently the free version has usage restrictions? I do consider free w&#x2F; Visual Studio Pro license not <i>really</i> free.<p>EDIT: The licensing pages are confusing but you&#x27;re right, my mistake.",2016-09-27 23:14:00
410,"Been coding in C# for several years now, I played with F# and it&#x27;s fun. question though....do you guys think it will be as a popular as C# or Java? you know &quot;first-class&quot; citizen(if I may say so) when it comes to writing business apps(desktop&#x2F;web&#x2F;mobile(xamarin-already supported)). :D",2016-10-11 06:23:02
411,"This says you can share 96% of the code base across platforms:<p><a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms</a>",2016-10-12 17:55:01
412,"The comparaison with JS is perfect. 
Like JS is the asm of the web ecosystem (no one wants to write its code just in JS, we generate it instead), default android and IOS way of programming have to be be generated.<p>Try Xamarin [0] or the newcomer flutter [1]. It&#x27;s such a pain in the ass to dev in raw android or raw ios, use multi platform sdks.<p>And if you start with xamarin, you can target windows phone too, even if nobody cares ;-)<p>[0] <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a>
[1] <a href=""https:&#x2F;&#x2F;flutter.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;flutter.io&#x2F;</a>",2016-10-13 11:45:35
413,"Depends on what do you want to achieve?<p>We utilize Cordova heavily in product I am working on, but more on a meta-layer, meaning, that user is able to create his simple application with drag-drop ui, see a preview in browser and then package it to a phone-installable file. We even had integrations for apparmor&#x2F;apperian, so that the user is able to upload the app to their corporate app management right away.<p>If I were to build a single app, I would go native.
Or xamarin, because I used it already, know how to get around its quirks, and like C# :)",2016-10-13 15:38:08
414,"It&#x27;s still limited in that it&#x27;s not a good choice if your app requires UI functionality that is very platform specific. I think that&#x27;s intentional - it isn&#x27;t intended to be the right solution for every application.<p>It&#x27;s still a good choice if your app mainly involves displaying lists and tables of text and images, and data entry forms.  The cross platform Map control works quite well too.<p>I don&#x27;t remember exactly what is different now from a year ago, but if you list a few of the limitations you faced, I can tell you if they still exist. A quick look at the Pages, Layouts, and Controls section of the Xamarin Forms page might tell you if they&#x27;ve added things that were missing last time you tried it: <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms</a>",2016-10-13 16:04:36
415,"Yeah I wish more people realized that C# + Xamarin tools (that Microsoft now owns &amp; is totally free with Visual Studio Community) making C# something that can take you cross-platform in the mobile space.<p><a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a><p>Also .NET Core now runs on Mac and Linux for the server OS code written in C#.<p>Then if you add Unity supporting C# on top of that for game&#x2F;dev and I really can say that we&#x27;re in a cross-platform world now :). But I am a bit biased since I work on these teams.",2016-10-26 19:00:38
416,"C# better than java, maybe but than Kotlin ? That&#x27;s a very subjective opinion.<p>Apps written in Xamarin and kotlin work very differently :<p>-with Xamarin you have to add the Xamarin runtine and depend on its integration. This brings several downsides : <a href=""http:&#x2F;&#x2F;www.slideshare.net&#x2F;KonstantinLoginov&#x2F;we-are-ditching-xamarin-why"" rel=""nofollow"">http:&#x2F;&#x2F;www.slideshare.net&#x2F;KonstantinLoginov&#x2F;we-are-ditching-...</a><p>-Kotlin outputs bytecode, so from the outside, it is just the same as any android app written in java. The output is a standard android app with one more library (the standard kotlin lib with all its base methods)",2016-11-12 12:33:33
417,"Yes, but only Xamarin, not xamarin forms.",2016-11-14 12:11:10
418,"If you are currently doing Xamarin development or are interested in learning more check out the <a href=""http:&#x2F;&#x2F;weeklyxamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;weeklyxamarin.com</a> newsletter.",2016-11-14 12:14:06
419,"We are waiting since years for a simple xamarin studio for linux, even just supporting only ubuntu and letting the other distro to manage the packages for them... The reality is it seems they don&#x27;t want at all to bring Xamarin on Linux, sadly Miguel was very clear about it in the years.",2016-11-14 12:20:31
420,"That&#x27;s not true anymore, Xamarin is now free for everyone, except larger companies, see <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-for-all&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-for-all&#x2F;</a>",2016-11-14 12:29:35
421,"I&#x27;ve used in production and experience was good. Xamarin Studio is more than enough for development &#x2F; debugging. Xamarin is very powerful, but usually people taking the wrong direction with Xamarin and using Xamarin.Forms. As like many other cross platform solutions Xamarin.Forms sucks. If you think making a native iOS application is easy with Swift, it is same with Xamarin too. When i develop applications with xamarin (desktop&#x2F;mobile) i usually look for java&#x2F;swift documentations or forums for my problems. This way i don&#x27;t need separate xamarin community. Because you can write the same code in c# easily. Please check my workflow, for any further questions, twitter: @umurgdk<p>Recommended workflow:
0. Never ever use Xamarin.Forms other than quick prototyping. If you develop applications with other cross-platform frameworks, you already know all of them sucks and Xamarin.Forms is not an exception.<p>1. Create PCL &#x2F; Shared project for your business logic (also your view models if you&#x27;re using MVVM architecture). Believe me most of your application is platform independent (except the view layer). Your api communication, storage operations all handled here. See 3rd article to how to make storage&#x2F;network platform independent.<p>2. Create native projects for each platform (iOS, Android, Windows) implement native views here (use xcode, android studio if you need visual designer). This part should be exactly the same as your swift&#x2F;java code. For iOS you&#x27;re just implementing an ApplicationDelegate class and UIViewControllers as same as your swift code. Same for Android part, nothing special to xamarin just implement your activity classes. At this level you have the full power of your native platform with one exception 3rd party native libraries. It&#x27;s possible to use (yes i used some swift&#x2F;java libraries for youtube player) them but really hard to integrate to your project, that part has to be improved and better documented.<p>3. Your shared code base need native features, for example storage implementations are totally different for each platform, or changing views (navigation) will be implemented differently for each platform. Since shared code base shouldn&#x27;t know anything about native platform. You should abstract these functionalities with interfaces. For example create a storage interface with methods like saving&#x2F;reading&#x2F;creating files. Another example might be network communication. Abstract it as an interface on your PCL and implement this interface in your native project with full control of your platform. Your shared code base only knows how to use that interface. And then each of your native projects should implement these interfaces. At this point dependency injection may help to register implementations easily. Actually that part is what makes you share your business logic. Writing idiomatic cocoa navigation code is much better than using any cross platform implementations, you have full control but in the same time your shared code base using them without knowing anything about the platform.",2016-11-14 14:12:46
422,This is different than your circumstance but back when I was recruiting I helped a Xamarin developer with no professional experience find a gig with a 95K base salary. It&#x27;s currently niche enough that people are willing to pay top dollar for anyone who can actually work in it. Another Xamarin developer I know consults for 150 an hour. (Although he&#x27;s probably one of if not the best xamarin guy in Chicago),2016-11-14 15:05:49
423,"Xamarin Native developer here,
I started off by trying to create a Pokemon Go Map app. Although I got off to a quick start, slowly it downed upon me that I started spending too much time finding fixes for Xamarin issues rather that programming. I used macbook as agent and visual studio as IDE. Sometimes the deployment would take 5 minutes! I then had to restart the agent to fix it. As a programmer I am rather a person who runs a code, change a little bit in code, then run it again. If I dont understand things I google it or find the documentation. Thats my way of learning things instead of reading through programming books.<p>For me Xamarin Native was slow and rigid. I highly doubt I could make &#x27;innovative&#x27; apps with Xamarin. Maybe it is okay for people who want simple things like a &quot;to-do app&quot; or somethign that fetches list of images and displays it.<p>I wanted more and found no solution for things I needed, so I gave up and started xcode (swift + some objective c).<p>And let me be clear here, if I had spent same amonut of time on xcode as xamarin I would have been iOS dev master :)<p>Things just works much better. You can do anything you imagine with Xcode and swift. With Xamarin its more like find whatever library is out there and try to create something by combining these. Too many bugs.<p>This is no sly dig on Xamarin or Microsoft as I use alot of MS products myself. I have also tried phonegap, react native etc. and Xamarin is the best when it comes to cross platform without a question, but none of these can match true native coding (xcode  swift&#x2F;objc)",2016-11-14 15:44:02
424,"Just one comment to bring up as many folks still don&#x27;t know, Xamarin is free for many developers along with Visual Studio Community edition, the full info is here in this announcement from March 2016: <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-for-all&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-for-all&#x2F;</a>",2016-11-14 17:29:12
425,"if the xamarin cross platform sdk maps closely to one mobile platform, how does make it intuitive for iOS developers?  Or are the classes aliased for each target platform?",2016-11-14 23:44:28
426,They&#x27;re integrating xamarin into visual studio. That&#x27;s pretty big no?,2016-11-16 15:53:27
427,Is the new xamarin going to be any less buggy?,2016-11-16 16:02:54
428,"I went to install it and it seems to be forcing me to download  another full Android SDK to a private location without the option the specifying the existing Android SDK location that I already have set up. A quick search show this as an open issue that is 5 years old <a href=""https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=859"" rel=""nofollow"">https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=859</a><p>I lost interest already.",2016-11-16 18:27:00
429,"We just released Workbooks 1.0 [0]. You can use it on both Windows and Mac, and run your code in a variety of platforms.<p>Try a Console workbook for something quite similar to (and in some ways more powerful than) the Visual Studio REPL.<p>Workbooks go beyond the REPL and can include rich content so that they can be saved and shared. But I use it every day for random REPL tasks that I used to use `csharp` for.<p>[0] <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;releases&#x2F;interactive&#x2F;interactive-1.0.0&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;releases&#x2F;interactive&#x2F;interacti...</a>",2016-11-16 19:26:03
430,"Thanks for playing with it! You cheated and went outside the scope of the VS REPL though. :-P<p>* On Windows, first evaluation can take a few seconds (and we&#x27;re working on that), but subsequent evaluations should feel instant. If that&#x27;s not the case, would love a bug filed so we can explore a bit more. Of course, there is the startup penalty of launching the Android app and potentially an Android emulator, but I assume you&#x27;re talking about evaluations <i>after</i> the workbook has connected.<p>* Agreed! Our NuGet functionality needs a lot of work, but our goal is to have it work as easily as it does in the IDE.<p>* I don&#x27;t personally know much about Android view XML, but creating new custom Activities or other Java subclasses at runtime is a significant technical challenge. We have a bug [0] to track it, if you want to subscribe to any updates. This is an unfortunate limitation on Android, for sure.<p>We don&#x27;t have a published roadmap at this time, but you can definitely expect to hear more about this tool in the future. We have a pretty frequent release cadence, too.<p>[0] <a href=""https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=45382"" rel=""nofollow"">https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=45382</a>",2016-11-16 21:45:45
431,"Hey,<p>Good catch! I will request that we add system requirements to out page. I am going to suggest they are added to <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;releases&#x2F;vs-mac&#x2F;preview&#x2F;vs-mac-preview1&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;releases&#x2F;vs-mac&#x2F;preview&#x2F;vs-mac...</a><p>Disclosure: I work at Microsoft on Xamarin",2016-11-17 04:41:35
432,"Actually they&#x27;ve released Xamarin Forms Previewer - <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;xamarin-forms&#x2F;xaml&#x2F;xaml-previewer&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;xamarin-forms&#x2F;xaml&#x2F;xaml...</a> It&#x27;s still a bit buggy but does the job in most cases. Also the latest version of Xamarin is way more stable.",2016-11-19 13:18:08
433,"In the blog post that&#x27;s an breakdown of ms project, yes. Used to show how ms is doing with open source? yes. because .net framework (and implementation of runtime,compiler&#x2F;blc) was owned by ms (mono is another implementation of the runtime&#x2F;compiler&#x2F;bcl).<p>But for some components is ok to contribute there:<p>- mono(xamarin) was already migrating to use open source components like the bcl (corefx) after the initial open source of code by ms. It&#x27;s like dont write two times the same stuff.<p>- coreclr: the .net core runtime<p>- corefx: the standard library (base class library like io etc), used by .net fw (win) and .net core and partially by mono<p>- roslyn: that&#x27;s the c#&#x2F;vb compiler, also mono is trying to reuse that<p>- cli: it&#x27;s the sdk for building projects. Can the project system changed? yes, but not needed now (.net core it&#x27;s boostrapping another xplat runtime so need tools). as a personal note, the cli team doesn an awesome job to make it easy to contribute<p>and some notes:<p>- asp.net is a web framework, it&#x27;s used a lot, nice ppl contribute. who like servicestack&#x2F;nancy&#x2F;suave, use that instead.<p>- fsharp (<a href=""http:&#x2F;&#x2F;fsharp.org&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;fsharp.org&#x2F;</a>) was and is already driven by community, and lang decision are in repo <a href=""https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;fslang-design"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;fslang-design</a> by community and lead by @dsyme<p>And you should also check dotnet foundation pulse and community projects (like Nancy&#x2F;Nunit&#x2F;Akka.net&#x2F;mbrace).<p>Lots of the work done by ms can be useful for others, see Kestrel server (damn fast) who can be used by other web projects like Suave (<a href=""https:&#x2F;&#x2F;github.com&#x2F;SuaveIO&#x2F;suave"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;SuaveIO&#x2F;suave</a> is a lib, not a framework :D)<p>- dnx was the predecessor of cli, and replaced by it (good job by aspnet team to boostrap xplat on netcore)",2016-11-24 08:49:20
434,"If I were going that route, I&#x27;d probably consider using monogame via xamarin",2016-11-26 22:51:25
435,"I installed VS2015 + xamarin + VS emulator for android, downloaded some samples, hit F5, and they all ran fine.<p>The tooling is actually pretty good.  Now the problem is a lot of the libraries I want to use are native android&#x2F;java which means doing a lot of C#&#x2F;java interop.",2016-12-14 15:08:34
436,"don&#x27;t learn xamarin. it&#x27;s a useless unmarketable skill. Nobody looks for xamarin devs, they look for platform specific devs",2016-12-14 15:49:41
437,"Other platforms like Codename One ( <a href=""https:&#x2F;&#x2F;www.codenameone.com&#x2F;blog&#x2F;comparing-xamarin-and-codename-one.html"" rel=""nofollow"">https:&#x2F;&#x2F;www.codenameone.com&#x2F;blog&#x2F;comparing-xamarin-and-coden...</a> ) can provide things like Java support for iOS, Android, Windows etc. without a physical Mac. They do it thru a cloud build process. It works properly because of the lightweight architecture.<p>Obviously the goals of Codename One and Xamarin are different whereas Codename One tries to be WORA, Xamarin doesn&#x27;t.",2016-12-14 16:56:13
438,"Not sure which is setup by default; there is the Android SDK emulator and the newer Hyper-V based Visual Studio Emulator for Android. Based on @snarfy&#x27;s comment elsewhere, I&#x27;m guessing the Xamarin installer isn&#x27;t installing the VS emulator.<p><a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=13176438"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=13176438</a><p><a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;android&#x2F;deployment,_testing,_and_metrics&#x2F;debug-on-emulator&#x2F;visual-studio-android-emulator&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;android&#x2F;deployment,_tes...</a>",2016-12-14 18:32:30
439,"Xamarin is really focused on mobile development, and in particular a large chunk of our effort is into making C# and F# great languages on both Android and iOS.<p>Our Forms API is a cross-mobile API to create UIs, part of a family of cross-platform APIs that allow for more code sharing across platforms (additionally we now have libraries for 2D raster graphics, 3D retained graphics, and various assorted device-specific libraries [1]).<p>Eto and Avalonia area really APIs on top of a .NET runtime, either Xamarin or .NET, just like Forms, and they have a focus on the desktop space.   I think they are great, and we fix bugs and assist those teams when possible.<p>That said, some of our users have asked for a long time to share their mobile code on the desktop, so we have started an effort to bring Xamarin.Forms to Mac, and we will be extending this with support for WPF on Windows as well (in addition to the already supported Windows&#x2F;UWP).<p>If you want to try out our Mac support, check out this branch:<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin.forms&#x2F;tree&#x2F;macOS"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin.forms&#x2F;tree&#x2F;macOS</a><p>[1] <a href=""https:&#x2F;&#x2F;components.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;components.xamarin.com&#x2F;</a>",2016-12-14 18:57:43
440,"Xamarin has some pretty sweet tools (Inspector, Profiler) that are only available for Visual Studio Enterprise subscribers.<p>This is a bummer because things like this live coding add-in require installation of the Inspector, which adds some magic to every build to facilitate dynamic assemblies: <a href=""https:&#x2F;&#x2F;github.com&#x2F;praeclarum&#x2F;Continuous"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;praeclarum&#x2F;Continuous</a><p>The Xamarin Workbooks thingy appears to offer an IPython notebook experience (a chance to reduce edit&#x2F;build&#x2F;test cycle for prototypes); not sure if it&#x27;s headed for Enterprise-only or not:<p><a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;workbooks&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;workbook...</a>",2016-12-14 19:11:59
441,"Totally disagree with this, I have been in a xamarin dev team and had seen senior developers get nice salaries as more corps are going on to Xamarin. I also saw our talent get head hunted by other companies. I receive at least 2-3 emails a month for Xamarin roles. In fact I told my software dev friends that wanted to get into mobile to learn Xamarin. Some took my advice, it has worked out great for them and their careers.",2016-12-14 21:41:41
442,"Is this similar to Xamarin Workbooks?<p><a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;workbooks&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;workbook...</a>",2016-12-14 22:02:47
443,"F# with monogame  will get you better performance and less weirdness, it is a pleasant lighter weight environment.  unity gc and runtime are rapidly improving now that ms owns xamarin though.",2016-12-20 01:05:32
444,"they have a roadmap with the plans laid out on their website. it was impossible in the past because xamarin did not want to sell them licenses for newer mono. now Microsoft owns xamarin, and they are happy to. some improvements have already landed at least in beta.",2016-12-20 01:12:40
445,"It&#x27;s not that complex but I think it&#x27;s just that .NET naming and versions are currently quite confusing. I did a lot of reading on this for the book I wrote and I still find I need to double-check things.<p>I guess this is what you get when you try and munge three platforms together. Package support is very important for uptake and many library authors were waiting for some stability. I found this out when researching the support matrix at <a href=""https:&#x2F;&#x2F;anclafs.com"" rel=""nofollow"">https:&#x2F;&#x2F;anclafs.com</a>.<p>If you look at the volume of MS docs on this you would be forgiven for thinking it&#x27;s complicated:<p><a href=""https:&#x2F;&#x2F;blogs.msdn.microsoft.com&#x2F;dotnet&#x2F;2016&#x2F;09&#x2F;26&#x2F;introducing-net-standard&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blogs.msdn.microsoft.com&#x2F;dotnet&#x2F;2016&#x2F;09&#x2F;26&#x2F;introduci...</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;standard&#x2F;blob&#x2F;master&#x2F;docs&#x2F;faq.md"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;standard&#x2F;blob&#x2F;master&#x2F;docs&#x2F;faq.md</a><p><a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;articles&#x2F;standard&#x2F;library"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;articles&#x2F;standard&#x2F;li...</a><p><a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;net-standard-library-support-for-xamarin&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;net-standard-library-support-for-xa...</a>",2017-01-12 16:35:49
446,"&gt; GTK is probably the main reason Gimp isn&#x27;t a serious competitor in professional work, then.<p>Xamarin Studio is built using Gtk and actually looks nice on macOS, or at least I have seldom heard people complain about it:<p><a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;the-making-of-xamarin-studio&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;the-making-of-xamarin-studio&#x2F;</a><p>I think the problem is that Gimp is understaffed to produce a Photoshop killer with <i>any</i> toolkit.",2017-01-18 03:58:45
447,"There probably aren&#x27;t that many xamarin studio users on mac and most of them would be developers anyway. If something looks out of place, developers are often oblivious to it (how long would it take you to spot a font out of place?) but artists are hyper-sensitive to it.",2017-01-18 04:04:08
448,"&gt; Just wished it was not a .NET thing<p>Then what? OCalm is the other possibility, but the appeal of a larger ecosystem and easier mobile target by xamarin is what put me into F#.",2017-01-18 19:54:36
449,"The C# documentation is quite clear:
<a href=""https:&#x2F;&#x2F;realm.io&#x2F;docs&#x2F;xamarin&#x2F;latest&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;realm.io&#x2F;docs&#x2F;xamarin&#x2F;latest&#x2F;</a><p><pre><code>  var puppies = realm.All&lt;Dog&gt;().Where(d =&gt; d.Age &lt; 2);
</code></pre>
The LINQ integration is appreciated.<p><pre><code>  &#x2F;&#x2F; Update and persist objects with a thread-safe transaction
  realm.Write(() =&gt; 
  {
      realm.Add(new Dog { Name = &quot;Rex&quot;, Age = 1 });
  });

  &#x2F;&#x2F; Queries are updated in realtime
  puppies.Count(); &#x2F;&#x2F; =&gt; 1
</code></pre>
I&#x27;m assuming that &quot;updated in realtime&quot; means &quot;realm.Write is a blocking operation&quot;, correct?",2017-01-19 20:02:57
450,"well, some options for mobile<p>- xamarin works with f# and support it: <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;fsharp&#x2F;fsharp_support_overview&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;fsharp&#x2F;f...</a><p>- use react native (with fable to transpile f# -&gt; js): <a href=""https:&#x2F;&#x2F;github.com&#x2F;fable-compiler&#x2F;fable-react_native-demo"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fable-compiler&#x2F;fable-react_native-demo</a><p>for web you can use:<p>- suave (<a href=""http:&#x2F;&#x2F;suave.io"" rel=""nofollow"">http:&#x2F;&#x2F;suave.io</a>)<p>- aspnet core (or aspnet core mvc)<p>both works with .NET, .NET Core and Mono",2017-02-02 13:38:55
451,"I&#x27;m aware of all that options, and have tested them. In fact, I have tried to use xamarin+f# for mobile for a year.<p>Now is a better (even have F# templates!) but is clearly a second class citizen.<p>--<p>Is not the case of Core that F# integration is black magic, or this has changed in last release?  All apis work now for F#? For web I try like 6 months ago and only suave was more or less usable (however, is hard to find how solve some stuff. NOTHING (in the open source options I test) is close to Flask&#x2F;django in this case, and asp.net was sub-par when I test it.)<p>--<p>I also agree that F# need more push from MS. My complaints, like much others, are about things that just need more polish and tooling - and if it get more competitive in performance with C#, better -. So I think is good to see this .NET strategy and think F# have a good future, to the point that F# <i>is the only reason</i> I come back to .NET.<p>Is only, I wish not just a good future. I want a AMAZING future!",2017-02-02 15:31:45
452,"To me as a web developer, the most exciting new development is react native (not react itself) - it&#x27;s redefining the border between web and native apps in a way that cordova and xamarin never did.",2017-02-05 12:06:46
453,"My team was assigned to test react native and native script.
We found react native is able to meet our requirements.
Building the same application in nativescript however, we stopped within 2 weeks.
A simple application with 2 pages takes 5s to load on android. The CLI tool is buggy and there is no debug information provided at all if something goes wrong.
There is no community support either so if anything goes wrong, praying is your best approach.
Also due to the super poor community support, a ton of UI requirements couldn&#x27;t be accomplished.<p>Overall I wouldn&#x27;t recommend nativescript. It is 2 years away from where react native is currently.<p>If you cannot accept reacts patent issue, I recommend you look at xamarin or Cordova. Avoid nativescript, it&#x27;s a complete waste of time at this moment",2017-02-11 12:00:08
454,"Awesome. IMHO to really &quot;take off&quot; fsharp is going to need a super smooth .net core story including .net core ionide support. It&#x27;s not a sure thing, but I can&#x27;t stress enough my belief in these two things:<p>* Seemless x-platform with dotnet core<p>* ionide working with dotnet core(and ideally on par with at least xamarin fsharp support)",2017-02-14 01:26:21
455,"Drupal, wordpress, docker, xamarin, unity. and mono",2017-02-14 11:03:22
456,"There&#x27;s no money in devtools for general desktop app development. Embarcadero knows that the only way to grow the delphi userbase is to make it free, so they&#x27;re instead trying to milk it for all it&#x27;s worth on the way down.<p>I had a bit of hope for delphi with mobile app support, but the pricing really killed it now that microsoft offers xamarin for free.<p>Plus, object pascal is too weird for js coders. C-style syntax is a must, even though object pascal is in many ways a better language.",2017-02-15 16:45:44
457,"Check out Xamarin Workbooks* for the C# equivalent.<p>(*): <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;workbooks&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;workbook...</a>",2017-02-23 04:56:53
458,"There&#x27;s Urho3D (<a href=""https:&#x2F;&#x2F;urho3d.github.io"" rel=""nofollow"">https:&#x2F;&#x2F;urho3d.github.io</a>) which seems to be mostly a clone of OGRE. I don&#x27;t know if any of the same people work on it.<p>Xamarin have a C# wrapper for it, UrhoSharp (<a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;urho&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;urho&#x2F;</a>). I&#x27;m working with it now and I like it a lot better than Unity so far; but I strongly prefer to work in code rather than doing everything in Unity&#x27;s IDE.",2017-03-01 16:27:56
459,"Generics just bake a little bit more into the runtime; there&#x27;s already a lot of the type system there. And it increases interop potential. I don&#x27;t understand your point about Scala - they could always choose to use type erasure instead of any runtime-provided generics. F# implemented generics with erasure on the 1.x CLR, and used the runtime when on CLR 2.<p>And this is the first time I&#x27;ve heard that the JVM is easier to target for non-Java languages. .NET has had multi-language support an official design goal, the JVM is just for Java. Even simple stuff like pointers, so you can do ref&#x2F;out parameters. Or unverified instructions. The CLR is simply more all-around capable.<p>I am pretty sure the CLR always supported variance, it was just unused up until C# 4.0. AFAIK, there haven&#x27;t been any changes to the runtime bytecode since CLR 2.0, when generics were added.<p>The performance benefits of specialization are pretty nifty. The Mono guys ported Android to C# and got quite the performance improvement on some code: <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;</a> - so that&#x27;s existing code that got a perf benefit &quot;for free&quot; due to not using type erasure.<p>Edit: A quick skim of the specialization proposal for Java[1] makes no mention of other languages. Just the general pain of integrating it in a compatible way.<p>1: <a href=""http:&#x2F;&#x2F;cr.openjdk.java.net&#x2F;~briangoetz&#x2F;valhalla&#x2F;specialization.html"" rel=""nofollow"">http:&#x2F;&#x2F;cr.openjdk.java.net&#x2F;~briangoetz&#x2F;valhalla&#x2F;specializati...</a>",2017-03-06 17:57:51
460,"I am on bazel learning curve and was searching to integrate Bazel build system with visual studio (xamarin) project, apparently Bazel support for windows is still too nascent. I home something comes up on this lines.",2017-03-07 16:05:01
461,"It&#x27;s not GA yet (only Visual Studio 2017 for Windows is GA today) but we have shipped an update so Visual Studio for Mac Preview 4 is now available.<p>Details: <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;better-apps-visual-studio-2017&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;better-apps-visual-studio-2017&#x2F;</a>",2017-03-07 16:24:35
462,"This may not be <i>quite</i> the direct answer you expect, but yes there are multiple ways to create cross-platform UIs with F#:<p>1. Xamarin[0].  It supports F# for everything aside from UWP targets.<p>2. WinForms on Mono[1].<p>3. FABLE[2] to compile your F# into JavaScript.  It&#x27;s a <i>very</i> good tool and it produces really nice JavaScript as well.  From there, you can run the code on the web, Electron, or React Native[3].<p>[0]: <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;fsharp&#x2F;fsharp_support_overview&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;fsharp&#x2F;f...</a><p>[1]: <a href=""http:&#x2F;&#x2F;www.mono-project.com&#x2F;docs&#x2F;gui&#x2F;winforms&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;docs&#x2F;gui&#x2F;winforms&#x2F;</a><p>[2]: <a href=""http:&#x2F;&#x2F;fable.io&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;fable.io&#x2F;</a><p>[3]: <a href=""https:&#x2F;&#x2F;github.com&#x2F;fable-compiler&#x2F;fable-react"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fable-compiler&#x2F;fable-react</a>",2017-03-07 22:22:25
463,I am struggling to understand why xamarin supports F# but not VB...,2017-03-07 22:28:34
464,"But, to repeat another comment I made below, are you satisfied with this solution? Would you expect to have to go to a package manager to use tuples in python? The power of .net, and of visual basic in particular was its simplicity. What I am seing is Microsoft going into the opposite direction, with an ever more fractured ecosystem, .net, .net core, .net portable and .net standard running in parallel. Asp.net and asp.net core running in parallel, winform, wpf, winRT apps, uwapps, xamarin, etc running in parallel. And now when a new feature is introduced in the syntax it requires to add some external dependencies, which can be simplified by changing some default deep into the IDE...<p>My opinion is that simplicity matters a lot to the success of a platform. And by the way nothing in the error that you display when using tuples in VS2017 suggests a nuget package or an assembly name that can be searched.",2017-03-08 00:28:56
465,"Imagine you want to find a job around the world and you need to learn the stack that is more or less in demand everywhere.<p>Would you choose Java? ( runs good almost everywhere (linux,windows, others) and can be used for Android development.
Would you choose C# ? ( with .net core while being immature also can run anywhere + xamarin for mobile development. 
Would you choose JS ? ( increasingly becoming also adopted by larger companies due to its flexibility and large pool of developers.+ react native and only viable option for frontend)<p>All of them require significant investment and i would say have similar learning curve. 
I have seen java being occasionally used in MS &quot;only&quot; shops but i have rarely seen C# being used at small &#x2F; mid sized companies running on Linx and developing with java.<p>We all can agree that learning algorithms and concepts is way better than just stick to a single language.
But the objective is to stick to a widely used platform and get a job almost anywhere.",2017-03-12 12:51:48
466,"To my knowledge, making cross-platform performant listviews is quite the challenge. I remember listening to a lot of xamarin engineers talk about the fickle performance gotchas with using them.<p>The platforms have different ways of exposing various attributes about list and list-items. The API designers then must focus on the trade-off of user friendliness vs control and performance. Thus far it&#x27;s been about user friendliness, but now they are wading in the waters of control&#x2F;performance.<p>That&#x27;s the reason why there are multiple list views being added, instead of just a single one.",2017-03-13 20:49:29
467,How is this more productive than Cordova variants? It seems that the re-use of a web app to mobile app is not great. And that I can use designers that code in Cordova alternative. Or even xamarin.<p>Asking for a friend.,2017-03-14 10:22:36
468,"Nobody mentioned Xamarin?
You can target Windows, macOS, Linux, iOS, Android.<p><a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;platform"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;platform</a>",2017-03-25 18:53:09
469,"Neat series.  There was another recent post on using a C# version of Redux as well, at <a href=""https:&#x2F;&#x2F;spin.atomicobject.com&#x2F;2017&#x2F;03&#x2F;13&#x2F;adapting-redux-c-sharp-xamarin&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;spin.atomicobject.com&#x2F;2017&#x2F;03&#x2F;13&#x2F;adapting-redux-c-sh...</a> .  It&#x27;s nice to see Redux&#x27;s concepts spreading outside the Javascript world.  I&#x27;ve had similar thoughts regarding some of the Python services I work with.<p>If anyone is interested in learning Redux (or React), I keep a big list of links to high-quality tutorials and articles on React, Redux, and related topics, at <a href=""https:&#x2F;&#x2F;github.com&#x2F;markerikson&#x2F;react-redux-links"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;markerikson&#x2F;react-redux-links</a> . Specifically intended to be a great starting point for anyone trying to learn the ecosystem, as well as a solid source of good info on more advanced topics.<p>I also maintain a catalog of Redux-related addons, utilities, and tools, at <a href=""https:&#x2F;&#x2F;github.com&#x2F;markerikson&#x2F;redux-ecosystem-links"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;markerikson&#x2F;redux-ecosystem-links</a> .",2017-04-02 20:30:27
470,"I am working on an app to organize the passport information. Like visas associated with it, expiration, date of leaving&#x2F;entering a country. 
Idea is to make it easy to get certain information of your passport when you need it without having the passport handy.
For now targeted towards immigrants in USA. Using xamarin to build the app. Plan is to finish development by April end.",2017-04-04 21:27:53
471,With xamarin or visas? ;),2017-04-04 21:29:59
472,"&gt;&quot;C# look like a dead end&quot;<p><a href=""http:&#x2F;&#x2F;statisticstimes.com&#x2F;tech&#x2F;top-computer-languages.php"" rel=""nofollow"">http:&#x2F;&#x2F;statisticstimes.com&#x2F;tech&#x2F;top-computer-languages.php</a><p>&gt; &quot;you need just a good bridge to OS UI language&quot;<p>For moblie apps, Xamarin is that bridge (can always build web apps too):<p><a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a><p>Plus, .NET Core is cross-platform, good cross-platform tooling becoming available (VS Code, etc...), and you don&#x27;t have to use C#.<p>If you&#x27;re interested in writing games, Unity uses .NET (Mono in particular):<p><a href=""https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Unity_(game_engine)"" rel=""nofollow"">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Unity_(game_engine)</a>",2017-04-05 21:22:06
473,Interesting to see if this will co-exist with xamarin or will target different type of apps.,2017-04-08 07:02:30
474,I beg to differ. The xamarin stack on Android without forms is much preferable to whatever confused iteration of java+toolchain Google is currently offering.,2017-04-08 16:06:53
475,Is xamarin free?,2017-04-08 18:43:59
476,"Why not? People do native mobile apps despite those platforms being more or less at parity, while desktops are overwhelmingly just one platform. The tools to write cross platform mobile apps that aren&#x27;t just a browser with lipstick (like xamarin) exist for both desktop and desktop.",2017-04-11 14:18:34
477,"This issue is so furiously divisive, and I feel like it brings out the worst in HN. 
I&#x27;m from a web dev background. Some of the comments here make me feel like I should be ashamed of that fact.<p>I can see both sides of this argument (every time it comes up)<p>As a consumer of apps, I want the leanest, most minimalist, fastest thing going. I want native apps on my devices (If you think slack is a hog on the desktop you should try it on Windows Phone).<p>But as a <i>developer</i>, I know that electron is a shortcut that means my app will take less time to build. I can take my existing skills, take work I&#x27;ve already done on a WinJS app and publish it on Mac OS, Linux and Win 7. I can spend more time with my family, instead of spending all my evenings learning py+qt, or xamarin, or react native, or whatever the new fangled thing is. And I know people will use it.<p>Hell, I&#x27;ve even got better odds of pushing an electron app than a native one, as I can submit a pull request and maybe have it appear on <a href=""https:&#x2F;&#x2F;electron.atom.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;electron.atom.io&#x2F;</a><p>Obviously, seeing the Electron hate always gives me pause for thought, but at the end of the day it feels like the hatred is from fellow coders (if a dribbling front-end-js writing low-life such as myself can call you writing-assembly-on-a-napkin-while-you-quote-stallman-types fellow coders) and my apps user-base is overwhelmingly non-technical.",2017-04-11 15:51:33
478,"My main grief again .net now is rather that it has lost its simplicity. There are multiple frameworks to do the same things. For desktop you have winform, wpf, windows 8 apps, universal windows apps, xamarin, etc. For interoperability you have pcl, .net core, .net standard, mono&#x2F;xamarin, etc. For web development you have webforms, mvc, mvc core. When they introduce a new language feature like tuples, you need to load some external libraries to be able to use it, it doesn&#x27;t work straight out of the box. And I fear that as they will try to integrate all of this while keeping backward compatibility it will create yet even more fragmentation.<p>Simplicity is I think why python is so popular and why it is even used in all sort of odd places (like doing computationally intensive maths).",2017-04-23 05:30:31
479,"Check out Xamarin.Forms! <a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;forms"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;forms</a>",2017-05-10 18:55:50
480,"Xamarin.Forms support for macOS is in preview:<p><a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;preview-bringing-macos-to-xamarin-forms&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;preview-bringing-macos-to-xamarin-f...</a>",2017-05-10 20:26:55
481,"Deployed apps are compiled to ARM assembly. Bit of info here:<p><a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;application_fundamentals&#x2F;building_cross_platform_applications&#x2F;part_1_-_understanding_the_xamarin_mobile_platform&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;applicat...</a>",2017-05-11 19:00:03
482,"Probably most notably the Slack App: <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers&#x2F;tech"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers&#x2F;tech</a>",2017-05-11 19:41:08
483,I would imagine xamarin is faster when you have a complicated domain.,2017-05-11 19:43:15
484,"There&#x27;s nothing in that description that indicates the Slack app is written using Xamarin.  From that link:<p>&quot;Slack&#x27;s friendly, easy to use messaging platform is the future of work. Given its preeminence in the enterprise and among mobile workforces, mobile is critical to Slacks success. Over three million daily users rely on Slack to communicate with their teams, and Xamarin Test Cloud helps Slack make sure customers are productive in all scenarios. Its mobile quality engineers view test reports to see how features look and behave on devices  and can quickly solve customer issues.&quot;<p>Sounds like they just use Xamarin Test Cloud.<p>Here&#x27;s a list of decent looking Xamarin apps:<p>- BitWarden (it&#x27;s made the rounds recently on HN)[1]<p>- Microsoft Pix [2]<p>- A bunch of games that look pretty slick (I&#x27;ve downloaded a few and flipped through some of the screens) [3]<p>[1] <a href=""https:&#x2F;&#x2F;github.com&#x2F;bitwarden&#x2F;mobile"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;bitwarden&#x2F;mobile</a><p>[2] <a href=""http:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;product&#x2F;microsoftpix&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;product&#x2F;microsoftpix...</a><p>[3] <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers&#x2F;gaming"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers&#x2F;gaming</a>",2017-05-11 19:47:30
485,"I don&#x27;t think you are correct.  For a proper release, yes, the C#&#x2F;F#&#x2F;VB is AOT compiled.  For this &quot;Live Player&quot; app, the IL in the DLLs is interpreted.  Basing this off of this:<p>&quot;Microsoft believes its Live Player system is entirely compatible with Apple&#x27;s rules and regulations for App Store apps. Behind the scenes, the Live Player includes an interpreter for .NET code. This means that running an app through Live Player is slower than it would be if natively built on a Mac, but that&#x27;s not such a big deal for many aspects of user interface development.&quot;<p><a href=""https:&#x2F;&#x2F;arstechnica.com&#x2F;information-technology&#x2F;2017&#x2F;05&#x2F;xamarin-live-player-almost-takes-the-mac-out-of-ios-development&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;arstechnica.com&#x2F;information-technology&#x2F;2017&#x2F;05&#x2F;xamar...</a>",2017-05-11 19:56:30
486,"Normal deployed apps are.  Here though, the app that&#x27;s actually running is the Xamarin Live Player which comes with an IL interpreter.  In the normal cycle of Xamarin iOS development from Windows, the DLLs are compiled, and then there&#x27;s another step where they are AOT compiled to ARM assembly on the Mac.  In this case though it avoids the step of compiling on iOS, it just builds the DLLs and sends them to the device.<p>This is my best guess of what&#x27;s happening based on this article: <a href=""https:&#x2F;&#x2F;arstechnica.com&#x2F;information-technology&#x2F;2017&#x2F;05&#x2F;xamarin-live-player-almost-takes-the-mac-out-of-ios-development&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;arstechnica.com&#x2F;information-technology&#x2F;2017&#x2F;05&#x2F;xamar...</a>",2017-05-11 19:59:24
487,"It&#x27;s cool to see xamarin growing after the microsoft acquisition. Replicating good existing features that other environments have (like exponent, etc) is a good sign that things are progressing.<p>Building apps with Xamarin however is still not a pleasant experience whether it be Native or Forms.<p>Although Microsoft has built some cool apps with forms (check the microsoft github and you can find them), it&#x27;s still a pain to work with things visually. Odd bugs and restrictions that require dense workarounds occur if you deviate from the standard application uses (tables and forms). It makes sense it being a targeted API so I&#x27;ll leave it at that.<p>Native was something I really wanted to like. I built 2 PoC apps that later got translated into swift&#x2F;java and react-native respectively. Building your own libraries and widgets is fun, but not when you have a deadline. For non-visual libraries, it&#x27;s awesome. I&#x27;ve worked with the .Net ecosystem for a while, and while the way libraries are written isn&#x27;t my favorite (OverkillOOP sometimes), everything is consistent. Visual Libraries are rough. Quite a few I wanted to use were abandoned with no source code and just a link to download the nuget from the xamarin store. I could spend the time building the 10 custom widgets that the client REALLY wants (even though the app could work fine without it), or I could use native&#x2F;RN UI libraries to wow the client giving them what they wanted and a little bit more in the same visual&#x2F;design style.<p>To sum it up: it&#x27;s more work to write a xamarin application when I&#x27;m more than capable of handling 2 similar languages (most app requirements are just applying known patterns and library gluing anyways) or using Exponent&#x2F;ReactNative.<p>As a side note, I prefer F# and while the Xamarin team says they &quot;like it&quot;, it is a pretty 2nd class system and definitely not something you want to use with a deadline.",2017-05-11 20:12:26
488,"Look here <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;application_fundamentals&#x2F;building_cross_platform_applications&#x2F;part_1_-_understanding_the_xamarin_mobile_platform&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;applicat...</a><p>&quot;iOS  C# is ahead-of-time (AOT) compiled to ARM assembly language. The .NET framework is included, with unused classes being stripped out during linking to reduce the application size. Apple does not allow runtime code generation on iOS, so some language features are not available&quot;",2017-05-11 20:39:33
489,"To be honest, that page about limitations in their docs is a huuuuuge let down<p><a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;live&#x2F;troubleshooting&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;live&#x2F;tro...</a><p>- Android user interfaces designed with AXML files are not currently supported.<p>- Some iOS storyboard features are not supported.<p>- iOS XIB files are not supported.<p>Well, let&#x27;s see how this evolves over time...",2017-05-11 20:54:50
490,I believe the cococa touch API is exposed like for like in xamarin.,2017-05-11 22:43:26
491,"<a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers</a><p>Each example across multiple industries says whether they&#x27;re using test cloud, or the app was developed with the platform :)",2017-05-12 00:42:10
492,"lol, I doubt that.. Microsoft doesn&#x27;t support internet explorer anymore and would only recommend edge if you&#x27;re on windows..<p>People are asking for these services.. just because you don&#x27;t run them doesn&#x27;t mean no one does. Skype is still the largest voip network, bing is slowly still growing against goole, onedrive is huge for private and corporations, Cortana ins on over 600 million devices..<p>As for office on OSX, it is updated all the time and feature comparable if you bother to run 2016 with updates enabled..<p>THe hate is far from deserved, its misguided.<p>Microsoft is so cross platform Visual studio for OSX is full RTM, Visual studio code runs great in Linux&#x2F;windows&#x2F;OSX, they&#x27;re writing Linux drivers, they have the Linux subsystem for windows that runs native windows apps, they&#x27;re a core supporter of the Linux foundation.  .net is cross platform now too and they&#x27;re starting to merge xamarin&#x2F;XAML&#x2F;xml forms so apps can be written once and run everywhere..<p>doing more for software and systems than google is but people will continue to have this misguided hate",2017-05-17 03:58:21
493,"Also, shortcomings in the mac version of office may be shortcomings in the Mac OSX platform.<p>VIsual studio for mac is a re-write of xamarin, that doesn&#x27;t change anything - xamaerin&#x2F;visual studio&#x2F;c# are all converging to offer a unified platform.<p>And i&#x27;m so glad you seem to know everything about everyone. THe same &quot;billion google now&quot; users probably only 1% USE it day in&#x2F;day out.. but we&#x27;re just going to be blindly bashing windows..<p>please, do us a favor and get over yourself. We get it, you don&#x27;t run&#x2F;don&#x27;t like windows... so just stop wasting energy hating something you really don&#x27;t have any clue about or care about.",2017-05-17 15:51:02
494,"not anymore, new stuff coming now that MS owns xamarin",2017-05-20 12:44:30
495,"Eto is very interesting but unfortunately there seems to be just 1 (very active) developer behind it, from what I can see.<p>On the other hand, Xamarin.Forms had an announcement recently, an announcement that Hacker News missed. I submitted the news a few days ago but it didn&#x27;t reach the first page:<p><a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=14383467"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=14383467</a> -&gt;<p><a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;</a><p>TL;DR:<p>Xamarin.Forms will support desktop environments:<p>- Windows (WPF)<p>- MacOS (Cocoa)<p>- Linux (GTK#)<p>This is on top of the mobile bits: iOS, Android, UWP.<p>As an added bonus, they&#x27;ve added Xamarin.Forms embedding into native interfaces.<p>It&#x27;s actually major news since Xamarin.Forms would become the first cross platform UI toolkit that:<p>1. supports both desktop and mobiles<p>2. is backed by a major vendor<p>3. is truly usable from a memory managed language as part of the core offering",2017-05-24 14:07:45
496,"Apparently this is a hot topic.<p>The options I&#x27;m aware of are:<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;picoe&#x2F;Eto"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;picoe&#x2F;Eto</a> (OP - BSD)<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia</a> (MIT)<p>Currently only with a preview for Mac, Xamarin.Forms is roadmapped for desktop platforms &quot;Q3 2017&quot;: <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;</a><p>Licensing for Xamarin Forms was funky for a while (required paying for Xamarin prior to MS acquisition) but appears to be MIT now.",2017-05-24 14:10:54
497,&gt; Needing a Mac to compile the app<p>I remember a recent announcement of Microsoft about using xamarin to generate an iOS app without xcode and with the ok of Apple. It was on HN but I can&#x27;t find it. I assumed that without xcode means without a mac.,2017-05-24 17:20:40
498,"To be clear: &quot;Xamarin.forms&quot; is different than &quot;Xamarin&quot; and the following is based on my experience with &quot;Xamarin.forms&quot;.<p>Also note that my experience with this is building an extremely simple business-y app for internal users.<p>1. Its moving fast so documentation is lacking and the &quot;right&quot; way to do something, posted 6 months ago, is wrong\deprecated\wonky<p>2. The tooling leaves a lot to be desired. Although this has greatly improved, there are still tons of steps to publish (<a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;android&#x2F;deployment,_testing,_and_metrics&#x2F;publishing_an_application&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;android&#x2F;deployment,_tes...</a>).<p>3. Updates constantly breaking things. To be fair, this is also improving<p>4. There may still be instances where you have to drop into native code or split code based on platform. This means you sometimes will need to know: c#, xamarin.forms oddities, java\android stuff AND objective c\iOS. This may not be an issue for simple apps<p>5. UI builder is limited. The apps will be native looking but you won&#x27;t be winning any design awards. Some things also seem impossible so it helps if the customer\designer\stakeholder is really flexible. If someone asks for an app to collect and display data, you will probably be ok. If they give you pixel dimensions and other minutiae run.",2017-05-26 15:15:34
499,"Nothing wrong with swift but the build tool team.  I can tolerate method name convention that always changing. And also still not support async await.<p>Xcode build tool is the worst. Compiler time is the most hurt. Very slow. Android, react and xamarin already support hot swap compile.<p>Migration tool is not working. I&#x27;m not sure this year xcode able to refactoring rename method",2017-06-03 20:41:21
500,"My experience has largely been the same, the whole mono, xamarin, vs studio, etc of tooling (whatever it all is) is a tragedy of good technology made useless. The licensing, tooling, and runtimes are such a mess I give up before I begin. There needs to be one canonical way to do things on every platform, this &quot;band-aid&quot; approach might&#x27;ve worked when you first open sourced but surely no longer does the job.<p>I&#x27;d love to use .NET but the overhead of getting started isn&#x27;t worth it when I can use any number of other truly free languages&#x2F;platforms that are much easier to understand. And are truly cross platform because they have been so for years.<p>For reference languages I use regularly or on occasion which don&#x27;t suffer from any degree of the issues .NET has: ruby, swift, elixir, java, scala, JavaScript, and Elm.<p>CLR and .NET seem very awesome but so far have turned me off in a big way. Please fix &lt;3",2017-06-07 22:47:34
501,"Owning and managing software business we develop using multiple technologies<p>Mobile objective c, swift, Android java, xamarin.net, phone gap<p>Web asp.net Mvc , php, java<p>Etc...<p>Using Asp.net Mvc requires using 3rd party ui libraries and 
Depends on size of team and experience in .net, usually we assign.net developers with at least 4 years experience in .net and front-end currently mvvm js libraries<p>If you starter in .net you have learning curve but this is reducing as technologies improve",2017-06-08 22:53:49
502,"Check out Xamarin <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;mac&#x2F;getting_started&#x2F;hello,_mac&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;mac&#x2F;getting_started&#x2F;hel...</a> .",2017-06-09 07:05:51
503,"&gt; There is a lack of a simple desktop app development environment.<p>Does anyone think that Xaml Standard + GTK + dotnet core might be a potential path forward? Supposedly Microsoft is working on a GTK implementation, and very much intrigues me.<p>edit: Discussion here
<a href=""http:&#x2F;&#x2F;www.xamarinpodcast.com&#x2F;41"" rel=""nofollow"">http:&#x2F;&#x2F;www.xamarinpodcast.com&#x2F;41</a>
21:30 - New &quot;backends&quot; for Xamarin.Forms - macOS, GTK#, and WPF",2017-07-13 23:31:30
504,"You can definitely do ahead of time compilation with .net bytecode. That&#x27;s why you can write iOS apps in c# with xamarin&#x27;s SDK.<p>I think the performance differences between JIT compiled code and native code mainly come from the &#x27;convenience&#x27; features offered by languages such as Java or C#. I am thinking of garbage collection, (default) virtual functions or reflection.<p>In let&#x27;s say c++ you can do all of these things too, but the cost is not hidden from the developer.",2017-07-17 01:15:30
505,"Well the UI can be changed per platform, and as I said, it&#x27;s a matter of budget. I implemented a solution like that with xamarin but it&#x27;s not like web. It&#x27;s way more complicated and the real problem is many things are not supported and so on... React Native? No desktop support. Qt? Oh no, it doesn&#x27;t feel native... Give me a break! I&#x27;m really sick of everyone being a perfectionist and making no compromises. There are too many users, too many platforms and not many developers (at least, quality ones). Facebook can maintain 100 platforms, that doesn&#x27;t solve my problem of having something &quot;usable&quot; (not perfect) on X platforms.<p>- Yeah we don&#x27;t support offline mode on iOS, sorry.<p>- How much would it cost to implement that?<p>- Hmm, a rewrite plus more devices to test and licenses and... hmm. Just 50K for a start.<p>- What, are you kidding? I just want to enter this order when offline?!",2017-07-27 12:41:13
506,"Ola, Lucas from Unity here,<p>Xamarin and Unity never did a renewed licensing deal. That doesn&#x27;t make the lovely xamarin people nor us jerks :)<p>Licensing issues aside, for an ecosystem like Unity to upgrade its runtime, c# language, and base class libraries is an enormous undertaking. While we are not perfect, we take backward compatibility very seriously.
All of mono and coreclr has been available under MIT licensing for a very long time now. In Unity2017.1 we now ship an experimental option to use modern .net. this uses a new mono (not using sgen), new c# compiler (still mcs for now, so c#6, not c#7, and .net4.6 class libraries).<p>In a future unity version (won&#x27;t burn my fingers on exactly which one) this new .net experience will become default. (depends on how many problems you find! :)<p>the xamarin (and microsoft .net) team are wonderful folks, and it&#x27;s great to work closely with them to make .net in unity, and .net in general solid.<p>next up on the list is improving the garbage collection story, which is in the works, but we&#x27;re first focussing on shipping a new runtime+c#+.net base class libraries.<p>While there are some very valid areas to point out that make c# challenging to be &quot;the language of an entire game&quot;, we believe that c# is a great controlling language for Unity. We&#x27;re working on some really interesting (imho) compilation pipeline for a restricted compute subset of c# that I think will completely turn around people&#x27;s expectations and opinions of c# in gaming. stay tuned, this is one of the most interesting projects happnening inside of Unity today.",2017-08-04 20:18:11
507,"Microsoft&#x27;s Xamarin Forms 3.0 (stable release later this year) allows you to target Linux and Mac[1] and is very similar to UWP conceptually - UI written once, run anywhere.  It&#x27;s just that Xamarin&#x27;s &quot;anywhere&quot; is much larger :)<p>Disclosure: I work on Xamarin team at Microsoft<p>[1]<a href=""https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;85747&#x2F;xamarin-forms-feature-roadmap"" rel=""nofollow"">https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;85747&#x2F;xamarin-forms-fe...</a>",2017-08-09 17:25:36
508,"Also, another question.<p>I have looked for xamarin.forms to be ready for years now, but still is very limited&#x2F;inmutare. I&#x27;m building the most simplistic crud app with zero-care for good looks and good UI, yet every step requiere a workaround (for example, you can&#x27;t have a Password EntryCell, you need to create it from code using a ViewCell).<p>Exist a lot of functionality available in the base controls not exposed in forms.<p>Now, with regret I&#x27;m thinking in use react native (that destroy the ability to use F#) or use HTML.<p>How much better will 3 be? Some place where I can talk about this?",2017-08-09 21:58:44
509,Xamarin really need this. Two reason i switch from xamarin to react native. Slow compile and and cannot develope on web platform.,2017-08-10 05:57:20
510,"Blog post announcing this feature <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;</a>",2017-08-14 18:25:18
511,"A problem is the author doesn&#x27;t seem to care that much about portability, how can you even say that Swift is an alternative to RN?<p>Was curious about counter arguments and came upon this : <a href=""https:&#x2F;&#x2F;medium.com&#x2F;@reicheltp&#x2F;dev-diary-4-why-i-left-xamarin-behind-35817ccd07b2"" rel=""nofollow"">https:&#x2F;&#x2F;medium.com&#x2F;@reicheltp&#x2F;dev-diary-4-why-i-left-xamarin...</a><p>A little old but I think I prefer RN&#x27;s disadvantages over Xamarin&#x27;s",2017-08-19 19:19:26
512,"I&#x27;m at a small, dying startup doing Xamarin mobile development and I&#x27;m looking to pivot out of xamarin&#x2F;mobile and into web and data. I am learning online and doing a side project on github, but I don&#x27;t have experience making this kind of transition. I&#x27;ve thrown on an infrequent job application not expecting much and gotten 0 responses. So I am curious what others who have made that sort of transition do to get noticed.
My previous job I found through a local meetup, but it was a framework&#x2F;language I was familiar with so they wanted&#x2F;needed me badly.",2017-09-05 01:55:44
513,Maybe someday xamarin can use this compiler,2017-09-07 07:27:41
514," definitely think that for a cross platform app, going all out with something like Cordova or React Native isn&#x27;t particularly smart.<p>Sooner or later, you are going to reach a point where you need to use a feature of the underlying OS which your abstraction layer doesn&#x27;t support well (or at all) and will end up having to make a horrible compromise<p>I cant really speak for Cordova but one of the strengths of React Native is that you can drop to native code relatively easily. Ive done this in the past for projects and its not been a problem.<p>Can you give a specific example of such a compromise?<p>I personally like Xamarin. Xamarin.Android and Xamarin.iOS get you as close to native as you can get, while still allowing you to share a fair amount of code between the platforms<p>Id say the biggest problem with xamarin, aside from debugging, is that all your developers need to learn c# right?<p>At least with the other approaches (article, Cordova, react native) mentioned they can use languages used by the target platforms (web, mobile).",2017-09-11 12:03:14
515,"You&#x27;re comparing cordova with RN, and then you&#x27;re saying xamarin is totaly different. It&#x27;s not. RN are native components.
In NativeScript it&#x27;s the same + you get easy access to native apis",2017-09-11 12:39:28
516,"C# reflection is also slow, and even slower in Unity3D with the IL2CPP ahead-of-time compiler, where there is no just-in-time compiler or System.Reflection.Emit to dynamically generate code at runtime (which is impossible and prohibited on iOS, for example).<p>Here are the limitations of the Mono runtime:<p><a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;advanced_topics&#x2F;limitations&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;advanced_topics&#x2F;lim...</a><p>However, there are ways of compiling the little snippets of the code you need ahead of time, then plugging them together with delegates at runtime, which avoids much of the overhead.<p>Much of the cost is the overhead of converting from unknown types to specific types. So you can pre-compile loosely typed adaptor thunks that take generic &quot;object&quot; arguments, convert them to the required type, and directly call strongly typed delegates (which you can plug into the adaptor, so adaptors can be used for any number of compatible delegates).<p>Check out how the following code uses FastInvoke, ToOpenDelegate, Delegate.CreateDelegate, Expression.GetActionType, and 
 Expression.GetFuncType.<p>It may be that some of these general techniques could be applied to Java.<p>Faster Invoke for reflected property access and method invocation with AOT compilation:<p><a href=""https:&#x2F;&#x2F;web-beta.archive.org&#x2F;web&#x2F;20120826100615&#x2F;http:&#x2F;&#x2F;whydoidoit.com&#x2F;2012&#x2F;04&#x2F;18&#x2F;faster-invoke-for-reflected-property-access-and-method-invocation-with-aot-compilation"" rel=""nofollow"">https:&#x2F;&#x2F;web-beta.archive.org&#x2F;web&#x2F;20120826100615&#x2F;http:&#x2F;&#x2F;whydo...</a><p>The bane of the iOS programmers life, when working with reflection in Mono, is that you cant go around making up new generic types to ensure that your reflected properties and methods get called at decent speed. This is because Mono on iOS is fully Ahead Of Time compiled and simply cant make up new stuff as you go along. That coupled with the dire performance of Invoke when using reflected properties lead me to construct a helper class.<p>This works by registering a series of method signatures with the compiler, so that they are available to code running on the device. In my tests property access was 4.5x faster and method access with one parameters was 2.4x faster. Not earth shattering but every little helps. If you knew what you wanted ahead of time, then you could probably do a lot better. See here for info.<p>You have to register signatures inside each class Im afraid. Nothing I can do about that.<p>So to register a signature you use:<p><pre><code>    static MyClass()
    {
         &#x2F;&#x2F;All methods returning string can be accelerated
         DelegateSupport.RegisterFunctionType&lt;MyClass, string&gt;();         
         &#x2F;&#x2F;All methods returning string and taking an int can be accelerated
         DelegateSupport.RegisterFunctionType&lt;MyClass, int, string&gt;();    
         &#x2F;&#x2F;All methods returning void and taking a bool can be accelerated
         DelegateSupport.RegisterActionType&lt;MyClass, bool&gt;();             
    }
</code></pre>
Then when you have a MethodInfo you use the extension method
FastInvoke(object target, params object[] parameters) to call
it. FastInvoke will default to using normal Invoke if you havent
accelerated a particular type.<p>myObject.GetType().GetProperty(&quot;SomeProperty&quot;).GetGetMethod().FastInvoke(myObject);<p>myObject.GetType().GetMethod(&quot;SomeMethod&quot;).FastInvoke(myObject, 1, 2);<p>You can download the source code for FastInvoke from here.<p><a href=""https:&#x2F;&#x2F;web-beta.archive.org&#x2F;web&#x2F;20120826100615&#x2F;http:&#x2F;&#x2F;www.whydoidoit.net&#x2F;Downloads&#x2F;DelegateSupport.cs"" rel=""nofollow"">https:&#x2F;&#x2F;web-beta.archive.org&#x2F;web&#x2F;20120826100615&#x2F;http:&#x2F;&#x2F;www.w...</a><p>Newer version from unityserializer-ng:<p><a href=""https:&#x2F;&#x2F;gitgud.io&#x2F;TheSniperFan&#x2F;unityserializer-ng&#x2F;blob&#x2F;master&#x2F;Assets&#x2F;Plugins&#x2F;OpenUnityTools&#x2F;unityserializer-ng&#x2F;Radical&#x2F;System&#x2F;Delegates&#x2F;DelegateSupport.cs"" rel=""nofollow"">https:&#x2F;&#x2F;gitgud.io&#x2F;TheSniperFan&#x2F;unityserializer-ng&#x2F;blob&#x2F;maste...</a>",2017-09-14 11:58:50
517,C# things : xamarin &amp; mono,2017-09-26 18:46:13
518,"I am referring to those. If someone just tries to make Swift the platform, I think they will have to put as much thought into their tooling as xamarin, cordova, etc.",2017-09-28 19:45:55
519,"That doesn&#x27;t seem to fit with what OP wants, being able to deploy to Windows, macOS and Linux. According to Xamarin&#x27;s website[1] Xamarin.Forms is:<p>&quot;Xamarin.Forms is a cross-platform UI toolkit that allows developers to easily create native user interface layouts that can be shared across Android, iOS, and Windows Phone.&quot;<p>[1]<a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;xamarin-forms&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;xamarin-forms&#x2F;</a>",2017-10-04 20:23:23
520,"As some one who has written cordova apps they often times are also good enough. There are cordova apps in the 4.5 range with 100&#x27;s of reviews.<p>Life rpg was one that I remember (now its down to 3.9).<p>The alternative isn&#x27;t writing two native apps, the alternatives are cordova, react-native and xamarin.<p>Frankly I haven&#x27;t other people&#x27;s compatibility issues with react native.",2017-10-07 04:32:01
521,"Are you referring to free provisioning? My understanding [1] is that it is only for temporary testing an app on the device, you can&#x27;t leave the app permanently, you have to reinstall it regularly.<p>And you still have to pay a yearly fee, which creates a high barrier to entry for non professionals.<p>[1] <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;getting_started&#x2F;installation&#x2F;device_provisioning&#x2F;free-provisioning&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;getting_started&#x2F;ins...</a>",2017-10-07 06:06:25
522,"I know the feeling; several years ago my mom bought a Windows Lumia phone for $30 new, the hardware specs were nice, but the apps were just non existent, and though it&#x27;s gotten 1000 times better its still very lacking. Also the camera is surprisingly high quality and fast.<p>My 5S is going to cost $50 for a new battery and screen - and it&#x27;s still worth a few hundred more new; however her phone&#x27;s HW specs are still mostly better than mine, except I think the RAM which is the same.<p>A year ago I remember thinking If microsoft wanted to save windows 10 mobile&#x27;s life I think they should have put a large amount of that cross-platform smartphone programming effort into trying to make Win10 Mobile capable of running some android apps, the desktop version has a linux subsystem after all. that way they could have expanded their user base and made it a more attractive platform, especially with the lower cost.<p>Making 10 Mobile decently Popular for any reason would have given developers a good reason to switch to xamarin for developing native apps on every platform, win-win.<p>Alas they didn&#x27;t do anything encouraging enough to grasp that potential double benefit...",2017-10-11 08:35:49
523,"I assume there&#x27;s plenty of options... Qt or gtk bindings, electron, etc<p>Looks like Xamarin is building full cross-platform support via XAML<p><a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;</a><p>Avalonia seems like a straightforward reimplementation of WPF that is already usable.<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia</a><p>DotVVM is working on electron support, and I work with it already. I like it.<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;riganti&#x2F;dotvvm-electron"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;riganti&#x2F;dotvvm-electron</a>",2017-10-12 14:47:19
524,"The main reason i move from c# to typescript js because c# not working on client side web. I love c#, maybe if dotNetAnywhere is ready for production, i start using c# again. Keep the good work. Maybe someday aspcore, xamarin and dotNetAnywhere. It would be awesome",2017-10-20 17:08:58
525,"Why slack desktop use electron? Slack mobile app using xamarin. Why they not porting from mobile app to desktop? U must learn electron, and also not running on native",2017-10-30 21:44:35
526,"I have more than +20 years of experience building software. Mostly, as contractor and &quot;ghost&quot; developers. Apps for Government, private sector and other startups&#x2F;software companies. Hired to do refactoring, tech upgrades and rewrites in the same or another language. Full stack. Competent english.<p>Location: Envigado&#x2F;Colombia (close to medellin)
Remote: YES!<p>Willing to relocate: No<p>Technologies:<p>Python (django, django rest framework, flask), F#, C#, iOS (swift, objective-c, xamarin), windows&#x2F;osx native apps (delphi, .net), RDBMS (PostgreSQL, Sql Server, Sqlite, Firebird, others...)<p>Rsum&#x2F;CV:<p><a href=""https:&#x2F;&#x2F;stackoverflow.com&#x2F;story&#x2F;mamcx"" rel=""nofollow"">https:&#x2F;&#x2F;stackoverflow.com&#x2F;story&#x2F;mamcx</a><p>Email: mamcx@elmalabarista.com &#x2F; www.elmalabarista.com",2017-11-01 18:42:42
527,"Maybe non-Xamarin-employee interest has declined sine the announcement of Xamarin Forms coming to the desktop?<p><a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;</a> (2017May)",2017-11-03 12:28:10
528,"<a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms</a><p>Mac desktop support is in preview (<a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;preview-bringing-macos-to-xamarin-forms&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;preview-bringing-macos-to-xamarin-f...</a>), and Linux and WPF backends are in development. So ... almost there!",2017-11-03 13:15:50
529,"Xamarin.Mac is the project emcompassing bindings from Cocoa (i.e. native macOS) to Mono&#x2F;.NET, the interface with Xcode for building Cocoa UIs, and Visual Studio for Mac (previously called Xamarin Studio). Essentially, Xamarin.Mac allows you to build C# applications that run on macOS with native macOS user interface elements. See e.g. <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;your-app-on-66-million-macs-c-sharp-on-mac&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;your-app-on-66-million-macs-c-sharp...</a>",2017-11-03 13:34:28
530,"From the roadmap linked in that blog post:<p>Xamarin Forms Gtk# Backend - <a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms&#x2F;pull&#x2F;1174"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms&#x2F;pull&#x2F;1174</a><p>It&#x27;s all floating out there right now but maybe by end-of-year (&quot;Q4 2017&quot;) there will be something solid. This uncertainty promises enough to keep people like me from evaluating alternatives.",2017-11-03 15:16:36
531,"i know this is a haskell thread but after trying to grok haskell for years (yes i understand monads) i&#x27;ve discovered F# and jesus christ what a dramatic difference in functional language ergonomics and tooling and ecosystem. it has everything that haskell does (ADTs, type inference, immutability [when you want it], lazy [or eager] eval, pattern matching&#x2F;destructuring, expression based, and partial application&#x2F;curried functions) but it doesn&#x27;t handcuff you to pure (side-effect free) code. say what you want but often writing code in haskell is monad acrobatics because you can&#x27;t write a simple for loop or do i&#x2F;o. the tooling is fantastic and cross platform (visual studio&#x2F;xamarin) with a real debugger, real breakpoints, lightyears better docs, readable compiler errors, enormous ecosystem by way of interop with c# libraries. it&#x27;s an eminently practical functional language. the `F# for fun and profit` series of blogposts is fantastic for not only introducing the language but explaining the value proposition of functional patterns. of course i wish ocaml had the same advantages (and it does have many) since it compiles to native binary but i&#x27;ll accept the CLI in exchange for all the tooling benefits.",2017-11-19 18:59:16
532,"&gt;Sure, but the option of third party app stores opens also option of sideloading. In the case of Apple, when Apple says no, you are without the app, period.<p>This is a non-issue that people have brought up countless times. First of all, are we in agreement that app stores and other legal entities have to obey local laws? So your point is moot. Side loading is possible on iOS. You dont even need to own a Mac to develop for iOS. [1,2,3,4] There is also the open web to fall back on.<p>And you are incorrect about user tracking. Just a day ago Google was caught tracking users even when location services are turned off. [5] And please educate yourself about modern ad tracking [6]<p>[1] <a href=""https:&#x2F;&#x2F;www.outsystems.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.outsystems.com</a><p>[2] <a href=""https:&#x2F;&#x2F;www.xamarin.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com</a><p>[3] <a href=""https:&#x2F;&#x2F;cordova.apache.org"" rel=""nofollow"">https:&#x2F;&#x2F;cordova.apache.org</a><p>[4] <a href=""https:&#x2F;&#x2F;www.xojo.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.xojo.com</a><p>[5] <a href=""https:&#x2F;&#x2F;qz.com&#x2F;1131515&#x2F;google-collects-android-users-locations-even-when-location-services-are-disabled&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;qz.com&#x2F;1131515&#x2F;google-collects-android-users-locatio...</a><p>[6] <a href=""https:&#x2F;&#x2F;donttrack.us&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;donttrack.us&#x2F;</a>",2017-11-22 23:35:11
533,"As a full time web developer, I liked the idea of electron. Even if I dislike electron apps that I need to use at work (like slack memory glutton).<p>It gave me the impression that I can build desktop app faster by reusing my skills. When it was time to build some side project, I did them in electron.<p>Recently I decided to learn c#, for unity initially, but I decided to try xamarin. This change all my perceptions. Not only building the core was way more enjoyable that with js&#x2F;babel&#x2F;nameit. Prototyping the native interface was faster, and developing the final UI was also more productive. Not to mention the final product looked better.<p>Comparing developer productivity is hard, but based on my own experience, I would say that it would have taken twice the time on electron the finish the same app in the same time. Compare to my other similar electron project, it load faster, dont use cpu cycle on idle and consume  of memory.<p>Maybe there is better idea than xamarin, but at least is seems like a better idea than electron. Now I see more electron as a fast way to have a webapp on the desktop or a fad based excuse to not learn something new.<p>On the other hand, calling a &quot;cancer&quot; is quite absurd.",2017-11-23 16:07:21
534,"Hi HN, I have a request, I know it&#x27;s not stackoverflow, I checked but I haven&#x27;t found a solution to our problem yet. :&#x2F;
Basically we are a startup, started from scratch, and built a platform for tourism. We chose to work with xamarin (yeah I know bad choice). Here is how the app works : You see a map, with points to discover, and when you get near the point, there is a range setup to unlock a notification that gives you some information on the point of interest. Kind of a cultural and historic treasure hunt. Now we are hitting a wall as notifications on Ios get unlocked when you are very far from the point of interest. On android it works very well. If anyone has experience with this please help :)",2017-12-09 04:53:40
535,"Hi Mike, sorry for the late reply, I&#x27;m in exam&#x27;s rush :P<p>here is what we are using de determine the range: <a href=""https:&#x2F;&#x2F;github.com&#x2F;domaven&#x2F;xamarin-plugins&#x2F;tree&#x2F;master&#x2F;Geofence"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;domaven&#x2F;xamarin-plugins&#x2F;tree&#x2F;master&#x2F;Geofe...</a><p>Thanks for reaching out.",2017-12-15 20:27:35
536,Another option could be they&#x27;ll blanket ban only xamarin.forms apps and allow older xamarin.ios in a case by case basis.<p>I think that&#x27;s fair. Xamarin.Forms is mostly for internal corporate apps which I&#x27;m sure you can still deploy within your organization yourself.,2017-12-19 11:03:40
537,".NET core is lacking so many features it&#x27;s ridiculous, we&#x27;ve had to downgrade 2 projects recently because even MS Azure service APIs weren&#x27;t supported - if you have to work with .NET avoid core and save your self the hassle - it&#x27;s still alpha quality in many aspects after years since &quot;1.0&quot;. I regret pursuing .NET career at this point, all recent developments on the platform are a joke - despite the praise they get for OSS moves. I&#x27;m moving towards frontend these days just to get away from this mess (ironic considering how messy frontend is - should tell you enough about state of .NET core&#x2F;xamarin)",2017-12-24 15:20:23
538,"What about virtual hackintosh?<p>My use case is building multiplatform apps with xamarin, and so I need a machine running osx somewhere for the apple build, and to verify performance on an actual ios device.<p>I had a 2016 mbp but spilled wine on it, so now I&#x27;ve only got my shoddy older macbook that limps along at best. I do, however, have a 2017 NUC with plenty of storage and ram, but that&#x27;s my main dev box so I&#x27;d rather keep it linux...",2017-12-28 11:59:29
539,"The reason why I not fully believe in it is that there is no huge benefit to the parties for supporting a thing like themer. UIs are highly custom and if X companies make a product seperately you will have as many implementations of the theme keys and variables.<p>The comparison to mobile development comes to mind. There are cross platform options like cordova or xamarin but they are usually beaten by native implementations. Now, if the cost of doing things twice outweights by large the drop in quality it is still a viable option; hence their existance. However, with themes Id say the cost of redoing is most likely not outweighting developping in the native application option.",2018-01-01 20:18:52
540,"For example xamarin&#x27;s fork of Cocos2D.<p>Or companies adding closed source features to open source software. You can&#x27;t do that with GPL unless you own all the code.<p>The classic business plan for software is to charge per license&#x2F;copy. But if you release your software for free, you have to sell something else. And anyone who come up with a good solution for this will be the next unicorn.",2018-01-11 10:59:29
541,"&gt; It is an open platform. You are just as productive as a developer on Unix and Mac OS X as you are on Windows.<p>How is that any different from .Net core? Open platform, check (1) productive on those platforms, check (2)<p>&gt; buggled into a big IDE like it is on C#.<p>Nope. dotnet cli is fine standalone (3)<p>&gt; Deploying on Unix is a standard thing, not an experimental feature.<p>Um, it might be fairly new but I would not call that platform target &quot;experimental&quot; any more. It&#x27;s in version 2 now<p>&gt;  And finally there is Android.<p>Yes there is. I know teams that write in C# for Android and iOS. (4)<p>C# is late to the party in this regard. But what you are saying isn&#x27;t correct.<p>1) <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet</a><p>2) <a href=""https:&#x2F;&#x2F;code.visualstudio.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;code.visualstudio.com&#x2F;</a><p>3) <a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;core&#x2F;tools&#x2F;dotnet?tabs=netcore2x"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;core&#x2F;tools&#x2F;dotnet?ta...</a><p>4) <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a>",2018-02-11 18:51:43
542,"So, how &quot;easy&quot; is to interface flutter with swift&#x2F;java&#x2F;xamarin or similar?<p>I could live with a &quot;small&quot; dls if is constrained to UI rendering and let me do the logic on a more native lang...",2018-02-26 20:04:33
543,"There&#x27;s been a C dart FFI for years. Communicating with whichever other system shouldn&#x27;t be any harder than the next language. None of those would be my first choice though. The less platform specific code you write, the fewer platform specific issues you&#x27;ll be dealing with. Plus xamarin isn&#x27;t native anywhere.<p>With Flutter apps using the AOT, performance should already be good. Here&#x27;s an interesting real world comparison between libsass (a C library) and dartsass.<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;sass&#x2F;dart-sass&#x2F;blob&#x2F;master&#x2F;perf.md"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;sass&#x2F;dart-sass&#x2F;blob&#x2F;master&#x2F;perf.md</a><p>From the Flutter FAQ<p><a href=""https:&#x2F;&#x2F;flutter.io&#x2F;faq&#x2F;#"" rel=""nofollow"">https:&#x2F;&#x2F;flutter.io&#x2F;faq&#x2F;#</a><p>&gt; How does Flutter run my code on Android?<p>&gt; The engines C&#x2F;C++ code is compiled with Androids NDK, and any Dart code is AOT-compiled into native code. The app runs using the native instruction set (no interpreter is involved).<p>&gt; How does Flutter run my code on iOS?<p>&gt; The engines C&#x2F;C++ code is compiled with LLVM, and any Dart code is AOT-compiled into native code. The app runs using the native instruction set (no interpreter is involved).<p>&gt; Can I access platform services and APIs like sensors and local storage?<p>&gt; Yes. Flutter gives developers out-of-the-box access to some platform-specific services and APIs from the operating system. However, we want to avoid the lowest common denominator problem with most cross-platform APIs, so we do not intend to build cross-platform APIs for all native services and APIs.<p>&gt; A number of platform services and APIs have ready-made packages available in the Pub repository. Using an existing package is easy.<p>&gt; Finally, we encourage developers to use Flutters asynchronous message passing system to create your own integrations with platform and third-party APIs. Developers can expose as much or as little of the platform APIs as they need, and build layers of abstractions that are a best fit for their project.",2018-02-26 22:22:33
544,"Having a scripting layer is ok-ish, but then you can&#x27;t use your native lang (swift, .net&#x2F;xamarin, java, etc).<p>So this mean that to have &quot;cross-platform <i>UIs</i>&quot; you MUST commit to a inferior language glue. Js is bad, Dart is better, but Swift&#x2F;C#&#x2F;F# is WAY better.",2018-02-27 16:52:10
545,"No, the efficacy of the direct GL canvas native bindings and the view composition architecture are why it&#x27;s efficient. Yes, there&#x27;s little runtime language overhead because it&#x27;s AOT compiled, but that alone wouldn&#x27;t cause it to win over another AOT compiled mobile device strategy, such as an AOT xamarin project. (And all the other points in that article apply equally to xamarin, for example; and some are just opinion like the xml vs code for layout debate) I&#x27;m sorry, but I don&#x27;t see how any of flutter&#x27;s real performance wins are truly tied to its&#x27; choice of language, and it&#x27;s a competitive market. I&#x27;ll be happy if I&#x27;m proven wrong in a year or two&#x27;s time, however.",2018-02-27 18:22:57
546,"Disclaimer: I work on Flutter<p>Xamarin currently manipulates OEM SDKs&#x27;s bundled widgets <a href=""https:&#x2F;&#x2F;visualstudiomagazine.com&#x2F;articles&#x2F;2017&#x2F;12&#x2F;04&#x2F;flutter-challenges-xamarin.aspx"" rel=""nofollow"">https:&#x2F;&#x2F;visualstudiomagazine.com&#x2F;articles&#x2F;2017&#x2F;12&#x2F;04&#x2F;flutter...</a><p>Though there is a proof of concept running Xamarin with portable custom widgets on Skia <a href=""https:&#x2F;&#x2F;xamarinhelp.com&#x2F;skixam-skiasharp-platform-xamarin-forms-proof-concept&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;xamarinhelp.com&#x2F;skixam-skiasharp-platform-xamarin-fo...</a>",2018-02-27 21:18:17
547,"These exist.<p>* <a href=""https:&#x2F;&#x2F;aws.amazon.com&#x2F;device-farm&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;aws.amazon.com&#x2F;device-farm&#x2F;</a><p>* <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;test-cloud"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;test-cloud</a><p>* <a href=""https:&#x2F;&#x2F;bitbar.com&#x2F;testing&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;bitbar.com&#x2F;testing&#x2F;</a><p>* <a href=""https:&#x2F;&#x2F;saucelabs.com&#x2F;devices"" rel=""nofollow"">https:&#x2F;&#x2F;saucelabs.com&#x2F;devices</a>",2018-03-09 04:52:55
548,"I think react native is a good recommendation for a react dev who wants to do cross platform development on mobile.<p>If you&#x27;re not a web dev it&#x27;s not a great fit.  You&#x27;ll have to deal with learning web, learning mobile, and as well as all learning all of react-native&#x27;s leaky abstractions.<p>Sounds like a nightmare.  I&#x27;d go with either native(Java&#x2F;swift) dev or if you have c#&#x2F;wpf experience then maybe xamarin.",2018-03-10 22:38:52
549,"Windows forms is based on decides old WinApi. There&#x27;s some support for styling there, e.g. owner drawn items, custom painted controls, but using it correctly is tricky as hell.<p>WPF is based on Direct3D 9,  and is easily stylable. I consider it is the gold standard. But it is Windows only. There are cross platform alternatives, xamarin, avalonia, but I don&#x27;t have hands on experience with them.",2018-03-18 15:23:11
550,"Unity can use .NET 4.6 now. It wasn&#x27;t because they were slowpokes, xamarin would not license it to them until they were acquired by Microsoft.",2018-03-25 18:50:44
551,"Something like <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;</a> ?",2018-03-27 16:06:22
552,And what&#x27;s your experience vs xamarin ?,2018-04-12 08:05:45
553,"Okay, trying xamarin soon. I&#x27;d like to add for fellow readers that Xamarin has 2 implementation for cross platform development:<p>- Xamarin Forms<p>- Xamarin Native<p>Where forms has the most shared code features ( Dev efficiency). Fyi, the op is talking about Xamarin Native",2018-04-12 11:05:27
554,"About GUI on .NET Framework:<p>- Windows form works but not perfect. The editor works if you install the template for it, but not the auto generation of code, like double click on button -&gt; handler generated. You write code programmatically. but is used a lot. I use it in the repl (fsi), to generate chart, custom data visualization.<p>- WPF the same, works, no editor (but codegen is less needed)<p>- Xamarin support F# ( <a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;cross-platform&#x2F;platform&#x2F;fsharp&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;cross-platform&#x2F;plat...</a> ) on Forms, etc<p>Some good from community+MS, because community tried to adapt techonologies and make it more friendly to use in F#<p>- Xamarin XAML in Elmish style, really more idiomatic ( <a href=""https:&#x2F;&#x2F;github.com&#x2F;fsprojects&#x2F;Elmish.XamarinForms"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fsprojects&#x2F;Elmish.XamarinForms</a> ) from F# creator itself (Don Syme, who now work on xamarin division too)<p>- WPF and Xamarin xaml can be used with a type provider too for statically type view at compile type ( <a href=""http:&#x2F;&#x2F;fsprojects.github.io&#x2F;FsXaml&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;fsprojects.github.io&#x2F;FsXaml&#x2F;</a> )<p>The only one not yet supported is UWP, because of of .NET Native.<p>All that without speaking of the gui stack outside .net framework, like electron+fable or just fable+elmish&#x2F;react&#x2F;react.native ( <a href=""https:&#x2F;&#x2F;github.com&#x2F;SAFE-Stack&#x2F;SAFE-Nightwatch"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;SAFE-Stack&#x2F;SAFE-Nightwatch</a> )",2018-04-20 13:47:14
555,"I was just thinking about the &#x27;full circle&#x27; today.<p><i></i>OSes of the past<i></i>:  Windows, Variations of Unix&#x27;s,<p><i></i>OSes of 2018<i></i>: Android, IOS, All Varations of Browsers, plus all the old ones<p>---<p><i></i>Cross platform (cross-os) development of the past<i></i>:  nasty (Widget libraries (wxWindows, QT, ... ), os-abstraction libs )<p><i></i>Cross platform  development of 2018<i></i>:  nasty still (react-native, xamarin, etc .. )<p>---<p><i></i>Development pipeline tools of the past<i></i>:  Automake&#x2F;cmake, make, linker<p><i></i>Development pipeline tools of 2018<i></i>:  npm, webpack<p>---<p><i></i>Compiler front ends of the past<i></i> (things that produce assembler or low-level C or stack-machine codes):  various C++ front ends, Eifel, etc<p><i></i>Compiler front ends of 2018<i></i> (things that spit out javascript):   babel (more like macro-assembler), Clojurescript, ReasonML, Fay, Nim .. ,etc<p>---<p>In current times, we also added Wireframe&#x2F;Styling tools into our development pipeline (I do not think we had it in the past).  Eg Bootstrap and other styling (that are not integrated into &#x27;compile-time-verification&#x27; stage of the modern Front-end languages.<p>I realize that above is somewhat front-end-dev oriented, but I think the desire to share &#x27;same language&#x27; for front and backend development, causes the blur.<p>I also would add that for data crunching and data distribution (eg CORBA, DRPC) of the past -- we have gained more options, higher quality and free.  So I would say this is a material advance for our productivity.",2018-04-23 14:57:52
556,"Incorrect. Provisioning profiles created by free Apple developer accounts only last for 7 days. After that you have to fire up Xcode and rebuild your app and reinstall it.<p>This is a very well known fact that you can find documentation for on many sites outside of apple.com, such as right here - <a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;ios&#x2F;get-started&#x2F;installation&#x2F;device-provisioning&#x2F;free-provisioning#limitations"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;ios&#x2F;get-started&#x2F;ins...</a><p>The sad fact is that it&#x27;s not your phone, it&#x27;s Apples.",2018-05-02 16:28:36
557,"I&#x27;ll have to look into that. I have a WinForms app I&#x27;d love to run on a Linux machine. (Or more specifically, one of my Windows machines I run it on I&#x27;d rather be running Linux.)<p>I have to have a UI, but the UI is not sophisticated, and could likely be migrated to another UI framework without too much pain.<p>Although... Xamarin still doesn&#x27;t play nice with VB does it? Fun: <a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;cross-platform&#x2F;platform&#x2F;visual-basic&#x2F;xamarin-forms"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;cross-platform&#x2F;plat...</a>",2018-05-07 17:13:31
558,"Xamarin (the code) is open source[0].  Only the bells and whistles (live code preview, integration with VS&#x2F;VS4M, etc.) are closed source.  I think.<p>[0] <a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms</a> ; <a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-android"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-android</a> ; <a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-macios"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-macios</a>",2018-05-21 18:00:23
559,"What&#x27;s the point of this? Xamarin is cross platform and a lot more &quot;lightweight&quot; than this will ever be. xamarin.forms supports mac, windows (uwp right now, wpf soon), GTK, Android and iOS.",2018-05-25 14:42:01
560,They bought xamarin and then made it open source and free. They also have continued to support mono despite having .net core,2018-06-03 21:24:40
561,Can you tell us a bit about your Xamarin experience?<p>I want to create an app where the users would be regular mom and pop- my primary users would be windows and Android and a few iOS (iphone).<p>Would you recommend I go the Xamarin way?<p>Who is xamarin good for and who not?,2018-06-05 14:14:34
562,Thanks for your very helpful and detailed reply.<p>I take it that you didn&#x27;t compare xamarin  to anything besides pwa- I&#x27;m assuming it&#x27;s your way of saying that anything else you evaluated didn&#x27;t stand up to xamarin?<p>Please let us know if there are any helpful getting started pointers and also for pitfalls.<p>Right now PWA is not something I&#x27;m considering although I see how they are the future (and am glad they are),2018-06-05 15:28:21
563,"Using Stack Overflow tag trends to compare Swift to the other languages and technologies listed in the article, Swift is still on top.  React Native is climbing fastest, and is almost half-way to where Swift is today.<p><a href=""http:&#x2F;&#x2F;sotagtrends.com&#x2F;?tags=[swift,objective-c,xamarin,cordova,react-native,ionic-framework]"" rel=""nofollow"">http:&#x2F;&#x2F;sotagtrends.com&#x2F;?tags=[swift,objective-c,xamarin,cord...</a>",2018-06-06 19:07:07
564,"The vast majority of his career has been leading open source projects and companies.  You really can&#x27;t do that successfully without deeply getting open source philosophy and culture.  The most talented open source devs simply won&#x27;t work for you otherwise.<p>While Mono itself wasn&#x27;t widely adopted, it was the code base that Xamarin came from, which _is_ quite widely adopted.  And Xamarin Studio (now Visual Studio for Mac) is built using the &quot;no adoption&quot; Mono.
<a href=""http:&#x2F;&#x2F;sotagtrends.com&#x2F;?tags=[mono,xamarin,monotouch,monodroid]"" rel=""nofollow"">http:&#x2F;&#x2F;sotagtrends.com&#x2F;?tags=[mono,xamarin,monotouch,monodro...</a>",2018-06-07 19:34:40
565,"Xamarin: <a href=""https:&#x2F;&#x2F;www.xamarin.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com</a><p>Xojo: <a href=""https:&#x2F;&#x2F;www.xojo.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.xojo.com</a><p>Flutter: <a href=""http:&#x2F;&#x2F;flutter.io"" rel=""nofollow"">http:&#x2F;&#x2F;flutter.io</a>",2018-06-13 03:47:34
566,"I used to think the mac mini was a better alternative when you could upgrade its memory.<p>Now I think is better wait for the next generation.<p>I&#x27;m really thinking in buying an mac for home use, and remote compiling with xamarin in the next year or so.<p>But it will depend of this next generation.",2018-06-14 17:19:36
567,"For desktop apps specifically + functional programming, F# is probably your best bet.  On Windows WPF is king, and F# works great.  For desktop apps on Linux and elsewhere, you can use Xamarin, GTKSharp, AvaloniaUI...and the list goes on.  Desktop apps are a strength of the .NET ecosystem.<p>Some links:<p><a href=""https:&#x2F;&#x2F;fsprojects.github.io&#x2F;FsXaml&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;fsprojects.github.io&#x2F;FsXaml&#x2F;</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;Prolucid&#x2F;Elmish.WPF"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Prolucid&#x2F;Elmish.WPF</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;GtkSharp&#x2F;GtkSharp"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;GtkSharp&#x2F;GtkSharp</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-macios"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-macios</a>",2018-06-28 20:58:14
568,"Not exclusive use, but here are some apps that contain the Xamarin code: <a href=""https:&#x2F;&#x2F;www.appbrain.com&#x2F;stats&#x2F;libraries&#x2F;details&#x2F;xamarin&#x2F;xamarin"" rel=""nofollow"">https:&#x2F;&#x2F;www.appbrain.com&#x2F;stats&#x2F;libraries&#x2F;details&#x2F;xamarin&#x2F;xam...</a>",2018-07-02 13:50:10
569,"after seeing what they did with xamarin, i would not be surprised if they did. but unlike xamarin, open sourcing github wouldnt help them gain more developers on their platform and i do not see any other business benefits. i would love to see this happen though",2018-07-02 21:29:18
570,"well, sure, if what you mainly work on is android, then it make sense that kotlin is getting hyped<p>that being said, for an outsider (i mainly do BI and DB stuff), it seem like xamarin (C# and F#), flutter (Dart), react native (reasonml) .. might seem like the options to investigate first nowadays<p>i think outside of android development, kotlin .. is not hyped at all",2018-07-05 15:56:48
571,I would suggest using xamarine platform to build native apps,2018-07-12 08:58:59
572,"On iOS, using the date input field gives you the date wheels which work well <a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;ios&#x2F;user-interface&#x2F;controls&#x2F;picker-images&#x2F;image9.png"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;ios&#x2F;user-interface&#x2F;...</a><p>On desktop the standard for forms seems to be either 3 text fields (Y&#x2F;M&#x2F;D) or 3 dropdowns with the possible Y&#x2F;M&#x2F;D numbers in them",2018-07-19 04:08:36
573,"Oracle went the wrong direction with unsafe. Unsafe memory access is a feature of .NET and the CLR, not a hidden API where you get reprimanded by the community for using it. Not surprisingly, c# has succeeded where Java has failed in being cross platform, used for instance in game development with the unity engine or multi platform mobile development via xamarin. On the other hand, no one in the .NET community is complaining that their code is segfaulting all the time.<p>The jdk API developers should not be granted a special API because they are more trustworthy than the rest of us &quot;average&quot; developers. Unsafe should be made public, not removed and replaced.",2018-07-29 23:04:31
574,"&gt;Not surprisingly, c# has succeeded where Java has failed in being cross platform, used for instance in game development with the unity engine<p>C# succeeded in game development? That&#x27;s its claim to fame? Being an optional scripting language used by Unity? The real work is done by the graphics engine that&#x27;s written in C++.<p>&gt;or multi platform mobile development via xamarin<p>Last time I checked the percentage of apps on the App Store and Google Play that were written with Xamarin tools were so low that they barely even registered.",2018-07-30 03:25:39
575,"It&#x27;s not optional, it&#x27;s the only language used in Unity by developers since UnityScript got deprecated.<p>At least Google Play has more apps in Xamarin[0] than in ReactNative[1] but RN is used in many top apps while Xamarin apps are mostly obscure.<p>[0]: <a href=""https:&#x2F;&#x2F;www.appbrain.com&#x2F;stats&#x2F;libraries&#x2F;details&#x2F;xamarin&#x2F;xamarin"" rel=""nofollow"">https:&#x2F;&#x2F;www.appbrain.com&#x2F;stats&#x2F;libraries&#x2F;details&#x2F;xamarin&#x2F;xam...</a><p>[1]: <a href=""https:&#x2F;&#x2F;www.appbrain.com&#x2F;stats&#x2F;libraries&#x2F;details&#x2F;react_native&#x2F;react-native"" rel=""nofollow"">https:&#x2F;&#x2F;www.appbrain.com&#x2F;stats&#x2F;libraries&#x2F;details&#x2F;react_nativ...</a>",2018-07-30 04:46:54
576,"Actually Xamarin proved otherwise.<p><a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;</a><p>Also .NET compact framework is not the same runtime as the .NET Framework, .NET MDIL (WP 8.x) or .NET Native (WP 10&#x2F;UWP).<p>Actually, thanks to being AOT compiled to native code, budget WP 8.x and WP 10 device, used to be faster than their Android counterparts on the same price range.",2018-07-30 17:46:14
577,"&gt; VM languages like Java and C# and native languages like Go.<p>Oh well this VM meme is getting old,<p><a href=""https:&#x2F;&#x2F;www.ptc.com&#x2F;en&#x2F;products&#x2F;developer-tools&#x2F;perc"" rel=""nofollow"">https:&#x2F;&#x2F;www.ptc.com&#x2F;en&#x2F;products&#x2F;developer-tools&#x2F;perc</a><p><a href=""https:&#x2F;&#x2F;www.excelsiorjet.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.excelsiorjet.com&#x2F;</a><p><a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;framework&#x2F;net-native&#x2F;getting-started-with-net-native"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;framework&#x2F;net-native...</a><p><a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;mac&#x2F;internals&#x2F;aot"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;mac&#x2F;internals&#x2F;aot</a><p><a href=""https:&#x2F;&#x2F;docs.unity3d.com&#x2F;Manual&#x2F;IL2CPP-HowItWorks.html"" rel=""nofollow"">https:&#x2F;&#x2F;docs.unity3d.com&#x2F;Manual&#x2F;IL2CPP-HowItWorks.html</a>",2018-07-31 06:27:58
578,"Thats not true either. Again there is an existence proof - Xamarin.<p>You can develop on Windows.<p><a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;ios&#x2F;get-started&#x2F;installation&#x2F;windows&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;ios&#x2F;get-started&#x2F;ins...</a><p>And use Microsofts hosted build environment for up to 40 hours a month for free.<p><a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;vsts&#x2F;pipelines&#x2F;agents&#x2F;hosted"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;vsts&#x2F;pipelines&#x2F;agents&#x2F;hoste...</a><p>The whole kerfuffle you are referring to is about 7 years out of date.",2018-08-04 17:57:26
579,"To make a build of a xaramin app for publishing to the iOS store dont you need a Mac at least for one stage? It looks like you do under the &quot;Archive for Publishing&quot; section here:<p><a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;ios&#x2F;deploy-test&#x2F;app-distribution&#x2F;app-store-distribution&#x2F;publishing-to-the-app-store?tabs=vswin"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;ios&#x2F;deploy-test&#x2F;app...</a><p>It&#x27;s also against ToS to virtualize OSX on non-Mac hardware as far as I know.<p>I don&#x27;t think they are just doing that for fun.",2018-08-07 07:43:04
580,"re Xamarin:<p>Only reloading your XAML or CSS is supported. With Dart, you can reload all your code, in the same way JS developers have had hot reload for ages now. I&#x27;m not sure if C# will be able to support this. This really leverages Dart&#x27;s roots in being interpreted, not compiled.<p><a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;xamarin-forms&#x2F;xaml&#x2F;live-reload"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;xamarin-forms&#x2F;xaml&#x2F;...</a><p><pre><code>  What changes does Live Reload redeploy?
  
  Live Reload only applies changes made to XAML or CSS. If you make changes to a C# file, a recompile will be required. Support for reloading C# is planned for a future release.</code></pre>",2018-08-07 20:03:18
581,"&gt;If that&#x27;s not possible, I&#x27;d be curious to learn what makes it not feasible. Fresh approaches to data processing are really desirable right now, since so many of us are working with data that is different from what language designers intended.<p>I wish to use instead swift, that hit a sweet spot. Using other lang (like python, that I loved!) make hard to target iOS&#x2F;Android. This is the main crux of mine. This mean that I need to re-code a lot of stuff across platforms and targets, because nothing is good enough. I also use xamarin&#x2F;F# and the integration with android&#x2F;ios is not as good as I imagine (ie: xamarin.forms sucks. And is damm hard to integrate yourself anything (ie: ios&#x2F;android libraries) outside it).<p>I also try with nim but is too crude and lack a lot of libraries I will need. I&#x27;m also thinking on using pascal, that I also like much, so now is just looking how good could be the use of rust...",2018-08-08 03:23:02
582,"I&#x27;ve thought that getting Xamarin Forms working on this thing could be interesting for jump-starting app development.  There&#x27;s already GTK support for XF[0][1].<p>[0] <a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;xamarin-forms&#x2F;platform&#x2F;gtk?tabs=vswin"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;xamarin-forms&#x2F;platf...</a><p>[1] <a href=""https:&#x2F;&#x2F;github.com&#x2F;jsuarezruiz&#x2F;forms-gtk-progress#gallery"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;jsuarezruiz&#x2F;forms-gtk-progress#gallery</a>",2018-08-09 19:13:50
583,what&#x27;s the point of posting this link ?? it&#x27;s old and even the &quot;new look at the question&quot; linked at the top is 3 years old...<p>are there any news regarding xamarin that makes this relevant ?,2018-09-09 00:02:03
584,"I don&#x27;t know where they got those numbers.  This graph seems more realistic to me [edit: maybe not - see subcomments]:<p><a href=""http:&#x2F;&#x2F;sotagtrends.com&#x2F;?tags=[ionic-framework,react-native,flutter,xamarin]&amp;relative=true"" rel=""nofollow"">http:&#x2F;&#x2F;sotagtrends.com&#x2F;?tags=[ionic-framework,react-native,f...</a><p>That is, Flutter is shooting up and overtaking Xamarin but still only half the popularity of React Native.  This also roughly correlates with mentions on Google Trends:<p><a href=""https:&#x2F;&#x2F;g.co&#x2F;trends&#x2F;y9Z8q"" rel=""nofollow"">https:&#x2F;&#x2F;g.co&#x2F;trends&#x2F;y9Z8q</a><p>On job websites React Native is way ahead - which you would expect given React Native&#x27;s headstart.  For example,  www.jobstreet.co.id currently has 43 jobs for &quot;React Native&quot; but only 5 for &quot;Flutter&quot;.",2018-09-20 03:34:44
585,"I used xamarin a few years ago for a moderately sized iOS app. It got me about 95% there. That last few percent was brutal, the app kept crashing after coming back from the contact chooser. Couldn&#x27;t find a way around it, even with latest xamarin version, hot fixes. Was very unfortunate. I&#x27;m pretty skeptical of frameworks that abstract away a whole system. Hopefully, xamarin is a lot more stable and powerful these days.",2018-09-21 02:29:47
586,I wonder if blazor+pwa isn&#x27;t going to be what makes xamarin unecessary. It&#x27;s still a few years ahead though.,2018-09-21 06:28:15
587,"Okay hold on, Xamarin forms doesn&#x27;t just work. That is a bold faced lie. Xamarin, like many other languages and frameworks has its share of zealots. Coming from a basically agnostic position on mobile development technologies I have found Xamarin to be pretty difficult to work with.<p>Doing UI work in Xamarin is incredibly verbose while at the same time being underpowered. It certainly does not just work. To give you a better idea of the real state of Xamarin we are JUST NOW getting the ability to underline text <a href=""https:&#x2F;&#x2F;xamarinhelp.com&#x2F;hyperlink-in-xamarin-forms-label&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;xamarinhelp.com&#x2F;hyperlink-in-xamarin-forms-label&#x2F;</a>.<p>But Xamarin is chock full of other gotchas. A few off the top of my head:<p>- there is no real file picker (even third party) let alone a great file picker that can pick files locally and remotely (like from google drive).<p>- there are a surprisingly limited number of controls available and native or not they often look terrible.<p>-  build times average one to two minutes and the debugger doesn&#x27;t work about 50% of the time.<p>- a lot of APIs that you think are supported are not. for example, they say System.Drawing is supported but it&#x27;s not. So what you end up doing is writing custom implementations for each platform.<p>I could go on but suffice it to say developing in Xamarin is not something that just works. It ONLY works because developers spend a great deal of time making sure that it works.<p>As an aside, for my next Xamarin project I am considering doing the UI in a WebView while using C# as the back end. It would be more like a web application than a Xamarin application which would hopefully mean a nicer UI while still being able to leverage C#.",2018-09-21 11:43:56
588,"Alright, so I just made a run of it and verified it all works.
As you say, the tutorial from Microsoft is for VS[0], but it actually talks about the android emulator, which is the same thing that Android Studio uses, just make sure you update it to latest, atm it&#x27;s 27.3.10
Admittedly, the startup time seems a bit longer than with HAXM, but otherwise the emulation is pretty responsive.
[0]<a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;android&#x2F;get-started&#x2F;installation&#x2F;android-emulator&#x2F;hardware-acceleration?pivots=windows"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;android&#x2F;get-started...</a>",2018-09-26 01:47:08
589,"&gt; Next stop, making UWP crossplatform :))<p>they do not need.
they have xaml over xamarin.forms, which supports all major platforms (including desktopn and mobile)
it still says that its in preview however the only things that did not work well is when you need some kind of file interaction with the os, you need to create native views for all your OSs (i.e. NSFilePicker, OpenFileDialog, etc..) since there is no Xamarin.Forms widget for that. besides that it is already really mature.",2018-10-02 20:34:33
590,"Were a .net house, or we see to be, so I should be embracing this like you are. Im not though, not because its not cool and all, but because js front end has so many things that arent in .net.<p>I mean, where is the graphql and Apollo like functionality in .net?<p>How do you make a pretty reactive frontend easier and faster with .net compared to vue&#x2F;react&#x2F;angular?<p>How big does the browserbased app get when it has to load .net libraries?<p>Maybe Im just not seeing it, but I honestly think what laravel is doing with PHP on the backend and vue on the front end is the brilliant way of approaching web apps and I think what Microsoft is doing with web assembly is going to be a needlessly complicated mess thats really, really unproductive in terms of time to market. And I think they are mainly doing it because Microsoft never made their own JS front end.<p>Ive been following it for a while too, and I see a lot of the xamarin disaster in it.",2018-10-04 05:09:50
591,"Its not, not really, but it runs a lot of enterprise and reschooling developers is really expensive. I know, because were in the process of going from almost exclusively c# to mostly node.js and powershell scripts with orchestra and SSIS.<p>The fact that Microsoft keeps doing things like core 1, the 2, xamarin and now this web assembly stuff made the business case for changing better though. Because staying up to date on c# has also become expensive.<p>Still, stuff like AD and ADFS, msSQL and windows servers are the backbone in a lot of enterprise, and C# integrates really easily in that environment. I still think node.js, powershell and SSIS does it better, but I can certainly see why c# is still a thing.",2018-10-04 05:13:34
592,"Im not sure whos downvoting you, but it sure isnt managers whos paid for people getting re-educated in asp, then mvc and razor, then web-api, then xamarin, then core 1, then core 2 and thats just to name a few.<p>Hell, its still not easy for people to deploy a .net core web api and run it in an IIS installed with basic settings. You can laugh at it, but thats 80% of the damn workforce who doesnt know how to do that.<p>I mean, the JS environment changes, but I havent had to pay for anyone getting reschooled since we swapped to JS.",2018-10-04 12:37:36
593,"My take on this is because Microsoft cannot match google&#x27;s monetize scheme, and afaik this is the reason wphone can&#x27;t be cheaper than android. Furthermore there already iphone on premium level that replace blackberry at that time.<p>They need to target for specific market segment (lets say phones for corporate and office, or phone for developer) that has minimum apps (whatsapp, etc) and easy to port from other platform (ex: from xamarin &#x2F; android app). Of course they need to rethink the monetization scheme to match android&#x27;s price.",2018-10-06 13:28:40
594,"MS owns xamarin now, so I think also mono?",2018-10-10 21:51:57
595,"oh, i see what you mean now. from my understanding, .net core 3.0 will start to make .net core the primary choice of development for new projects on windows since it will include the uwp, wpf, and winforms desktop packs. but if you still need cross-platform ui and graphics, mono is still the only choice. so it does seem that microsoft is converging on trying to &quot;get rid of&quot;, so to speak, .net framework and mono, but it seems there&#x27;s still a ways to go. even a newish project in the wilderness labs meadow board used mono and not .net core for their project. i am sure it&#x27;s because they started a while ago and there were technical reasons. .net core lacked features mono had for a while (and maybe still does, not for sure of the current status). moving existing projects like it, unity, and xamarin from mono to .net core is probably a huge undertaking.<p>in terms of naming, i think it makes sense to keep the distinction between .net standard and .net core, even if .net core slowly heads towards becoming the de facto implementation. i doubt .net framework and mono ever really go away anyway, so the distinction is still needed.",2018-11-05 19:40:33
596,"I&#x27;m doing F# from 2 years ago ONLY on OSX. Use .NET core &amp; xamarin currently. So far I can do a fairly complex project with dozen of external libraries, for iOS&#x2F;Android&#x2F;WebAPI with PostgreSQL, Sqlite. Deploy with docker on Ubuntu.<p>Today I say F# is good enough on *nix.<p>Also doing a little of Rust but the productivity with F# is far higher (you need to ramp up on Rust for a while!)",2018-11-26 14:07:40
597,"If you want to go down this road, doing mobile cross-platform native, Xamarin seems much more compelling. It is supported by a very good IDE and has proper licensing for distribution on the app stores. <a href=""https:&#x2F;&#x2F;visualstudio.microsoft.com&#x2F;xamarin&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;visualstudio.microsoft.com&#x2F;xamarin&#x2F;</a>",2018-12-03 01:14:30
598,+1 for xamarin.<p>One question though for app developers who are experienced in this field- does anybody know the relative running time of native vs managed code on android? Does it matter at all for ux-heavy code? How does the startup time look?,2018-12-03 01:27:38
599,"You mean like all those apps running on iOS and Android on top of Xamarin?<p><a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;cross-platform&#x2F;partners&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;cross-platform&#x2F;part...</a><p><a href=""https:&#x2F;&#x2F;customers.microsoft.com&#x2F;en-us&#x2F;search?sq=%22Xamarin%22&amp;ff=&amp;p=0&amp;so=story_publish_date%20desc"" rel=""nofollow"">https:&#x2F;&#x2F;customers.microsoft.com&#x2F;en-us&#x2F;search?sq=%22Xamarin%2...</a>",2018-12-07 10:36:54
600,"I wonder what&#x27;s included for the regex of .net. Eg: asp.net core, dotnet, c#, VB.net, f#, .net, xamarin,...<p>Because there are a multitude of possibilities.",2018-12-20 17:11:54
601,Agreed. It looks like the author may be looking for something like a &#x2F;.net&#x2F; regexp? I don&#x27;t think .net is popular at all in HN job postings. A better regex would be pretty much what you suggest:<p><pre><code>    &#x2F;asp\.net|dotnet|c#|VB.net|f#|xamarin&#x2F;i</code></pre>,2018-12-21 01:00:11
602,"According to the &quot;Stack Overflow Flutter questions&quot; metric:<p><a href=""http:&#x2F;&#x2F;sotagtrends.com&#x2F;?tags=[ionic-framework,react-native,flutter,xamarin]&amp;relative=false"" rel=""nofollow"">http:&#x2F;&#x2F;sotagtrends.com&#x2F;?tags=[ionic-framework,react-native,f...</a><p>Also according to the &quot;number of Flutter jobs posted on jobstreet.co.uk&quot;. Three months ago it was 5 [0] now it&#x27;s 13. For reference the number of React Native jobs has grown from 43 to 74. Let&#x27;s see where things stand in another 3 months.<p>[0] <a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=18029570"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=18029570</a>",2019-01-01 09:13:33
603,"i develop typically 3 types of things, backend rest services, web apps, and mobile apps.  for me to truly rid myself of my macbook pro, i would need the following, or equivalents:<p>1.  the ability to start vms, preferably locally, i use these to run persistent services like redis, rabbitmq, databases, etc.  i have this philosophy where my dev env needs to get as close as possible to the production env (at least from a software stack perspective) which means linux, yet it cant cost me as much as a production env.  homebrew is great, but i try to stay away as much as possible because its a little different from my production env.  accessing an ec2 instance or rds instance to access my postgres database is a bit overkill, i want things fast during development, ie local.  sometimes im in places with no wifi or 4g coverage is spotty, this would be a nightmare.<p>2.  i use visual code for all development, sometimes vi if i dont have a gui env, visual code is lightweight and pretty solid.  im not 100% stuck on visual code, so if theres some browser based derivative of it or wsywig for coding then im good.  visual code is written in electron so nodejs, so i dont think its impossible.  web development, html, js, css, this can all be done on an ipad relatively well, all the browsers i need to support are available.  theres typically no compilation that needs to happen, unless youre using nodejs modules on your frontend.  i seem to remember some company providing a cloud service that allows you to develop remotely, i think they were bought by github&#x2F;msft or someone.  kind of an interesting area.<p>3.  backend dev, typically i use golang, this becomes a bigger problem, surely i could ssh somewhere and compile, or use some x11&#x2F;vnc-like tool since i prefer a graphical ide, but that defeats the purpose of my 1000 usd ipad.  its not really a dumb terminal or thin client per se, i have enough compute power, i want to leverage it.  plus id need to be spending all this money on ec2 like instances.<p>4. xcode, this is another major issue, im stuck on xcode, sure i could use xamarin, but i dont think that runs on ios yet either.  if this were resolved, i could strongly consider scraping my macbook pro.<p>sounds kind of interesting if there could be a monthly service that could be purchased that provides you with remote dev envs without all the fuss of installing, managing any of it.  e.g.  i write code in a browser ide, it gets compiled in the cloud somewhere, deployed, and i can access it.  i can connect different services to it, and testing is fully automated.  i think id consider paying for something like this, but itd have to be relatively cheap because otherwise i might as well do everything myself locally.  im thinking 5 usd a month max.<p>i havent used chromebook, but i think its closer to a dev env than ipad pro at the moment, i think you can even start containers and such on it.",2019-01-04 01:35:01
604,"<a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;android&#x2F;platform&#x2F;android-job-scheduler"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;android&#x2F;platform&#x2F;an...</a>   
compare microsoft&#x27;s documentation of the same thing with google&#x27;s documentation and you will see where the failing happens. in comparison intentservices(the old way of doing bg tasks recommended by everyone) are documented the same way by both google and microsoft and so that gets used instead.",2019-01-15 05:08:31
605,".NET has some warts but it&#x27;s pretty plug and play.  Exception are xamarin, which I give them a pass for because most cross platform technologies are a little rough getting started, and office 365 add-ons.<p>I don&#x27;t have any direct experience but I also assuming sharepoint is awful.",2019-01-20 08:15:58
606,15.3 has break our work for weeks. We used VM with older versions to work forward. Whole xamarin compilation were broken.,2019-01-27 07:56:18
607,"Yup its C# and then calling through to respective APIS for Directx 11&#x2F;12&#x2F;Vulcan etc and via xamarin for mobile. Coming from a C&#x2F;C++ engine developer background I was very pleasantly suprised how performant Xenko is.  It easily gives Unity a run for its money, C#7 is a nice scripting environment and the renderer is a thing of beauty both architecturally and in terms of output.<p>Its worth checking out.",2019-02-12 18:23:11
608,"So much of this is because of the mobile &quot;app&quot; craze where -- due to the limitations of mobile app architecture, you had to build a stateful &quot;app&quot; instead of several independent screens with some limited shared state (usually just a token).<p>Native mobile UIs are great, but something as simple as cookies &#x2F; local storage could allow for stateless (or at least less stateful) mobile apps with native UIs.<p>Now, the abomination of hybrid (cordova), or pre-processed (react native&#x2F;xamarin) mobile apps is whole other thing, but often why web apps are translated to SPAs.<p>If we need a mobile app as well, why not use a common code base for web and mobile...",2019-02-18 23:30:06
609,"They have decided to make it in a standalone package so it can evolve independently. Like xamarin is not part of .net<p>Its not about being supported or not. It&#x27;s just an external. it&#x27;s not up-to-date with java 11 <a href=""https:&#x2F;&#x2F;openjfx.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;openjfx.io&#x2F;</a><p>You can also use clojure with it if you want a lisp dialect.",2019-03-04 20:12:01
610,"That&#x27;s the problem, ms is creating these amazing open source solutions and hitching the rotting carcass of visual studio to all of them.Even visual studio code is such a joy to use in comparison to even visual studio 2019.however you can&#x27;t for some reason run solution based projects in code.i&#x27;m  currently making xamarin apps and boy is it a fucking chore to do in visual studio to the point where the whole program crashes routinely in a normal workday(switching to flutter for this reason).<p>having an answer that would let me escape from the arcanities of visual studio in a corporate environment would be a joy",2019-03-09 06:55:09
