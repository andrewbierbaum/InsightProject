,body,date,id
0,"his former company was called ximian, which was started to do commercial gnome development.  this new company is called xamarin to do commercial mono development.  those are some pretty confusing names.",2011-05-16 20:29:46,2554037
1,"Great to see you here.<p>Any plans to have a 'Team' section for Xamarin? I'd love to know who jumped on board, tbh.",2011-05-16 21:15:53,2554214
2,How many of the former Novell developers will work in Xamarin?,2011-05-16 22:04:06,2554367
3,"Attachmate obviously don't think Mono is worth keeping the development team for; but Miguel is (admirably) not sitting on his hands until they decide what to do with the commercial products his team developed. If you're a commercial Novell Mono (Touch/Droid) customer, it seems the best thing you can do is ask them to sell or license the code to Xamarin, today.<p>IIRC, Miguel's estimate was 4 months to reimplement the iOS framework.  Could turn out better, could turn out second-system, but these guys do have a history of shipping.  That 4 months (and the corresponding time period for Android) could be saved if Attachmate move quickly.<p>Have any Novell customers asked this question and got a response?",2011-05-20 20:42:52,2569371
4,"<p><pre><code>    Meanwhile, de Icaza has formed his own startup, 
    Xamarin, which will keep working on Mono and 
    commercial .NET stacks. But here's something 
    interesting:the Xamarin home page highlights .NET 
    development for iOS and Android, not Linux
</code></pre>
Can yellow journalism get any worse than already is?",2011-06-06 18:26:08,2625758
5,"Actually, thank goodness for Xamarin and HTML (Windows 8). We will no longer be beholden to Microsoft with our future work.",2011-06-07 02:16:13,2627636
6,"I didn't really find the article that interesting, however looking at this <a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a> company I'm extremely intrigued by the product.",2011-06-18 12:38:32,2668511
7,"Looks to me like everybody wins.<p>Xamarin gets IP -- meaning they don't have to do a clean-room, source-compatible reimplementation of MonoTouch and Mono for Android, and all the risks that go with that -- in exchange for taking on the support of Novell's existing customers.  Customers they probably want anyway.<p>Novell/SUSE gets to get out of the Mono business altogether, which is probably good for them seeing as they laid off the entire engineering staff.<p>The Mono community gets some clarification about the stewardship of the project.  Novell contributed a lot of resources (bug tracker, mailing list and wiki hosting, etc.) and now Xamarin is on the hook for that stuff.  It helps clarify the future of the project.",2011-07-18 13:56:29,2776295
8,I agree but you'll pardon me if I still think Novell's new owners are a bunch of jerks.  Just less so.<p>That said I think this goes beyond IP for Xamarin.  As you said they get the existing customers but they're also available to new customers a few months earlier.  Mobile development is growing blazingly fast right now and even a months delay can mean someone decides to go with another product.<p>With the major financing that companies like Appcelerator have gotten Xamarin needs all the advantages it can get.,2011-07-18 14:22:26,2776393
9,"This article could have been titled;
""Novell gets rid of Mono Customers"" or ""Xamarin now Mono-alone"" but instead it's spun as ""Novell/Xamarin Partnership around Mono"". Don't you love good PR?<p>Surely both ""partners"" are supposed to do something? I don't see Novell lifting a finger here except to abandon their existing Mono customers, get rid of all Mono IP (Mono has IP?) and in every way shape and form wash their hands of the whole thing.<p>That's good for Xamarin I guess - and kudo's to them if they can make it all work. I'm not sure this is a ""win"" for Mono - but I guess it's the best of a bad situation.",2011-07-18 14:39:43,2776450
10,"I disagree, and I think Mono is stronger now with a startup behind it.  With Novell you only had the perception of some cushion.  Novell laid off the entire engineering staff behind Mono, including Miguel.  If he had simply walked away from the project after that, do you think it would have continued regardless of whether Novell held onto it?<p>With Xamarin the Mono folks have some skin in the game beyond a paycheck and their own passion.  Even if Miguel were to walk away -- something I find unlikely -- there is a business now that depends upon its success and not some neglected division within a rudderless company.",2011-07-18 14:53:54,2776519
11,"Attachmate has no obligation to do anything. They could just discontinue MonoTouch, Mono for Android, etc, and all existing customers would be left up shit creek without a paddle.<p>So the fact that they have signed an agreement that gives Xamarin a perpetual license to all the intellectual property of Mono, MonoTouch, Mono for Android, Mono for Visual Studio, etc, is fantastic for any existing customers which use these products.<p>This outcome is the best possible outcome given the circumstances.",2011-07-18 14:54:59,2776522
12,"Some of the best people that worked on Mono are now working for Xamarin, including Miguel de Icaza who started it all. Getting support from Xamarin is the best kind of support you can get on Mono, MonoTouch and MonoDroid.<p><pre><code>    Mono has IP?
</code></pre>
Yes it has. Just because a project is open-source that doesn't mean it isn't protected by IP laws.<p>In Mono's case only Novell/Attachmate were able to dual license the runtime libraries, otherwise licensed under LGPL, making it unsuitable for the demands of companies wanting to embed Mono in games (just an example).<p>Also, MonoTouch and MonoDroid are commercial products and Xamarin had no right to distribute or use in any way any source code or binaries from those projects; meaning they had to start from scratch in producing alternatives which would have been in a gray area, not to mention waisted effort.",2011-07-18 18:00:19,2777335
13,"It's good relative to the assumed baseline of Novell keeping the MonoTouch etc. IPs but not actually investing in or supporting them, and Xamarin having to recreate everything from zero themselves.",2011-07-18 22:56:17,2778736
14,"There are other ways to do it: <a href=""http://android.xamarin.com/"" rel=""nofollow"">http://android.xamarin.com/</a>",2011-07-30 08:59:09,2825325
15,I think one of the biggest issues people are facing with MonoDevelop is stability (we get a lot of feedback from users that they get a lot of crashes).<p>There's definitely a lot of work/polish that needs to go into MonoDevelop and it's something Xamarin knows about and is working hard to fix.,2011-08-12 15:09:55,2877569
16,"One of my favorite Microsoft stories is of Windows for Pen Computing.  A company named GO had brought out a product based on Pen interfaces (this was around the time of Windows 3.1).  Microsoft feared they'd lose their monopoly so they rushed out Windows for Pen Computing 1.0.  It stunk and so it failed pretty quickly.<p>In the book Barbarians at the Gate one of the co-creators of ""Pen Windows"" tells the story of that failure and what he told his fellow co-creator.  Here's a quote from the book...<p>[Begin Quote]<p>""Greg, Look.  This wasn't a thing about making money.  This was all about 'Block that Kick.'  We were on the special team.  We were preventing GO from running away with the market.  That was our job.<p>Look, your background is in applications, you have to ship the application.  My job is in systems.  Systems, for much longer on, has been completely 'Don't let anybody else steal DOS from us.'  That's all we're doing.  We weren't trying to sell software, we were trying to prevent other people from selling software.<p>From my view, Pen Windows was a winner.  We shut down GO.  They spent $75 million pumping up this market, we spent $4 million shooting them down.  They're toast!""<p>[End Quote]<p>Sorry for the long winded post but I wanted to point out how old this strategy is.  .Net wasn't a product to make money it was a product to block Java.  By making it the default Windows development environment they were able to do so without flushing money down the toilet (as was done in the example above)<p>So, as Miguel De Icaza says in the piece, Microsoft really doesn't love .Net the way Xamarin does.  They still want people developing for Windows alone.  Their developers just happened to create a great tool while management was paying lipservice to cross platform development.",2011-08-12 17:37:40,2878263
17,"Well:<p>&#62; No it isn't. Instead I would say that the JVM, which took ages to release version 7 (and we'll probably wait another 2 years for version 8), is light-years ahead of .NET<p>...<p>&#62; while the DLR is somewhere in limbo<p>...<p>&#62; Btw, speaking of Java's garbage collector, it's so kick ass that no other VM comes close.<p>...<p>etc<p>I didn't downvote, but saying stuff like that without a single bit of concrete information to back up the those arguments is pretty useless.<p>Then you have:<p>&#62; Personally, I consider it a lot more awesome when some dude I never heard of appears from nowhere with a usable LISP implementation (Clojure).<p>Which disregards that non Microsoft employed people create languages for .NET too. Nemerle is a great example, and that's how the Iron projects initially started before MS got involved.<p>and also:<p>&#62; The fact that .NET is only usable on Windows has been its major flaw since for me ever since I heard about it. It might as well be the most awesome technology in the world (although that would be a stretch of imagination), but it's completely useless if I can't run it wherever I want.<p>Which is just almost ignorant. I used to be employed writing ASP.NET web apps that ran on linux servers before I switched jobs. Then you have xamarin which lets you develop .NET apps for iOS and Android. Needless to say you get that ability automatically for Windows phones, etc. So all in all to me it seems like .NET's reach is pretty impressive.",2011-09-15 13:52:37,3000311
18,"I don't really think it is about refusing to learn other tools. My opinion is about choice.<p>I work with C# 90% of the time. I also happen to use other languages fluently. I think is a matter of choice.(I also have to admit that there are some developers that just don't want to get out of the comfort zone, but I don't think <i>ALL</i> C3 developers should be judged this way).<p>For example, I have used Xamarin products for a some projects, and it makes a lot more sense for me, to use C# with Xamarin products than Objective-C. That is a language I have been avoiding for a long time. And the reasons are not the scope of this comment.  On the Android side I am definitely using Java.<p>So cutting to the chase, I think that for a company to support C# without Microsoft involvement is not bad, and it doesn't mean that <i>ALL</i> developers are lazy or mediocre, it just means more choices for developers. Specially if you have big investments in Software developed on C# (either .Net or Mono).",2011-09-15 21:06:57,3002142
19,You can also use mono touch (xamarin product) to develop iOS apps using c#. you still will require Mac,2011-11-28 15:40:09,3286252
20,"I prefer C# to Java, but compared to $400/yr/developer, I'd just as soon stick with Java.<p>Granted, $400/year is peanuts for developer tools if you're a large company but for smaller (eg. one man) operations I just don't see it as being worth it, especially as it is an ongoing cost if you want product updates and you really have no guarantee that any specific release of the Android APIs will be well supported in a timely manner (especially if Xamarin goes belly up at some point).<p>So, yeah... I prefer C# to Java, but Java isn't <i>that</i> bad.",2011-12-06 20:16:11,3320821
21,"""As a result of garnering the rights to Mono and a solid customer base, Xamarin wound up with self-sustaining revenue that covers its staff of some 50 people  without having taken on any venture capital.""<p>That's pretty cool. From the article, it sounds like they were cash-flow positive enough to support 50 people, <i>from the outset</i>.",2011-12-13 10:20:47,3347102
22,"Few things to notice here.<p>Mono's new gc is quite solid now. Mono for Android customers use it by default.<p>Yes, performance is not the best nor does it support a concurrent mode. But a garbage collector is one of those projects that is never done and always have an infinite amount of work left. Our gc has been improving a lot and the next release, for example, features a lot of scalability and performance work.<p>Said that, if you compare it to other gcs offered on mobile environment we're doing very well.<p>Mono features a much simpler JIT and runtime and this is a competitive advantage for us or do you think MS ships its desktop/server VM on winphone? We do, and it has teached us a lot about how been slim and simple makes you much more adaptable.<p>Now on the subject of AOT, mono features a much more sofisticated system than .net, it's the only one that supports running without a JIT while retaining generics.<p>BTW, I work for Xamarin but those are my personal opinions on the matter.",2011-12-13 17:27:02,3348287
23,"Hey, Xamarin dev here...<p>Not that I want to defend Diablo-D3 (he's a troll), I do want to make a few slight corrections to your comment.<p>1. You are correct in that Microsoft's .NET VM performs better than Mono overall (at least in the general case), but Mono does perform better than .NET in some cases.<p>Unfortunately I don't have a list of the areas where Mono outperforms .NET handy, so I can't list them here. Perhaps one of the other Mono devs can follow up and provide details. Most likely SIMD would be on the list.<p>Whether Microsoft would be interested in taking Mono's implementation for these areas or not for their own VM is questionable. Likely not, as it would likely not be easily adaptable to their implementation anyway.<p>2. SGen is actually stable these days. It is used in Mono4Android and we are working on moving MonoTouch over to SGen as well.<p>Moonlight was also being moved to SGen (it started out using Boehm because that was the default GC when the project was started) when the Novell layoffs came along.<p>As responsible developers, we have been taking our time moving to SGen as the default GC because we don't want the move to break any existing apps if we can avoid it. As with all new things, there are still likely to be bugs here and there, but overall we feel that it is ready for use and we've been eating our own dog food.<p>3. As was mentioned in another comment already, Microsoft's AOT isn't quite the same as Mono's AOT which allows generation of binaries that do not require an external CLR to run.",2011-12-13 17:34:38,3348320
24,"Being able to sanely bridge to C++ code from <i>any</i> language is a huge deal, Miguel and the rest of the folks at Xamarin are tackling some very difficult problems and succeeding.<p>Especially for the games industry which Xamarin is really interested in developing for (i.e. Mono as your game's scripting engine while the core renderer is in C++), simple binding to C++ will be awesome.",2011-12-19 21:47:51,3371279
25,&#62;The only platform you would need to re-implement for would be iOS but your going to hit that problem whatever you do (not sure what it's JS support is like though).<p>That is not the case for mono as Xamarin compiles Mono code into native IOS code which is Complain with Apple guidelines.,2011-12-29 13:38:43,3403611
26,".NET is <i>huge</i> for job prospects.  Outside of the valley I see more .NET than any other language. There are a lot of government/military contracts as well as large corporations who have their whole infrastructure on Microsoft and so all development is done on it.<p>That being said, if you are reading HN you are probably interested in the startup community and you will not find as many startups using it.<p>If you like .NET you can also do iPhone and Android development using <a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a>.",2011-12-29 17:40:55,3404429
27,Thanks sontek xamarin sounds pretty  interesting,2011-12-29 20:58:37,3405361
28,"igualmente :].<p>co-founder of a very-recently Google &#38; Atlas Venture backed startup (so not an investment deterrent; no issues on the engineering deep-dive during diligence, and received kudos on our architecture and some clever stuff we developed).   love .NET and the MSFT support &#38; team over at azure... been on it since beta circa 09'.   I'm also an avid python numpy &#38; matlab programmer, even submit patches to and support a few open source python libraries (ps: flask is my favorite web framework).<p>in this discourse (and that of the original article and its comments) of the original article) I've encountered a tremendous amount of opinion/perspective that contrast my own/teams, and the experiences we've had - so I'm sharing my thoughts below. I may not address each questions but it's at least a stream of consciousness evoked by the topic.<p>(btw: I came from an all-java shop (oracle) by way of a company they acquired in '07.)<p>our language is C#, target framework 4.0.<p>- misc: C# is semantically equivalent to Java, virtually the same for the core libraries; syntax and the nuance of the latter aside it's easy to embrace engineers from the opposing worlds within each others framework.
- diamonds in the rough: there is a treasure-trove of very smart previously inaccessible engineers toiling away in corporate waste-land, skilled in C#, and ineligible (by syntax/familiarity guidelines) for lots of startup reqs. example: we have a brilliant mathematician on our team that's been coding in C# since its release, working for investment banks where C# was the internal language of choice. as always, it's really about the person, not the language (look at what php's done to push the envelope with PHP... mysql...).<p>- .NET in terms of limited capability: we've written some pretty heavy non-linear optimization frameworks, stuff that while easy to prototype in python, we've found much more maintainable in C# due to the VS IDE, static typing, and the effectiveness &#38; patterns they beget.  also the efficiency inherent in some of the data structures to their static nature has been noticeably performant. (btw, latest CLR has truly dynamic types, and an independent fully dynamic runtime DLR.)<p>- prototyping: django's beautiful admin framework aside, .NET MVC 2 via C# and Django via Python yield very similar efforts for prototyping.  MVC has a struts-like template for pushing admin stuff up quickly.<p>- cool/weird stuff: we've built (and had one of the best software engineering companies attest to) an incredibly innovative multi-dimensional-map for 'moving' throughout a highly constrained NP solution space during non-linear optimization.  C# and Java do not support generic generics (think maps of N # of maps with X type). we have code-generate this, and their super efficient.  it's something you could just bang away on at python or in lisp to prototype quickly, but you would need careful optimize and code to get performant, and also maintainable and provable (mathematically) across a multitude of types inherited for varying different sources throughout a framework. object-oriented languages w/static typing afford you this.  yes it could have been done in open source C++, C or Java, but we did do it in .NET.  It's one of the fun and weird things we've worked on.  inspiration is/should not be limited by a language, regardless if it's correlated, it's not causal.  please see auto vector regression by one of this years nobel laureate in economics or this: <a href=""http://www.venganza.org/about/open-letter/"" rel=""nofollow"">http://www.venganza.org/about/open-letter/</a> - for quick intuition as to why. :]<p>- liquidity/exit event, and the choice: we didn't choose .NET due to a likelihood of acquisition, or not choose it in fear of it preventing one (I mean this as in every sense except that in which .NET made our business look more compelling; hone our competitive advantage, etc.) I agree for a framework company (solely depending upon the level of the framework) this could be critical, but for most companies where at least one level of abstraction (framework included) obviates development platform dependency from a decision to use the service, it's negligible.  we chose it because of how pervasive windows and its embedded and compact environments were in some of the disparate systems we're integrating with.  it made life easier.  it's worth stating that, whilst I stand by my first sentence, a couple of our most likely acquirers do have predominantly microsoft stacks, or are c++ based and could assimilate our development ethos quickly.<p>- cost of tech: we're bizspark'd which made this venture possible, I agree, without that .NET would not have been feasible decision.  we would have went java or python (especially given the fantastic client-side deployments dropbox was doing w/it at the time). we would not have chosen MONO - at the time ASP.NET via Mono scaled poorly and MVC didn't exist for it (digression: absolutely no way in hell anyone should build on the old asp.net forms paradigm or hold it against .NET now that MVC is an option: even excluding the IoC weirdness and its terrible pattern, I still cringe when I see .aspx extension on a site. that said MONO for our integration platform would have been perfectly fine.<p>- long term cost (post 3 years): azure is not expensive, like all platforms (I have EC2 and app-engine experience) if you optimize for it, you can make it cost-effective.  more importantly, if you're not earning $ or in some cases raise/preserve capital after 3 years (or until you hit $1.5m in rev per the bizspark restrictions) what kind of business are running?<p>- source control: TFS (team foundation server) is fantastic, from its testing framework, bug repository, and with some hacking its workflow systems it's a tool I've found as powerful (but easier to configure) than clear case, the systems we used at oracle, and myriad other variants I've worked with over the years. it's not source safe :].<p>- complexity: we've had to lift up the hood quite a bit to accomplish what we wanted.  ""the ability to patch and pull in req's for changes to FOSS software"" is but one way to customize.  .NET offers many, down to the many ways you can override/overload/extend even the most isolated libraries with the latest syntax sugar, to getting your hands a little dirty in MSIL. while not the FOSS way, it's possible.  whether or not it's ideal is a matter of perception - e.g. when you work in (and accept) a proprietary environment.<p>- developer vs. engineer culture: semantics here. probably the b&#38;b of this article, I think culture, pervasiveness (not independent of the former), and founding team/CTO experience, and biz strategy sum up to the decision as to why people do or do not use .NET.  I find it difficult to place a coefficient on each of those terms but it's empirically manifest that more often than not they weigh against the choice to use .NET.  strategy includes cost, only recently (~3 yrs) obviated by bizspark. it's also the market stuff I mentioned. FOSS has existed for years as an alternative - this is why it's pervaded (among other reasons).  I have no data on founder XP, but I've met very few others that have experience working in .NET languages, I think this is a big contributor to start culture &#38; personality types and where most .NET developers dwell - that's why I labeled that intersection 'diamonds in the rough'. last statement should show how those terms are not mutually exclusive.<p>- language/tech zealots: agreed, they're everywhere. even people I respect tremendously just have this natural predilection toward their preferred tech and its advantages.<p>my .2e-1<p>observation: have you seen the wonderful and cross-platform [android, ios, win phone] natively compiled .NET tech miguel's team @ xamarin have been working on?  I suspect the # of corp clients that are leveraging that tech and the exposure to consumers the app-serving end-devices have will inspire those corp developers to create their own apps eventually... could bring a lot of .NET favoring newcomers (and different demographic) into the startup scene - neither a bad thing.",2011-12-29 23:10:00,3405845
29,"We do this at Xamarin. Every employee sends an email to the entire company first thing Monday morning, containing their A&#38;Os (Achievements and Objectives).<p>We're a very distributed team and A&#38;Os are one of the ways we keep everyone in touch.<p>Also, doing this Monday morning is pretty important -- it means people focus on planning the upcoming week, instead of just summarizing the week that ended. Having a time every week where you set goals for yourself, and then communicate them to all your peers, seems to be pretty effective. And one benefit of having these emails go out to the whole company is that everyone can read them and comment on what people are planning, before the work starts.",2012-01-30 19:59:40,3530397
30,"I was in a similar situation a few years ago, but I opted for Monotouch [1]. I still had to learn UIKit, Foundation etc, but I didn't have to learn a ""new"" language. I did have to hack together a Visual Studio package to trick it into loading monotouch project files, but it was like 10 lines of code, and now you don't have to.<p>I did spend several months developing (and shipping) two Objective-C apps for the few months that Apple banned Adobe AIR (and everything else along with it), and despite having spent 30 years programming, and a good part of that in C and C++, the full awfulness of ObjC was a surprise. But if all you've ever done is C#/WPF, ObjectiveC is going to be quite a shock. In fact there'll be a lot of cognitive dissonance.<p>[1] <a href=""http://xamarin.com/monotouch"" rel=""nofollow"">http://xamarin.com/monotouch</a>",2012-02-21 08:25:06,3615712
31,"Mono is a software platform designed to allow developers to easily create cross platform applications. Sponsored by Xamarin, Mono is an open source implementation of Microsoft's .NET Framework based on the ECMA standards for C",2012-03-15 12:12:17,3708019
32,"I like Mono, and I respect the work that they've accomplished. It is incredibly difficult to build a runtime like .NET, especially as it was never designed to be cross-platform.<p>That said, the Mono experience on Linux is inferior to that on Windows. MonoDevelop is nowhere near Visual Studio, so that I just develop on Windows and deploy on Linux. Unfortunately, that doesn't help the fact that both the soft and hard debuggers for Linux are nowhere near Microsoft's debuggers.  It also doesn't help the fact that the runtime itself is less stable (i.e., more prone to crash) and there are APIs that only work well on Windows. I would also imagine that the Microsoft runtime exhibits much better overall performance.<p>My understanding is that Mono mainly excels at MonoTouch, and that is where Xamarin is making most of its money, but I am not knowledgeable in that area.",2012-03-23 22:00:56,3747562
33,"We started this flight simulator about 2 years ago to be PC based, after realizing that it was too big of a task, we switched to Windows Phone 7 (Release Apr 2011) and recently released on iOS (March 2012).<p>So far, the reviews have been encouraging, and we're closing in on our second update. Last update brought iPad3 support, new airplanes and bug fixes. Next one will bring 2 additional aircrafts, missions, better map, IFR Fixes/Airways...<p>Now, for the things that the HN crowd might be interested in:<p>- It's entirely in C#. Codebase of the simulator itself (excluding XNA, MonoGame) is 99% shared between WP7 and iOS.<p>- The user base on iOS is <i>much</i> larger than on WP7, the numbers go far beyond our wildest expectations. (It's a bit early to tell, but something like 30x to 45x what we had on Windows Phone so far)<p>- The physics engine is custom, we're using rigid body simulation and apply forces based on angle of attack, airspeed, lift tables...<p>- Using MonoGame/MonoTouch has been incredible, the guys at Xamarin are great!<p>- We did run into issues with Garbage Collection, but nothing that we couldn't solve with a classic optimization session at the end<p>- People seem to love the fact that we setup a uservoice site. (http://feedback.flyingdevstudio.com). We've got tons of suggestions and we'll <i>try</i> to implement what people want first.<p>Some videos/pics:
http://youtu.be/YBww2pOkPec<p>http://imgur.com/a/n9hXV<p>Here's how to get the game:<p>http://itunes.apple.com/us/app/infinite-flight/id471341991?mt=8<p>Some promo codes:<p>R9ARH4W3734E<p>RHKE3YXPNJKE<p>PAXRJMKAJRW4<p>7JH9L3XRYXL9<p>F9HEY6MXP9JX",2012-04-11 09:27:20,3826663
34,"The article covers that, to some extent:<p><i>Unlike Sun with Java, Microsoft submitted C# and the .NET VM for standardization to ECMA and saw those standards graduated all the way to ISO strong patent commitments. The .NET framework is also covered by Microsofts legally binding community promise.</i><p>It's strange- with the work Xamarind has been doing, C# is one of the few language choices you have to go cross-platform and native- MonoTouch does iOS, MonoDroid does Android, and MS themselves do Windows Phone. I've not used any of these extensively so can't vouch for them, but it's an interesting development.",2012-05-01 21:20:02,3916419
35,"MonoTouch <a href=""http://xamarin.com/monotouch"" rel=""nofollow"">http://xamarin.com/monotouch</a>",2012-05-01 21:50:12,3916536
36,"The guys who made this blog post make some software called MonoTouch.<p><a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a><p>It costs $400 for a license, though. But boy I am tempted... I know, I know- you need to go with the native languages for the best experience. But keeping a huge chunk of my codebase between platforms is a very, very interesting idea to me.",2012-05-01 21:51:06,3916541
37,"I'll be great if they support F#, but seems like not, 0 answers from googling, except for this request:
<a href=""https://xamarin.uservoice.com/forums/144858-xamarin-suggestions/suggestions/2699180-extend-monodroid-and-monotouch-to-support-f-"" rel=""nofollow"">https://xamarin.uservoice.com/forums/144858-xamarin-suggesti...</a>",2012-05-02 00:35:11,3917041
38,How long till Google buys Xamarin?,2012-05-02 00:41:31,3917071
39,"I believe the concern is that without ECMA/ISO standardization, there's nothing to stop MS from suing Xamarin/Mono should they decide to back away from an open language specification.",2012-05-02 00:44:55,3917084
40,"Wow! Congrats.<p>Isn't this like huge, though? If you can actually make it run faster, I am guessing it would be possible to spin it off and get serious funding.<p>I merely watch from the sidelines, but what the Mono/Xamarin guys accomplish year after year could be a good lesson for any founder. Having spent enough time in the .Net world, I can tell that any attempt at creating a compatible .Net framework is a daunting, enormous undertaking. I guess the key thing is, FOCUS.",2012-05-02 02:17:05,3917328
41,"Right, which means we can't handle generic virtual methods, since we cannot JIT compile them. See: <a href=""http://docs.xamarin.com/ios/about/limitations#Generic_Virtual_Methods"" rel=""nofollow"">http://docs.xamarin.com/ios/about/limitations#Generic_Virtua...</a>",2012-05-02 15:16:47,3919479
42,"This is really interesting project, and after taking a little bit of time to look it over, there are a couple of things that I have noticed:<p>1. It's not entirely clear how to use this.  Is XobotOS a replacement for Android, or is it something that can be shipped as a standard application?  In my limited time reading the documentation on the GitHub page, this was not clear to me.<p>2. It looks like a it is a terminated research project, to quote the README:<p><i>This code is provided as-is, and we do not offer support for any bits of code here, nor does Xamarin plan on continuing evolving XobotOS at this point.</i><p>From the blog post, it sounds like they are integrating some of this technology in their products, but XobotOS is otherwise just a code dump.  As such, unless someone is really interested in this, it doesn't seem like it's going to go anywhere.",2012-05-02 15:27:04,3919528
43,"A suggestion for Laurent Sansonetti will be to release this similarly with the way Xamarin has released Mono for iOS. Basically you should be able to download and use the library for free in the iPhone/iPad simulator and you will need to buy a license if you want to be able to export the app to the actual device. This licensing model has the advantage that is similar with what Apple does for developing apps for iOS.<p>This will let you, as a developer, try and learn to use RubyMotion before you actually buy a license.",2012-05-03 18:24:54,3925051
44,"&#62; The (huge) sticking point is cross-platform development and work on Windows.<p>It's still pretty good thanks to the work the Xamarin guys have done.<p>We have a large .NET code based developed on Windows for Windows and out of curiosity once we tried to compile under Mono. We were expecting hundreds of issues and we ended up with only a few errors and if I'm not mistaken I believe it had to do with some of the file based handling code we had. Granted we never fixed those and attempted to run it, but I think they've done some amazing work.<p>Even now, one of the only ways (maybe the only?) to build a re-usable library for iOS, Android, and Windows Phone 7 is to build .Net library that compiles under Mono.",2012-05-10 17:02:58,3954563
45,"Take a look at MonoDroid (<a href=""http://xamarin.com/monoforandroid"" rel=""nofollow"">http://xamarin.com/monoforandroid</a>) and MonoTouch (<a href=""http://xamarin.com/monotouch"" rel=""nofollow"">http://xamarin.com/monotouch</a>). C# for 3 platforms: WP7, Android, iOS.<p>Mobile web will never have the same benefits that a native app has: high performance, less data to transfer, nicely integrated in the OS (live tiles, etc.).",2012-06-05 15:33:00,4069043
46,I actually have dabbled with it and I think Xamarin has done some very impressive work there. But most of the work in the typical app is in the UI and you still have to essentially rewrite that for every platform with Mono. For some apps it could still be a net win.<p>Native has the same advantages on the desktop but that hasn't stopped it from being pushed out of mainstream app development and into a few select niches.,2012-06-05 15:49:23,4069123
47,"As far as I know MonoTouch uses Ahead Of Compilation [1] on iOS. So there is no JIT in compiled binaries.<p>[1] <a href=""http://docs.xamarin.com/ios/about/limitations"" rel=""nofollow"">http://docs.xamarin.com/ios/about/limitations</a>",2012-06-18 18:04:42,4127688
48,"C#? (<a href=""http://xamarin.com/monotouch"" rel=""nofollow"">http://xamarin.com/monotouch</a>)",2012-06-18 19:37:10,4128095
49,"Prototypes, sure, but people always mention it to say You can write apps in Python on Android. Thats simply not true.<p>SL4A is kinda like PhoneGap: you can use it, but you will not get a quality app out of it. That might be fine for your use case, but its definitely not on par to using the canonical platform.<p>Other quick notes: The last commit on the Scala for Android project is from two years ago and says add 2.2 support, the related blog post is from one year ago. Same deal with Android ObjC: last commit April 2010. I would never trust either of these for production development.<p>Im sorry but languages other than Java and C++ for Android development are closer to vaporware than reality right now. The only good alternative is Mono <a href=""http://xamarin.com/monoforandroid"" rel=""nofollow"">http://xamarin.com/monoforandroid</a> which is actually working and supported and not a forgotten weekend hack.<p>Please note: Im perfectly fine with Java.",2012-06-18 22:35:37,4128957
50,Any chance the team will stick together and recreate Troll Tech? Kind of like the Ximian/Mono team formed Xamarin after being fired from Novel?,2012-06-23 11:28:42,4150591
51,"To give context: <a href=""http://techcrunch.com/2008/01/28/nokia-acquires-trolltech-for-153-million/"" rel=""nofollow"">http://techcrunch.com/2008/01/28/nokia-acquires-trolltech-fo...</a><p>4 1/2 years later, Nokia is pulling the trigger on it.<p>My question is this, if Trolltech wasn't part of Nokia's strategy anymore, why not just spin it out?<p>And to compare to an equivalent business, Novell tried to shutter down Mono, thankfully the people behind it forged a new company out of it, called Xamarin.<p>I keep seeing cases of companies being acquired, only to then be semi-destroyed or shut down later on. Sometimes you get the impression the the acquirers only want to buy others just to shut them down and stop them becoming a threat.<p>For example, look at what Google did to Jaiku, or Slide, or Dodgeball.<p>Why can they not follow the example of HP and Agilent? Agilent was spun out of HP: <a href=""http://en.wikipedia.org/wiki/Agilent_Technologies"" rel=""nofollow"">http://en.wikipedia.org/wiki/Agilent_Technologies</a><p>I'm coming to the view that when you start up a business, if you care about what you've built more than you care about money, and what you've built is profitable, then you shouldn't sell to a big company, because chances are they will destroy it.",2012-06-23 11:49:46,4150624
52,"Fair enough. I'm just concerned in that trying to downsize to save money, Nokia has missed the opportunity to take what was a profitable business (Trolltech's 2007 numbers (in NOK): 174m Rev, 46.5m Profit, 26.7% Net Profit Margin, 227 employees), and salvage it by spinning it back out into a separate business.<p>In dollar terms, Trolltech in 2007 was doing $30m Rev and making $8m profit. Obviously that's 5 years ago and I don't know what the current fundamentals are, but it would be interesting to know if that business within Nokia was doing more revenue or less, and what it's costs were.<p>If I were a former TrollTech employee, I would suggest taking a leaf out of Xamarin's book: <a href=""http://gigaom.com/2011/12/12/xamarin-mono/"" rel=""nofollow"">http://gigaom.com/2011/12/12/xamarin-mono/</a>",2012-06-23 12:53:11,4150726
53,"&#62; Any chance the team will stick together and recreate Troll Tech? Kind of like the Ximian/Mono team formed Xamarin after being fired from Novel?<p>The Mono team did not recreate what they had in Novell.<p>1. Mono in Novell put a lot of work on building Mono as a general platform. Xamarin is focused on where the money is: Mono for Android and iOS.<p>2. Mono in Novell was developed to form part of the SUSE Linux desktop. Xamarin does not do Linux, and in fact the devs themselves have apparently mostly personally switched to OS X.<p>3. Practically all Mono work at Novell was open source. Most of the work at Xamarin is closed source, the business model is to sell software for iOS and Android.<p>There's nothing wrong with either model, but just pointing out, they didn't just recreate the same thing outside of Novell. The two situations are hugely different, so it isn't surprising they are not that similar.",2012-06-23 17:02:22,4151240
54,"&#62; The ObjC runtime is poorly architected, shows its age, and is not sufficiently well designed to permit the implementation of features that would grossly simplify the use of the language.<p>The first two points are not defined in a sufficient way that would allow us to have a meaningful conversation about them.  What does it mean to be poorly-designed?  What does it mean to be old, and why is old bad?  We cannot make progress here without semantic introspection.  On the third topic, however:<p>&#62; In support of this I mentioned a number of features that simply are non-implementable on the current runtime, including automatic handling of reference cycles<p>I'd like to examine this particular assertion in substantial detail, because it is apparent to me I have not communicated clearly:<p>1) First of all, the statement ""automatic handling of reference cycles is not possible to implement because of the Objective-C runtime"" is false.  It is false because it has in fact been implemented, in spite of the Objective-C runtime: <a href=""https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/GarbageCollection/Articles/gcUsing.html#//apple_ref/doc/uid/TP40008006-SW2"" rel=""nofollow"">https://developer.apple.com/library/mac/#documentation/Cocoa...</a><p>2) I've made the general argument that many features are not useful on a 5w computer.  Now I will make the specific argument that detecting retain cycles is not useful on a 5w computer:<p>&#62; We have no heap scans, no whole-app pauses, and no non-deterministic releases.  We really think that a smooth, fluid interface is important to our customers, and that great battery life is also important.  And with that, GC is deprecated. - Apple, WWDC 2012 session 406, about 34 minutes in<p>Now extending this two-case line of reasoning to the general list of features: I do not believe (and you have provided no evidence to support) that the Objective-C runtime is the limiting factor for any feature you have listed.  I also do not believe (and you have provided no evidence to support) that any feature is useful on a 5w computer.  In this particular most-favored case, both of these problems apply, but I believe at least one problem applies to every feature you have listed.<p>&#62; Somebody should tell Microsoft and the MonoTouch guys. Even Android's GC is usable, and it's an fairly primitive mark-and-sweep collector.<p>I think they already know:<p>&#62; The occurrence of this is non-deterministic, and may happen at inopportune times (e.g. in the middle of graphics rendering). If you see this message, you may want to perform an explicit collection elsewhere, or you may want to try to reduce the lifetime of peer objects.  <a href=""http://docs.xamarin.com/android/advanced_topics/garbage_collection"" rel=""nofollow"">http://docs.xamarin.com/android/advanced_topics/garbage_coll...</a><p>As I understand it, MonoTouch's optional SGen does a better job, but still uses a stop-the-world algorithm for ""large"" objects.  Given the memory constraints of most iOS devices, lots of things are large relative to the amount of memory you have available.  For example, my real-world iPad currently has 90MB in the free pool, which means that a single layer that draws to screen is 10% of the immediately available memory in pure graphics buffer allocations.  (It is possible to increase the available pool, and in fact iOS will instruct apps to dump what they can if more is requested, but this is slow and also not being a good memory citizen).",2012-07-08 05:52:46,4213801
55,"The way this argument is going is a very eloquent ""he said, he said"".  I'd like to push it into a better discussion.  Could you drop the rhetoric about ""parroting the WWDC line"" and ""Apple stumbling about"", the ad-hominem characterizations of developers who haven't implemented a GC, etc.?  I'm going to require you to provide hard facts or examples to support your claims, and not present conclusions as arguments, and not muddy the waters.<p>&#62; The ObjC runtime is poorly designed in part due to the fact that it fails to cleanly and adequately represent the necsessary metadata to support new features, and thus requires repeated ABI breakage as Apple stumbles about trying to implement enhancements.<p>The ABI was ""changed"" once.  When I say it was ""changed"", I really mean that the new ABI was released for the first time on new architectures that did not previously have an ABI at all, and the old architectures' ABI did not change.  Assuming that your objection to ABI ""breakage"" was compatibility-based in nature, this objection would be unfounded.<p>You have also failed to make a claim that any particular feature is both useful and unimplementable, and also failed to support such a claim.  Please make and support claims, not conclusions.<p>&#62; As for accepting Apple's assertions about GC at face value -- this is the same organization that proudly trumpeted their poor implementation of GC at WWDCs past, and migrated their entire set of Mac OS frameworks to support it.<p>To be fair, garbage collection was released before iOS was released.  Apple's position is today, and has always been, that garbage collection is infeasible on iOS.  What has changed between 2006 and 2012 is that it now makes a lot of sense from both a developer mindshare point of view and an Apple engineer cost/benefit point of view to make Mac OS be as close to iOS as possible, because that's where the money is.  There are very good reasons why (e.g. non-deterministic finalization) it is impossible to share code and illogical to share engineers between ARC and GC codebases.<p>&#62; GC at Apple died because of a poor implementation, political fallout from it, and lack of adequate investment in it.<p>This contradiction is baseless (e.g. unsupported), so on that basis I am not compelled to respond.  It also contradicts my discussions with engineers who were involved in the decision, so if you were to provide a basis, I have first-hand accounts with which to refute you.<p>&#62;  Regardless of that, Apple should be capable of bringing more computer science firepower to this problem than Mono is.<p>And here is the fundamental disconnect: you believe that currently-known GC algorithms are ""good enough"" for general use on iOS.  I do not.  Apple does not.<p>Thinking it through logically, there are three possible root causes for this disagreement:<p>1.  You and I could have a different conception of the hardware capabilities of iOS devices<p>2.  You and I could have a different conception of the performance characteristics for currently-known GC algorithms<p>3.  You and I could have a different threshold for user pain, so you might characterize a certain performance penalty as ""acceptable"" that I would characterize as ""unacceptable.""<p>We've danced a little bit around #1 and #2, and we can talk some more about those.  But I think the real issue might be #3.<p>For example, the native screen refresh rate is 60fps.  I would consider it unacceptable to skip five consecutive frames, and unacceptable to skip more than 15 frames as a sustained average over many seconds.  Mono documents ""major collections"" to take a second, which fails both criteria. [1]<p>I would also consider it unacceptable that, upon returning to the run loop (or equivalent common synchronization point), more than 15% of garbage bytes remain uncollected.  There's just not that much memory to go around.<p>At this point, I have laid out in very specific detail what I mean by ""performs acceptably"".  Now, you can either A) tell me that my demands are insane, in which case we simply have a very different idea of what ""responsive user interface"" means, and there's really nothing more to be said to convince the other.  Or, B) demonstrate that there exists some GC implementation which fulfills these requirements, and additionally demonstrate that it cannot be implemented with the current ObjC runtime.<p>I think this is the the healthiest way forward for the discussion, because it leaves open the possibility that we may learn something.  If instead we return to the things I listed in the first paragraph, I think we both have better uses of our time.<p>[1] <a href=""http://android.xamarin.com/index.php?title=Documentation/GC"" rel=""nofollow"">http://android.xamarin.com/index.php?title=Documentation/GC</a>",2012-07-09 07:36:45,4217119
56,"This makes me even more bullish on Xamarin/Mono. As Miguel de Icaza of Xamarin tweeted this morning after this was announced: ""Wow @scottgu announces that Microsoft open sourced the Entity Framework, Mono's Achilles heel""<p>I  believe if you are building mobile clients and need to target more than one platform you should do your UI with the native APIs on each platform, but should use something like Mono to achieve as much code-reuse as possible for the lower layers of your app.",2012-07-19 16:51:56,4266898
57,"MonoTouch is $79/student ('currently enrolled at an accredited institution [...] even publish to Apple's App Store') per <a href=""http://support.xamarin.com/customer/portal/articles/177042-do-you-have-any-student-or-academic-discounts-"" rel=""nofollow"">http://support.xamarin.com/customer/portal/articles/177042-d...</a><p>Be sure to check out MonoDevelop, which has a few full-or-most-time paid developers behind it: <a href=""http://monodevelop.com/Screenshots"" rel=""nofollow"">http://monodevelop.com/Screenshots</a>",2012-07-20 00:26:43,4268782
58,"A lot to ask from a small, relatively new company. Xamarin already offer a free trial version (fully functional except deploy to emulator only) and a 30 day money back guarantee after purchasing. You also get a year's updates for free.<p>Edit: what is ""risk free""?",2012-07-24 15:09:49,4285994
59,"What you propose wouldn't be ""risk free"", it would be simply transferring your risk to Xamarin (they have to develop and support users that don't end up paying).<p>Xamarin puts out a quality product, they should charge a price for it relative to the value it can bring a MOTIVATED developer. And if we want to use it we should pay for it. I don't want to wake up tomorrow to see that they dropped the price to 5 bucks hoping to win on volume only to find out soon afterward that Microsoft paid them 25 million to stop development.",2012-07-24 15:11:04,4286002
60,"I've been using Mono for Android for a few months now and have been very impressed with the quality of the product and support, and the rate at which features are being added (modulo Xamarin's small size). I spent my own money on a pro licence and haven't been disappointed.",2012-07-24 15:21:16,4286043
61,"What if your potential customers demanded risk free pricing? They get to use their software for free till they start seeing value. Would you agree to that? If not, why are you expecting Xamarin to do that for you?<p>Frankly speaking, if 400$ for a product like MonoTouch is risk for you then you probably shouldn't be developing commercial software which you sell for money.",2012-07-24 15:41:18,4286133
62,"I'd personally like to see something like a non-commercial/OSS-only ""hobbyist"" license (maybe $150-200?). I really want to use MonoDroid outside the emulator but don't see myself doing mobile commercially anytime soon, so $400 is tough to swallow.<p>That said, I totally understand if that's not a market Xamarin wants to be in.",2012-07-24 16:19:46,4286314
63,"&#62;Xamarin enables millions of experienced C# programmers to become mobile developers very quickly. <i>But most of them dont know about us! Were going to fix that.</i><p>I hope step 1 for ""fixing that"" is a name change.  Seriously, developers talk just as much off-line as online about their tools and Xamarin has serious off-line confusion issues.",2012-07-24 16:24:55,4286347
64,"But the corollary is the guy that wants to make a silly app and give it away for free as a hobby. For instance, I wanted to make a very particular kind of timer application for playing Diablo, primarily for myself but give it away, and the $400 price point makes me not want to use monodroid for it. Of course, I'm not really Xamarin's target market per se, and given the post I made about HBO's pricing so I can understand their position. However, as someone that is in the segment of people the OP is talking about, I can sympathize.",2012-07-24 16:36:55,4286416
65,"There at least is a bit of precedent for it, given the Microsoft BizSpark program, and a couple of the game engines are significantly cheaper/free if the company's gross is less than some number. I'm not saying that Xamarin <i>should</i> do that, but it seems like making it cheap/free to lock in the codebase to the Xamarin development stack, and then having a point where they have to eventually pay makes sense.<p>(and using objective C/XCode are pretty much at the bottom of my list of things I ever want to do in my life)",2012-07-24 17:49:04,4286946
66,"<i>Imagine writing code like this and having it build to native apps on both platforms:</i><p>I think Xamarin are going to be a really interesting company to watch for this stuff. Right now they have MonoTouch and MonoDroid as entirely separate products, allowing you to make apps using C#. But you can already reference libraries across both, and just do the UI plumbing separately, and if they're smart they will work very hard on what the author is describing.",2012-07-29 21:52:07,4309871
67,I agree. Xamarin is closer than anybody else to a viable cross platform solution. They're in just the right place now to start eliminating some of the worst pain points in mobile.,2012-07-30 00:03:35,4310257
68,"I've been doing this for a long time now, probably for the 8-10 months, and I can safely say its awesome. Xamarin is awesome.",2012-07-30 03:42:30,4310792
69,You could also try something like Xamarin's framework to do both.,2012-07-30 20:13:12,4314428
70,"We just blogged a case study from the PictureTHIS, an app from the guys that did Draw a Stickman:<p><a href=""http://blog.xamarin.com/2012/08/07/picturethis-fun-for-both-ios-and-an_ro_d-users/"" rel=""nofollow"">http://blog.xamarin.com/2012/08/07/picturethis-fun-for-both-...</a><p>They have a nice case study.<p>You do not have to pay before you try, the evaluation version lets you do all your development on the simulator.  If you like it, you can buy it and deploy to device.   And if you are unhappy, you can return it within 30 days.<p>That said, we will work hard to make sure you are delighted with our product, and keep you as a user.",2012-08-09 02:15:32,4359183
71,"Thanks for dropping in, Miguel. Liking what I'm seeing so far; sending a mail to Xamarin's support line w/ a few notes shortly",2012-08-09 22:21:55,4363608
72,"This is slightly off topic, but I don't really understand Miguel de Icaza.<p>He is a ""free software programmer"" according to Wikipedia, and I really value his contributions to both the GNOME and MONO projects.<p>I am not trying to in anyway put down his acheivements but his comments on social media (G+ and twitter) are often about ordering truckloads of Apple products.<p>Was there a falling out with the Gnome project or why is he such an avid supporter of the Apple brand? Perhaps its just a case that he has moved on from his free software roots. I appreciate that his company xamarin are working solidly on Mono which is open source, but a number of their products are not open source such as Mono Touch and Mono for Android.<p>I'm not saying that he shouldn't be allowed to sell software but I am curious what has caused this shift in philosophy or perhaps his involvement with the free and open source software was simply about producing code rather than the free principles behind it.",2012-08-25 10:46:19,4431723
73,"MonoTouch and Mono for Android are they main reason, that Mono is in such a good shape, after the near death experience  when Novell fell apart. Both products are the primary source of income for most people working on Mono and both products would not stand a chance if open source. Why? Because they target developers (who can compile their shit from sources) and open sourcing them completely would remove any incentive to pay. (And no, selling support would not generate significant income.) The core (Mono, MonoDevelop and MonoMac, which is very similiar to MonoTouch) are already open source. Open sourcing the rest would probably kill Xamarin and take half of Mono down with it.<p>On a different note, I disagree with Miguels opinion regarding patents. I also think that he has shifted slightly on the political spectrum over the last decade (a small movement towards the center from the far left), as well as that of software politics. He has always been pragmatic, though and even now, I think, his moderate opposition is a good reminder to somtimes step out of the echo chamber and avoid the mistake of falling into extremist views.",2012-08-25 13:00:51,4431937
74,"&#62;<i>This is slightly off topic, but I don't really understand Miguel de Icaza.</i><p>It might be that you have a narrow view of free/open source software. The idea behind it is not all about GNU or Linux or anything. iTerm 2 is a mighty fine open source software -- for OS X.<p>Open source is not incompatible with Apple or Windows. Nor it is a religion/principle thing to everyone, some see it more casually.<p>&#62;<i>I appreciate that his company xamarin are working solidly on Mono which is open source, but a number of their products are not open source such as Mono Touch and Mono for Android.</i><p>Well, he also has to make money. He tried the open source non commercial approach with Evolution et al, and it didn't work very well for them (or for the Nautilus guys). If it wasn't for Novell buying them they would have nothing to show for today.",2012-08-25 15:33:21,4432305
75,"I been told by my boss to use a framework named Xamarin's MonoTouch (http://xamarin.com/), I don't want to use it, anyone has good reasons to not use it instead of native apps (that is licensed and on C# doesn't count) Edit: added framework name",2012-08-26 13:40:31,4435053
76,"MonoTouch is what you're referring to, and it has its pros and cons. Pros are, one app can be published on multiple platforms with little to no change.<p>Minuses, it's expensive and you have to wait for access to new features until they've been released by Xamarin.<p>Writing an app for iPhone using this is easily 2x faster than learning and then writing it in Objective C.  It does generate a ""native"" app, for what it's worth.<p>Sounds like you just need to get past your dislike of C#, and your boss sounds like a pretty smart person ;-)<p>(disclosure : I'm not his boss)",2012-08-26 13:49:53,4435070
77,"List of limitations.<p><a href=""http://docs.xamarin.com/ios/about/limitations"" rel=""nofollow"">http://docs.xamarin.com/ios/about/limitations</a>",2012-08-26 15:05:20,4435226
78,"This. I am currently using Mono for Android, also from Xamarin. I use it because the client wants me to use it instead using Java. Like what yiu said, one thing that I dont really like about using Mono for Android is I cant just use Android libraries out there since I need to create the binding first. Other than that, it's just a matter of language preference.",2012-08-26 20:14:01,4436078
79,"We're down to less than two hours on our Kickstarter campaign for Pixate. As we continued to explore what was possible, we ended up, inadvertently, showing how the development language really didn't matter, and how CSS could bring a common styling paradigm regardless of how you choose to write your native apps...<p>If you are a Ruby developer, there's RubyMotion + Pixate:<p><pre><code>   http://tinyurl.com/d7xmsjx
</code></pre>
If you are a C# developer, there's Xamarin + Pixate:<p><pre><code>   http://tinyurl.com/9pdztz9
</code></pre>
If you are a JavsScript developer, there's Appcelerator + Pixate:<p><pre><code>   http://tinyurl.com/9vuyc6x
</code></pre>
If you are a Objective-C / Xcode developer, Pixate is already for
you, and Designers, Pixate is the icing on your cake of success!<p><pre><code>   http://kck.st/Phq0lr
</code></pre>
Obviously, we're excited about bringing this to developers and designers, and look forward to seeing what other inadvertent discoveries we make along the way.",2012-08-31 17:21:51,4460677
80,"From the article: ""I experienced <i>minimal complications</i> when using Safari on both the iPhone and iPad""<p><i>minimal complications</i> is a euphemism for ""Any normal user would throw the thing against the wall in frustration.""<p>To me this is just further demonstration of the failure of HTML5 on mobile. It's been, what, 4 years we've been in the ""HTML5 will save us all"" hype bubble?<p>Don't get me wrong; I am building a webapp and aspects of HTML5 have made my life far easier than if I were still in 2008. If I had hair I'd still be pulling it out due to the complexities of CSS (even with things like LESS) and subtle browser differences would turn the rest of it gray. But the current state of HTML+CSS+JS on the desktop is pretty good; compared.<p>We appear to be years away from a similar state in mobile. Between Safari's problems with no JIT support within apps and the fragmentation of Android, coupled with the monstrosity known as IE on WP7 (and WP8 and Win8), it is just not possible to use ""HTML5"" to build a great mobile experience (and reach a large audience).<p>My history in working with the W3C (I worked on HTML 3.2 and  4), and my understanding of the asymetric competitive nature of the major players (Apple, Google, Microsoft) makes me believe this situation is not going to radically improve anytime soon.<p>The upside is dev tool vendors who can help ease the pain should do pretty well (e.g. things like Xamarin (C#) and MoSync (C/C++/JavaScript))...",2012-09-06 03:53:40,4482772
81,Yep. My money is on Xamarin. There's a huge opportunity for somebody to make native app development less painful and they seem to be the only player with the experience and talent and tech to make this happen.,2012-09-06 03:55:08,4482775
82,"Yup, and Xamarin's put it to great use on mobile devices.<p>Incidentally, Microsoft's got their own line of mobile devices that run their own implementation of .NET which doesn't currently support real AOT compiling.  (Just ngen.)",2012-09-13 18:56:13,4517919
83,"Or [Xamarin](<a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a>) for C#'ers.<p><i>Note to pg: support subset of markdown for HN v2?</i>",2012-09-14 13:11:16,4521424
84,"Microsoft's been open-sourcing more and more SDKs for a while now. It's good to hear about another, but what's really interesting to me is the bit about partnering with Xamarin.<p>Since its inception there's been fear about Mono being a dangerous platform to develop on because Microsoft might try to torpedo the project at any moment.  This is far from the first time that Microsoft has publicly given the Mono project their blessing, but one that comes in the form of a business partnership is still nice in that it might help cut through the FUD just a little bit more.",2012-09-20 22:29:26,4551093
85,"Waited for the official answer. It's bad, there's no answer. As someone who started learning Titanium, this is really deal-breaker for me! Off to phonegap, xamarin, or native ...",2012-09-21 23:29:44,4556454
86,"Telecommute, US :: TrackAbout :: Full Time<p>.NET Web and Mobile, 6 open positions<p><a href=""http://www.trackabout.com"" rel=""nofollow"">http://www.trackabout.com</a><p>Apply Here: <a href=""http://trackabout.theresumator.com/apply/LLlGPw"" rel=""nofollow"">http://trackabout.theresumator.com/apply/LLlGPw</a><p>TrackAbout is a small (&#60;40) but successful SaaS company providing tracking and rental services for durable, returnable assets. Our customers use a variety of mobile devices to scan assets (RFID and barcodes) every time they touch or move them. We have customers around the globe.<p>We are experiencing high demand for our services and we are growing. We need great people who are interested in playing pivotal roles in the growth of a small company. Our customer base is very dependable and we are doing well despite the economy.<p>Our headquarters is just outside the Pittsburgh International Airport in Pennsylvania, but our entire development staff is work-from-home.<p>We are seeking exceptional developers who are truly passionate about technology and the craft of software development. All members of our development team are dedicated to keeping up with the latest technologies, practices, patterns and tools related to software development. We do peer programming and collaboration on a regular basis. We take time out to share our knowledge with one another and improve both our skills and our distributed development environment. We often experiment with and integrate new tools into our environment.<p>Stuff we use includes: .NET 4.0, jQuery, Backbone.js, MonoTouch for iOS, Mono for Android (Xamarin tools), ReSharper, Mecurial (Hg) and Subversion, MassTransit Lean Service Bus, Jenkins CI, VersionOne, Trello, MediaWiki, WCF/Web API and RESTful web services, RhinoMocks, Ninject, NHibernate.<p>TrackAbout has a Developer Free Time policy intended to promote creative thinking and innovation by providing developers an opportunity to contribute new ideas and technologies for the benefit of the company.<p>We host an annual Dev Con where all the remote developers are brought together for a week to strategize, tackle tough issues, bug bash, socialize and have fun.<p>We promote continuous improvement in every aspect of our work. After each release we hold a retrospective and discuss how we can do better.<p>Our published core values are:<p><pre><code>  * Believe in the Power of Storytelling
  * Work with Great Passion and Enthusiasm
  * Celebrate Problem Solving
  * Foster a Fun and Friendly Atmosphere
  * No Egos &#38; No Yelling
</code></pre>
Apply Here: <a href=""http://trackabout.theresumator.com/apply/LLlGPw"" rel=""nofollow"">http://trackabout.theresumator.com/apply/LLlGPw</a>",2012-10-01 14:14:12,4597055
87,"After losing the support of Novell they refocused (see xamarin.com). They really did an amazing job with what they had, though.<p>That said, Mono benchmarked about 4x slower on my web apps.<p>For me, better to use two Windows instances rather than deal with the ongoing Mono compatibility drama across 8 Linux machines.",2012-10-02 00:57:51,4600175
88,"As meanguy pointed out, the Mono team lost Novell's backing -- arguably, they never had it in the first place. Xamarin is now focused entirely on mobile, to the detriment of the core CLR implementation and web.<p>Not that I blame them in the least. I've been a huge fan of Miguel for years, and they're doing great things in the mobile space. I just can't in good conscience invest heavily in Mono knowing that it's essentially at a dead end -- particularly when other much more attractive web technologies have been released since .NET's inception.<p>The reality is that Microsoft never really wanted to build a cross-platform CLR. They wanted a great Java-like runtime that only works on Windows. If that matches up with your goals, then by all means use .NET, but be prepared for a tough slog later on if you want to escape Windows.",2012-10-02 13:23:27,4601789
89,"Mono is now backed by Xamarin. They got something like 12M in VC funding this summer and appear to be on fire. From what I've seen, the future of cross platform .NET looks great.",2012-10-02 15:55:28,4602618
90,Click the Xamarin Dev Center link. You'll see Android and iOS but no Linux. They're focusing on mobile client tools.<p>They never got the full stack running on the server and they punted most of the Windows-specific client stuff from the start.<p>They landed on a super smart subset and seem to be kicking ass with it. A C# compiler with some odd omissions and cool enhancements + native bindings to iOS and Android equals a damn useful tool. If you're building .NET or even Java backends it's certainly a very sane way to hook into them from Android phones and tablets in the enterprise.<p>But it's not a cross-platform .NET environment by any stretch and certainly isn't on the path to becoming one.,2012-10-02 16:20:09,4602731
91,"Xamarin is awesome, and what they're doing seems great. They've just entirely shifted their focus to mobile, which makes a lot of sense for them, but doesn't bode well for core Mono and their port of ASP.NET.",2012-10-03 14:26:49,4607526
92,"Xamarin appear to be pushing big time the cross platform abilities of C# now. It <i>is</i> possible to have your business logic shared between Windows desktop, WinRT, iOS, Android, web apps etc, with a thin native UI layer on top.",2012-10-21 08:53:55,4679300
93,"I'm referring specifically to portable class libraries (PCL) (<a href=""http://stackoverflow.com/questions/5238955/what-is-a-portable-class-library"" rel=""nofollow"">http://stackoverflow.com/questions/5238955/what-is-a-portabl...</a>) that allow you to write code that is 'cross platform'.<p>(ie. PCL --&#62; One code base that compiles and runs on multiple c# runtimes; a <i>key feature</i> of writing cross platform c# applications)<p>Support is currently limited, see: <a href=""http://docs.xamarin.com/ios/tutorials/Cross_Platform/Building_Cross_Platform_Applications/Part_3_-_Setting_Up_A_Xamarin_Cross_Platform_Solution#Portable_Class_Libraries_(PCL)"" rel=""nofollow"">http://docs.xamarin.com/ios/tutorials/Cross_Platform/Buildin...</a><p>Of course you can copy and paste your code into different projects manually, and compile it for a specific runtime. Or... you can use visual studio.",2012-10-21 15:47:39,4679911
94,"Not my app, but you could check out iCircuit's experience:
<a href=""http://praeclarum.org/post/31799384896/icircuit-code-reuse-the-fourth-edition"" rel=""nofollow"">http://praeclarum.org/post/31799384896/icircuit-code-reuse-t...</a><p>He achieves anywhere from 69-87% code reuse depending on the platform. They did a bit of a case study a while ago where Frank talks about it - <a href=""http://blog.xamarin.com/2011/10/26/java-to-ipad-in-2-months/"" rel=""nofollow"">http://blog.xamarin.com/2011/10/26/java-to-ipad-in-2-months/</a>",2012-10-22 19:24:56,4684993
95,"Yep, I'm definitely looking forward to the exiting happenings in Mono/Xamarin land launching early next year :)",2012-10-22 19:59:06,4685185
96,"We're in the process of porting our Flight Simulator (Infinite Flight - <a href=""http://infinite-flight.com"" rel=""nofollow"">http://infinite-flight.com</a>) from iOS to Android. We originally developed it on Windows Phone.<p>Porting from WP7 to iOS took a few months, mostly because MonoGame didn't have any 3D support (we added it). We have been slowly porting to Android, it's been pretty good so far, the framework makes it easy and we've had very little issues making external libraries build on MonoDroid.
Xamarin's also been very responsive to our questions and issues.<p>If you want to see what it looks like, here's a video of what we have lined up for our next update coming out in a few days:
<a href=""http://www.youtube.com/watch?v=u5N_ckb-dXw"" rel=""nofollow"">http://www.youtube.com/watch?v=u5N_ckb-dXw</a>",2012-10-22 20:14:30,4685273
97,"Used in conjunction with other platforms is a far cry of being cumulatively more valuable then everything else put together. But I digress.<p>Agreed Mono does offer a lot of value, it's improved leaps and bounds since Xamarin's split from Novell, they're now well staffed and more focused on delivering their leading best-of-class products. I've witnessed tonnes of improvements to MonoDevelop since their focus on MonoTouch and OSX. From what I've seen at MonkeySpace Xamarin's got plenty more exciting announcements up their sleeve for next year.<p>With that said, it's making a lot more sense to depend on well supported Mono-compatible libraries so you always have an easy escape option out of the expensive Windows-only cloud provider lock-ins. You'll also have the option to use any of the exciting Linux cloud initiatives on the horizons like: Google Compute Engine / OpenStack.",2012-10-23 00:02:49,4686175
98,"<a href=""http://www.oracle.com/technetwork/developer-tools/adf/overview/adf-mobile-096323.html"" rel=""nofollow"">http://www.oracle.com/technetwork/developer-tools/adf/overvi...</a><p>Looks like a PhoneGap equivalent based off Java instead of JS rather than 'Xamarin for Java'.<p>Is there any reason that LLVM can't AOT compile java to machine code? That'd maybe be another way of doing this if people wanted to take the native UI route.",2012-10-27 12:43:44,4706024
99,"Who is ""they""?  Mono was transferred from Novell to Xamarin some time ago, but is alive and well (better than ever?): <a href=""http://mono-project.com/Main_Page"" rel=""nofollow"">http://mono-project.com/Main_Page</a>.",2012-11-08 20:11:57,4759599
100,"Xamarin are booming (they are a cross-platform, open-source-based development tools company who are big contributors to mono). 190,000 developers and 10,000 customers already <a href=""http://blog.xamarin.com/2012/11/08/xamarin-evolve-2013-our-first-developer-conference/"" rel=""nofollow"">http://blog.xamarin.com/2012/11/08/xamarin-evolve-2013-our-f...</a><p>So mono's future is secured - Android, iPhone, iOS, OS X, linux, windows 8, ... no other high-level-to-native tools get this reach and none based on a language as c# (so much better than java).  F# looks like nice added sauce to this.",2012-11-09 12:30:35,4762484
101,"See above - Xamarin are big contributors to mono. They have 190,000 developers and 10,000 customers already <a href=""http://blog.xamarin.com/2012/11/08/xamarin-evolve-2013-our-first-developer-conference/"" rel=""nofollow"">http://blog.xamarin.com/2012/11/08/xamarin-evolve-2013-our-f...</a><p>so mono's future looks secure now",2012-11-09 12:32:26,4762494
102,"...the only thing that could motivate me nowadays to write a BB version of a mobile app would be the ability to use HTML5 and javascript and just have the same app on both Android and BB... so if the browser is better than what 90% of Android users have, I wouldn't care, because I'd be targeting the Android webkit browser... Android won, so they should first strive for compatibility first (and HTML5 apps seems the only way for them) and then show off any superior features their OS may have on top of this...<p>...it seems that they are running through the woods without a map (AGAIN!) right now, and it really doesn't matter how fast they can run or climb trees if they don't know where they're going<p>[EDIT: added what's next]
my 2 cents for RIM: throw some money at Xamarin (<a href=""http://xamarin.com"" rel=""nofollow"">http://xamarin.com</a>) to make BB a target for their app development platform... putting your eggs in the multiplatform basket would seem like the only sensible decision now that your basket is hosed / on fire, and enterprise devs that would be more inclined to target BB will probably prefer C#...",2012-11-10 06:48:43,4766130
103,"C# can ""go native"" right now.<p>NGEN precompiles the IL into native code if you use the normal framework.<p>Mono AOT compiles (and links) code into various architectures, but MonoTouch and Mono for Android (<a href=""http://xamarin.com"" rel=""nofollow"">http://xamarin.com</a>) would be the major public uses for it - native iOS / Android apps using C#.<p>If you wonder ""can they be any good"": go get the new Rdio app. It's done in MonoTouch (and their Android one, in beta, is done in Mono for Android)",2012-11-28 13:27:09,4842366
104,"&#62;&#62; Significant compared to what?<p>Significant, in the fact that there's now a less clear choice of what to use when developing a Windows 8 UI or server application.<p>&#62;&#62; In my opinion: A strong cross-platform C# eco-system is simply not good for Microsoft.<p>In that case it's a conflict of interests, as it may not be good for Microsoft, but it's certainly good for the .NET community which lets .NET developers re-use and leverage their work on multiple platforms. Fortunately we have Xamarin filling this void, but if it wasn't for them .NET developers would be missing out on the most exciting mobile platforms to date: iOS / Android.",2012-11-30 00:04:24,4851094
105,Xamarin does some impressive work. They are becoming to C# what PhoneGap is to Javascript/HTML (license fee not withstanding).,2012-12-12 17:45:28,4911402
106,"Yes, but write-once-run-anywhere solutions deliver mediocre user experiences on every platform. You don't want your Mac app to look anything like your Windows 8 app. With Xamarin you separate the presentation layer of your app from the rest of the app, and the only thing you're rewriting from platform to platform is the UI. Typically this is only about 25% of the code (though of course it can vary). This is how our customers do it on Android, iOS and Windows, and now they can extend their apps to Mac and still deliver an amazing Mac app.",2012-12-12 17:56:08,4911475
107,"Xamarin's stuff looks really nice, but I really wish they had a non-profit free tier. I can't even make opensource Android apps without paying a lot.<p>The other problem is the lack of linux support for their SDK. Seems rather odd, considering Mono's roots.",2012-12-12 17:59:26,4911493
108,"That's for an enterprise-level license -- the 'professional' license is $399: <a href=""https://store.xamarin.com/"" rel=""nofollow"">https://store.xamarin.com/</a>",2012-12-12 18:03:39,4911517
109,I used Xamarin's Stripe library a few weeks ago. Super nice stuff.,2012-12-12 18:04:57,4911523
110,We've been surprised to discover some customers running Java code on iOS devices uses iKVM and Xamarin. So it seems to work.,2012-12-12 18:07:09,4911539
111,I'm sure most people would be ok with an Ubuntu version.<p>Perhaps more of your customers would use Linux for Xamarin stuff if it was available?,2012-12-12 19:11:50,4911879
112,"Where does this leave MonoMac? <a href=""http://www.mono-project.com/MonoMac"" rel=""nofollow"">http://www.mono-project.com/MonoMac</a> states that Xamarin.Mac has broader API coverage; does this mean MonoMac will continue to be developed, but just remain as a (free) subset with LGPL portions?",2012-12-12 19:16:29,4911900
113,"I'm huge fan of Xamarin but somehow missing how is this different from MonoMac?<p>For anyone who is thinking to start development of cross-platform GUI app in .NET, I encourage to check Eto project - <a href=""https://github.com/picoe/eto"" rel=""nofollow"">https://github.com/picoe/eto</a>",2012-12-12 19:19:52,4911916
114,"Nothing's <i>wrong</i> with Objective-C. But if you're interested in sharing some code to do cross-platform apps Xamarin makes it easier to do so with C#. You might write a layer to do API and data management/storage and general business logic and then share that code between Mac, Windows, iPhone, Android, Windows Phone, and Linux.<p>It would still be a lot of work because they don't try to abstract any of the UI or other things for you (and imo, they shouldn't). But if your app fits into this kind of design, and if you like C#, then it could be very valuable.",2012-12-12 19:37:03,4911994
115,"A few diferences:<p>1. Xamarin.Mac comes with a commercial license, so you can ship to the Mac App Store (not allowed under MonoMac's LGPL license).<p>2. Xamarin.Mac comes with commercial support.<p>3. Xamarin.Mac includes bindings for several new APIs, including CoreBluetooth, GameKit, StoreKit, SceneKit, and the new Mountain Lion AppKit classes.<p>You can see a full list of differences here: <a href=""http://docs.xamarin.com/mac/guides"" rel=""nofollow"">http://docs.xamarin.com/mac/guides</a>",2012-12-12 20:08:23,4912148
116,"There are some C# to JS compilers, script# and JSIL for example, yeah. But none are officially supported by Xamarin. I was just curious why they focus on all possible platforms but the web.",2012-12-12 21:45:34,4912645
117,"My experience with MonoTouch has generally been very positive.
Why I love MonoTouch:<p>- C# goodness, especially event handlers instead of overly verbose ObjC delegates<p>- It's fun to port ObjC loops to oneliners using LINQ and lambdas<p>- I prefer somewhat ugly MonoDevelop to pretty-but-very-odd Xcode<p>- I can reuse both C# and ObjC code, and ObjC code is straightforward to port, if needed<p>- Xamarin support is friendly and helpful<p>There are some things that annoyed me:<p>- Some generic-heavy C# code will crash the device due to AOT limitationslearned it the hard way<p>- MonoDevelop hangs for a few seconds after you switch from Xcode, even if you didn't change anything<p>- You need to make sure you _understand_ how MonoTouch GC works together with ObjC reference counting, or you'll get memory leaks<p>- You'll need to learn to use Instruments to find those memory leaks<p>- Debugger often freezes (should've reported this)<p>- Binaries can get heavy, but not too heavy<p>- Compilation is impossibly slow on Air, barely tolerable on Pro<p>- Lack of tooling for binding ObjC codeI wish I could just drop ObjC files and headers into a MonoTouch binding project instead of compiling it to fat binary first<p>But still, I'm glad we went with MonoTouch.",2012-12-12 22:00:54,4912715
118,"<p><pre><code>    Interesting, reading that makes it sound like a C# developer that wants to work with MonoTouch will have to verge off to learning at least some Objective C if they want to have shippable code.
</code></pre>
Yes, you'll definitely need to learn some things about Objective C. This isn't really about learning the language itself though. It's more about understanding iOS and ObjC runtime.<p>The closest analogy to C# develop would be COM and P/Invoke. C# provides tools to interface with COM and native libraries, but you still need to learn some marshalling fundamentals so you can ensure GC doesn't collect objects while they are being used by native code, you need to implement IDisposable and not forget to free unmanaged resources, etc.<p>It's similar with MonoTouch: you need to understand that MonoTouch classes wrap native objects, that disposing of wrappers doesn't necessarily kill native objects because other native objects may still link to it, and that sometimes GC can't know for sure if an object is eligible for killing, and will never collect it.<p>In general, this comes down to: don't rely on .NET GC to kill native objects, do it yourself. My life got so much better after I started doing so.<p>Things that confused me most (and which are all you really need to know about ObjC memory management):<p><a href=""http://stackoverflow.com/questions/13058521/is-this-a-bug-in-monotouch-gc"" rel=""nofollow"">http://stackoverflow.com/questions/13058521/is-this-a-bug-in...</a><p><a href=""http://stackoverflow.com/questions/13064669/why-cant-monotouch-gc-kill-managed-objects-with-refcount-1"" rel=""nofollow"">http://stackoverflow.com/questions/13064669/why-cant-monotou...</a><p>This is a great screencast I wish I saw <i>before</i> I started coding in MonoTouch:<p><a href=""http://forums.xamarin.com/discussion/33/finding-memory-leaks-in-your-apps"" rel=""nofollow"">http://forums.xamarin.com/discussion/33/finding-memory-leaks...</a><p>It explains how to find native memory leaks.<p>How much time does it take to learn this? No more than a week. But it takes more to find memory leaks in existing app so it's better to get some understanding and learn to profile early. For me, fixing a two-month-old codebase took about week and a half.",2012-12-12 22:29:23,4912813
119,"The MonoMacPackager no longer exists, and has not existed for a few months.  We basically granted a license for appstore distribution to anyone that requested the license for AppStore distribution, since we did not originally have plans to build a product.<p>Now that we are launching a product, we offer the license as part of Xamarin.Mac.<p>I will update the page accordingly.",2012-12-12 22:36:17,4912847
120,I'd love to see Xamarin grow enough to offer the dev-tools for free. Obviously that'd mean making money off of something other than dev-tool sales. I can think of lots of ways you could use Mono to break out of that market. Any plans to move in this direction?,2012-12-12 22:44:36,4912890
121,"What did you try in? MonoDevelop? I downloaded MonoDevelop and the trail for ANDROID this weekend and was able to make an android app with no issues for free. The limit basically being that I could only use the emulator and not test on a real device. I'm not sure how they limit the mac version though. If you want to check it out maybe try out the iOS or android trial which definitely lets you build.<p>Also you could try MonoMac which is almost the same thing, and is OpenSource. The Xamarin version is supposed to have Wider API coverage and do a bit more (for the cost).",2012-12-12 23:01:28,4912962
122,"Yes, MonoMac/MacCore will continue to be MIT X11.<p>We will also continue to maintain it, as it shares most of the code for Xamarin.Mac",2012-12-13 00:30:48,4913394
123,"+1. Xamarin.Mac just builds more on top of MonoMac. MonoMac has been used to publish apps to the App Store before:<p><a href=""http://tirania.org/monomac/archive/2011/Jan-31.html"" rel=""nofollow"">http://tirania.org/monomac/archive/2011/Jan-31.html</a>",2012-12-13 09:53:24,4915100
124,"Congrats on the book release! Sounds really cool. And don't worry about the Xamarin.Mac release, it's based on MonoMac so the work you put into this section of your book wasn't wasted. :)",2012-12-13 16:44:37,4916499
125,Glad to hear it ... definitely planning on digging into Xamarin.Mac soon :),2012-12-13 16:59:39,4916613
126,"Thanks so much!<p>Great news on the book, we definitely need to start seeing more books out there on Mono/Xamarin tech. Hopefully we can help people understand what a great opportunity C# can be when you embrace it :)",2012-12-13 17:56:24,4917010
127,"Just an FYI, but the MonoMac project (which is what Xamarin.Mac is based on) will be remaining as Open Source for that situation.",2012-12-13 22:12:52,4918424
128,"How did you learn your F#?! Have never had any problem writing reusable functions.<p>On windows 8,000 nuget packages works for me as an ecosystem. on linux/osx/droid we have xamarin booming along.",2012-12-18 02:21:04,4935720
129,Related: I would love to hear your stories about building apps using Adobe PhoneGap or Xamarin Mono :),2012-12-19 02:47:36,4940895
130,"Not really.<p>If you've got a great product and there's no competition on par in the market, you can charge what ever you like and people will pay (photoshop, maya, resharper, etc).<p>A sale like this just spikes interest and no doubt drives a lot of chatter which will pull other full price paying customers to the site to buy more stuff.<p>As a company with shareholders, can you really justify throwing away profits by cutting your prices permanently by 75%?<p>For this to be a reasonable proposition you need 4x your current customer base that you can <i>prove</i> wont buy your product unless you slash the price.<p>You'd probably see some rise in volumes, but 500%?<p>O_o I""m dubious.<p>(I've always thought the Jetbrains stuff was quite modestly priced; compared to say, Xamarin's offerings)",2012-12-20 16:01:23,4948326
131,"&#62;before you ask for iOS, you might have a surprise soon.<p>Xamarin...?",2012-12-24 11:47:33,4962581
132,"Xamarin has a full application suite to complement it. I'd say since 2010 it has been perfectly mature. The C# runtime on Linux is slower than the Oracle JVM though, but about as fast as the OSS JVM from the statistics I last saw.",2013-01-01 17:26:19,4993134
133,Some portions of the framework are not covered by the promise but Miguel mentioned something about Xamarin still having some kind of protection the project had when it was at Novell. Does anybody have any information that can prove/disprove this?,2013-01-01 20:23:44,4993830
134,"As I understand it the mobile SDKs Xamarin releases use the native UI widgets for each platform - allowing you to get native look and feel with one code base.<p>(I may be wrong on this, but I thought this was one of their major selling points.  However, never having used the SDKs I don't know how well it works in practice)",2013-01-02 19:21:36,4998626
135,"Obviously a bit one-sided (it's from Xamarin, after all) but I'm a big believer in C# and what it offers compared to what else is out there.  I think the biggest weakness is dealing with another single-vendor-of-failure (in this case, Xamarin themselves) in order to cross-compile to Android/iPhone.",2013-01-02 19:21:46,4998629
136,"One of the major advantages of Xamarin's approach is that the Xamarin frameworks expose access to all of the native APIs and standard user interface controls of the underlying platform. The apps <i>are</i> fully native, they are just written with C#.<p>(Disclosure: I work for Xamarin)",2013-01-02 19:25:41,4998650
137,"If you have read the article, you would have known Xamarin products expose <i>native</i> iOS and Android APIs. MonoTouch apps feel exactly the same as UIKit apps because they <i>are</i> UIKit apps.<p>From my perspective, MonoTouch UIKit bindings are more convenient than original Objective C library because C# is nicer (think events, typed arrays and dictionaries, etc.)",2013-01-02 19:26:52,4998653
138,"You have misunderstood. iOS and Android apps built using C# have access to 100% of the native API of the underlying platform. So all of the UI is fully native. Take a look at our API documentation on iOS, for example:<p><a href=""http://iosapi.xamarin.com/?link=root%3a%2fMonoTouch-lib"" rel=""nofollow"">http://iosapi.xamarin.com/?link=root%3a%2fMonoTouch-lib</a><p>You can see thousands of iOS APIs bound, including all of UIKit:
<a href=""http://iosapi.xamarin.com/?link=N%3aMonoTouch.UIKit"" rel=""nofollow"">http://iosapi.xamarin.com/?link=N%3aMonoTouch.UIKit</a>",2013-01-02 19:29:33,4998676
139,"Xamarin's examples for MonoDroid are (IMHO) pretty solid, to the point where I'll go to them first instead of the Android docs (even though I'm writing Java[0]).<p>It's true you have to re-write the UI code on every platform, but it's still the same language on all platforms, so less of a barrier vs. a total ground-up rewrite. Frankly, I see that as a plus, else you end up with badly cloned iOS-like UIs everywhere.<p>[0] Should note that I'd happily be using MonoDroid if I had a say in the matter.",2013-01-02 19:31:05,4998686
140,"I like MonoTouch so far but I must admit these are all valid points. There are more downsides Xamarin doesn't like to advertise, like problems with AOT compiler you can't anticipate until they bite you in the ass, the-GC-won't-collect-some-stuff problems that basically force you to always dispose native objects manually, and horribly buggy IDE that MonoDevelop is.",2013-01-02 20:13:16,4998969
141,"&#62;<i>Its an open spec that can be implemented on any other platform that cares.</i><p>Which is something a lot different than an a project actively developed and supported on multiple platforms by Microsoft.<p>Xamarin is OK, but it's tiny (in resources and reach) compared to Microsoft.",2013-01-05 07:42:41,5012014
142,"It uses GTK#. What do you expect, WPF is a Microsoft licensed tech, you can't blame Xamarin for not stealing it. A GUI written to GTK# is portable to ios, Android, OSX, Windows, and Linux, and a bunch more marginally obscure targets. Every platform under the sun.",2013-01-06 04:59:58,5015359
143,"i havent seen anyone mentioning things like <a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a><p>Write your business logic in C# and just build the View for every platform with native components. Sounds like the ideal tradeoff for me!",2013-01-06 09:37:37,5015879
144,I'd say Mono/Xamarin and .NET/Microsoft would qualify as competing production quality implementations of C#. Xamarin may have positioned their implementation of C# to target the mobile space instead of the enterprise space because they see that as a losing battle against Microsoft (and the niche they do address is very lucrative right now) but the could still qualify as competitors.,2013-01-09 16:23:14,5032251
145,"He clearly works for MS and probably on the team that works on C#, which is why I find it odd that he touts Mono as a feature. If MS was serious about .NET everywhere, they'd sponsor Mono/Xamarin, or offer native .NET support for OSX and Linux instead of using the Mono community's hard work to toot their own horn.<p>C# is a great language and has evolved beautifully, but many people will still continue to avoid it because it's owned by MS and stuck on Windows (without the help of Mono). The next Google, Facebook or Twitter won't be written with C#.",2013-01-11 11:47:04,5042286
146,"Mostly on mobile I would guess. Xamarin has a showcase on their site: <a href=""http://xamarin.com/apps"" rel=""nofollow"">http://xamarin.com/apps</a> .<p>Also every game made in Unity is using Mono, which is _a lot_ of games. The Playstation Vita and Wii U uses Mono as well for third party development.",2013-01-11 13:28:12,5042551
147,"The NDA asks an interesting question at the end about Mac vs PC preference.<p>Given Xamarin's recent mono.mac release, their targeting of a much more PC heavy developer set (C# people), their attempts to keep monotouch/droid simply add-ins to monodevelop...I am going to assume this is a new IDE aimed at cross platform mobile development.",2013-01-18 19:43:59,5080528
148,"Well, you can write C# without having to develop on windows through the Mono framework, and Xamarin's products - <a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a><p>These days, you can be a C# developer without having to do an ounce of ""Microsoft Stack"" programming if you didn't want to.",2013-01-22 15:51:12,5097640
149,"I agree with Keith, I am hoping that they are getting ready to allow us to have one source code base that can be converted/compiled to run on all platforms.  Very similar to what Codename One does with Java.<p>I was actually just getting ready to start developing my app in Codename One simply because I would only have to learn one framework and could have one source code base.  Switching to Java from C# wouldn't have been too much of a hassle cause they are kissing cousins.<p>Anything is better than having to code in JavaScript!  Don't let us down Xamarin - C#, UI Abstraction layer, Xamarin.Mobile, GUI Builder for drag-and-drop design.  That's what is needed in order to remove the growing pains from switching to mobile development.  Make it happen Xamarin!",2013-01-23 20:09:17,5105007
150,This is a big win for Mono and Xamarin.,2013-02-04 16:22:04,5164912
151,"I suspect that a deeper issue here is that Microsoft developers believe that Microsoft is as permanent as things get in software, and by extension that everything Microsoft releases will last forever.<p>Realistically, most EOL'd Microsoft development platforms had been in their period of being officially supported for no less time than it takes an open source platform to go from being the hot new thing to something that's barely worth mentioning on your resume anymore.  And Microsoft still offers a lot of continuity - XNA and Silverlight may be dead and WPF might be on the way out. But those C# skills you learn on the old platforms are still usable all over the place, including in Unity (for game developers) and with Xamarin (for mobile).  And those XAML skills will still hopefully be useful with WinRT.  By contrast, it'll probably be a much bigger deal to switch platforms when Ruby finally becomes passe.  For one, it'll take learning a whole new programming language.<p>Before I get jumped on, I should hasten to say that my intent isn't to criticize any open source for anything.  It's to criticize the Microsoft community for developing an attitude of complacency and perhaps even entitlement.",2013-02-05 02:38:41,5168699
152,"I'd vote for replacing it with Mono.<p>Modern VM design, vastly superior flagship language, pretty solid on the side languages* too, better platform support (Thanks Xamarin!), and best yet it's Free.  Like really Free, not Oracle-style ""Here's the source code so you can maybe hack on our implementation a bit but if you try doing anything we don't like we'll sue your ass"" 'free'.<p>* Not really a great Lisp for the platform yet, but I prefer F# to Scala.  Much cleaner syntax, 'feels' more functional.",2013-02-05 16:21:42,5171440
153,"If you want ""proven"" you should probably be using NodeJS then... not for GUI apps, but for headless apps and services... since it's core engine is V8, which runs on nearly a third of the desktops out there with far more regular use than Java.  And the language JS, with more developers using it than just about every other language combined.<p>This is kind of tongue in cheek, but seriously... NodeJS is relatively new (since 2009) and it's gained a <i>LOT</i> of traction... it isn't the perfect solution, but then again nothing is.  I like Mono and have used it, they've worked through a lot of the earlier issues, and it's pretty decent at this point... IIRC it's the core of the Unity tools, as well as having Xamarin tools available to support the majority of mobile platforms.",2013-02-05 18:27:19,5172260
154,"&#62;C# is really a fanstastic language. But the downsides of being tied to the Windows/MSSQL/IIS platform is like have a boat anchor around your ankle. Similarly, how many people are excited about windows 8 vs. iOS or android?<p>Great times for Xamarin.",2013-02-07 08:23:19,5181096
155,"Well believe it or not but some people don't like the idea of targeted ads, which is the result of Google's scanning. Small anecdote, when my 66 year old father found out that a grocery store chain was sending him ""personal deals"" based on what he had bought using their card he immediately went home and cut it. He thought (and thinks) that no one should be keeping tabs on his buying patterns for commercial purposes, even though he might stand to gain from it. I was kind of suprised by his harsch reaction at first but later I was actually kind of proud of the fact that he cared so much about his personal privacy and integrity.  This might seem shocking to the ""web generation"" but I think it can be a quite healthy and refreshing mindset sometimes.<p>On a personal note I have taken an interest in Xamarin's stuff lately and since Google is the all-seeing-eye of the web that means I now see Xamarin ads wherever I go (those not caught by adblock that is). Maybe I should care more as well, the more I think of it the less ok it feels.",2013-02-07 15:31:26,5182555
156,"Thing is, these days it would probably only take a small outlay of cash (or finding the right, desperate pro-bono designer) to get a fairly good landing page.  Nat Friedman of Xamarin laid this out pretty clearly in a blog post [1].  Just a damn themeforest template would do wonders.<p>[1] <a href=""http://nat.org/blog/2011/06/instant-company/"" rel=""nofollow"">http://nat.org/blog/2011/06/instant-company/</a>",2013-02-07 16:09:06,5182852
157,"(in response to marknutter's comment below, for some reason the reply button was previously not available. HN bug?):<p>You can (and we do):<p>iOS: <a href=""http://xamarin.com/monotouch"" rel=""nofollow"">http://xamarin.com/monotouch</a>
android: <a href=""http://xamarin.com/monoforandroid"" rel=""nofollow"">http://xamarin.com/monoforandroid</a><p>You should give it a shot. And as much as I like HN and its content, its mobile UX is pretty shabby (dare I say incompatible? ;)).",2013-02-11 14:07:46,5200795
158,"Yup, and I found C# versions of UIKit classes more convenient to code against.<p>Regarding your point about MonoDevelop, I won't spill the beans but Xamarin is preparing something exciting to fix IDE problems right now.",2013-02-11 20:50:07,5203116
159,"I don't think RubyMotion exists because like Obj-C it was inspired by SmallTalk. Well maybe it is, but that doesn't mean it's an insurmountable barrier that would render a similar project in python impossible or ""un-python like"". C#/.NET got the treatment a long time ago, <a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a>. It's just that (it appears) no company or OS developer has taken on the challenge of creating the tooling for python.",2013-02-13 22:11:28,5216019
160,"That's one of the reasons I like Xamarin's approach with MonoTouch. You can use it and target the Simulator for free, but if you want to run your app on the device, you need to pay for a license. Seems fair to me. I wish RubyMotion would offer this as well. I bet a lot of developers (myself included) would then try it out. But like purephase, I can't justify paying $200 just to try something out.",2013-02-14 09:54:44,5218730
161,"&#62; <i>In the earlier days of Java, a common refrain was that the JVM could get better-than-native performance because it could make runtime decisions about JIT optimization</i><p>In reality, that goal was achieved ;-)<p>&#62; <i>You are aware that Mono AOT compiles C#, correct?</i><p>Java can be compiled straight to native code too. GCJ works like that for instance. The resulting performance from binaries of such compilers is abysmal though.<p>C# is not really a good example because C# was designed for AOT compilation. For example, most methods in the standard library are not polymorphic and methods in C# are final by default, whereas with Java it's the complete opposite, with  methods being virtual by default. With all respect to Mono and Xamarin, it's hardly an epitome of performance.<p>Also, right now JRuby trumps in performance just about every other Ruby implementation available, including MRI, RubyMotion, Rubinius or IronRuby.<p>&#62; <i>JIT is not strictly necessary here</i><p>For dynamic languages, if you want decent performance, all the known techniques require JIT techniques. One of the most important optimizations the JVM does is inlining of virtual method calls at runtime, something which is impossible to do ahead of time. Another important technique is tracing JIT compilation, used successfully in recent Javascript engines (except V8 I think) and by Lua [1]<p>All known techniques for optimizing dynamic languages or runtime-polymorphic method dispatch require recompilation of code based on changing conditions.<p>[1] <a href=""http://en.wikipedia.org/wiki/Trace_tree"" rel=""nofollow"">http://en.wikipedia.org/wiki/Trace_tree</a>",2013-02-15 20:12:30,5228276
162,"I will now relent of defending Mozilla, in which I have zero vested interest. Mozilla's mission and approach seem good on paper (or in HTML), but you make good points.<p>It seems to me, on reflection, that I have been playing the role of religious apologist, while you have been the skeptic. This is ironic, because I have been in the opposite sitaution with regard to my former real religion for the past couple of years.<p>It seems to me that Android is the closest thing we have to a non-proprietary application platform, and even that is more tightly controlled by one company than we might like.<p>For now, I guess the best approach to writing great apps is to write the UI-independent core in a reasonable cross-platform language, and then use each platform's native UI constructs. iOS makes this difficult for any language higher-level than Objective-C, since there can be no JIT compilation for iOS. But I'm thinking now that C# might be a reasonable cross-platform language, given Xamarin's work on Mono for mobile platforms.",2013-02-16 16:59:12,5232084
163,"As a recovering C# programmer, I can safely say the cost of licensing and tooling is the main detriment, along with cross platform issues.<p>Working on C# OSS means stealing licenses from your employer, buying an MSDN subscription on your own dime, or evangelizing enough to get an MVP award so you get all the tooling for free. The free Express editions of the tools have built in limitations that don't make them viable for building Big Data projects. Other options exist, but pale in comparison to Visual Studio so they don't get much use.<p>As for mono, the uptick for the OSS stuff just isn't there and even Xamarin is leaning on commercial offerings to become a viable business. Maybe as they get more successful they can sponsor some C# server projects, but that may be a ways off.<p>This is all unfortunate, as C# really is a great language.",2013-02-18 16:37:34,5239052
164,"That's not quite fair to Mono ... Xamarin is a great steward of mono, and is supporting the platform quite well. I guess that statement is pretty subjective, but I can only point to the release history of mono, and related products (MonoTouch, etc.) to show that not only are the releases consistent, but they are quite substantial. The platform is evolving and maturing at a great pace.",2013-02-18 16:39:18,5239071
165,"Would you consider Linux or BSD to be ""first party supported""?<p>I've had good experiences with Mono and MonoDevelop, and given that Xamarin provides commercial support for Mono, I don't think it makes sense to automatically discard that option.",2013-02-18 16:40:20,5239081
166,"Nice to see Xamarin making it's way in the mobile space, however, I have the theory that if there were a Mono distribution(installers, packages, etc) that favored other file extensions than "".exe"" and "".dll"" along with web frameworks designed for Command Line(like rails), only then Unix/Linux developers could see Mono as a serious Java alternative at least for Server-Side. I'd support an effort to create a separate Mono distribution that strips down GTK#, ASP.NET and family to a minimal Base-Class-Library powered by an amazing Runtime/JIT technology. If only I could find more developers who think this way...",2013-02-18 17:15:46,5239300
167,"Seems awesome. I wonder how they made it possible to have an iOS simulator in their Visual Studio plug-in. Apparently it will be possible to develop native iOS / Android apps written in C# from Visual Studio and I'm guessing from Windows.<p>I have much respect for Miguel and the other guys at Xamarin. They work on some great stuff, I think C# has a great future for mobile development because of all the work these guys have done.",2013-02-20 14:29:12,5250573
168,"As an indie developer who recently bought the full priced package so that he could start testing on real devices: argh. As a developer that knows C# and wants to make iOS apps: awesome.<p>I haven't had a chance to download it and try it out yet, but Xamarin Studio looks amazing. I've long thought that MonoDevelop has a very solid core but little polish- it looks like Studio adds that polish.",2013-02-20 14:40:08,5250622
169,"From <a href=""http://docs.xamarin.com/guides/ios/getting_started/installation/windows#24-limitations"" rel=""nofollow"">http://docs.xamarin.com/guides/ios/getting_started/installat...</a><p>""No iOS simulator on Windows. The iOS Simulator runs on Mac OS X, so its necessary to switch to the Macs screen when testing on the simulator.""",2013-02-20 14:40:35,5250625
170,"We do releases fairly frequently with bug fixes for all of our products. What is meant by hot-fixes is custom builds of a specific version of a product w/ a bug fix.<p>For Xamarin Studio (the product I work on), I often provide bug reporters with the latest internal build with my patch for their bug no matter what subscription they have (at least for the bigger issues). It's not quite the same thing, but I suspect that'd be good enough for most people until the next official point-release.",2013-02-20 14:48:40,5250669
171,"I have been working with the beta and am extremely pleased. I think people will get very excited over the VS integration for iOS but I think the component store is going to be one of the big winners here.<p>The MonoDevelop rewrite (Xamarin Studio) also has a clean, fresh and fast feel to it. I cannot say that X is empirically faster or better but the experience does feel better overall.<p>I think they are heading in the right direction here and the holy grail for breaking strongly into the enterprise may be the ability to build for iOS without the need for a Mac. It is not there yet but you can see the direction they are going and how that will likely come to pass at some point.",2013-02-20 14:50:56,5250679
172,"What does it mean with ""you cannot P/Invoke 3rd-party library""? Does this mean that Xamarin Free edition is limited to the scope of iOS basic SDK and not 3rd-party Obj-C library out there?<p>Or does this include some of the iOS extended library (if any?) from Apple?<p>Sorry if this is a dumb question, I'm not quite familiar with iOS ecosystems.",2013-02-20 14:52:18,5250692
173,You can actually use the Starter Edition to publish a small application. Wow! This will increase the adoption of Xamarin ...,2013-02-20 14:57:35,5250729
174,"I don't own a Mac, but have an Ipad. If I jalbreak my Ipad, would I then be able to deploy applications built with xamarin studio or visual studio for testing?",2013-02-20 14:58:35,5250740
175,"This is great and looks very interesting. First question - what happened to the Windows Phone 8 support? Won't we be able to develop Windows Phone applications using Xamarin?<p>It says on <a href=""http://xamarin.com/Windows"" rel=""nofollow"">http://xamarin.com/Windows</a> that Xamarin does support all three platforms, but I don't see anything about the Xamarin studio there.",2013-02-20 15:01:08,5250752
176,"I am a bit ambivalent - on one side, as I think about new product ideas that will naturally be multiplaform, something like this is very appealing in theory, but my experience tells me that the lowest-common-denominator approach has almost always failed.<p>I wonder how folks are thinking about that problem - i.e., if you are starting a new app from scratch - even if you are doing iOS only initially - do you go objective-c or xamarin/c# ?<p>it's quite hard to make an educated decision.<p>any thoughts?",2013-02-20 15:09:49,5250793
177,"It isn't a lowest-common-denominator approach. We expose the entire native API on each platform. So anything you can do in Objective-C, you can do in C#.<p><a href=""http://xamarin.com/how-it-works"" rel=""nofollow"">http://xamarin.com/how-it-works</a>",2013-02-20 15:11:30,5250802
178,"Just to clear things up, Xamarin.iOS and Xamarin.Android are not really ""lowest common denominator"". They are full bindings for the underlying platform APIs.",2013-02-20 15:13:24,5250809
179,"We do not actually provide a lowest-common-denominator.<p>It is simpler to think of Xamarin as providing you with:<p>* C# language on iOS, Android, Mac 
* 1:1 API bindings to whatever is native on a given platform.   On iOS, the CocoaTouch APIs, on Android, the Android APIs, on Mac the Cocoa/CoreFoundation-based APIs.<p>From this basic setup, you can already see that you wont get code that will run on all platforms.   You will need to split your code into cross-platform code (database access, web services, xml, json parsing, offline caches, authentication) and things that are UI-specific (Android activities, Android widgets, iOS View Controllers, and so on).",2013-02-20 15:15:34,5250820
180,"The LCD argument is false here, there is nothing that can be done in Objective C through public APIs I cannot do with C#/Xamarin. The day after iOS 6 was released, Xamarin had an update to Monotouch. The betas were available before that as well.<p>I think for me, having a decade plus of C# experience this was a no-brainer. Moving from building web apps to mobile on a new platform was a big shift and removing the confusion of a new language helped smooth the transition.",2013-02-20 15:16:08,5250828
181,"While we make our cross platform libraries like Xamarin.Mobile run on all platforms, including Windows, we do not actually provide an IDE for Windows Phone apps.<p>Microsoft already provides a complete and capable product for that space.",2013-02-20 15:17:01,5250834
182,"I have mixed feeling about this. I have a current Mono for Android Profession subscription and use the Visual Studio integration a lot. My subscription is due for renewal next month and if I want to continue to use VS with Xamarin 2.0 then I have to renew at the Business edition level. I paid for my sub out of my own pocket because I liked the technology so much, but $399 for the pro version last year was a stretch and I just can't justify $1k to renew. Xamarin Studio might be superb, but I've been using VS since 1995 and I really don't need to learn another new IDE right now.<p>Any comments from Miguel or anyone from Xamarin?<p>That said, the Indie edition is something that a lot or people were asking for and the price is attractive. The components look good too. I think its going to be a big success.<p>Edit: See Nat Friedman's response below [1]. Existing Pro subscribers are automatically upgraded to Business and can renew at their existing renewal price. This is described in the FAQ [2] which I didn't read far enough down.<p>[1] <a href=""http://news.ycombinator.com/item?id=5250922"" rel=""nofollow"">http://news.ycombinator.com/item?id=5250922</a><p>[2] <a href=""http://xamarin.com/xamarin-2.0-faq"" rel=""nofollow"">http://xamarin.com/xamarin-2.0-faq</a>",2013-02-20 15:23:53,5250878
183,"Using VS would be a huge plus. You don't have to buy a bunch of pricey macs, just 1. You don't have to retrain C# coders to use a Mac. You can use ReSharper! You can open two code windows side by side, something monodevelop cannot do (not sure about Xamarin Studio as I am still waiting on the download). VS integration with Team Foundation is much better than git-tf, so if your company is already using Team Foundation you can tack on iOS development/ports with out much trouble. There are a lot of reasons it makes sense.",2013-02-20 15:26:38,5250897
184,"I will let one of the Xamarin guys speak to this in detail but having built a couple apps for customers with Monotouch I can tell you that you can pull in some native objective c libs for things like richer UI. There is a method for creating a binding to a native objc libs and using it from C#. I use ATMHud, TestFlight and Flurry in one of my apps - all of which are built from bindings to the native objc libraries.<p>The other thing I will say is that while there are 1:1 API mappings they have also went out of their way to make some common and rigorous tasks simpler. TableViewSource is one that comes to mind, simplifies the UITableView scenarios.",2013-02-20 15:27:32,5250904
185,"Great work, this is really cool. A couple of thoughts, idly:<p>- 'Xamarin Studio' just a new coat of paint on monodevelop, but it has some nice things in this version; new ui, the autocomplete especially is <i>vastly</i> improved.<p>- Seems a bit laggy on my mac mini for some reason, which is a bit disappointing, but works fine on my imac. Both mountain lion, so who knows?<p>- <i>Still</i> no PCL's for macs. :( <i>sigh</i> (yes, you still need to have a separate project for each platform, which includes all the same files).",2013-02-20 15:30:37,5250918
186,"I am in the same boat but starting to recognize that the free train of tooling is a ploy of platform vendors trying to pull us in to working in their area. Microsoft can afford to do this because they extract major value on the back end when we target windows with apps.<p>A cross platform, non-allied company like Xamarin doesn't benefit from that back door revenue as they make no money from my app.<p>It is a tough bill to swallow but the problem seems to be our perspective, free wasn't always free. $399 was a young company trying to gain traction with a small team and if we want bigger, faster, stronger then it costs.<p>Sucks, but after 10+ years of consulting in the Windows space I realize that cross-plat mobile is my next 10 years and in that light, 1K is not that bad.",2013-02-20 15:33:19,5250938
187,"If I have a team (a ""team"" of me +2, don't think too big) of coders proficient in both C# and C++, what advantages would using Xamarin bring over having the common/cross-platform code in c++ (objective c++, ok...) and using the platform specific languages and tools for the UI and whatever else ends up being platform specific? (besides C# being a much nicer language, of course)",2013-02-20 15:35:03,5250958
188,"You can continue to compile and release even after your subscription expires, you just don't get updates to Xamarin's products.",2013-02-20 15:38:01,5250975
189,"We wrote the equivalent of a linker, which only brings the pieces that you actually reference.<p><a href=""http://docs.xamarin.com/guides/ios/advanced_topics/linker"" rel=""nofollow"">http://docs.xamarin.com/guides/ios/advanced_topics/linker</a>",2013-02-20 15:44:55,5251022
190,"Periodic reminder to the Linux and free software community of the damage they made with their ideology wars against the Mono environment.  Mono is now the most popular game and one of the most popular app development environments. :-)<p>Kudos to Miguel and the rest of the Xamarin team, the update looks amazing.",2013-02-20 15:46:13,5251029
191,"I think some of the animation stuff is probably the cause of the lag on the mini you are seeing. I'm pretty sure we've already got a patch for this, it just wasn't in time for the final Xamarin Studio 4.0 build.<p>PCL's are coming. An upcoming Xamarin Studio 4.0.1 will improve PCL support even more - as in, it'll work on Mac, but it won't build true-PCL libraries (it'll link with the Xamarin.iOS or Xamarin.Android BCLs instead of with the true PCL assemblies).<p>This blog post by Stuart Lodge links to a custom build of MonoDevelop 3.1.1 with my PCL patches if you want to try them out: <a href=""http://slodge.blogspot.com/2013/02/a-patched-monodevelop-for-pcls.html"" rel=""nofollow"">http://slodge.blogspot.com/2013/02/a-patched-monodevelop-for...</a>",2013-02-20 15:46:54,5251037
192,"This looks amazing. I think in many ways Xamarin has out-done Microsoft here. I'm not sure if Xamarin Studio is more featureful than Visual Studio (VS went over the ""overly complex"" hill for me after 6.x), but it looks a lot cleaner and easier to get into.<p>Anyone know if debugging C/C++ code on Mac is still unsupported as it is in MonoDevelop 3.0?",2013-02-20 16:19:20,5251271
193,"From the FAQs, if this helps.<p>""Customers that purchased within the past 90 days may request a partial refund for the price difference between their purchase price and Indie. If you choose to make this downgrade, you will lose access to many great Xamarin Business features you already enjoy, including Visual Studio and email-based support.""",2013-02-20 16:25:38,5251320
194,"&#62;We do not actually provide a lowest-common-denominator.<p>This actually is the reason I keep away from Xamarin, and I guess I'm not alone...<p>I think that there is a room for having a cross-platform lowest-common-denominator, including UI, File system, Networking, etc... with ability to dive into platform specific details when needed.",2013-02-20 16:47:37,5251453
195,"I'm also curious about this.  Promisingly, F# is explicitly mentioned under the ""Extensible"" heading here: <a href=""http://xamarin.com/studio"" rel=""nofollow"">http://xamarin.com/studio</a>.",2013-02-20 16:54:47,5251515
196,"I'm been pretty excited about Xamarin for quite some time, but today I'm not as excited.<p>The new Studio looks great, but there isn't a Linux version. This makes me very, very sad.<p>The one thing that could make me very happy, however, is if they target the Ubuntu mobile/touch SDK in the future. Wonder if this is on the horizon?",2013-02-20 16:57:23,5251536
197,"MonoDevelop, MonoMac, and Mono itself are still all open source.<p><a href=""http://github.com/mono/monodevelop"" rel=""nofollow"">http://github.com/mono/monodevelop</a><p><a href=""http://github.com/mono/monomac"" rel=""nofollow"">http://github.com/mono/monomac</a><p><a href=""http://github.com/mono/maccore"" rel=""nofollow"">http://github.com/mono/maccore</a><p><a href=""http://github.com/mono/mono"" rel=""nofollow"">http://github.com/mono/mono</a><p>Xamarin also has a number of open source modules on github: <a href=""https://github.com/xamarin"" rel=""nofollow"">https://github.com/xamarin</a>",2013-02-20 17:21:07,5251721
198,We've got some abstractions that build on top of the native APIs as well such as Xamarin.Mobile.,2013-02-20 17:27:01,5251765
199,"It would be nice to see a blog post or two on the mile-high long-term etc. goals Xamarin has for the open source aspects of their tech... or perhaps a pointer to any existing summary. As you've pointed out, Xamarin is rather quietly contributing a lot; it would be great to have a place to point the non-developers to that explained this as well.",2013-02-20 17:49:41,5251937
200,"While C# looks like a great language, and I'm looking forward to playing with this, does Xamarin really allow you to share that much code between platforms?<p>In my experience, 75% of my mobile app code tends to be either working with platform-specific APIs or just quite trivial. Is the potential for code reuse high enough to justify the extra layer of stuff to understand (and potentially break)?<p>Edit: I can see how being able to use C# is a plus for some people, I guess I'm just slightly skeptical of the cross-platform selling point.",2013-02-20 18:11:33,5252107
201,"Hi,<p>Our servers buckled a little bit under the load. We load-tested, but missed a piece of infrastructure in the chaos. We've since beefed up that last piece of infrastructure, and you should be all set now to use the download form at <a href=""http://xamarin.com/download"" rel=""nofollow"">http://xamarin.com/download</a>. If you're still having trouble, contact our support at support@xamarin.com. Cheers!",2013-02-20 18:51:40,5252414
202,I still don't think that Xamarin 2.0 has the ability to compete with the native applications produced in Objective C,2013-02-20 22:12:56,5253725
203,"Ars review here: <a href=""http://arstechnica.com/information-technology/2013/02/xamarin-2-0-reviewed-ios-development-finally-comes-to-visual-studio/2/"" rel=""nofollow"">http://arstechnica.com/information-technology/2013/02/xamari...</a>",2013-02-20 22:19:50,5253764
204,"The following YouTube video summarizes exactly how I felt after reading the announcement:<p><a href=""http://www.youtube.com/watch?feature=player_detailpage&#38;v=1dQTr7dNnsc#t=15s"" rel=""nofollow"">http://www.youtube.com/watch?feature=player_detailpage&#38;v...</a><p>VS2012 integration w/OSX build host. Oh yeah.<p>Pricing changes have positives and some potential major negatives - In my eyes the ""pay money to get started"" approach served as a nice filter against pathological customers/mechanism to balance signal to noise. The introduction of a free tier generates mixed feelings within. Xamarin please, please don't allow the inevitable eternal september that will follow to become a distraction.<p>Seen it happen it happen a few times - forums/support become overrun with noise and the companies were inadequately prepared staffing wise for the eternal september, with staff unable to keep up the resulting quality of product/support dropped considerably.<p>From a different perspective the introduction of a free their now makes the toolchain available to those whom could not possibly pay for it - students and countries with weaker purchasing power. (where $xxxUSD is equates to x months/a years wage)",2013-02-20 22:22:09,5253778
205,"Hah, I knew I should've pulled the trigger on buying MonoTouch last week!<p>Oh well, at least I can do some testing on a real device without buying anything for the moment.<p>From looking at the comparison chart on <a href=""https://store.xamarin.com/"" rel=""nofollow"">https://store.xamarin.com/</a> , the LLVM optimising compiler only seems to be available for Business or above. What does this mean in practice?",2013-02-21 02:07:54,5254909
206,Nothing stops you from treating Xamarin as one.<p>But it also supports the full experience for each platform.,2013-02-21 04:47:07,5255445
207,"It's a shame that Linux support at Xamarin is obviously dropped in many places, so no Mono development for me. :(",2013-02-21 06:57:41,5255911
208,"Well, given that Xamarin doesn't seem to support Linux for their newest IDEs it's especially a shame. I'd prefer .NET/Mono over Java (and i'd prefer python and C over .NET), but it doesn't look like there's support for that..<p>Last time i tried to get MonoDevelop with those Android tools to check out cross-platform app development with Mono and it's a no-go. Now Xamarin Studio appears to be Mac and Windows only. Very disappointing!",2013-02-21 07:01:28,5255922
209,"You can't treat Xamarin as one... e.g. you can't write a simple calculator UI in a cross-platform way - You would have to code the UI part separately for iOS and Android.<p>At least, that's my understanding and OP (Miguel) confirms it.
And I guess your mileage won't vary in this aspect ;)<p>Although, Xamarin.Mobile is a step in the right direction, as commented here.",2013-02-21 07:20:58,5255990
210,"I'm surprised you have that opinion on VS.. the addition of easy add-on installs and nuget packages in 2010-2012 are pretty nice.  I found the VS6 UI's decent, but since I do most of my work in web based apps, it never cut it there.  These days about half my time is in VS/C# and the other half in WebStorm/NodeJS.  I also think web apps have a lot of milage and in some cases more to offer depending on what you are wanting to accomplish.
&#60;br/&#62;&#60;br/&#62;
I am glad that Xamarin has a viable business model, and wish them all the success in the world.",2013-02-21 10:28:45,5256637
211,"All of the Xamarin Studio changes were pushed upstream to MonoDevelop.<p>It's true that we don't currently have a version of the Mono-for-Android addin available for the Linux versions of MonoDevelop, though.",2013-02-21 13:53:20,5257355
212,"OP here...  wow... people are calling me an idiot on twitter <a href=""https://twitter.com/0xSina/status/304657083435991041"" rel=""nofollow"">https://twitter.com/0xSina/status/304657083435991041</a> and my blog server is crashing...  easy people, I am not making fun of your mother, it's just a programming language...<p>I am all about learning new languages.  I love c#, python, ruby and javascript...  But objective-c has to be one of the most verbose language out there and is syntacticly fugly...<p>When I programmed in python after 15 years of .net/c-type languages, I picked it up in 1 day.  It was simple and beautiful.  The same for ruby...  But obj-c, after 2 weeks of using it, I find myself hating it more and more every day...<p>chill out people...<p>PS: the image on my blog s from <a href=""http://xamarin.com/how-it-works"" rel=""nofollow"">http://xamarin.com/how-it-works</a>",2013-02-21 18:29:23,5259097
213,"The problem people have with this is not that you're complaining about Obj-C's verbosity -- this is a well-known complaint and something anyone using it will probably agree with. The problem is that you've just displayed a fundamental lack of understanding of 1) the difference between Obj-C and Cocoa (seems the Xamarin folks are just as guilty here, which is odd), 2) the difference between Obj-C and C, and 3) the difference between Cocoa, Core Foundation, and other frameworks. In reality, only one of your examples is Objective-C while the rest are C, and you didn't even handle the Objective-C or C cases as well as you could have, so it does make you look like an idiot. Either way, you learn from it and the 'net will forget you within an hour, so it's not a huge issue.",2013-02-21 18:35:55,5259142
214,"They are NOT MY EXAMPLES man...  It's a screenshot from <a href=""http://xamarin.com/how-it-works"" rel=""nofollow"">http://xamarin.com/how-it-works</a> and YES I have TOTAL LACK of understanding of obj-c...  My entire experience with it is less than 4 weeks.  But so is my experience with python - which I instantly loved.",2013-02-21 18:40:52,5259177
215,"Chill out, manbrodude. Just learn from your mistake. It's not like you're being crucified, just being called out for perpetuating something stupid and being misinformed. If you're concerned about your appearance, maybe pull the post, but a better thing to spend your time on would be learning how to use Obj-C so you don't write terrible code like the Xamarin folks. Live and learn, as it were.",2013-02-21 18:47:03,5259225
216,"&#62;<i>You can't treat Xamarin as one... e.g. you can't write a simple calculator UI in a cross-platform way - You would have to code the UI part separately for iOS and Android.</i><p>Yes, but they do offer a ""base"" abstraction layer besides the C# libraries, that includes stuff like GPS access, accelerometers, etc.<p>As for the UI part, one could use a Webkit View as the view, and link the various heavy actions to C# code. For something like a common denominator UI, for a simple calculator or some form based stuff, it would be perfectly fine.",2013-02-21 20:19:56,5260057
217,How to add database addin to xamarin studio  to get database access ?,2013-02-22 06:51:48,5263086
218,"deIcaza mentioned here that it's a priority for Xamarin<p><a href=""http://news.ycombinator.com/item?id=5251413"" rel=""nofollow"">http://news.ycombinator.com/item?id=5251413</a>",2013-02-24 01:03:49,5272218
219,"well, personally i use monodevelop(xamarinstudio) 4.0 and mono 3.0.3 in archlinux.<p>you need a fork of the fsharpbindings project 
<a href=""https://github.com/xamarin/fsharpbinding"" rel=""nofollow"">https://github.com/xamarin/fsharpbinding</a><p>have you tried using fsharpx from nuget? monodevelop has nuget support as of now.
<a href=""https://github.com/squidge/monodevelop-nuget-addin/tree/xs-nuget-addin"" rel=""nofollow"">https://github.com/squidge/monodevelop-nuget-addin/tree/xs-n...</a><p>I also just built fsharpx.core and fsharpx.http with monodevelop(right now) and it built fine for me.",2013-02-24 04:11:09,5272779
220,"When was the last time you tried MonoDevelop? Xamarin has put in a lot of work on MonoDevelop over the past year or so -- in fact, they just released a major new version (4.0) and even contributed a bunch of improvements to the F# bindings:<p><a href=""https://github.com/mono/monodevelop"" rel=""nofollow"">https://github.com/mono/monodevelop</a>
<a href=""https://github.com/xamarin/fsharpbinding"" rel=""nofollow"">https://github.com/xamarin/fsharpbinding</a><p>BTW, F# also has emacs support, and from what I hear vim support is on the way:<p><a href=""https://github.com/fsharp/fsharpbinding"" rel=""nofollow"">https://github.com/fsharp/fsharpbinding</a>",2013-02-24 05:16:46,5272967
221,"It would have been over a year ago. I am not interested in using it, I was just curious about it at the time. (I don't really get along well with anything that expects me to use a mouse.)<p>I sorta doubt that the emacs/vim support is anything near what there is for OCaml, but knowing Xamarin it will get there... eventually. But really, I don't see a big reason to pick F# over OCaml unless you're already doing .Net or something.",2013-02-24 06:09:12,5273094
222,I've spent about 3hrs trying to get the fsharp binding working in xamarin studio but no luck. How did you get it working?,2013-02-24 09:28:43,5273552
223,"It seems that you will now charge for Mac only development via XamerinStudio? Is that correct? At least, when I went to clarify the multi-buy discount for Indy, I saw to my utter horror that Xamarin.Mac is an included option at $299. So, what does that mean to Mac only Developers? Are we now forever restricted to a 32kb app with no third party P/Invokes too? I'm certainly not ever in 1,000,000 years ever giving you a penny for the Mac target. I think this is an extremely worrying move on Xamerin's part and if we really do have to buy a subscription to get continued support, I really do feel betrayed. I mean, come on, Apple have charged $5 for XCode for a short period for as long as it has existed. And I can open it now and create an app for free. I really don't understand this move. I'm hoping I've get the wrong idea and Miguel (et al) will correct me.",2013-02-25 13:09:07,5278763
224,"Not sure I agree with the prediction:<p>&#62; My prediction is that Xamarin will come up with its own GUI abstraction framework in future, along the lines of SWT. It is a compromise; but one which delivers a lot of value to developers who want to create cross-platform apps with the maximum amount of shared code.<p>This will almost certainly create the 'uncanny valley' which the author refers to in an earlier paragraph.<p>I consider the fact that Xamarin has two APIs for the two platform UIs a real advantage. You can still write your business logic once - so the time to create an iOS and Android app reduces from 2 to 1.x, and you still get the benefit of a fully native feeling app.",2013-02-25 13:10:42,5278771
225,"Worth looking if you like a close minded secretive attitude and living in the past. Profit from a technically bad &#38; boring forum, report bugs in a home grown issue tracker which sucks and get example code through subversion.<p>The syntax of closures (they had to invent their own name, anonymous methods) is very long-winded. And generics? Only useable after several versions. Which leads to the most important point: quality is s*it (I'd suppose because they cannot tame the complexity any more).<p>Hello 'it works' likely won't get you far :-)<p>It's a pity, but the sooner they bankrupt the better. Something more focussed and contemporary might emerge or people invest and switch to FreePascal. Would love to have a native Pascal based ecosystem which would be innovative and friendly, like let's say, Xamarin!",2013-02-27 13:51:47,5292317
226,"If you were writing for haskell/scala/ML'ers, x::xs, for C#ers, head::tail<p>I haven't been tracking closely but no Forward declarations was one of common complaints, along with organizing projects in subdirectoris (I think they have fixes for that now) and VS support in general<p><a href=""http://stackoverflow.com/questions/1378575/f-forward-type-declarations"" rel=""nofollow"">http://stackoverflow.com/questions/1378575/f-forward-type-de...</a><p>__________<p>Also Xamarin shd be releasing... soon<p><a href=""http://news.ycombinator.com/item?id=5251413"" rel=""nofollow"">http://news.ycombinator.com/item?id=5251413</a>",2013-03-04 18:55:50,5319893
227,"""Linux just never managed to cross the desktop chasm,"" he concludes [Xamarin CTO Miguel de Icaza]. Surely he doesn't consider Ubuntu a failure on the desktop. Sounds like FUD to me now that he has ramped up his commercial interests.",2013-03-06 04:42:31,5329360
228,"My main gripe with Novel and now Xamarin is that they don't provide packages for Debian and Ubuntu, arguably the most popular Linux distributions.<p>For instance if you go to Mono's download page to checkout the options, the only Linux distribution supported by them is OpenSuse: <a href=""http://www.go-mono.com/mono-downloads/download.html"" rel=""nofollow"">http://www.go-mono.com/mono-downloads/download.html</a><p>Of course one could argue that Debian (and Ubuntu that relies on Debian's repository) has a culture of packaging stuff by themselves and indeed in the case of Mono there are people that do just that. But those packages are always behind the current version and you can't blame the maintainers for that. And lots of software companies, including Google and Mozilla, are providing packages for Debian/Ubuntu for the latest versions by themselves. It's actually the norm with Ubuntu to setup third-party PPAs that provide packages for something missing from the main repository.<p>So Miguel here complains about fragmentation on the Linux desktop. It's funny, because they ignore the largest distributions around. At least if instead of OpenSuse they supported Red Hat, I would understand.<p>Also, my experience with OS X has not be so pleasant. Miguel is a damn good developer, but he must be using a really simple toolchain.<p>When you are working day-in day-out with Java, Ruby, Python, Javascript, Mysql, Postgresql, GCC, Casandra, MongoDB, Memcached and dozens of other technologies, installing that stuff and having it work on OS X is amongst the most frustrating experiences I ever had, no matter if you're doing it by hand or with MacPorts or with Homebrew. All available options on OS X suck. I couldn't give a fuck about binaries of commercial software packages working, as long as I can't manage the toolchain I depend on daily.<p>Another thing with OS X is that it just works, until it doesn't. After that you're in Windows-land again, the preferred option being to just reset/reinstall everything. Linux can be painful sometimes, but for most problems you can find documented fixes.<p>Also, he's a little out of date. Ubuntu has been rock solid for me on my Thinkpad for the last couple of months since I got my current laptop. Of course, I preferred a model with Intel HD 4000 instead of a Geforce, so a little research into hardware may be needed to ensure good compatibility, but on the other hand you can't run OS X on anything else other than a couple of Macbook models. Try building a Hackintosh sometimes and your appreciation for Linux will change.",2013-03-06 07:43:47,5329926
229,"Have you considered creating this as a Xamarin theme component? <a href=""http://components.xamarin.com/"" rel=""nofollow"">http://components.xamarin.com/</a> It could be an easy way to get the theme in front of more buyers.",2013-03-06 21:07:56,5333933
230,"Or, if we disregard costs, C# and use Xamarin's (<a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a>) products.",2013-03-07 14:46:18,5337813
231,"Same goes for C# and Xamarin, if you already know C# and enjoy coding in C# ...<p>If you don't know C# I see little reason to buy a Xamarin license (I know you can get started for free which is great).",2013-03-07 14:47:33,5337824
232,"&#62; Mozilla estimates a best case of 2x slower than native with asm.js<p>No, it's ~2x slower with the early prototype. It will get significantly faster than that.<p>&#62;  a proprietary runtime<p>The asm.js optimizations being worked on in Firefox do not match any definition of ""proprietary"" I ever heard. All the work is done openly and is open source, and that includes the spec, the Firefox optimizations and the emscripten support for asm.js.<p>&#62; That's a ridiculous waste of resources, especially on battery-powered devices.<p>~2x slower than native is not optimal, sure. But it is in the same range of things like Java and C#, popular languages for mobile development (Android, Xamarin/Mono, etc.). And again, 2x is the starting point.",2013-03-09 18:59:40,5349230
233,"&#62; <i>No, it's ~2x slower with the early prototype. It will get significantly faster than that.</i><p>And we just need hardware XML accelerators and then XML will be great. This is not a new refrain from people who promote a subpar technology stack. Quality is just around the corner! We swear!<p>I'll believe it when I see it, and I'll be happy, because it'll mean that we're <i>finally</i> that much closer to the next step of dropping JavaScript as a first-order target entirely.<p>&#62; <i>The asm.js optimizations being worked on in Firefox do not match any definition of ""proprietary"" I ever heard. All the work is done openly and is open source, and that includes the spec, the Firefox optimizations and the emscripten support for asm.js.</i><p>It's not JavaScript. It's a custom VM built around a (bizarre) bytecode. The bytecode is an inefficient ASCII representation which happens to be interpretable as JS, but can't be interpreted as JS to actually be implemented efficiently -- which is to say, it's not really useful JS at all.<p>You may as well write a shell-script based ARM interpreter and call your ARM assembly ""shell script"". True, in a fashion, but also a totally pointless distinction. Everybody else will just call it ""slow"".<p>&#62; <i>~2x slower than native is not optimal, sure. But it is in the same range of things like Java and C#, popular languages for mobile development (Android, Xamarin/Mono, etc.). And again, 2x is the starting point.</i><p>Android has the NDK for a reason, and even they are starting from a better position than trying to eek out runtime+rendering performance from an in-browser bytecode. Maybe on the web we'll get NaCL to serve the same purpose.<p>It'll be great if it all works out and we wind up with a cross-platform efficient and useful development target, with robust view management and event systems and common widget toolkits. Of course, at that point the web will look pretty much like the application development environments that we've been targeting for decades: operating systems.",2013-03-09 19:49:17,5349388
234,"Mono is actually finding its way to new platforms all the time.<p>I was surprised to find out that the recently released Playstation Mobile SDK is based entirely on Mono, so Playstation Vita runs it.<p>And I am pretty sure there's an implementation available on Android. As for iOS there's Xamarin. MonoDevelop on MacOS is also quite good.",2013-03-10 13:16:17,5351738
235,I have been a C# developer since 2004 and nowadays I use it with Xamarin Studio to write iOS apps on the Mac. What Miguel and Nat have done with Xamarin is awesome and I think the future of .NET lies more with what they're doing than what MS is doing IMO.,2013-03-10 13:39:58,5351845
236,"I've been a fan of Mono for a long time; unfortunately, we've had a lot of trouble trying to scale it in production.<p>Our application was originally built for .NET (on Windows). It was successfully ported to Mono, but we continue to have strange problems (machine load average going to 50+ and becoming unresponsive, etc.) which we believe are related to the Mono GC. After spending a good amount of effort trying to fix the Mono version, we decided to bite the bullet and migrate to another platform (Node.js), which has proven to be significantly more stable under load.<p>I'm a huge fan of Miguel and the rest of the Xamarin crew, and I'd love to see a universal implementation of the CLR take dominance. I think maybe 5 years ago the CLR had a real chance to win in the battle of multi-language runtimes, but at this point I think the war is going to the JVM. (Chalk that up to yet another short-sighted decision by Microsoft.)",2013-03-10 13:41:46,5351854
237,"<i>I'm a huge fan of Miguel and the rest of the Xamarin crew, and I'd love to see a universal implementation of the CLR take dominance. I think maybe 5 years ago the CLR had a real chance to win in the battle of multi-language runtimes, but at this point I think the war is going to the JVM. (Chalk that up to yet another short-sighted decision by Microsoft.)</i><p>The problem is that Java (the language) completely dominates the JVM landscape still.  I don't see Oracle in the game at all as far as contributing/endorsing something else, and obviously Sun was completely oblivious to anything else until it was too late in the game for them.<p>If you look at the CLR, VB.NET has and F# actually have significant percentages of uptake because they're actually supported by Microsoft.  Scala, Clojure, etc.... are just miniscule blips on the radar in comparison.",2013-03-10 14:11:15,5351979
238,"F# runs perfectly fine on Mono. The F# compiler is open source.  Microsoft doesn't have to support F# anywhere else. 
In fact, Xamarin is going to support F# directly in their new IDE.",2013-03-10 18:02:00,5352763
239,"You should try another IDE. Eclipse isn't maintained by Google. Xamarin Studio is very nice. <a href=""http://xamarin.com/studio"" rel=""nofollow"">http://xamarin.com/studio</a>",2013-03-12 15:09:14,5362276
240,Xamarin Studio isn't maintained by Google either...<p>Also it'd be nice if the IDE supported the platform languages (Java and ObjC).,2013-03-12 16:43:13,5362972
241,why dont you use something like Xamarin to build everything in C# ? Is it because its mostly View specific code that has to be different for every platform anyway ?,2013-03-13 17:46:19,5369914
242,"If it were me, I'd develop in something like Xamarin/mono (<a href=""http://xamarin.com"" rel=""nofollow"">http://xamarin.com</a>) and if a convergence does happen, you'd imagine Xamarin would likely figure out a way to allow your apps to run on the new platform.",2013-03-14 01:56:16,5372616
243,"Creating a common UI across all mobile platforms is a big challenge as well and you mention the main points in your post. Your ""one-size-fits-all"" UI will look a little alien on every platform because its made to fit all of them at the same time.<p>Personally id use Xamarins excellent C# tools to build the core of the app multiplatform and then utilize the native APIs to build platform specific UIs. I dont think this approach is alot more/less work than making your webApp work with all platforms and resolutions, but in the end you have a native experience on all of them.",2013-03-18 06:25:50,5392747
244,"Yes, I did bash Miguel's work a few times, given his inclination to bring Microsoft based technologies to the UNIX world.<p>But I have to acknowledge that he has made a very good work with Mono and although I prefer to use C++ on my hobby Android projects, Xamarin's tools are a great approach for many developers.",2013-03-18 07:00:11,5392823
245,"Check out Xamarin Studio.  It's a full blown IDE and it's quite impressive in terms of native feel.  Apparently written in C#, Mono and GTK#.<p><a href=""http://xamarin.com/studio"" rel=""nofollow"">http://xamarin.com/studio</a>",2013-03-19 15:37:25,5401500
246,"The MonoDevelop front page (http://monodevelop.com) advertises 3.0. The download page advertises 4.0, but its release notes direct you back to the homepage.
When you actually download 4.0, you get something called Xamarin Studio which acts like MonoDevelop with a mobile development flavor.
To top it all off, it auto-updated and the add-ins repository just gives me 404 errors now.",2013-03-19 20:50:16,5403546
247,Out of curiosity have you used or seen Xamarin? I've heard a lot of hype and talked to fairly experienced people who say it doesn't add too much  in size or performance cost.,2013-03-25 16:25:42,5437870
248,"I like Xamarin's products. I am currently involved in a Xamarin.Mac project and I definitely prefer coding with C# over Obj-C. It's a very nice combo of having things like LINQ, nullables, properties, etc and yet you're still truly coding against/with Cocoa. You can't use Xamarin's products without first having at least a working knowledge of Apple's tech.<p>My reservation is the cost. I bought MonoTouch when it was first released and wrote a game for the iPad with it[1]. If I wanted to release that game now though, I'd have to re-buy MonoTouch, which doesn't sit well with me. But if you're not a hobbyest then the cost is pretty irrelevant IMO.<p>[1]<a href=""https://github.com/city41/optix"" rel=""nofollow"">https://github.com/city41/optix</a>",2013-03-25 18:17:04,5438627
249,"I just got our production server for our new mobile game setup on AWS EC2 running a similar setup- Ubuntu, Mono, and Nginx. I wanted to use C# server side so I could share code with the client (a game written in C# + Unity3d).<p>It was pretty easy to get up and running, even without running Visual Studio (I used Xamarin Studio (Monodevelop) for everything). I think it was a lot easier to get setup than this blog post makes it seem. I installed everything via apt-get and only touched 2 or 3 config files in total.<p>The most confusing thing for me was what kind of ASP.NET project to create. I've never done any .NET web development before so the differences between a ""Web Application"", ""MVC 2"" and ""MVC 3"" project were not clear.<p>I haven't done any load testing yet but I'm hoping it is stable and can handle all our meager load on a single EC2 instance. I'm also running DynamoDb and Redshift for a full AWS stack.<p>After finally wrapping my head around ASP.NET MVC I think it has a lot more of a learning curve than a Python/Django type web app (my only other serious exposure to web apps). The way Django does routing, URL variables, and responses seems a lot more intuitive.",2013-03-26 07:37:19,5441802
250,"Unity is a great product for what it is, but it enforces upon you a particular view of the world and it's one I personally do not share. It puts you into its editor environment (which I don't find to be very good) and more or less expects you to be using the visual tools for most of what you're doing. I don't like that workflow; I prefer to work in a data-driven environment and in a real IDE. It is not as quick to prototype, but I enjoy it more and the end result satisfies me. I also prefer to know <i>exactly</i> what's going on in my game code, and there's enough obscuring that in Unity or another closed-source runtime that I'm not comfortable with it.<p>And I don't trust Unity not to close up shop one day and leave me high and dry with closed-source, bit-rotting libraries. Or to not target a platform I care about in the future, again leaving me screwed. I need to control the stack, and Unity is antithetical to this. (This is also why I have moved away from Xamarin's stuff--while enough of their stuff is open that I could spend multiple man-years re-implementing it if it went away tomorrow, it's a much better investment of my time to use the platform APIs directly.)",2013-03-26 16:40:00,5444427
251,"The Go people really have figured everything out. You don't need IDEs! You need reusable pieces of code that you can plug into every other text editor, IDE or what have you.<p>For C/C++/Obj-C we can use llvm/clang. [1]  
I've found Pysmell[2] and Rope[3], for Python.  
C# has NRefactory[4], which is used by the Sharpdevelop and Xamarin folks. 
When doing java you can kind of do this with Eclim[5]. It can run a headless eclipse.<p>The day vim does all of these out of the box, will be a happy day!<p>[1] <a href=""https://github.com/Rip-Rip/clang_complete"" rel=""nofollow"">https://github.com/Rip-Rip/clang_complete</a><p>[2] <a href=""https://code.google.com/p/pysmell/"" rel=""nofollow"">https://code.google.com/p/pysmell/</a><p>[3] <a href=""http://rope.sourceforge.net/"" rel=""nofollow"">http://rope.sourceforge.net/</a><p>[4] <a href=""https://github.com/icsharpcode/NRefactory"" rel=""nofollow"">https://github.com/icsharpcode/NRefactory</a><p>[5] <a href=""http://eclim.org"" rel=""nofollow"">http://eclim.org</a>",2013-03-28 08:17:52,5453762
252,"Developing some kind of API binding for the DOM or JQuery is no impossible task though, similar things have already been done in other languages (in C# and the Xamarin Framework for example)",2013-03-28 13:01:18,5454492
253,"F# works very well in Osx and with Xamarin Studio you can target a lot of different platforms: Windows, Osx, Android, and iOS.",2013-03-30 17:54:06,5466116
254,"San Francisco CA USA: Senior .Net Engineer Full Time<p>Insightly is the world's leading CRM product for SMBs on the Google Apps marketplace. We're growing fast, going international, developing native Android and iOS apps in C# (using Xamarin,) and making major investments in our front- and back- end infrastructure using everything from OData, Web API, Lucene, SQL Server, memcached, LINQ, and Castle Windsor, to JQuery, PJax, and OAuth 2.0. 
We run a serious dev environment, with code reviews, stack ranking/triage, and architecural planning as part of our DNA (members of our team worked on Visual Studio and Entity Framework.)<p>We are looking for an experienced, collaborative, detail-oriented senior to principal level software engineer to join the team and both code and provide additional architectural leadership for critical parts of the system. You'll have the opportunity to have deep impact on everything the engineering team does. You'll bring experience with building large-scale websites, scaling relational databases, and building testable, high quality architectures that provide near-linear scaleout.<p>Email jobs at insightly dot com",2013-04-01 20:05:04,5475532
255,"If you manage to get a Clojure Android app to boot up quickly, I would be very interested. For now, the only reasonable ways to not use Java for Android apps that I've found are Scala or Xamarin.",2013-04-02 01:01:37,5477049
256,"&#62;<i>In the event that an open-source project built on their technology becomes popular, Microsoft attempts to smother it (for example, see their treatment of Mono).</i><p>That was in the past -- and probably from some over-jealous layer types at that point in .NETs development.<p>Since then Microsoft has even been sponsoring Mono/Xamarin events.",2013-04-03 22:35:40,5489723
257,"I don't have information, but by focusing on NGEN for .NET 2.0 you forgot all the other implementations I mentioned.<p>Bartok compiler for Singularity uses another approach of code generation.<p><a href=""http://en.wikipedia.org/wiki/Bartok_%28compiler%29"" rel=""nofollow"">http://en.wikipedia.org/wiki/Bartok_%28compiler%29</a><p><a href=""http://singularity.codeplex.com/SourceControl/changeset/view/69631"" rel=""nofollow"">http://singularity.codeplex.com/SourceControl/changeset/view...</a><p>Windows Phone 8 only runs native code. .NET IL gets compiled down to native
code when uploaded to the Windows App Store, by making use of an optimizing IL to
native compiler.<p><a href=""http://channel9.msdn.com/Shows/Going+Deep/Mani-Ramaswamy-and-Peter-Sollich-Inside-Compiler-in-the-Cloud-and-MDIL"" rel=""nofollow"">http://channel9.msdn.com/Shows/Going+Deep/Mani-Ramaswamy-and...</a><p><a href=""http://channel9.msdn.com/Events/Build/2012/3-005"" rel=""nofollow"">http://channel9.msdn.com/Events/Build/2012/3-005</a><p>Mono also compiles to native code on iOS and other systems as well<p><a href=""http://docs.xamarin.com/guides/ios/advanced_topics/compilation"" rel=""nofollow"">http://docs.xamarin.com/guides/ios/advanced_topics/compilati...</a><p>The IL2CPU compiler used in the Cosmos project, which is still not fully implemented<p><a href=""http://www.codeproject.com/Articles/220071/Csharp-Open-Source-Managed-Operating-System-Quick"" rel=""nofollow"">http://www.codeproject.com/Articles/220071/Csharp-Open-Sourc...</a>
<a href=""http://cosmos.codeplex.com/SourceControl/changeset/view/101100#1753855"" rel=""nofollow"">http://cosmos.codeplex.com/SourceControl/changeset/view/1011...</a>
<a href=""http://cosmos.codeplex.com/SourceControl/changeset/view/101100#1408070"" rel=""nofollow"">http://cosmos.codeplex.com/SourceControl/changeset/view/1011...</a><p>Going back to the runtime code generation (JIT), there is also SPUR being used at Microsoft Research<p><a href=""http://research.microsoft.com/en-us/projects/spur/"" rel=""nofollow"">http://research.microsoft.com/en-us/projects/spur/</a><p>Don't mix languages with their implementations.",2013-04-05 08:21:36,5497282
258,"Does anyone have experience using Xamarin, as opposed to standard Android development in Eclipse?<p>I'm looking at the website and as a daily C# developer, this looks enticing. But I'm wondering what the limitations are as it seems somewhat too-good-to-be-true.",2013-04-16 16:04:58,5558919
259,"I couldn't get it to install properly when I tried it long ago.<p>They've changed licensing models fairly recently; you can deploy to the app store for free with a limit on app size (complexity). They also have a 30-day money-back guarantee -- seem to be really reaching out for mind share.<p>Obviously the important question is if it's worth the time to learn the abstraction layer!<p>Edit: I'm sure they'll be swinging by once they are not so busy; check out the livestream of the conference going on right now: <a href=""http://blog.xamarin.com/live-streaming-xamarin-evolve-2013/"" rel=""nofollow"">http://blog.xamarin.com/live-streaming-xamarin-evolve-2013/</a>",2013-04-16 16:09:31,5558950
260,"I do C# on my day job and I did take a stab a learning xamarin's android sdk but to be honest after spending 3 days learning it, poking around their samples, I felt like there was still a lot to learn. I ended up going the java route simply because there is more support for it from the community, many many open source controls/libs to begin with and stays up to date with Android releases.",2013-04-16 16:21:23,5559036
261,"Just so it's clear, Miguel de Icaza confirmed via Twitter that this will work with applications built outside of the Xamarin toolchain.<p><a href=""https://twitter.com/migueldeicaza/status/324188860449968128"" rel=""nofollow"">https://twitter.com/migueldeicaza/status/324188860449968128</a><p><i>Xamarin Test Cloud is not limited to c#. Will work with Objective-C, RubyMotion, Java apps too.</i>",2013-04-16 16:31:09,5559105
262,I have an Android app that lets developers discover Android libraries and run their demos. I have been thinking about adding some Xamarin samples but am unsure if it would be worth my time. I don't have a good feel for how many C# developers there are who want to write mobile apps.,2013-04-16 17:00:26,5559312
263,"As a C# developer, I had a hell of a time wrapping my head around Obj-C. I tried Titanium SDK hoping writing in JS would be more natural, but after several days I had a broken app that did nothing close to what I was trying to do.<p>When I saw &#38; tried Xamarin, I had the exact thing I was trying to do in Titanium done within an hour, and that includes learning the SDK.<p>Highly, highly recommended. Also, when searching for help, be sure to search for MonoTouch as well as Xamarin. Finally, check out their IRC channel - some very helpful people there.",2013-04-16 17:36:14,5559534
264,"I'm interested in getting a license for Xamarin and I heard about the tool a while back. It looks very powerful and it appeals to me since I have some experience in C#.<p>Like the title says, can anyone describe their experience using Xamarin to develop mobile apps?
If so, was the platform successful for you and would you recommend it?",2013-04-16 19:52:43,5560441
265,Are you sure the pricing is for the Testcloud or for the Xamarin development tools? I am confident that it is for the latter and the Testcloud is still in beta. Hopefully pricing released soon.,2013-04-16 20:02:32,5560507
266,"One problem with freelancing is it seems most of the jobs are either php or ruby. I've been working with .NET, javascript, coffeescript, and SQL the past few years. I'm very good with those and can do every aspect of an app. Looking on careers.stackoverflow, and craigslist, .NET jobs seem to be pretty rare in the bay area. What would you recommend I learn if I want to work about 20h/wk there? Ruby? PHP? And which framework(s) (RoR, Cake, etc)?<p>Another option I've been toying with is using Xamarin to leverage my C# skills to build mobile apps. This is something I'm going to probably be doing anyway. Would I be able to get part time or consulting work doing this? Or is it too niche? I thought I'd build a handful of apps between now and then to try to make a little side money, and then start doing contract work with those skills.",2013-04-17 01:40:56,5562118
267,"&#62;<i>Until the past couple of years, most of the tech community has conceded that linux on the desktop was not ready for primetime. Hell, even now, there isn't a consensus and most would not recommend it to those on ""the outside.""</i><p>No, I just have a longer perspective. You're probably too young to remember that most of the tech community, their mother and their dogs considered Linux ""ready for the primetime"" during late 199x.<p>The time when every other pundit was quoting ""The Cathedral and the Bazaar"" and VCs invested in several Linux distributions (which included relatively established companies like Corel, Novell, et al). There wasn't even OS X (or Google) to keep them amused, it was all Linux and OSS.<p>It was said to happen ""any day now"", nay, it was ""already happening"". Including huge over-valuation for Linux companies, from VA Linux to Eazel and whatever Xamarin was called back then. They abandoned that thinking around 2000-2002, after the dot com crash etc.",2013-04-23 18:38:45,5597076
268,"I think F# has aesthetics similar to Python, despite being a statically typed language in the ML family.  It's open sourced, with great IDE support on Windows (via Visual Studio, including a free option) and good IDE support on other platforms via Xamarin's tooling.  Does that count as ""developer friendly""?",2013-04-24 16:09:26,5602253
269,"Maybe they had Xamarin in mind when they asked you that: <a href=""http://xamarin.com/monotouch"" rel=""nofollow"">http://xamarin.com/monotouch</a>",2013-04-25 20:24:29,5609628
270,"We are only using appcelerator cloud, our app is actually built in C# with <a href=""http://xamarin.com"" rel=""nofollow"">http://xamarin.com</a>
Appcelerator has free usage package<p>I have probably tried everyone one of those on the list, and a lot of it really depends which SDK some of those services offer.",2013-04-26 20:28:47,5615252
271,"Sure, the example feels a bit over the top, but if you really can't think of an example, then I dare calling you a little short sighted.<p>It's like saying a Windows user wouldn't want to work at a Node.js shop. What does the dev tech have to do with the OS? And yes, it's a fair comparison, especially since Xamarin.",2013-04-27 07:23:09,5617096
272,"Stay with that decision.<p>It also costs $100/yr to keep updated. I believe HipByte has no plans to introduce a better business model or different tiers of pricing. For contrast Appcelerator &#38; Xamarin both include free tiers and updates for free, only support is paid. RubyMotion is more accurately cloning the iOS dev payment model with annual subscriptions. And they know, you'll want updates as iOS is updated. So they push this over the entire community rather then getting enterprise costumers to pay for a scaling support model.<p>Wait for mRuby, or just develop in an alternate product.",2013-05-05 20:34:38,5659642
273,"From the Xamarin site:<p>&#62; Can I continue to use Xamarin when my subscription expires?<p>&#62; Yes you can. Your Xamarin license is perpetual. If you choose not to renew your subscription, you will no longer have access to new releases and support, and we will be very sad.<p>In other words, the Xamarin model is the same as RubyMotion. If you don't pay after the first year, you can continue to build as many apps as you want, you just won't receive any support or new releases.",2013-05-05 21:43:50,5659872
274,"This is false. Xamarin includes a free tier. You can download it. But yes, after you've opted into pay it's a subscription.<p>I think subscriptions for support are a great model as they scale. You're paying for help with your solution.<p>Updates on the other hand only serve to limit &#38; restrict the community.",2013-05-05 22:21:39,5659986
275,"I'll add an obligatory plug for F# if you're looking for a fully supported .NET language REPL (as opposed to a side project like scriptcs, not that there's anything wrong with it).  As a bonus, F# is now fully supported by Xamarin Studio if you want to use it on non-Windows platforms, which means that in addition to a REPL, you have full IDE support for free on each platform.",2013-05-08 03:33:43,5672334
276,".Net is not just for desktop, mobile/tablet and xbox. In these areas it definitely has lost some momentum but ASP.Net and Xamarin (not from MS but still .Net) seem to be doing good.",2013-05-15 14:25:06,5712164
277,"What is Mono missing for your needs?  Between Xamarin Studio and the free editions of Visual Studio, you can now use F# to target iOS, Andriod, Windows Phone, Linux, Mac, and Windows.  To me, this is pretty compelling.",2013-05-15 14:45:12,5712312
278,I would agree with the headline but I find the reasons given to be off target.<p>The web frameworks have become too complex and bloated. Every major release of Visual Studio seems to bring another layer or way of doing things as well as denser configuration files. A decade or so into it there is just too much there there.<p>I've used Mono but I'm starting to get concerned that Xamarin is concentrating more and more on mobile tools and less and less on the base .Net libraries. As an example I would point to version 3 still being in beta and the documentation on mono-project falling behind.,2013-05-15 14:45:45,5712316
279,I agree with you on the lack of iOS &#38; Android support in .NET so far (i'm using Xamarin to bridge this now).<p>But I am personally confident MS will attack this market with full steam and deliver native tools to their developers sooner rather than later.,2013-05-15 14:56:47,5712399
280,"The most interesting web-based future of .NET is out of Microsoft's control. Xamarin allow you to make iPhone and Android apps in C#, Nancy.FX is the simple web framework MS never made, Moq allows you to greatly improve TDD...<p>I'm still glad I know C#, but I haven't had a use for .NET in a long time, and have little reason to. Desktop apps are something else entirely, of course.",2013-05-15 15:06:21,5712459
281,"Earlier this year I wrote my first Android app using Eclipse. After finishing the project, I decided I hated Eclipse enough to not waste any more time on the platform. I don't really like the Java language either, it somehow feels 'old'. But recently discovered Xamarin[1] and later this year will try to write an Android app again, but this time in C# using Xamarin Studio. I think it's a great alternative for Eclipse, though I will definitely check out Android Studio as well, if it's going to be free.<p>[1]: <a href=""http://xamarin.com"" rel=""nofollow"">http://xamarin.com</a>",2013-05-15 17:13:09,5713367
282,You can do this now with Xamarin's stack,2013-05-15 18:09:51,5713713
283,"There are a couple of technical issues with Mono, the biggest ones being completeness and tools integration.<p>But, above all, the biggest problem is not technical and not Mono itself: it is Xamarin. The money decisions on big companies are made by people that need to tell to non-technical bosses and shareholders why they did what they did. And it is much easier to talk to them about Microsoft than about Xamarin.<p>Remember the ""no one ever lost their job for buying IBM""? It works for MS, now.",2013-05-16 03:27:14,5716731
284,"Erm. .NET is alive and well, especially on the game and mobile phone development front<p>Xamarin (the monodevs) are doing some really interesting stuff:<p><a href=""http://xamarin.com/evolve/2013"" rel=""nofollow"">http://xamarin.com/evolve/2013</a><p>Frameworks such as MvvmCross allow you to target iOS, Android, Windows 8 Mobile, Windows 8 Store, WinRT, WPF all using the same codebase using the MVVM Pattern. Write your code business logic in a PCL and share it across all platforms, i.e. 80% code re-use on mobile, write your UI for each platform and link against your shared core business logic PCL.<p><a href=""https://github.com/slodge/MvvmCross"" rel=""nofollow"">https://github.com/slodge/MvvmCross</a><p>Oh, you can do all of the above, program for all those platforms (iOS included) in Visual Studio with either C# or F# using async/await and linq.<p>Disclaimer: I went to #evolve, if you use .NET and didn't go then sorry to say you missed out ;-)<p>Personal highlights from the conference include:<p>- C# async/await on iOS, Android announced and available in the beta update channel.<p>- Xamarin acquires Calaba.sh (lesspainful), announces the future of automated mobile phone testing: <a href=""http://xamarin.com/evolve/2013#session-xcjpj20d6s"" rel=""nofollow"">http://xamarin.com/evolve/2013#session-xcjpj20d6s</a><p>- 80% code reuse case study:  <a href=""http://xamarin.com/evolve/2013#session-shy07zqsoz"" rel=""nofollow"">http://xamarin.com/evolve/2013#session-shy07zqsoz</a><p>- Behind the scenes with the award winning game Bastion (monogame): <a href=""http://xamarin.com/evolve/2013#session-mazw2c15qr"" rel=""nofollow"">http://xamarin.com/evolve/2013#session-mazw2c15qr</a><p>- (Scott Hanselman) How C# Saved my Marriage, Enhanced my Career and Made Me an Inch Taller: <a href=""http://xamarin.com/evolve/2013#session-umfpnw90c9"" rel=""nofollow"">http://xamarin.com/evolve/2013#session-umfpnw90c9</a><p>- (Josh Collins - @GlobalMoxie) Buttons are a hack: can't wait for vid to be uploaded...",2013-05-16 03:58:12,5716836
285,"WPF is the replacement of WinForms. Many desktop apps designed by conventional .NET developers in the timeframe between the release of Vista, and probably many now despite MS's deprecation, use WPF as a base library. It's not something you can just easily replace, and Mono does not implement it.<p>Microsoft is using the same business tactics that they've employed since the PC wars in the 90s, since they hit critical mass of market share, just with a bit more finesse. Microsoft allows Mono's existence only because it feeds into their power play, by creating more dependency and familiarity with .NET. They make the basics open and provide some interoperability, but then lay on proprietary extras that eventually become hard dependencies organically (like WPF) as a function of Microsoft's monopolization of the market (""why wouldn't I use this tool that makes things way easier? it will work great in our environment""). It's all EEE. Microsoft's MO, then and now.<p>Then all of the sudden, iPads exist. Xamarin is in a killer market.",2013-05-16 06:21:13,5717203
286,"If going by the stats that Xamarin gave[1] for Dalvik versus Mono on Android 4.0, Dalvik is also much slower than Mono. Though obviously Xamarin is not the most independent source in the findings, but I would believe it to outperform Dalvik in my own uses of both it and Dalvik for Android apps (I bought a license for it 6 months ago).<p>There's also some results by Koush Dutta[1] (Cyanogenmod contributer and Clockwork Recovery developer) from 2009 showing similar findings, though obviously that's way old and before Dalvik had JIT added in Android 2.2. We had a discussion sometime ago about that article on hn as well[3]<p>[1] <a href=""http://blog.xamarin.com/android-in-c-sharp/"" rel=""nofollow"">http://blog.xamarin.com/android-in-c-sharp/</a><p>[2] <a href=""http://www.koushikdutta.com/2009/01/dalvik-vs-mono.html"" rel=""nofollow"">http://www.koushikdutta.com/2009/01/dalvik-vs-mono.html</a><p>[3] <a href=""https://news.ycombinator.com/item?id=421862"" rel=""nofollow"">https://news.ycombinator.com/item?id=421862</a>",2013-05-16 11:31:31,5717982
287,"1) You don't need Parallels: <a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a> have a lovely ide for OS X built on Mono (open source. NET), I much prefer this to VS-in-Parallels although I'm on a lowly macbook air with 4gb of ram.  There's also free alternatives to Parallels, and Microsoft certainly don't ""require"" it for .NET development.<p>2) There are cheaper windows licenses<p>3) There is a free version of Visual Studio: <a href=""http://www.microsoft.com/visualstudio/eng/products/visual-studio-express-products"" rel=""nofollow"">http://www.microsoft.com/visualstudio/eng/products/visual-st...</a><p>4) Resharper is great but it's a luxury and an optional one",2013-05-16 19:08:28,5720466
288,"instead of relying on HTML5 as your base tech stack for mobile apps i am much more a fan of approaches like xamarin (<a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a>)<p>Basically you write the core of your app in C# and then use the bindings to the native SDKs of iOS, Android, WP to build real native UIs on top of it. Its a bit more work and you need to learn C# (which is awesome) but imo its an optimal compromise between speed of development/maintainability and the resulting user experience.",2013-05-18 11:42:45,5728582
289,"I have used Xamarin recently - while I absolutely loved developing an iPhone app in C#, it was a bit frustrating to see that all the best 3rd party libraries, tutorials, etc for iOS are all in objective c - and some concepts didn't seem to translate easily to C#. It was my first iPhone app, so I could be mistaken - but I think I'll go down the native route in future.",2013-05-18 12:17:59,5728647
290,Xamarin is wicked expensive...,2013-05-18 12:21:05,5728652
291,"I think it's important to note that Xamarin is closed, and you are tying yourself to a third party platform that is outside of your control - and possibly outside of your best interests.<p>You may decide that it's a fair trade off, but it's very important to understand and acknowledge that there are many externalities involved in this decision that may cause you trouble in future. There is a reason OSS is so highly prized...",2013-05-18 17:07:51,5729575
292,"I've had mixed feelings on all of this for a while. I think as developers, we're all keenly aware that there's just no silver bullet. I can't say I'd necessarily always steer others away from PhoneGap, because it may be perfect for their project and team. But as mentioned, the abstraction remains very leaky; you still have to deal with a lot of pretty frustrating scenarios that can just eat away your time.<p>I've also found performance to be an issue, especially if you're using animation-heavy UI to try and simulate a native experience.<p>Lately I prefer Xamarin's approach. The downsides have been discussed in this thread: cost, and you lose some of that open source advantage (also perhaps binary bloat--I haven't had a chance to check that out). But I think writing views separately but having common core logic, networking, etc., meshes well with how I want to work.<p>HTML5 is great, and I enjoy using it for web sites. But I've just never been able to get fully satisfied with it in the app space. Maybe someday!<p>In short, saving time is a worthy goal, surely, but producing the best quality output you can is also a worthy goal, and those two have to be balanced as appropriate for any given project. I feel that PhoneGap leans a little too much in one direction and I'm hoping Xamarin can help me find the sweet spot.",2013-05-18 19:41:13,5730103
293,"&#62; Its the details which eat up your budget.<p>The article hit that spot on. You'll spend more time getting the swipeable cell to bounce and swing correctly than working on the app. It'll be ""cheaper"" to work with someone who knows the native language. You could learn one of the native language and see if the app sells before jumping to another platform.<p>The bigger problem, IMHO, is that these sort of abstractions, like PhoneGap and Appcelerator (maybe Xamarin too? I don't have any experiences with Xamarin), most of the time will left you clueless when the app crashes.",2013-05-19 07:02:16,5732115
294,"Thanks for sharing your insights. I appreciate the viability of the Mono option. Back in the early web development days (an approach that continues to this day), achieving cross-browser usability meant constraining design to the few portable features that worked well. It seems from your statement that the similar might be the case (product design within the constraints of the portable HTML5 featureset) which would mean better trained product designers (to understand which design elements common in native apps are more costly in PG apps) or more collaboration between them and developers.<p>But as you said, Mono/Xamarin is a technically better option with the same ultimate goal. Though a couple trade-offs there are unavailability of the source and upfront licensing costs.",2013-05-20 01:03:13,5735225
295,"It varies by client and job. 12+ years on my own mostly doing asp.net web stack stuff, SQL Server etc. Mobile with Xamarin quite a bit now.<p>Rate between 125 and 195 depending on various terms.<p>Also more interesting, I have been able to convert nearly all my projects to a retainer based - pay ahead - model. Usually in 100 hour blocks.<p>In Louisville KY and most of my clients are elsewhere. 5-7 years ago the expectation was largely on-site. Now 100% remote save the occasional meeting.",2013-05-26 00:44:08,5769514
296,"Hard to know what to make of this. The author's argument seems to be that he wants to use c#, but also wants a greater diversity of libraries/tools in the .net ecosystem so that he can get a job using those rather than Microsoft's libraries. In other words, he wants it to have more OSS/Linux/Apple cool while also remaining attractive to the more ""conservative"" organisations that are big users of .net. I'm not sure this could work both ways.<p>I'd say that the incentives for this just aren't there. Most .net developers (like me) appear to be happy with the Microsoft tooling and not having to constantly learn this weeks fashionable framework. Even while many of us recognise that a lot of amazing innovation is going on in the OSS space. Our employers seem to be happy with the well-integrated nature of the platform and the stability that comes with somewhat less choice.<p>.net is fairly independent. The specs are public, and there are a few OSS implementations. You can run it on a Mac or Linux box, or even Pis and microcontrollers. Companies like Xamarin are building apparently successful businesses on top of .net. If you want to use indie libraries and frameworks then, on the whole, there are out there. And Microsoft doesn't show any signs of wanting to sue anyone for any of this.",2013-05-29 11:31:15,5785665
297,"I understand that attempting to write once, run everywhere doesn't make for a good user experience. For the best experience, it will probably always be necessary to develop a different front-end for each platform.<p>However, what does one do for logic that belongs on the user's 'device (i.e. client-side) and will be the same on all platforms? Especially considering that one of the targeted platforms may well be the Web.<p>One solution is to use the Xamarin suite for native targets, and something like Script# or JSIL for the Web. Of course, Script# and JSIL can only support a subset of .NET functionality, e.g. no shared-memory threads and therefore no blocking APIs (unless one of these compilers can transform code into continuation-passing style). Another possible solution is Haxe, which can compile to JS, Java, and C++ among others. The trouble with both of these solution is that when working on the Web version of the app, one has to know both the Web stack and the other language.<p>It seems to me that the best solution is to write all platform-independent client code in JavaScript, minimizing the use of browser APIs for that code (e.g. only XHR and setTimeout). Then, for the native mobile versions of the app, integrate a JS engine (note: not a web view), find or write stand-alone implementations of XHR and whatever other APIs one needs, then write the front-end in the native language for that platform.<p>Any thoughts on this? For native mobile apps, are we stuck rewriting <i>everything</i> in ObjC and Java, and maybe also writing a JS version for the web?",2013-06-01 22:46:52,5806378
298,It&#x27;s pretty up to date. Xamarin (the company behind Mono) uses the LLVM-backend to create native C# applications to run on iOS (as iOS doesn&#x27;t allow for JIT compilation).,2013-06-18 11:39:54,5898584
299,"In my experience Mono is a bit like the OpenJDK was a few years ago:<p>Most things work, but there are a few things that are broken in unavoidable ways. Similarly, the performance isn&#x27;t terrible, but the optimization is not quite at the same place as the original platform.<p>Xamarin&#x27;s rapid work suggests that there will be a &#x27;production-ready&#x27; CLR for most platforms (they&#x27;ve got it down for iOS, Android, and recently OSX) soon enough.",2013-06-19 01:27:40,5903205
300,"Hundreds of languages?  I don&#x27;t know, Xamarin&#x27;s tools seem to indicate that there&#x27;s a real demand for using C# on a variety of platforms.  While not my personal preference, C# is really a wonderfully well-designed language.",2013-06-19 01:39:13,5903248
301,"I feel like Xamarin is in the uncanny valley of language &#x2F; tooling features.  Close enough to working to make the brokenness feel so much worse.  If it was more raw, less IDE friendly (ala Go) that would be fine... or was more polished and had a better Xamarin IDE and plugin system, that would be fine as well.<p>Right now, they are stuck in the odd middle, but it is still an amazing value if you are building common code cross platform apps.",2013-06-19 02:45:05,5903457
302,"F# is licensed under Apache 2.0: <a href=""https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;fsharp&#x2F;blob&#x2F;master&#x2F;LICENSE"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;fsharp&#x2F;blob&#x2F;master&#x2F;LICENSE</a><p>The Windows-based implementation of the CLR is proprietary, but as other posters have mentioned, it&#x27;s built around an open, standardized specification (ECMA-335). Xamarin has been making big strides in improving Mono over the past year, and it&#x27;ll only continue to get better.",2013-06-19 04:22:14,5903732
303,This <i>patent trap</i> commentary is 4 years old. I don&#x27;t think this is on anyone&#x27;s radar anymore. Otherwise Xamarin would not even exist.,2013-06-19 04:38:12,5903765
304,"I disagree with the &quot;Microsoft platform&quot; bit. The Mono&#x2F;Xamarin guys have been coming up with a very nice competing&#x2F;complementary platform. I&#x27;ve built personal and production projects running on Linux using Mono.<p>While I haven&#x27;t used, the Xamarin iOS&#x2F;Android development platforms look quite interesting. I suppose it has the stigma of a somewhat pricy per seat license but its likely worth it if you want to go with a shared codebase for iOS&#x2F;Android&#x2F;WP&#x2F;Win8.<p>There&#x27;s also MonoGame[1] which targets developers of MS&#x27;s former XNA game dev kit.<p>[1]<a href=""http://www.monogame.net/about"" rel=""nofollow"">http:&#x2F;&#x2F;www.monogame.net&#x2F;about</a>",2013-06-25 22:55:19,5942991
305,"On Firefox OS, I can use JavaScript, or the languages that compile down to JavaScript (CoffeeScript, TypeScript or Dart, for instance).<p>On Android, I can use Java, C, C++, C# (via Xamarin), JavaScript, or the languages that compile down to JavaScript.<p>Yet somehow Android &quot;is a much worse platform in terms of language choice&quot;?",2013-07-01 19:28:29,5973002
306,"I wish I didn&#x27;t have to write my f##$@$ing apps in java and then again in objective-C and then again in C# said every developer, ever...<p>Edit, for your benefit: xamarin, unity.",2013-07-03 15:11:44,5985023
307,"I think it&#x27;s an exaggeration to say &quot;it doesn&#x27;t look pretty for Microsoft&quot; especially since the drop in C# can be explained in part by Microsoft actively encouraging C# devs to start writing TypeScript&#x2F;JavaScript applications. Microsoft has decided the future is TypeScript. If you want C# on mobile your best bet is to look at Xamarin, which is run by Miguel de Icaza of Mono fame. I&#x27;m curious how much MS has invested in that company.<p>Reference: <a href=""https://www.youtube.com/watch?v=3-5nExkCvAY"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=3-5nExkCvAY</a>",2013-07-05 15:11:15,5995198
308,"We have SDKs for Android, iOS and Javascript. The Xamarin guys built a wrapper!",2013-07-11 23:01:16,6029851
309,"Have you seen this?  <a href=""http://xamarin.com/studio"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;studio</a>.<p>I traded my VM + VS in for that a few months ago, makes a huge difference on my Air.  No Resharper but unfortunately.",2013-07-13 05:42:38,6036836
310,"The could have done even better. Qt for iOS and Qt for Android existed at the time and have now become officially supported (despite all of the major cutbacks Qt development has gone through since then):<p><a href=""http://blog.qt.digia.com/blog/2013/07/03/qt-5-1-released/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.qt.digia.com&#x2F;blog&#x2F;2013&#x2F;07&#x2F;03&#x2F;qt-5-1-released&#x2F;</a><p>If they had embraced Qt as a cross-platform layer back then, they could have been &quot;a better Xamarin than Xamarin&quot;. That would have been a great way to get developers and users into their ecosystem. Qt apps could &quot;run everywhere&quot;, but they&#x27;d run best on Nokia phones (where it would be built-in and integrated). Instead...",2013-07-15 02:11:02,6043275
311,"<a href=""http://www.xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.xamarin.com</a> compiles C# to native apps for Android, iOS and Windows Phone.",2013-07-15 11:21:00,6044868
312,"&quot;Objective-C and Java rule 2013 since web apps are not as pleasant to use on mobile.&quot;<p>Or with some MVVM, Xamarin and some C# or F#... write once, compile for all mobile platforms. Never having to once touch the nastiness of Obj-C or Java.",2013-07-15 11:34:35,6044914
313,"Yes it does. Look at the MvvmCross project.<p>Also struggling to verify that claim re. executable size, can you provide a link? Either way, average app size on Android seems to be around 3MB. A typical Xamarin-compiled app is around 4 to 4.5MB.",2013-07-15 14:41:31,6045812
314,"I&#x27;m curious how well these tools work. Having a single unified code base and supporting all (desired) platforms is every developer&#x27;s dream. I&#x27;m skeptical because supporting multiple operating systems can be a headache even for desktop apps.<p>I remember Facebook originally used HTML5 to support all platforms. This did work, but they became unsatisfied with the performance and ended up rewriting both the iOS and Android apps in native code.[1] The killer quote:<p><i>&quot;I think the biggest mistake we made as a company was betting on HTML5 instead of native,&quot; Zuckerberg said...</i>[2]<p>Granted, this was a different situation. They were using HTML5, and it looks like Xamarin compiles to native code. You mentioned slightly larger executable sizes, so I&#x27;m curious about the performance.<p>1: <a href=""https://www.facebook.com/notes/facebook-engineering/under-the-hood-rebuilding-facebook-for-ios/10151036091753920"" rel=""nofollow"">https:&#x2F;&#x2F;www.facebook.com&#x2F;notes&#x2F;facebook-engineering&#x2F;under-th...</a><p>2: <a href=""http://www.computerworld.com/s/article/9234695/Facebook_debuts_speedier_Android_app"" rel=""nofollow"">http:&#x2F;&#x2F;www.computerworld.com&#x2F;s&#x2F;article&#x2F;9234695&#x2F;Facebook_debu...</a>",2013-07-15 15:51:57,6046330
315,How do you write UI code to make apps look and feel correct across platforms?  Does Xamarin already support the API changes in iOS 7?,2013-07-15 16:32:48,6046619
316,"<a href=""http://blog.xamarin.com/introducing-ios-7-support/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;introducing-ios-7-support&#x2F;</a>",2013-07-15 19:08:33,6047861
317,"Hey xamarin guys, i know you visit this site.  Can you call my boss and convince him to use your product for me :D<p>we got a growing staff with an expertise in C#, and he&#x27;s decided to have one of his guys write each new mobile app in java or objective c, despite the fact that no one else has experience in these languages.<p>but most of all, i know i&#x27;m one day going to have to look at the code base for one of these apps, and I dread it.",2013-07-18 04:53:38,6061839
318,"Congrats to the Xamarin crew, this is well-deserved. They&#x27;ve been cranking out some really useful products and doing a good job of building products that layer nicely on top of the free Mono stack instead of gutting useful features out of it to try and sell them to you.",2013-07-18 05:21:25,6061906
319,Just wrapped up my first project at work with xamarin.ios and also used monomac for some tools. It was awesome. The app used a bunch of opengl-es on ios and everything went very smoothly. I&#x27;m always glad to see them pop up on HN.,2013-07-18 06:12:41,6062050
320,"At least they have a free version to play with. They didn&#x27;t even have that a while ago.<p>I&#x27;m not in the mobile apps business, but if I were, I would consider the price worth it.<p>As a freelancer, I see a lot of people requesting Android and iOS apps. I don&#x27;t see myself developing in both Objective-C and Java. With Xamarin I could cover three platforms with one language, which also happens to be my language of choice for productivity.",2013-07-18 07:07:21,6062222
321,"What&#x27;s specifically your objection?<p>I am happy to pay for the license for a guarantee of continuing (and timely) updates.<p>Plus, looking at their target market, I don&#x27;t think free, open source model would be as effective.<p>Disclaimer: I am a Xamarin customer.",2013-07-18 07:09:51,6062231
322,"Same here, I hope there will be a spill-on effect on Mono.<p>I was particularly pleased when MonoDevelop 4.0 got the new Xamarin Studio UI. A bit vain, I know.",2013-07-18 07:13:16,6062242
323,"Huge congrats to the Xamarin folks. I&#x27;m a huge fan of their products. Personally, I&#x27;ve found their tools for Android development to be less cumbersome than Google&#x27;s tools for the same.  I was extremely impressed by their Evolve conference as well.  Great engineering and great, friendly, responsive people.  Kudos!",2013-07-18 07:28:12,6062287
324,"I think that the language (and its &quot;batteries&quot;, i.e. std libs) should be separated from the product, because products die.
Xamarin model - while it can be fine for a short stint, I don&#x27;t think it is good for a long-term relationship.<p>For me, Xamarin developer is kind of associated with Clarion developer, PowerBuilder developer.",2013-07-18 07:30:47,6062297
325,"You make a fair point and I normally share your view about compilers and tools. I think the Xamarin situation is complex, though, because most of the product is already open source. The C# compiler and x86 runtime, the standard libs (System.*), and the IDE (monodevelop aka Xamarin Studio) are all open source; and the platform bindings are a thin, almost 1:1 layer covering the iOS and android APIs. What you&#x27;re really paying for is the AOT mechanism, packaging, and ARM runtime -- it&#x27;s about all that&#x27;s left they can sell. It&#x27;s also worth noting that a ton of their code goes back into mono and associated projects.<p>I still think you have a good point, and I agree, but as for myself, I decided to make an exception in this case. I don&#x27;t think it&#x27;s quite as bad as PowerBuilder or Clarion at least.",2013-07-18 07:48:22,6062352
326,"I&#x27;ve recently become a Xamarin customer, and I haven&#x27;t looked back yet.  I&#x27;m very impressed at how mature the platform, the docs and the tooling are given that it&#x27;s not from $BIGCORP.<p>Admittedly, there are a few bugs here and there,mostly in the build chain, but they get fixed fast and support is excellent.<p>The only feature request I have is to allow us to give feedback on the docs. Whille 95% are awesome, there&#x27;s little mistakes here and there. I suspect customers will gladly help trace those down.",2013-07-18 07:56:33,6062374
327,"The test cloud feature alone is impressive!<p><a href=""http://xamarin.com/test-cloud"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;test-cloud</a><p>It&#x27;s also not restricted to just using their solution, any native iOS &#x2F; Android &#x2F; Whatever platform apps can use them.",2013-07-18 10:26:14,6062730
328,"to be fair monodevelop and xamarin studio are not equal. The first is low supported and full of bug but free ( i think that is voluntary), the second is not free (at least not if you want to do something decent) and is the main focus of xamarin.
I would say they try to &quot;trap&quot; you in mono with monodevelop to then oblige you to buy something more decent as xamarin studio.",2013-07-18 10:37:40,6062754
329,"I love Xamarin&#x27;s support and devs.
The devs are extremely friendly.<p>The tools are getting better with each release.<p>Kudos to Miguel, Nat, Rolf, Seb and other folks I don&#x27;t know :-)",2013-07-18 11:02:46,6062803
330,"We used to use monotouch a lot, but as soon as we tried to use any third party sdk it was a huge mess.  All of the ones supplied by xamarin never quite worked&#x2F;were out of date and threw a bunch of weird errors.<p>Of course there is a way to write your own bindings, but the those threw a bunch of undecipherable error messages as well and never really worked either.  The main problem was that there were way too many possible sources of the errors to try and just diagnose the problem and the error messages themselves were useless.<p>So basically xamarin was great as long as you didn&#x27;t need to use a third party sdk and there is 0 chance that down the road you might need to use a third party sdk.<p>That was really the deal breaker for us, that we were severely limiting our future capabilities on any app we made with monotouch.<p>Also it is often difficult to pull in third party c# libraries because monotouch uses weird versions of all the main .net references.  But this was not the main problem.<p>In the end it is just much easier to bite the bullet and use obj C.",2013-07-18 12:38:38,6063150
331,"Wrong.<p>Xamarin Studio and MonoDevelop are the exact same code base.<p>The only difference is that Xamarin Studio contains the iOS and Android plugins, plus adds a Xamarin Branding (branding is completely pluggable in MonoDevelop)",2013-07-18 12:53:58,6063228
332,"Agreed. We actually gave mono a thumbs down as choice for a recent project because of similar concerns. Xamarin support for the project seems to have slowed as they have moved into mobile dev tools. As examples there has been no official release of version 3. The last stable version is 2.10. Second there is no indication they will add Web API support, arguably the most important recent ASP.NET addition for those looking to do a REST interface in .Net.",2013-07-18 13:48:22,6063575
333,Drop me an email - nat@xamarin.com. We&#x27;ll help you out :-),2013-07-18 15:41:51,6064346
334,"Oh, my bad in this case.
So why there is not a linux version of xamarin studio? Or it is just because there is not a linux version of the plugins?",2013-07-18 16:42:53,6064767
335,"I had high hopes for Xamarin. The appeal of it was strong: I could program in a functional language (F#) with libraries (.NET) and share my work with friends on Mac, Windows, Linux, and Mobile.<p>Unfortunately nothing worked. I was blocked at every turn.<p>The FSharp.core assembly is in someway there and not there (create a project and it&#x27;s in error-red text, but the compiled app runs). I asked and asked on the IRC channel how to fix it. Programs compiled in Xamarin would work on the host OS, but on Windows would complain about missing assembly. The same project on Xamarin would not compile in Visual studio for the same reason. I never figured out how to properly build executables for both windows and both, or how to arrange my project files to work on Xamarin Studio and Visual Studio. I never figured out how to fix this.<p>I also tried to play with GTK with F#. Their GTK builder is C# only. OK, fine. F# isn&#x27;t 1&#x2F;10 as popular as C#. I know.<p>So how about iphone? I could drop ObjC, rewrite my app in a language I admire, and finally bring my app to android. However, the sample F# ios app, without modifications, compiles to an executable that is too big for the trial limitation of Xamarin Studio. Wait, the sample &quot;hello world&quot; app (which is supposed to convince that the IDE is worth paying for) can&#x27;t be run in the trial version of Xamarin Studio? I asked and lurked for days in the IRC channel. In a patronizing exchange with one of the developers, I was told that the Fsharp assembly needs to be embedded into the ios binary. Because of this, the trial limit is reached. An update will fix this later.<p>Oh well. Nevermind. Once again, I&#x27;ll shelve the idea of cross platform development.",2013-07-18 17:00:06,6064889
336,"Mostly because they would have to provide their own Mono runtime as there&#x27;s too many variations in the vast number of Linux Distros out there. That combined with demand is much lower than that of Windows and OSX for Mono.<p><a href=""http://stackoverflow.com/questions/15900963/is-it-possible-to-run-xamarin-mono-on-linux"" rel=""nofollow"">http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;15900963&#x2F;is-it-possible-t...</a>",2013-07-18 17:53:58,6065278
337,"I can&#x27;t speak to Rx, but I use LINQ to objects and LINQ to XML frequently. Async&#x2F;await is also supported in mono 3 and is in beta for the Xamarin tools.",2013-07-18 18:34:23,6065536
338,"There&#x27;s on-going efforts for RX support but you can use something like ReactiveUI with Xamarin.iOS <a href=""http://blog.paulbetts.org/index.php/2013/03/12/reactiveui-4-5-is-released/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.paulbetts.org&#x2F;index.php&#x2F;2013&#x2F;03&#x2F;12&#x2F;reactiveui-4-...</a>",2013-07-19 15:47:11,6070900
339,"It&#x27;s from scratch C# code using Xamarin to build the UI layers for iOS&#x2F;OS X. Well, I also use a parser generator jayc which is based on jay which is a yacc cc. Everything else is mine. It&#x27;s a pretty standard Expression tree implementation with a symbolic interpreter.",2013-07-19 16:00:08,6070984
340,"I spent a couple months develop a Sync Engine which sync data at Table&#x2F;Row level between SQLite and SQL Server (2008+) over HTTP for iOS and Android, and it works with Xamarin. But the project failed to go ahead, now the sync engine seems to be a waste. I have no idea how to take this to next level. I am looking for help.<p>Let me explain why I built this sync engine in the first place? I worked on Window Mobile (WM) platform for a long long time, the solution (Field Sale Force app) I built requires app to be fully functional even there is no internet connection as the user needs to complete tasks in various places. I used Merge Replication to do the sync at database level for WM application for more than 500 devices. WM is dead by now, everyone wants to use iPad to be next platform. The problem I found there is virtually no good sync engine runs on iOS device can replace merge replication. After done lots of researches, I decide to write my own sync engine. In addition, I rewrote the Xamarin Field Server app to prove that the sync engine does work.<p>The some benefits of the Sync Engine I can think of right now.<p>1) Write great offline enterprise app.
2) Increase Developer Productivity as the developer only need to focus on CRUD operation, the sync engine takes care of the data synchronization.",2013-07-21 00:55:42,6077280
341,"This. A thousand times this.<p>I love C#, I&#x27;m quite fond of Visual Studio and Xamarin Studio, but I dread nearly all the auxiliary MS libraries, like WCF, ASP.NET MVC, MSMQ, WCF Data Services, MSTest, and so on. WPF (MS&#x27;s most recent UI framework) is an odd one out though, cause it kicks butt. Must&#x27;ve been a different team. But yeah, it&#x27;s terribly platform-specific so not very useful in web tech.<p>I never understood why so many C# programmers automatically default to these MS technologies without even looking around. This bugs the crap out of me, because the attitude gives C# (and other .NET languages) a bad name undeservedly, and it really limits further development of the ecosystem. Which is a shame, because as this blog post points out, there&#x27;s a good bunch of really good .NET open source out there.<p>I very much miss ServiceStack in the list, though. ServiceStack must be the best designed API&#x2F;backend framework that I&#x27;ve ever used, in any language. The moment you want to handle more than a few URL requests, it beats Nancy hands down. Stuff gets clearer, there&#x27;s less magic, and somehow you also end up with less code.",2013-07-22 20:14:20,6086186
342,"I&#x27;m curious about Xamarin - has anyone used it, in addition to something like Phonegap &#x2F; Appcelerator? How does it compare?",2013-07-24 23:56:54,6100006
343,"PhoneGap and Appcelerator are for building apps in HTML&#x2F;CSS&#x2F;JS. Xamarin lets you write apps in C# (statically compiled to native code, in the case of iOS, last I checked) that interact directly with native OS APIs.",2013-07-24 23:59:55,6100013
344,"also phonegap is free, while xamarin.android and xamarin.ios have high license costs for developer and platform<p><a href=""https://store.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a>",2013-07-25 00:07:37,6100052
345,"Disclaimer, I know the Xamarin founders. That being said, I haven&#x27;t used Xamarin, but I was impressed to see that rdio uses it.<p>Previously, I had assumed that the point of Xamarin was a way for C# developers to make iphone apps.  However, my understanding was that rdio uses it so they can reuse the same C# code across their iPhone and Android apps.  Rdio raised $17M in funding and could easily hire native iOS developers if they wanted to.<p>The net result is that rdio is actually one of the better iphone apps that I use, and I was really surprised to learn that it wasn&#x27;t written in objective-C.",2013-07-25 00:14:29,6100074
346,"Xamarin tools are built around the idea that the core of every application tend to be platform independent and so could be written in C# (or F#).
This gets compiled into native code on some platforms (iOS).
Their approach is to build native apps that use the native UI design tools, so for each platform, you have to re-design its UI to follow the UI paradigms of that particular platform.<p>The result is still compelling: the UI is native, the underlying code is common on all platforms, you get to use 100% of your platform technical capabilities, the app runs as fast as native apps, you get the power of .Net development tools (even Visual Studio if you want) and all the cool features of C# 5.0 (and F#) to build your apps.<p>Xamarin, through Mono and its mobile development tools is actually building what Microsoft promised but never really delivered: platform independence for .Net (OS&#x2F;X, iOS, Windows, WinRT, Android, Linux).",2013-07-25 00:19:59,6100089
347,"Not the whole story... Xamarin have a Starter Edition that is free for both platforms; admittedly with limitations (maximum app size, no linking with 3rd party code other than Xamarin provided assemblies and the iOS SDK). Within those limitation, you can publish to the App Store with the Starter Edition (obviously you need a Mac as well for iOS). The Indie Edition drops both of those limitations for USD299 per annum, which is reasonably affordable from my perspective. (Disclaimer: I have paid for the Business Edition; USD999 per annum, which adds the ability to use Visual Studio and a few other things).",2013-07-25 00:22:18,6100101
348,Are Xamarin tools really the holy grail of cross-platform app development?  What are the hidden gotchas?<p>What about MonoDevelop for the desktop?  The Windows and Mac download packages are at v4 but Linux at v2.6. Are Xamarin slowly abandoning use of GTK# ?  Is this because of GTK 2 v 3 fragmentation?<p>Should we be supporting C++ and QT given that QT now supports iOS and Android?  Given that some developers are scared of C++ what about C# &#x2F; F# with QT QML?  Are there any bindings which are maintained and tracking QT updates?,2013-07-25 01:00:56,6100260
349,"More or less<p>you get a 10% discount on the total price if you buy multiple licences at the same time<p>You can see all here: <a href=""https://store.xamarin.com/#purchase"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;#purchase</a>",2013-07-25 01:11:36,6100307
350,"Xamarin doesn&#x27;t provide its products on Linux. But it doesn&#x27;t mean MonoDevelop doesn&#x27;t work there. The latest versions run on it, it&#x27;s just a matter that we don&#x27;t have the manpower to keep up with packaging.<p>On GTK+ 2, it&#x27;s still the main toolkit used by the IDE, but on windows&#x2F;mac some bits of the native toolkits are used to improve the user experience.<p>QT on iOS and Android means you get non-native UIX. So why bother with C++?<p>Disclaimer: I work for Xamarin.",2013-07-25 01:16:36,6100323
351,"As i see in the link above the support for xamarin is only in the business package so it starts at $999&#x2F;year (please correct me if i am wrong).<p>Anyway i was not talking about the support option, but about the chance of deploy a full serious multios app. With phonegap you have that for free, with xamarin you have to pay (299*2) minus discount of 10%. Just this.",2013-07-25 01:32:01,6100384
352,"disclaimer: using Xamarin, using MvvmCross and went to Evolve 2013.<p>- Write your core business logic API once (in a Portable Class Library) using the ModelView ViewModel pattern.<p>- Design native user interfaces for iOS, Android, Mac, Windows Phone 7.x, Windows Phone 8.x, Windows Store (RT and Desktop) and Windows WPF.<p>- Bind your user interfaces against the core business logic.<p>Multiple platforms, native user interface designed for each platform, sharing one core business library, maximum code reuse (90%+!), using either C# or F# with async&#x2F;await&#x2F;linq&#x2F;lambdas&#x2F;anonymous types, etc.<p>You can use Visual Studio or MonoDevelop.<p>Rewriting your business logic multiple times over in different languages to target multiple platforms does not make sense. I&#x27;m curious why would anyone not use Xamarin?<p>Evolve 2013 Videos: <a href=""http://xamarin.com/evolve/2013"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;evolve&#x2F;2013</a><p>Recommended ModelView ViewModel Frameworks: <a href=""https://github.com/slodge/MvvmCross"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;slodge&#x2F;MvvmCross</a> or  <a href=""http://www.reactiveui.net/"" rel=""nofollow"">http:&#x2F;&#x2F;www.reactiveui.net&#x2F;</a>",2013-07-25 01:45:29,6100440
353,"I was wondering if there are other alternatives out there like Xamarin. I&#x27;ve used their Mono for Android software and was good but sadly, the prices went too high this time so if you want to use Visual Studio you need to add a good amount of money to make it true. :(",2013-07-25 02:17:51,6100542
354,It&#x27;s pretty ironic that Mono was a reaction to MSFT&#x27;s licensing issues.<p>Now we&#x27;ll need the Mono equivalent for the Xamarin iOS api&#x27;s etc.<p>Mono-ception.,2013-07-25 02:57:06,6100662
355,"&gt; I am afraid, we will be developing mobile applications in JS in several years&#x27; time.<p>Yeah, in QtQuick! (unlike Xamarin, Digia lets you use all the development tools out of the gate with the paid-license-only ones really enterprise centric (like the Oracle dbms client) and the foss version is lgpl so you can use it in your apps no problem (as long as you don&#x27;t modify).<p>Also, C++11 has async! <a href=""http://en.cppreference.com/w/cpp/thread/async"" rel=""nofollow"">http:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;thread&#x2F;async</a><p>The <i>only</i> barrier to qtquick in mobile is that Apple won&#x27;t let Qt include v8 for the same reasons Chrome can&#x27;t. So you are stuck on qtquick1 on ios.",2013-07-25 03:11:33,6100704
356,And there is nothing wrong with that. Xamarin staff have given the world so much; I&#x27;d say billion+ dollar industry was built on the back of their labor. About time Miguel et al profited.,2013-07-25 03:18:48,6100719
357,"I like C# and I&#x27;m impressed with Mono but there is just something not right.  It might be irrational but knowing that Microsoft&#x27;s DNA is everywhere makes me feel uncomfortable.<p>I&#x27;m also not happy that Linux is a second class citizen - there is no Xamarin Studio for Linux, the latest version of MonoDevelop is not packaged for Linux, and the latest version of Mono 3.2 is only packaged for Mac as an easy download.<p>The idea of writing most of my application logic in C# and reusing it on desktop and mobile platforms is appealing, but I don&#x27;t want to use proprietary libraries like Xamarin.iOS and Xamarin.Android, while on the desktop I don&#x27;t know how well supported GTK# and Qyoto are.",2013-07-25 03:33:04,6100753
358,"How is Mono not platform independent? It doesn&#x27;t have a lot of .net features from Windows like windows forms, but it has the entire C# language and their own implementations of xna, etc.<p>The only concern I would have is that Microsoft might try to crush Xamarin at some point, but I wouldn&#x27;t count that likely, Mono is their ticket to keep .net from looking like anti-competitive platform lock in.",2013-07-25 03:41:47,6100779
359,"&gt; <i>How is Mono not platform independent?</i><p>It isn&#x27;t. Try developing apps with it. Then compare it with Java or Python. You&#x27;ll see the light eventually.<p>&gt; <i>The only concern I would have is that Microsoft might try to crush Xamarin at some point, but I wouldn&#x27;t count that likely</i><p>Microsoft is a beast. They are currently making more money from patents licensing for Android than they are from Windows Phone. Wishful thinking has no place in this world.<p>That doesn&#x27;t mean that Mono is any more of a risk than the alternatives. Oracle sued Google for Java, right?",2013-07-25 05:59:50,6101144
360,"That all said, Unity&#x27;s version of Mono is pretty old, kind of crippled in annoying ways, and they&#x27;re using an old, buggy version of MonoDevelop (which can&#x27;t even be bothered to pick up my Xamarin Studio code formatting settings). It&#x27;s extremely rough going and pretty unpleasant to work with, IMO, to the point where I&#x27;ve gone to a home-rolled C++ engine for my project (having originally come from XNA, tried and ruled out MonoGame, and then tried Unity).",2013-07-25 07:56:56,6101365
361,"Titanium, last I checked also do not support all the native API&#x27;s like Xamarin does. Six months ago I did not see support for the ActionBar for Android apps. Even though the Titanium API is supposed to work cross platform, usually there are functions or settings that only works on either Android or iOS. It&#x27;s messy in my oppinion, but it is a lot cheaper.",2013-07-25 09:24:46,6101595
362,Xamarin?,2013-07-25 11:33:33,6101877
363,"Is Xamarin moving away from the base mono-project? I mean it as an honest question, not a troll. The 3.2 release seems mostly aimed at mobile development and cutting off support for previous major versions (2.10 and 3.0). Further, there was never an official stable release of 3.0.<p>It&#x27;s their choice if they want to and they&#x27;ve done great service for the community with what they&#x27;ve already done. But if they&#x27;ve changed directions I think they should come out and say it so current and potential future users of the platform know.",2013-07-25 12:47:19,6102118
364,"Problem is, with such high fees they have discouraged the adoption of all the students&#x2F;starters&#x2F;tester around the world.<p>Why corporation like microsoft are offering os, ides, tools and also devices free to develop to those categories of people? &#x27;Cause if you make them learn maybe they will make&#x2F;support the adoption of your platform in the professional field in which they will work.<p>This is why Xamarin fees are nonsense. It&#x27;s ok to pay high fees in the professional field, but you must offer low fees for new entries. And not, indie costs (299*2&#x2F;3) are not enough low, and the starter pack is just useless.",2013-07-25 12:51:31,6102135
365,"This is one of the reasons why I have a bad feeling about Mono (see my other comment).<p>In another HN discussion, a person from Xamarin said they didn&#x27;t have the resources to keep Linux package management up-to-date.<p>However, they scored $16 million in funding this month, so going forward they certainly do have the resources.",2013-07-25 18:56:38,6104245
366,"The Mono project leaves it up to the packagers for each specific Linux distro do the packaging (just like nearly 100% of all other open source projects) because they are more knowledgable about the various packaging subtleties of their own distros.<p>GTK# is what is used to develop Xamarin Studio &#x2F; MonoDevelop, so it is pretty well supported.",2013-07-25 18:57:25,6104249
367,"The price <i>starts</i> at $300 per person per platform per year, and that applies to you right now should you decide to build anything that involves more than a few kilobytes of code.<p>Nobody&#x27;s going to pick up Xamarin for fun, for experimentation, for learning, for scratching a creative itch.  You can&#x27;t download it for your kids or recommend it to your students.  They have no product for use outside of companies and that guarantees it will be and die a niche riding on companies not wanting to retrain their .NET developers for iOS and Android.<p>Earlier this month I got to choose between Xamarin and everything else, I have <i>years</i> of C# experience and I like their IDE for general c#-on-mac stuff.<p>I chose Haxe instead.",2013-07-26 00:28:45,6105890
368,"Xamarin is also a possiblity for people with more of a .net background. Although before you take the time to build an MVP. I would build a website to collect emails  for beta users so you have an initial set of users to program for. If you can&#x27;t get an initial set people to sign up for a free beta then why waste your time on the great idea. Especially since you have the web background. and expect only about 1 out of 10 to  actually download the the thing from yuor list, if your lucky.",2013-07-26 13:45:30,6108140
369,"The situation is very different here. The core IntelliJ is open source. There&#x27;re plenty of open source alternatives. So if the license is changed, there&#x27;re a plenty of options to migrate project to alternative IDEs.<p>In case of Xamarin, there&#x27;s no such choice. Only Xamarin can compile C# to iOS, and if the license changes, the whole project implemented with the tool is locked in. The only option is to rewrite the whole project with alternative technology.<p>I think, LGPL open source core SDK + paid IDE + paid additional libraries would be a much better choice which mitigates the risk. But Xamarin for some reason decided to choose a different path.",2013-07-28 08:30:55,6116048
370,This is why I like Xamarin Studio. You can reuse like 50% of your code base for both Android and iOS [1] (if you strictly keep the view separated from business&#x2F;logic).<p>Yes the Android emulator can be very slow but testing on a real device is very quick without the hassle of certificates.<p>[1] Windows and Blackberry as well,2013-07-30 10:15:26,6126098
371,True if you pay a not insignificant amount of money to get both xamarin.ios and xamarin.android.,2013-07-30 14:38:09,6127163
372,"The browser in my phone is part Objective C and part C++, as part of the project descended from Konqueror, via WebKit. I&#x27;d contend the C++ parts are C++ for legacy reasons, aka, &quot;It was the performant solution at the time KHTML was written&quot;.<p>Very little mobile phone software these days is written in cross platform C++, of that it&#x27;s mostly games. Most iPhone software is still written in Objective C, most Android software is still written in Java. For cross platform code, I&#x27;d say Xamarin or Unity C#, or Adobe&#x27;s product line both are still beating out C++, even counting the games.<p>Chrome is about 40% C++, and is now the default browser for android.<p>C#&#x2F;Xamarin would probably be what I&#x27;d standardize on if going for a true cross platform non-game app. Javascript&#x2F;Unity3D or C+&#x2F;Unity3D would probably be what I standardized on for games, with Futile being looked at hard for 2D games.<p>Companies with a huge existing codebase (e.g. EA) likely find porting an existent engine cheaper than writing a new one, and will of course stick with their historical C++",2013-07-31 17:55:20,6135573
373,"<i>&gt; How do people writing games in Java or C# deal with this? Gaming is an area where people expect smooth, high speed performance.</i><p>Short, mean answer: poorly.<p>Longer answer: they sacrifice the benefits of managed languages. They forego immutability and controllable object lifetimes for the use of object pooling to prevent the garbage collector from going nuts. And many still target 30fps in order to minimize the effects of variable latency.<p>I used to do this; I&#x27;m porting my stuff from XNA&#x2F;MonoGame to my own OpenGL&#x2F;GLFW&#x2F;OpenAL engine in C++ because I grew unsatisfied with the performance and limitations inherent in the process. Many of the biggest benefits of managed languages are blunted with games in other ways, too. The CLR, for example, should be a huge boon for scripting--the DLR is a fantastic concept, for example. But dynamic code requires codegen, and System.Dynamic doesn&#x27;t work in Xamarin&#x27;s iOS product. So if you want to bring a game with scripting from Windows&#x2F;OS X to iOS, you&#x27;re boned. (Java has the same problems; Groovy, while a great scripting language, doesn&#x27;t run on Dalvik or on IKVM-over-MonoTouch. Rhino&#x27;s LiveConnect doesn&#x27;t work there either.)<p>On the other hand, I use AngelScript and expose C++ objects and methods to it, computed statically at runtime but executable via interpreted scripts, for the best of both worlds without breaking my back to do it. Memory management just isn&#x27;t that hard and the performance and compatibility of native code just can&#x27;t be touched right now.",2013-07-31 18:23:46,6135808
374,"&gt; Most iPhone software is still written in Objective C.<p>Objective C shares many of the advantages of C&#x2F;C++.<p>&gt; I&#x27;d say Xamarin or Unity C#<p>Speaking of Unity, while much of the game specific code is written in C#. As far as CPU time, the vast majority of execution is spent in C++ code.<p>Similarly on the Web, there is more Javascript code that runs in the browser than browser code. But most of the CPU time is spent in Browser C++.",2013-07-31 18:46:00,6135971
375,"I am a devops who love to explore almost any platform in which I enter in contact and, for this and others reasons, I ever prefer to work in a startup environment and not in a corporate one.<p>So in the last months i was exploring for my first time .NET using c# and, wow, it&#x27;s an amazing platform! Then I started to look for a job in a startup in which I could learn it better and with more motivation but... it seems no one is using it. I also looked for some startup based on mobile platforms thinking that, thanks to mono, someone is starting to use xamarin products to target the three main mobile os (android, ios, wp) and share some code. But it seems also in the startup world they prefer to have a team for each language&#x2F;os rather that using that solution.<p>So, after a month of research i am curious to get the real reason behind it. It&#x27;s because no one like Microsoft &#x27;cause it seems no cool? License costs? Support? Community?<p>I would like to hear your opinions<p>edit: I forgot to say that, in contrast, in the corporate world, i found a lot of jobs in which .NET is used. Almost as many jobs as those who require java knowledge.",2013-08-02 17:54:49,6148512
376,"We are using it. We love C# so much we built a platform around it. But as a startup owner, .Net gets expensive because of the Windows dependency. And even thought mono is out there to run C# on Linux, the company behind it (Xamarin) only cares about Macs and Mobile right now.<p>The ecosystem for Mono is also not there, meaning that most solutions focus on favoring other frameworks like Python&#x27;s Django, Ruby on Rails, etc. People prefer to invest more time in open source frameworks and platforms, specially in the startup world.<p>In other words, it is easier to create startups in frameworks that have a rich community and focus on open source. It is not easy (not impossible though) to create a startup based on a technology that is limited to one platform, specially when that platform is expensive to operate.",2013-08-02 18:07:48,6148609
377,"So here&#x27;s an idea: it&#x27;s in Microsoft&#x27;s interest to buy, or clone, Xamarin, and make it work on WP8&#x2F;Metro as well.<p>That&#x27;s because, frankly, platform lock-in is killing Microsoft&#x27;s chances now that they&#x27;re the distant third-place touch app ecosystem, for the same reason it helped them as the strong first-place desktop OS. App makers will target the top platform or two, and only those, as long as it&#x27;s much extra work to go broader. Solid, free-as-in-beer tools to target WP, iOS, and Android all at once make it less work to support WP so more devs will do it.<p>Having built or acquired the tech to run .NET off Windows, maybe they should release some more of their ecosystem to make it viable for more startups to use .NET. Someone small using some free compilers&#x2F;libraries and MySQL may eventually be a prospect to buy VS and SQL Server. (And whether they ever sell these startups anything or not, folks releasing .NET libraries make the ecosystem more attractive.)<p>Who knows; they decided Azure should support Linux and Office should be on every platform, so anything&#x27;s possible. Times have changed and maybe the argument for closing off (&quot;fully integrating&quot;) their dev ecosystem is weaker now.",2013-08-02 19:01:38,6148921
378,".Net is amazing, you really should check it out more. But I do agree, the dependency on windows is really killing it. And mono is definitely not an adequate substitute in the current state of things.<p>I would to see Xamarin push for .Net on the server more, than just Mobile and Mac. Maybe that is something we should do, as our product is full .Net in the server space.",2013-08-02 19:13:59,6149023
379,"well if i remember correctly in the &#x2F;build&#x2F; of this year I saw a part in which some of the microsoft staff were talking about xamarin and the integration with visual studio.
At the same time the CTO Miguel De Icasa is a microsoft MVP.<p>So maybe the idea of buying them is not so strange.",2013-08-02 19:36:57,6149157
380,"This has already been discussed in the past [1], and most people agreed that the reasons are bullshit because, yes, Mono [2] is alive and kicking.<p>[1] <a href=""http://www.aaronstannard.com/post/2010/07/03/NET-Culture-Shock-Why-NET-Adoption-Lags-Among-Startups.aspx"" rel=""nofollow"">http:&#x2F;&#x2F;www.aaronstannard.com&#x2F;post&#x2F;2010&#x2F;07&#x2F;03&#x2F;NET-Culture-Sho...</a>
[2] Not Xamarin.",2013-08-03 09:21:04,6151571
381,s&#x2F;Not Xamarin&#x2F;Xamarin too&#x2F;,2013-08-03 09:21:47,6151576
382,I don&#x27;t think Xamarin is in the position to buy Microsoft :D,2013-08-03 13:03:27,6151974
383,"For Perl:<p>iTerm and TMux in integration mode.<p>Nano for writing code, VIM for text transformations more complicated than a simple find&#x2F;replace regex.<p>ACK for search<p>For .Net:<p>Xamarin Studio<p>Nano for bash scripts<p>iOS:<p>XCode<p>Alcatraz - XCode plugin&#x2F;package manager<p>OMColorSense plugin to get a color picker when creating UIColor objects",2013-08-03 23:41:46,6153846
384,"Interface Vision - Santa Cruz, CA - Cooper Street<p>You are bored at work. You are distraught. Your tests arent passing because green is the new red. You want to be a part of something that will change the future. You wish you were challenged more. So, you check us out at <a href=""http://www.interfacevision.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.interfacevision.com</a>.<p>Wow, you think. A visual language of some kind? Its been attempted before by many brilliant people. You ponder if they have some magical solution or have been partaking in some illicit chemical exploration.<p>Then you realize that, if a holy grail did exist, the way we make software would change forever. You see the Vision.
So, you contact us.<p>About the Position:
* You are given the freedom to create.
* You must be open minded, have the ability to speak your mind and also be willing to listen.
* Optimally, we would like you to be with us in Santa Cruz, CA. However, if we can pull it off, you can work from anywhere (Were going to be implementing remote collaboration, so we might as well eat our own dog food).
* The magic is done in C# Mono with Xamarin.iOS and Xamarion.Android (www.xamarin.com). Xamarin is an awesome company. Go check them out if you havent already.
* We dont have a specific software development position to fill so tell us what you would bring to the table and what you want to do - we will listen to everyone.
* We really need help extending our GUI for both iOS and Android.
* We are interested in extending our framework to include OpenCL, OpenGL, REST (and general API support), extensive math library, etc.<p>Your Abilities:
* What is your specialty?
* What do you like to work on?
* What have you done?
* Why do we want you?<p>We cant wait to hear from you - simply check out our career section on-line at <a href=""http://www.interfacevision.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.interfacevision.com</a> and send us your info and resume&#x2F;CV (depending on where you are from).",2013-08-05 17:50:14,6161609
385,"&gt; is this the first instance of mobile Python on Android OS?<p>Honestly, I have no idea. But I&#x27;m aware that there are multiple efforts to bring &quot;sane&quot; languages (such as C#, by Xamarin) to Android, others than Java.<p>&gt; Jailbroken iPhones have had this capability for years<p>I had no idea about this one, but I don&#x27;t follow iOS development either.<p>&gt; I&#x27;d expected this would happen...sooner?<p>I agree with you, but I believe this sort of thing should be backed by Apple (iOS) or Google (Android) themselves.<p>[EDIT]: formatting",2013-08-08 14:19:44,6179034
386,"It&#x27;s getting better: <a href=""http://www.businessinsider.com/microsoft-and-xamarin-getting-friendly-2013-7"" rel=""nofollow"">http:&#x2F;&#x2F;www.businessinsider.com&#x2F;microsoft-and-xamarin-getting...</a>",2013-08-12 23:36:59,6202981
387,Using GNUstep to develop Android apps is a HUGE win. You really should push this angle more. Look at the success Xamarin have with their 1 language for multiple mobile devices solution. You have the same thing going.,2013-08-13 07:30:49,6204448
388,"+1 for this...  Xamarin seems to make most of their money going the other way with monotouch, this is a proven way to revenue.<p>I guess ideally this would need a company that is the equivilent of Xamarin to drive this and objective C forward onto the other platforms.",2013-08-13 14:33:00,6205937
389,"Your arguments are nonsensical:<p>- Yes, I do want to view SilverLight videos on Linux. But I can&#x27;t. Because Microsoft won&#x27;t let me (or Xamarin or Ximian) implement the DRM parts.<p>- Yes, I do check that an nvidia card is supported on Linux before I buy it; That&#x27;s why, for example, I avoid AMD, and it IS my problem if I buy an AMD card for which there is no good driver on Linux<p>&gt; I think Microsoft is more open than Google in a broader sense. My mantra is: you can&#x27;t reverse engineer the cloud.<p>The implied argument (Microsoft is more open because you CAN reverse engineer their products) is complete bullsh*t. Evidence: <a href=""http://www.advogato.org/article/101.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.advogato.org&#x2F;article&#x2F;101.html</a>",2013-08-15 21:34:20,6220746
390,"Oh, can we use Tcl on iOS maybe? No? How about Android? Xamarin runs on both.",2013-08-16 09:07:50,6222940
391,"Learn Xamarin or Corona SDK. Cross-platform, so you just need to learn one programming language. That&#x27;s the best advice I can give you.",2013-08-18 21:38:12,6234343
392,"If you have no problems spending a bit in license the good solution for you can be using Xamarin.ios and Xamarin.android. Obviously if you know at least a bit of c# (but i think any developer can learn it very fast)<p>With it you can target both ios and android using a single language and the (almost)full .NET framework, recycling a lot of code and also, in the future, you will easily develop also for wp and w8 still recycling code<p>BONUS: xamarin allows for native ui development.",2013-08-19 01:51:30,6235157
393,"Some very exciting things there for Mono.<p>* SGen is now default GC<p>* There&#x27;s an API to ask GC <i>not</i> to run during critical sections<p>* Much faster build times<p>* F#, RX now bundled with Mono<p>* Xamarin.Mobile, Xamarin.Auth, Xamarin.Social open sourced<p>* Zynga created PlayScript, a superset of ActionScript that runs on Mono (everywhere Mono runs including on iOS&#x2F;Android), can be mixed with C#<p>* A new C++ binding technology called CppSharp using clang that calls C++ directly with no glue<p>* You can inline ASM in C# code (insane right?)",2013-08-20 21:37:53,6246751
394,"C# is VM&#x2F;Native. It runs native on iOS via Xamarin compiler. It runs native on Windows Phone 8 via cloud compilation.
Please correct&#x2F;do more research.",2013-08-23 12:53:57,6263142
395,"I take issue with your recurring assertion that JavaScript is bad. Not just that it isn&#x27;t to your liking, but that it&#x27;s objectively bad, something that the software development community ought to avoid. JavaScript&#x27;s bad parts have been discussed to death, so I won&#x27;t rehash them; it&#x27;s enough to point out that programmers can easily get used to avoiding or working around them. What&#x27;s more important is that there are good things about JS which make it very desirable as a cross-platform, general-purpose programming language. Specifically:<p>1. JS is the native language of the Web platform. Because of its ubiquity, the likes of which Java, Flash, and Silverlight never achieved, the Web platform is an attractive deployment target for many apps.<p>2. Because of JS&#x27;s role in the Web platform, it has the support of every major player in personal computing, specifically, Apple, Google, and Microsoft. Languages like Python, Ruby, and Lua have nowhere near that level of corporate backing.<p>3. Yet no single company owns JavaScript, so there is no patent trap as with Java or .NET. Nor is there any threat of vendor lock-in.<p>4. Because of the strong corporate backing and the fact that most Web browsers are now based on open-source engines, there are mature, open-source, non-copyleft implementations of JavaScript for all major desktop and mobile platforms. (The &quot;non-copyleft&quot; bit is in contrast with, say, Mono, whose license enables Xamarin to charge a premium for use in iOS, Android, and Mac apps.)<p>5. Because JavaScript is the native language of the Web platform, full-stack Web application developers basically know it to some extent, regardless of what language they prefer on the back-end. So many programmers know JavaScript, making it an attractive choice for a software company wanting to hire more programmers, or an open-source project looking for contributors.<p>6. Because of the competition among browser developers in recent years, all of the major JS implementations are now very fast.<p>7. Unlike C and C++, which are AFAIK the only languages that match or exceed JS&#x27;s ubiquity, JS guarantees memory safety. This eliminate a whole class of bugs that many programmers are not equipped to deal with or prevent. These bugs often turn into security holes.<p>So these qualities, largely political and business-related but important nonetheless, make JS very attractive to anyone wanting to choose a mainstream, high-level, general-purpose programming language for cross-platform application development. In light of this, how can you say that JS is objectively bad?",2013-08-24 23:05:47,6270186
396,"So long it&#x27;s not a the grass-is-greener effect. While I&#x27;m not pleased with a lot of Microsoft&#x27;s recent developments, and C# seems to be an evolutionary dead-end, it&#x27;s not like other platforms are beautiful. I&#x27;m sure there are lots of shit frameworks like EF on other platforms; it&#x27;s not like EF is some critical piece of .NET. Personally, F# is the number one reason I&#x27;m still on .NET, with VS being a very strong second place.<p>I&#x27;ve had critical telecom services running on Mono for many years; not sure what &quot;ghetto&quot; means there. Xamarin also seems to be doing quite well with their cross-platform initiatives.<p>I&#x27;ve moved SQL Server apps to Postgres (due to licensing) and back (due to maintenance&#x2F;replication). On another we&#x27;re moving to PG again due to licensing. Postgres is great, but holy shit MSSQL provides a huge feature surface that&#x27;s very accessible (licensing aside). SSMS is a dream compared to the ghetto of PG frontends (in my limited experience).<p>But if you can easily dump and rewrite, I&#x27;ll admit, that is fun.",2013-08-26 17:40:51,6278555
397,"Agree. Discounting C# on prejudice against Microsoft &quot;reeks&quot;. Ignoring the Bizspark programme, the Microsoft development ecosystem is now so large you can actually avoid Microsoft licences.<p>Look at the success of Xamarin moreover their tools that can be used to create systems in Mono in F#, C# et al hosted on Linux with Nancy behind Nginx using Postgres.<p>The OSS ecosystem is growing too look at Edge.js for a good example of some innovation where C# and F# can strengths can be utilised in conjunction with other ecosystems with more focus on web.<p>It may not be perceived as trendy but there&#x27;s plenty of developers familiar with that ecosystem. If you&#x27;re in London for example finding decent C# devs is not a tall order.",2013-08-27 19:17:01,6285530
398,"I think Xamarin are quite clear that their focus is entirely on their mobile offering. A side effect to Xamarin&#x27;s success and investment is the tooling. The whole ecosystem is benefiting from the cross platform focus driven almost entirely by Xamarin&#x27;s drive to own cross platform mobile development. Many OSS developers are releasing PCL and mono compatible versions of their software for this very reason.<p>My comments are to highlight comments made by others too; that language and platform familiarity weigh very heavily in the decision process and that discounting the entire Microsoft ecosystem based on licencing is not a cut-and-try process as it perhaps once was.<p>The ecosystem is diversifying and growing. It may not be as mature, advance, diverse as other platforms but for those already familiar with the technology it is a viable option.",2013-08-27 21:07:39,6286293
399,I&#x27;m not sure about OS X - I use the Xamarin provided builds for that. But I&#x27;ll post our build script for Linux up soon.,2013-08-29 16:28:54,6296740
400,"Apple already approves applications written using the Xamarin tools (C#&#x2F;F# compiled with LLVM), and RubyMotion. They are ok with other tools. Haskell is a more compiled language than any of F#, C# or RubyMotion (if thats even possible). There is no reason to worry about that.<p>Worry about the normal reasons for getting an app rejected :)<p>its also worth noting that XCode 5 (as of Dev Preview 5 or 6) has some patches backported from  Clang HEAD via the Clang 3.3 Point release that fix bugs that have only ever been triggered by GHC, namely <a href=""http://llvm.org/bugs/show_bug.cgi?id=16371"" rel=""nofollow"">http:&#x2F;&#x2F;llvm.org&#x2F;bugs&#x2F;show_bug.cgi?id=16371</a> and  <a href=""http://llvm.org/bugs/show_bug.cgi?id=16363"" rel=""nofollow"">http:&#x2F;&#x2F;llvm.org&#x2F;bugs&#x2F;show_bug.cgi?id=16363</a>
(and I&#x27;m incredibly grateful to the engineers who work on Clang for helping get those patches backported to the pending Clang 3.3 bugfix release, and thence to apple Clang, I owe them all a beer or something like that)<p>I think Apple, as a business, wants every community of smart Developers to write amazing, profitable applications for their Desktop and Mobile ecosystems. Haskell targeting iOS immediately grows the pool of smart developers who might write iOS applications, and hopefully also just make writing certain very interesting applications much less painful! This is exciting!<p>tl;dr the latest xcode 5 Apple Clang dev previews have backported patches from Clang HEAD fixing bugs only ever triggered by GHC. Interpret that however you please :)",2013-08-30 02:39:54,6299936
401,At least one of Ruby Motion or Xamarin Studio is compiling source code into iPhone apps.<p>Furthermore iPhone apps are definitely allowed to embed interpreters (caveat: no JITC&#x27;s) and run scripts included with the binary or downloaded as part of an in-app purchase.,2013-08-30 03:18:18,6300069
402,This is brilliant news!<p>Would it be possible to drop a cross compiled Haskell library into a Xamarin project and call into it from the .Net (F#) world? That would be the killer feature for me!<p>Also not much mention of android here - is it possible to target android with Haskell at the moment?,2013-08-30 08:13:38,6300726
403,"SEEKING WORK - Eindhoven, The Netherlands &#x2F; Remote<p>Experienced software developer with team lead experience and a hacker attitude. I&#x27;m a full-stack web developer and embedded software engineer with 12 years of professional experience doing small and large projects with a large variety of platforms and technologies.<p>Specialized in C#&#x2F;.NET in recent years, but unlike too many .NET devs, my scope is not limited to Microsoft&#x27;s &quot;technologie du jour&quot;. I&#x27;m familiar with Microsoft&#x27;s standard technologies as well as the great open source alternatives out there. Experience with making cross-platform mobile apps with Xamarin (MonoTouch &#x2F; MonoDroid) and with making .NET software that runs great on Mono&#x2F;Linux.<p>Proficient in:<p><pre><code>    * C# &#x2F; .NET 
    * C &#x2F; C++ (Win32 API, microcontrollers, Linux)
    * JavaScript &#x2F; TypeScript &#x2F; CoffeeScript
    * PHP
    * Python
    * Ruby
</code></pre>
Most of my work has been unfortunately closed-source proprietary stuff, but for a peek at my code, see:<p><a href=""https://github.com/eteeselink/fakethat"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;eteeselink&#x2F;fakethat</a> (down-to-earth C# mocking framework)<p><a href=""https://github.com/eteeselink/YieldMachine"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;eteeselink&#x2F;YieldMachine</a> (C# state machines)<p><a href=""https://github.com/eteeselink/cdhere"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;eteeselink&#x2F;cdhere</a> (little C++ console tool that talks to Windows Explorer)<p>Something of a CV can be found at <a href=""http://www.linkedin.com/in/egbert"" rel=""nofollow"">http:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;egbert</a>.<p>I can work on-site in the Netherlands, or remotely. I started freelancing only recently, so my portfolio isn&#x27;t as well presented as yet I&#x27;d like it to. Nevertheless, you can find contact info on my brand new placeholder website at <a href=""http://superset.eu"" rel=""nofollow"">http:&#x2F;&#x2F;superset.eu</a>.",2013-09-01 16:58:26,6311094
404,"ShowKit - West Hollywood, CA - REMOTE possible
<a href=""http://blog.showkit.com/post/59632103553/showkit-is-hiring-talented-developers"" rel=""nofollow"">http:&#x2F;&#x2F;blog.showkit.com&#x2F;post&#x2F;59632103553&#x2F;showkit-is-hiring-t...</a><p>ShowKit (www.showkit.com) is a mobile&#x2F;software startup run out of Curious Minds (www.curiousminds.com), a privately funded incubator in West Hollywood, CA. Curious Minds specializes in highly disruptive mobile and web applications.<p>We are currently looking for a talented Software Engineer with strong skills in network programming and SIP&#x2F;RTP. You will build and improve our real-time SIP&#x2F;RTP-based framework &amp; applications.<p>Qualifications:
- Strong C&#x2F;C++ programming skills
- Strong OO &amp; multi-threaded programming skills
- Mobile development experience
- Network programming experience
- SIP&#x2F;RTP development experience
- Strong debugging skills
- Experience dealing with bandwidth and latency issues
- Self-Motivated
- Good design and analytical skills
- Good communication skills
- Passion for real-time!<p>Desired&#x2F;Other Skills:
- Experience with Objective-C
- Experience with SipWise
- Mac&#x2F;iOS development (AVFoundation)
- Windows development
- H264 encoding&#x2F;decoding
- openGL
- Knowledge of network security strategies
- Android development
- Familiar with Xamarin and PhoneGap<p>Product:
ShowKit is a mobile software development kit that turbo charges apps with live communication features in under 30 minutes. Before ShowKit, it would take companies and software engineers months of intensive development to add features like audio&#x2F;video conferencing, screen sharing, and gesture control to their applications. Our first-to-market gesture control functionality empowers users to tap, swipe, highlight, and fully control another users screen remotely while simultaneously connecting the two users via audio&#x2F;video conference.<p>Notably, ShowKit is the only framework that includes hardware accelerated video encoding &amp; decoding. This enables 720p at 30fps, the highest quality video conferencing resolution on the market, while using minimal cpu resources and allowing the app to run seamlessly in the background while a call is taking place. Comparable solutions use full cpu resources &amp; only achieve 4-5fps at that resolution, which isnt feasible for video conferencing.<p>AngelList Profile: <a href=""https://angel.co/showkit"" rel=""nofollow"">https:&#x2F;&#x2F;angel.co&#x2F;showkit</a>
ShowKit Demo Videos: <a href=""http://www.youtube.com/user/ShowKitSDK"" rel=""nofollow"">http:&#x2F;&#x2F;www.youtube.com&#x2F;user&#x2F;ShowKitSDK</a><p>Our Office &amp; Perks:
Our Penthouse office sits on the historic Sunset Strip with the best view of all of LA. 
- Top of the line gear
- Kitchen stocked full of drinks and snacks
- Friendly and down-to-earth work environment
- Health, Dental &amp; Vision Coverage<p>To apply: 
Send your resume and GitHub account to anthony@showkit.com",2013-09-01 21:22:42,6312217
405,"...and when you have learnt it - use a decent cross-platform framework (like Titanium or Xamarin, I don&#x27;t mean uncanny-valley-html-pretending-native-ui...) for 80% cases, where it makes more sense than producing two separate code bases.",2013-09-02 15:26:05,6315571
406,"I can see how a developer outside of the Microsoft development stack could see it that way, but it is misinformed.<p>Windows will die, to make way for Azure and Windows Phone.<p>The Microsoft development ecosystem is strong (C# in top 10 of TIOBE index). It has open source released by Microsoft (ASP.NET MVC), 3rd parties (Mono by Xamarin), and the community (opensourcewindows.org). Microsoft includes open source libraries (jQuery) in their projects.<p>StackExchange&#x27;s software will leave a legacy.<p>From the article: &quot;In order to create more, and open source it we need help. So we are looking a full time developer with ops experience to join our SRE team.&quot;",2013-09-05 16:31:00,6335103
407,"It&#x27;s beyond retarded they make a subset of their stuff that (even in its entirety) relatively nobody will buy compatible with the devices everyone has been buying instead for the last few years.  Mono isn&#x27;t even a serious choice for games outside of Unity3d because Xamarin charge so much it&#x27;s not worth it unless you have a mountain of existing stuff to port.<p>Sony had some other certification program previously as well and even made a nice little psp phone on top of Android but they just let the whole concept rot last time.<p>Edit: you can browse all ~60 games released under this new initiative here - <a href=""http://us.playstation.com/ps-products/BrowseGames?&amp;sortOrder=rDatenf&amp;console=psmobile&amp;recordsOnPage=12&amp;viewType=thumbview&amp;beginsWith=Any&amp;publisher=Any&amp;genre=Action,Adventure,Arcade,Compilation,casual,Educational,Extreme_Sports,Family,Fighting,Fitness,Music,Music/Rhythm,Party,Puzzle,Quiz,Racing,RPG,Shooter,Sports,Strategy,Simulation&amp;esrb=early_childhood,everyone,everyone_10,teen,mature,rating_pending&amp;page=5"" rel=""nofollow"">http:&#x2F;&#x2F;us.playstation.com&#x2F;ps-products&#x2F;BrowseGames?&amp;sortOrder...</a>",2013-09-09 10:14:21,6352578
408,"Xamian also ported Android to C# a year ago. <a href=""http://blog.xamarin.com/android-in-c-sharp/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;</a>",2013-09-15 00:26:01,6387680
409,"Niklas, the author or RoboVM, just send his first submission to the App Store, we&#x27;ll see how that pans out. In the meantime, lots of folks from the libgdx community (JVM game dev framework) already ported many non-trivial games to RoboVM, without any big issues, e.g. [1][2]<p>Current limitations: no debugging, Boehm GC (though anything except stack references are collected precisely) and the ObjC -&gt; Java bindings are a bit in flux.<p>I personally would like to see the ObjC bindings ala Xamarin get done. JavaFX is a trainwreck in my opinion. I think that would also be a really good business opportunity for Niklas&#x2F;Trillian, i can see tons of enterprises wanting to code their iOS apps via a JVM language. RoboVM already has Maven&#x2F;STB plugins available, so development is very smooth. And compile times beat Xamarin easily.<p>What gets me really excited is that RoboVM supports Scala out of the box. Writing iOS&#x2F;Android&#x2F;desktop games and apps in Scala would be amazing.<p>[1] <a href=""http://www.youtube.com/watch?v=h0Ro41uamD0"" rel=""nofollow"">http:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=h0Ro41uamD0</a>
[2] <a href=""https://twitter.com/RainerBasso/status/378621566206369792"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;RainerBasso&#x2F;status&#x2F;378621566206369792</a>",2013-09-15 17:35:24,6389645
410,"I wasn&#x27;t referencing Mono for Android, although that is a neat product.<p>About a year ago, Xamarin did a direct port of the entire Android operating system to C# as a research project to improve their automated tooling. It&#x27;s called [XobotOS](<a href=""https://github.com/xamarin/XobotOS"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;XobotOS</a>). It&#x27;s open source, unmaintained, and entirely unsupported.",2013-09-16 04:23:43,6391607
411,"I remember XobotOS. I was kind of excited about it, but then nothing happened with it after they made a press announcement. I had some questions about it when they still had comments posted on their blog. They decided to remove the comments shortly after without answering any of them, not sure why. Can&#x27;t remember what my questions were now, but I think something related to building it.<p>I was hoping to mess around with it and make some sort of compatibility layer for dalvik based apps to run on it and everything else to use C# that I or anyone else might do (I mod AOSP and such in my spare time).<p>Too bad it Xamarin has not done anything with it since the announcement, as dalvik is the bane of performance on Android.",2013-09-16 10:36:16,6392517
412,The approach Xamarin has taken with this makes the most sense to me. You share your core application logic among platforms but the UI for each platform is coded using the native toolkit. It&#x27;s more work but results in better user experiences than cross-platform UI toolkits provide.,2013-09-17 16:24:41,6400208
413,Congrats! Xamarin looks ace.<p>Has anyone published a decent app on their FREE&#x2F;Indie plan? I keep wanting to buy our small team the Business edition but it would cost tons.,2013-09-19 18:25:39,6413312
414,"You could try to leverage your experience in c#&#x2F;.net by using Xamarin for iOS <a href=""http://xamarin.com/monotouch"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;monotouch</a> .",2013-09-20 04:25:54,6415906
415,Xamarin,2013-09-20 16:31:10,6418755
416,"I would love to run mono in production, it&#x27;s just so slow and buggy that this isn&#x27;t possible.<p>The simple fact is that server is not a priority for xamarin; mobile is. And this is probably a valid optimization.<p>BizSpark helps though, as far as licensing issues goes.",2013-09-23 12:43:04,6430399
417,"Doesn&#x27;t have to be, Xamarin is doing great with their framework :)",2013-09-30 22:58:11,6472919
418,"With tablets taking off the way they are, having a client (for a client-server app) that runs on a tablet is becoming higher and higher priority.  Running on desktops is still required too.<p>What is the best technology today?<p>Flash and Silverlight are out.  HTML5&#x2F;Javascript?  Ehhh, not sure -- I really like strongly typed languages and a compiler to catch my mistakes.<p>Something like Xamarin?  Anything else?",2013-10-01 00:42:57,6473313
419,"hehe, I wrote something like this as well :P <a href=""https://github.com/joelmartinez/TattooDB-Android"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;joelmartinez&#x2F;TattooDB-Android</a><p>This particular one is for Android ... but I had&#x2F;have plans on creating a version for objective-c and C# (for Xamarin). The idea is to have a cross-platform and dead simple to use schemaless data-store for mobile devices at the ready :)",2013-10-01 16:00:53,6476995
420,"SEEKING WORK - Eindhoven, The Netherlands &#x2F; Remote<p>Experienced software developer with team lead experience and a hacker attitude. I&#x27;m a full-stack web developer and embedded software engineer with 12 years of professional experience doing small and large projects with a large variety of platforms and technologies.<p>Specialized in C#&#x2F;.NET in recent years, but unlike too many .NET devs, my scope is not limited to Microsoft&#x27;s &quot;technologie du jour&quot;. I&#x27;m familiar with Microsoft&#x27;s standard technologies as well as the great open source alternatives out there. Experience with making cross-platform mobile apps with Xamarin (MonoTouch &#x2F; MonoDroid - iOS, Android, Windows Phone) and with making .NET software that runs great on Mono&#x2F;Linux.<p>Proficient in:<p><pre><code>    * C# &#x2F; .NET 
    * C &#x2F; C++ (Win32 API, microcontrollers, Linux)
    * JavaScript &#x2F; TypeScript &#x2F; CoffeeScript
    * Java (incl Android)
    * PHP
    * Python
    * Ruby
</code></pre>
Most of my work has been unfortunately closed-source proprietary stuff, but for a peek at my code, see: <a href=""https://github.com/eteeselink/fakethat"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;eteeselink&#x2F;fakethat</a> (down-to-earth C# mocking framework)
<a href=""https://github.com/eteeselink/YieldMachine"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;eteeselink&#x2F;YieldMachine</a> (C# state machines)<p><a href=""https://github.com/eteeselink/cdhere"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;eteeselink&#x2F;cdhere</a> (little C++ console tool that talks to Windows Explorer)<p>Something of a CV can be found at <a href=""http://www.linkedin.com/in/egbert"" rel=""nofollow"">http:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;egbert</a>.<p>I can work on-site in the Netherlands, or remotely. I started freelancing only recently, so my portfolio isn&#x27;t as well presented as yet I&#x27;d like it to. Nevertheless, you can find contact info on my brand new placeholder website at <a href=""http://superset.eu"" rel=""nofollow"">http:&#x2F;&#x2F;superset.eu</a>.",2013-10-01 18:10:31,6477976
421,"Agreed. Couple Xamarin with something like MVVMCross [1] and it&#x27;s pretty easy to develop cross platform relatively quickly.<p>[1]: <a href=""https://github.com/slodge/MvvmCross"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;slodge&#x2F;MvvmCross</a>",2013-10-01 21:09:15,6479100
422,"ShowKit - West Hollywood, CA - FULLTIME, REMOTE, H1B<p>ShowKit (<a href=""http://showkit.com"" rel=""nofollow"">http:&#x2F;&#x2F;showkit.com</a>) is a mobile&#x2F;software startup run out of Curious Minds, a privately funded incubator in West Hollywood, CA. Curious Minds specializes in highly disruptive mobile and web applications.<p>We are currently looking for a talented Software Engineer with skills in network programming and SIP&#x2F;RTP.<p>To apply: 
Send your resume and GitHub account to anthony@showkit.com<p>Qualifications:
- Strong C&#x2F;C++ programming skills
- Strong OO &amp; multi-threaded programming skills
- Network programming experience
- SIP&#x2F;RTP development experience
- Strong debugging skills
- Experience dealing with bandwidth and latency issues
- Self-Motivated
- Good design and analytical skills
- Good communication skills
- Passion for real-time!<p>Desired&#x2F;Other Skills:
- Experience with Objective-C
- Mac&#x2F;iOS development (AVFoundation)
- Windows development
- H264 encoding&#x2F;decoding
- openGL
- Knowledge of network security strategies
- Android development
- Familiar with Xamarin and PhoneGap<p>Product:
ShowKit is a mobile software development kit that turbo charges apps with live communication features in under 30 minutes. Before ShowKit, it would take companies and software engineers months of intensive development to add features like audio&#x2F;video conferencing, screen sharing, and gesture control to their applications. Our first-to-market gesture control functionality empowers users to tap, swipe, highlight, and fully control another users screen remotely while simultaneously connecting the two users via audio&#x2F;video conference.<p>Notably, ShowKit is the only framework that includes hardware accelerated video encoding &amp; decoding. This enables 720p at 30fps, the highest quality video conferencing resolution on the market, while using minimal cpu resources and allowing the app to run seamlessly in the background while a call is taking place. Comparable solutions use full cpu resources &amp; only achieve 4-5fps at that resolution, which isnt feasible for video conferencing.<p>AngelList Profile: <a href=""http://angel.co/showkit"" rel=""nofollow"">http:&#x2F;&#x2F;angel.co&#x2F;showkit</a>
ShowKit Demo Videos: <a href=""http://www.youtube.com/user/ShowKitSDK"" rel=""nofollow"">http:&#x2F;&#x2F;www.youtube.com&#x2F;user&#x2F;ShowKitSDK</a><p>Our Office &amp; Perks:
Our Penthouse office sits on the historic Sunset Strip with the best view of all of LA. 
- Top of the line gear
- Kitchen stocked full of drinks and snacks
- Friendly and down-to-earth work environment
- Health, Dental &amp; Vision Coverage",2013-10-01 22:26:13,6479466
423,"And with Xamarin moving fully to Mac, Linux matters less for mono.",2013-10-04 04:43:59,6493748
424,"You could go down the path most traveled and learn Java - this is preferred, because the Android developer site has all its documentation in Java. However, if you&#x27;re averse to Java, you can also use C# (xamarin.com)",2013-10-06 18:41:26,6504957
425,"This is one of the main reasons CouchBase was created. Its community has fragmented as the company tries to figure out how to make money, but it would be worth your time to check it out. Here the Xamarin folks explain their new CouchBase Lite wrapper: <a href=""http://blog.xamarin.com/simplifying-persistence-with-a-document-database/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;simplifying-persistence-with-a-docum...</a>",2013-10-06 20:51:40,6505394
426,"Java or C# &#x2F; Xamarin if you don&#x27;t mind a small investment. Personally I prefer C# &#x2F; Xamarin. If you&#x27;re a student, contact their pre-sales, they&#x27;ll give you a nice discount.",2013-10-06 23:06:36,6505811
427,"ShowKit - West Hollywood, CA - FULLTIME, REMOTE, H1B<p>ShowKit (<a href=""http://showkit.com"" rel=""nofollow"">http:&#x2F;&#x2F;showkit.com</a>) is a mobile&#x2F;software startup run out of Curious Minds, a privately funded incubator in West Hollywood, CA. Curious Minds specializes in highly disruptive mobile and web applications.<p>We are currently looking for a talented software developers. You will build, maintain and improve our real-time SIP&#x2F;RTP-based framework, platform &amp; applications.<p>To apply: Send your resume and GitHub account to anthony@showkit.com<p>Senior-level Software Developer<p>Qualifications:
- Strong C&#x2F;C++ programming skills
- Strong network programming experience
- SIP&#x2F;RTP experience
- Strong OO &amp; multi-threaded programming skills
- Strong debugging skills
- Experience dealing with bandwidth and latency issues
- Self-Motivated
- Good design, analytical and problem-solving skills
- Good communication skills
- Passion for real-time!<p>Desired&#x2F;Other Skills:
- OSX and Windows development
- Mobile development (iOS, Android, Windows Phone)
- H264 Codecs
- OpenGL
- WebRTC
- Knowledge of network security strategies
- Familiar with mobile frameworks (PhoneGap, Xamarin, RubyMotion)<p>Mobile&#x2F;Web Developer<p>Qualitifcations:
- Strong Mobile Development Skills (iOS, Android, Windows Phone)
- Strong Web Development Skills (Ruby on Rails, JavaScript)
- Experience with mobile frameworks (PhoneGap, Xamarin, RubyMotion)
- Strong OO &amp; multi-threaded programming skills
- Strong debugging skills
- OSX development experience
- C&#x2F;C++ experience
- Experience dealing with bandwidth and latency issues
- Self-Motivated
- Good design, analytical and problem-solving skills
- Good communication skills
- Passion for real-time!<p>Desired&#x2F;Other Skills:
- Android NDK
- OpenGL
- H264 Codecs
- WebRTC<p>Product:<p>ShowKit is a mobile software development kit that turbo charges apps with live communication features in under 30 minutes. Before ShowKit, it would take companies and software engineers months of intensive development to add features like audio&#x2F;video conferencing, screen sharing, and gesture control to their applications. Our first-to-market gesture control functionality empowers users to tap, swipe, highlight, and fully control another users screen remotely while simultaneously connecting the two users via audio&#x2F;video conference.<p>Notably, ShowKit is the only framework that includes hardware accelerated video encoding &amp; decoding. This enables 720p at 30fps, the highest quality video conferencing resolution on the market, while using minimal cpu resources and allowing the app to run seamlessly in the background while a call is taking place. Comparable solutions use full cpu resources &amp; only achieve 4-5fps at that resolution, which isnt feasible for video conferencing.<p>AngelList Profile: <a href=""http://angel.co/showkit"" rel=""nofollow"">http:&#x2F;&#x2F;angel.co&#x2F;showkit</a> ShowKit<p>Demo Videos: <a href=""http://www.youtube.com/user/ShowKitSDK"" rel=""nofollow"">http:&#x2F;&#x2F;www.youtube.com&#x2F;user&#x2F;ShowKitSDK</a><p>Our Office &amp; Perks:<p>Our Penthouse office sits on the historic Sunset Strip with the best view of all of LA. - Top of the line gear - Kitchen stocked full of drinks and snacks - Friendly and down-to-earth work environment - Health, Dental &amp; Vision Coverage",2013-10-07 20:05:35,6510833
428,"Xamarin is wonderful. There&#x27;s a huge .NET OSS ecosystem out there. You might be surprised with what can be done with it.<p><a href=""http://xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com</a>",2013-10-10 08:30:39,6526356
429,Unfortunately it looks like xamarin has completely abandoned linux as a platform.,2013-10-10 10:35:46,6526690
430,"&gt;C#: Microsoft<p>Mono, XSP, Xamarin, etc. make your argument pretty much moot if you set up properly.  C# is an ECMA standard, most of the C# source code is open source or is being open sourced, and there is a large and active open source C# community.  This may have been true 5-10 years ago, but if you&#x27;re really super anti-MS, you can still use C# today.  It&#x27;s a fantastic language with fantastic libraries.<p>Disclaimer:  I&#x27;ve only toyed around with mono for web programming, I&#x27;ve not used it in production, and the baked in authentication libraries (aka Forms Authentication) seem to have some problems still, but we ARE using Xamarin in production for our mobile apps and it&#x27;s working fine.",2013-10-10 13:45:29,6527596
431,Xamarin is more likely.,2013-10-10 13:59:46,6527700
432,"In addition, Mono has improved tremendously over the past 12-18 months since Xamarin has taken over the project. It&#x27;s not yet in the category of some of the very highly-tuned JVM implementations (or the .NET CLR on Windows), but performance and support are plenty good enough for most applications.",2013-10-13 19:59:27,6543935
433,"That was true some years back before F# was released as a &quot;first-class&quot; language (F# 2.0 in VS2010), and the F# community is still (and probably always will be) dwarfed by the sheer number of C# programmers in the world. On the upside, the F# community has grown quite a lot in the last year; there&#x27;s even an official F# Foundation now: <a href=""http://fsharp.org"" rel=""nofollow"">http:&#x2F;&#x2F;fsharp.org</a><p>I ended up working with F# through my previous job; I founded a startup whose product as a .NET -&gt; GPU JIT compiler. The idea was similar to what Xamarin is doing now with their C# (and now F#!) tools for building iOS and Android apps, in that we aimed to make GPU programming accessible to the everyday programmer.<p>I wrote the first version of our product in C#; it was around 30KLoC, still missing quite a lot of functionality, and buggier than I was really happy with. I&#x27;d heard that F# was based on ML, and that ML was designed for work like building compilers and theorem provers, so I decided to take the plunge and learn it. It was a little difficult to wrap my head around at first, but I stuck to it, and I ported+simplified our original C# codebase to F# within a couple of months, ending up with ~5KLoC and a new version of our product which was much faster, had fewer bugs, and overall easier to maintain than before. It sounds a little cheesy, but making the jump to F# and putting in the effort to learn it <i>really</i> well was one of the best career decisions I&#x27;ve ever made, and I haven&#x27;t regretted it for a second. It&#x27;s made me a much stronger developer overall.<p>I think you&#x27;re spot on about extending Python with libraries to &quot;ease the pain&quot;. As I&#x27;ve said before, Python is quite a good, useful language; however, it seems like a good chunk of the core &quot;Python&quot; libraries are actually C libraries designed for use with a Python wrapper.<p>And sure, Haskell can be a bit obtuse at first, but it&#x27;s really not too bad if you actually take the time to learn it. I think the real problem is that &quot;senior&quot; developers get comfortable in whatever language they use day-to-day for a long time, then they try Haskell -- which is probably much different than other languages they&#x27;ve used before -- and since they don&#x27;t immediately get it, they assume it&#x27;s the language&#x27;s fault and give up.",2013-10-13 20:24:32,6544039
434,"A nice piece of work!<p>But I&#x27;m curious about a few architectural decisions. What made you to decide to build each HTML page by hand?<p>Code like this[1] makes my eyes bleed... reminds me of the faux-OOP HTML builder classes that used to be a fad among PHP programmers (or ISAPI &amp; Delphi web developers of old) a while ago.. No offence, but much of your Manager.HttpHandlers.* codebase feels like messy, ugly PHP4 code ported to C#...<p>What made you decide against template-based output rendering (Razor, NVelocity, NHaml, .liquid to name a few)? With template-generated output, the business logic layer could be decoupled from the UI. I had only a cursory glance at your code (and thus could be wrong), but it seems manager.io&#x27;s DAL&#x2F;BLL layer is intermingled within the GUI parts.<p>The protobuf DLL was named protobufnet.dll in the MSI. But the proper filename should be <i>protobuf-net.dll</i><p>I think user input validation and error handling could be made more robust.<p>Additionally, spawning 5 HTTP worker threads to serve a single user seems a little overkill.<p>These are few of the issues I&#x27;ve noticed during the 5 minute tinkering with your assemblies. But don&#x27;t let this critique discourage you. The app looks good - I guess end users won&#x27;t care how it&#x27;s built so long as it provides real value...<p>PS: Thanks for the heads up about Eto forms! I&#x27;ll give it a spin and see how it fares against Xamarin&#x27;s XWT.<p>[1] <a href=""https://gist.github.com/anonymous/7003337"" rel=""nofollow"">https:&#x2F;&#x2F;gist.github.com&#x2F;anonymous&#x2F;7003337</a>",2013-10-16 06:36:06,6558325
435,"Unfortunately lots of stuff runs under there including, but not limited to:<p>GitHub for Windows and dozens of apps it installs in there
F.lux
Anything installed with ClickOnce
Chrome
GMVault
Xamarin&#x27;s Android Support
Markdownpad
SkyDrive
Join.me<p>Assuming that everything in there is a virus is too much, I think.",2013-10-17 23:15:52,6568809
436,"Why would you need that?  The F# compiler&#x27;s open source and runs just fine in MonoDevelop&#x2F;Xamarin Studio (or outside of an IDE, for that matter).",2013-10-23 03:12:42,6596594
437,"xamarin studio is great to work with. Mono has a c# repl. OTOH if you said c# is practically unusable without resharper, I&#x27;d have some sympathy.",2013-10-23 05:38:01,6597098
438,"Quite so~<p>There is a difference between being keen to see the new features in the next version of .Net, and having Microsoft suddenly decide, actually, we dont care about .Net anymore, XNA is cancelled, metro apps are javascript only now. All that WFC stuff you were doing with windows phone... yeah, forget that.<p>People <i>invest</i> their time and knowledge in a technology stack, and Microsoft just seem to love throwing things away rather than improving them.<p>When you <i>set fire</i> to the developers that use your technology, are you really surprised when they don&#x27;t want to have anything to do with you?<p>I&#x27;ve only seen this anecdotally, but new developers who haven&#x27;t yet been set on fire seem to be very positive about the integrated MS stack.<p>...and slightly older jaded developers who are on fire, and looking for jobs using technology no one cares about anymore say things like &#x27;I&#x27;ll never use microsoft technology again&#x27;.<p>That&#x27;s just been my personal experience, but I&#x27;ve got to admit, seeing it, I&#x27;m pretty skeptical about investing any more of my time in learning to use MS stack for anything.<p>...but yes. C# is quite a nice language. I fully endorse the use of Xamarins offerings (ie. C# .Net outside of microsofts control)",2013-10-23 08:24:32,6597568
439,Little known fact about Xamarin Studio (MonoDevelop) is that there is a option to enable source analysis which is for some reason off by default. Flipping it on essentially enables resharper mode. Only item missing is auto namespace resolution for references.,2013-10-23 08:36:06,6597617
440,"The Alt.Net movement is a powerful force; always looking for better ways of doing things no matter where that alternative might come from. So if it&#x27;s something new from Microsoft, that&#x27;s great - if it&#x27;s an approach from the open source world or an alternate language or somewhere else entirely then that&#x27;s great too.<p>Xamarin deserves particular mention as the ability to share 80-90% of your core codebase between all mobile phone platforms is just stellar. It makes absolutely no business sense to re-write your core business logic for each platform and in that platforms language. So much less project risk, merge three&#x2F;four code bases into one. Do it once then implement native UI&#x27;s for each platform and bind back to the core library? Spot a problem in the core library on iOS? Android gets the hotfix for free. Just ask Rdio ;-)<p>Other hotness:<p>- <a href=""https://www.nuget.org/"" rel=""nofollow"">https:&#x2F;&#x2F;www.nuget.org&#x2F;</a>
- <a href=""http://www.servicestack.net/"" rel=""nofollow"">http:&#x2F;&#x2F;www.servicestack.net&#x2F;</a>
- <a href=""http://owin.org/"" rel=""nofollow"">http:&#x2F;&#x2F;owin.org&#x2F;</a>
- <a href=""http://nancyfx.org/"" rel=""nofollow"">http:&#x2F;&#x2F;nancyfx.org&#x2F;</a>
- <a href=""https://github.com/MvvmCross/MvvmCross"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;MvvmCross&#x2F;MvvmCross</a>
- <a href=""http://research.microsoft.com/en-us/projects/pex/"" rel=""nofollow"">http:&#x2F;&#x2F;research.microsoft.com&#x2F;en-us&#x2F;projects&#x2F;pex&#x2F;</a>
- <a href=""https://github.com/swax/CodePerspective"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;swax&#x2F;CodePerspective</a>
- <a href=""http://signalr.net/"" rel=""nofollow"">http:&#x2F;&#x2F;signalr.net&#x2F;</a>
- <a href=""https://github.com/Redth/PushSharp"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Redth&#x2F;PushSharp</a>
- <a href=""https://github.com/Squirrel/Squirrel.Windows"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Squirrel&#x2F;Squirrel.Windows</a><p>Last but not least:<p><a href=""http://blogs.msdn.com/b/visualstudioalm/archive/2013/06/26/debugging-support-for-64-bit-edit-and-continue-in-visual-studio-2013.aspx"" rel=""nofollow"">http:&#x2F;&#x2F;blogs.msdn.com&#x2F;b&#x2F;visualstudioalm&#x2F;archive&#x2F;2013&#x2F;06&#x2F;26&#x2F;d...</a>",2013-10-23 08:54:47,6597670
441,"Things you can do with C#:<p>1) Web using ASP.NET MVC
2) Desktop using WPF, XAML
3) Mobile on any platform via Xamarin Mono<p>PS: if you see someone hacking C# in a coffee shop, than it&#x27;s most likely something for mobile, highly-portable and probably a game (MonoGame and Unity are pushing C# mainstream as it&#x27;s much better than dealing with Obj C or JavaScript).",2013-10-23 16:52:20,6599947
442,"I&#x27;ll give you #1, but from digging into the topic #2 is very much up in the air long term and I would be <i>very</i> wary of starting any new project with it #3 doesn&#x27;t count as it is through Xamarin as I was explicitly talking about Microsoft plans.",2013-10-23 19:17:18,6601003
443,"As somebody who moved from F# to Scala for a project, my major gripes:<p>- Lack of a yield statement equivalent(in c#&#x2F;f#). I know, there are probably a dozen alternatives such as continuation passing etc, but none so convenient.<p>- It&#x27;s a massive language. Operator overloading seems to be highly encouraged, and library authors go to town with it. The Parser combinator stuff itself is enough to make one go dizzy, if you aren&#x27;t familiar with it.<p>- Tools: Idea is OK, but not a patch on VS and F#.  Compilation times are practically instant for small&#x2F;medium projects in VS land - here it&#x27;s glacial, even on a recent MBA. SBT is great, when it works.<p>On the + sides:<p>- If you know f#, you practically know Scala - well, enough to be instantly productive.<p>- Play 2 is very close to ASP.NET MVC. This was a welcome surprise, and a relief as well.<p>- It&#x27;s such a relief that whatever you build will run on anything with a JVM. Xamarin&#x2F;Mono is awesome, but those guys are still a little obscure, and a tougher sell than a JVM-based language.",2013-10-25 11:27:11,6610891
444,"&gt; It&#x27;s such a relief that whatever you build will run on anything with a JVM. Xamarin&#x2F;Mono is awesome, but those guys are still a little obscure, and a tougher sell than a JVM-based language.<p>Yeah, and there are still some unsupported functions and properties in ASP.NET that keep you from being able to just drop an MVC project in. :(",2013-10-25 12:50:17,6611241
445,"The problem with Xamarin is that it&#x27;s expensive. Xamarin&#x27;s docs don&#x27;t really explain how big a project can get before you need to pay for expensive licenses, but I can&#x27;t advocate at my company for a license that expensive when we&#x27;re developing Scala pretty much for free.",2013-10-25 14:14:56,6611703
446,"Funscript is not really MS - it&#x27;s done by a third-party developer, and F# itself is open-sourced under a very liberal license, and runs well on Xamarin&#x2F;Mono in OS X.<p>I don&#x27;t think there are direct equivalents in other languages, although similar approaches exist. Checkout Elm for example:<p><a href=""http://elm-lang.org/Examples.elm"" rel=""nofollow"">http:&#x2F;&#x2F;elm-lang.org&#x2F;Examples.elm</a>",2013-10-29 17:09:50,6635751
447,"SEEKING WORK - Eindhoven, The Netherlands &#x2F; Remote<p>Experienced software developer with team lead experience and a hacker attitude. I&#x27;m a full-stack web developer and embedded software engineer with 12 years of professional experience doing small and large projects with a large variety of platforms and technologies.<p>Currently specializing in:<p><pre><code>    * C#&#x2F;.NET software (Windows and Linux&#x2F;Mono, web and desktop)
    * Cross-platform mobile apps on iOS, Android and Windows Phone 
      (using Xamarin &#x2F; MonoTouch &#x2F; MonoDroid)
</code></pre>
I&#x27;m experienced with all modern Microsoft technologies and frameworks, but I often find that there&#x27;s open source out there that&#x27;s better. If you use .NET but disregard non-Microsoft tech, you&#x27;re really missing out!<p>Besides the above, I&#x27;m fluent in C, C++ (Win32 API, microcontrollers, Linux), JavaScript (, TypeScript, CoffeeScript), PHP, Python, Ruby, and Java (incl Android). Finally, I occasionally help teams embrace modern engineering practices, such as TDD, continuous integration, or a <i>structured</i> agile approach.<p>Most of my recent work has been unfortunately closed-source proprietary stuff, but for a peek at my code, see:<p><a href=""https://github.com/eteeselink/fakethat"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;eteeselink&#x2F;fakethat</a> (down-to-earth C# mocking framework)<p><a href=""https://github.com/eteeselink/YieldMachine"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;eteeselink&#x2F;YieldMachine</a> (C# state machines)<p><a href=""https://github.com/eteeselink/cdhere"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;eteeselink&#x2F;cdhere</a> (little C++ console tool that talks to Windows Explorer)<p>Something of a CV can be found at <a href=""http://www.linkedin.com/in/egbert"" rel=""nofollow"">http:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;egbert</a>.<p>I can work on-site in the Netherlands, or remotely. I started freelancing only recently, so my portfolio isn&#x27;t as well presented as yet I&#x27;d like it to. Nevertheless, you can find contact info on my placeholder website at <a href=""http://superset.eu"" rel=""nofollow"">http:&#x2F;&#x2F;superset.eu</a>.",2013-11-01 19:14:45,6655648
448,"ShowKit - West Hollywood, CA - FULLTIME<p>To apply: Send your resume and GitHub account to anthony@showkit.com<p>ShowKit (www.showkit.com) is a startup that has recently graduated from Curious Minds (www.curiousminds.com), a privately funded incubator in West Hollywood, CA that specializes in highly disruptive mobile and web applications.<p>We are currently looking for a talented software developers.  You will build and improve our real-time SIP&#x2F;RTP-based framework &amp; applications.<p>Qualifications:<p>- Strong Mobile Development Skills (iOS, Android)<p>- Strong Web Development Skills (Ruby on Rails, JavaScript)<p>- Experience with mobile frameworks (PhoneGap, Xamarin, RubyMotion)<p>- Strong OO skills<p>- Strong debugging skills<p>- OSX development experience<p>- C&#x2F;C++ development experience<p>- Self-Motivated<p>- Good design, analytical and problem-solving skills<p>- Good communication skills<p>- Passion for real-time!<p>Desired&#x2F;Other Skills:<p>- Windows Phone Development<p>- Android NDK<p>- OpenGL<p>- H264 Codecs<p>- SIP&#x2F;RTP Knowledge<p>Product:<p>ShowKit is a mobile software development kit that turbo charges apps with live communication features in under 30 minutes. Before ShowKit, it would take companies and software engineers months of intensive development to add features like audio&#x2F;video conferencing, screen sharing, and gesture control to their applications. Our first-to-market gesture control functionality empowers users to tap, swipe, highlight, and fully control another users&#x27; screen remotely while simultaneously connecting the two users via audio&#x2F;video conference.<p>Notably, ShowKit is the only framework that includes hardware accelerated video encoding &amp; decoding. This enables 720p at 30fps, the highest quality video conferencing resolution on the market, while using minimal cpu resources and allowing the app to run seamlessly in the background while a call is taking place. Comparable solutions use full cpu resources &amp; only achieve 4-5fps at that resolution, which isn&#x27;t feasible for video conferencing.<p><a href=""https://angel.co/showkit"" rel=""nofollow"">https:&#x2F;&#x2F;angel.co&#x2F;showkit</a><p><a href=""http://www.youtube.com/user/ShowKitSDK"" rel=""nofollow"">http:&#x2F;&#x2F;www.youtube.com&#x2F;user&#x2F;ShowKitSDK</a><p>Our Office &amp; Perks:<p>Our Penthouse office sits on the historic Sunset Strip with the best view of all of LA. <a href=""http://imgur.com/5vFgKQQ"" rel=""nofollow"">http:&#x2F;&#x2F;imgur.com&#x2F;5vFgKQQ</a><p>- Top of the line gear<p>- Kitchen stocked full of drinks and snacks<p>- Friendly and down-to-earth work environment<p>- Health, Dental &amp; Vision Coverage",2013-11-01 20:40:14,6656246
449,"If you are interested, i can develop NATIVE android&#x2F;ios mobile html&#x2F;web based app (similar to phonegap with embedded socket server) based on Xamarin.Android&#x2F;Xamarin.IOS for FREE (looking to publish a portfolio of case studies). If interested contact srid68 at gmail.",2013-11-02 05:02:36,6658224
450,Xamarin or competitors might be a good way to handle different platforms for your app.,2013-11-02 06:07:17,6658347
451,"There was no discussion of async&#x2F;await in here which is one of the best things C# has going for it.<p>When I meet other devs and tell them I work in lots of languages and platforms but prefer c# they usually look at me like I have 3 heads.<p>I like to show them LINQ and Async as some things I really like about C#, then I get into how rich the BCL itself is.<p>Devs are also pretty shocked when I tell them I can write truly 100% native iOS and Android apps in C# (thank you Xamarin) and that one of the most popular mobile game engines (Unity) uses C# and a version of the .NET Framework under the hood.",2013-11-02 16:59:18,6659798
452,"Ballmer and Microsoft has always threatened Linux with patents; and worse, they have refused to name which ones. There really is no reason to risk such contamination. So even if they made a patent grant, you wouldn&#x27;t really see a lot of adoption.<p>Actually, they have already given a patent grant for C# and .Net. Nobody cared, except the Ximian guys (now Xamarin, which has always been an awesome team).",2013-11-02 17:20:36,6659881
453,"Xamarin now also supports writing iOS and Android apps in F#; it&#x27;s only a &quot;preview&quot; at the moment, but some of the Mono developers have been getting more involved in the F# open-source community and Xamarin recently hired a well-known, very skilled F# contractor to help improve their support for the language.<p>Xamarin&#x27;s website has a bit more information: <a href=""http://docs.xamarin.com/guides/cross-platform/fsharp/fsharp_support_overview/"" rel=""nofollow"">http:&#x2F;&#x2F;docs.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;fsharp&#x2F;fsharp_...</a>",2013-11-02 17:35:50,6659930
454,"It&#x27;s funny when you tell hipsters about .NET. They get really shocked at just how good it is. A lot of people dismiss .NET because it&#x27;s backed by Microsoft. It really sucks that these people can&#x27;t just look at the technology for what it is rather than dismiss it based upon who created it.<p>As an aside... whilst C# takes a lot of the public .NET praise, F# is the real hero in the making. When I show F# to some hipsters they get very unsettled very quickly as suddenly they realise all that shitty Ruby and JavaScript they&#x27;ve been writing for years is probably not going to be anywhere near as employable in another 10 years, maybe, hopefully.<p>Interesting times indeed. And yes, Xamarin is awesome and Microsoft seriously needs to bring that great firm under their wing. Writing your mobile apps per platform is a major violation of DRY principles and is utterly ridiculous.",2013-11-02 17:37:51,6659933
455,"I&#x27;ll throw in my 2 cents about Xamarin: I&#x27;m amazed at how well it really works. I&#x27;m involved in a project right now developing a mobile app for Android that uses a USB-connected sensor to do color analysis. It&#x27;s all been done in C#, and it&#x27;s so nice to know that when we want an iOS version of this, we just have to do the storyboarding. Once that part&#x27;s done, the app will already be fully-tested and ready to go.<p>FYI, I highly recommend Stuart Lodge&#x27;s MvvmCross for this: 
<a href=""https://github.com/MvvmCross/MvvmCross"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;MvvmCross&#x2F;MvvmCross</a><p><a href=""http://mvvmcross.wordpress.com/"" rel=""nofollow"">http:&#x2F;&#x2F;mvvmcross.wordpress.com&#x2F;</a>",2013-11-02 17:43:41,6659963
456,I have an ongoing bet with a few friends on when and who will buy Xamarin. In April my bet was 18 months they would be bought by Microsoft or Amazon. I still lean Amazon.,2013-11-02 17:44:14,6659966
457,Why would xamarin want to sell?  What advantage would it bring them?,2013-11-02 17:48:55,6659988
458,"I hold out hope that the next Microsoft CEO won&#x27;t be as blind as Ballmer was and that the first thing on his hit list will be to buy Xamarin or at least &quot;secure&quot; it to prevent anyone else buying it; a suitably large investment could do that.<p>Xamarin would provide the perfect solution to getting a major foothold on mobile app developers, which is what Microsoft so desperately needs for their Windows Phone aspirations. Once you have developer mindshare, you have cracked half the problem.",2013-11-02 17:52:03,6660001
459,Why would MSFT needs Xamarin if their own tools are exceptionally good?,2013-11-02 17:56:04,6660018
460,"Microsoft should buy Xamarin, but they&#x27;ll also need to open-source all of .NET. That would improve Mono on non-Windows platforms. That would be the best thing they can do to really get a foothold in the mobile space and also win back some part of the startup community.",2013-11-02 19:14:59,6660324
461,"MonoDevelop is free, but if you have a large code base, it&#x27;s very slow. As in &quot;wait 30 minutes for MonoDevelop to start and analyze the entire project&quot; slow. And then the crashes...<p>Xamarin fixes all of these problems. But then, the free version is limited and the paid version is very expensive. When it comes to IDEs, you really do get what you pay for.",2013-11-02 19:39:48,6660427
462,"I am interested to know more about developer experiences with Xamarin. can you share some apps (ios, android ) that you have developed using xamarin?",2013-11-02 19:46:49,6660457
463,"Look here for samples:<p><a href=""http://xamarin.com/apps"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;apps</a>",2013-11-02 19:52:33,6660485
464,"I skimmed through the article...<p>While referring to a xamarin app there is a screenshot of a sample app with a caption
&quot;The same application with native controls and sharing almost 75% of the code base.&quot;<p>Is this xamarin code base shared somewhere?<p>Also, if there is a significant growth in the share of Windows phone ? Would you use still use Xamarin to develop for Windows phone or would you use Visual Studio?",2013-11-02 19:54:28,6660496
465,"AFAIK Xamarin doesn&#x27;t support Windows Phone right now, but I&#x27;d imagine they&#x27;ll do so in the future as WP&#x27;s market share grows; given that Windows Phone already supports .NET, that&#x27;s a huge chunk of work they&#x27;ll be able to skip if&#x2F;when they do decide to add WP support to their products.",2013-11-02 21:01:06,6660786
466,I think that keeping Xamarin out of MS&#x27;s hands is actually better for the ecosystem. It is very healthy that there are multiple independent but compatible implementations of the CLR and other tools so that everything is not tied to Microsoft.,2013-11-02 21:10:44,6660823
467,"Hate is as strong as Love. I don&#x27;t see people complaining when other people use Love to describe their feelings.<p>(0) I don&#x27;t care how great .NET&#x2F;C# is on top of Windows, because Windows does not exist for me.<p>(1) Visual Studio does not run on my Ubuntu Linux workstation. It does not run on OS X either. In contrast with IntelliJ IDEA or other IDEs.<p>(2) Mono sucks for building and deploying web services on Linux. Last time I tried it, I had to restart the process constantly as it was leaking memory. Performance sucked too. Things should be better now, with that new generational garbage collector, but building web services was always an afterthought.<p>(3) Mono is always behind (while also being ahead in some areas). Async landed in Mono and it&#x27;s finally usable. People did have to wait a lot of time to try it out. People that think Mono is some sort of .NET for Linux&#x2F;OS X&#x2F;iOS are wrong. Mono can be treated as a different platform.<p>Also, Xamarin has been treating Debian&#x2F;Ubuntu as a second class citizen. The latest version is 3.2.3, but the version I have on my Ubuntu is 2.10.8, as packaging is done by the community. I understand that they have other priorities, but they are also the only company that packages software for Linux and that ignores Ubuntu&#x2F;Debian.<p>(4) The ecosystem has no real open-source culture. Most third-party tools and frameworks worth bothering with are proprietary&#x2F;commercial. Most open-source libraries and tools worth considering are either part of the (small) Mono community or are clones of projects running on top of the JVM. The whole ecosystem is actually very Microsoft-centric and Microsoft couldn&#x27;t even be bothered to ensure that NuGet works on Linux.<p>(5) As a corollary to the above, almost everything you need is proprietary and costs a lot of money. Given that my job does not involve .NET&#x2F;C#, it means I can only use C# in my personal projects (that&#x27;s how people start). I don&#x27;t like building projects on top of freeware and again, as example, for $299 per year, Xamarin doesn&#x27;t even provide email support. And I could rant all day about how BizSpark &#x2F; WebSpark suc",2013-11-02 21:22:13,6660857
468,"&quot;.NET applications only run (officially)&quot; -- what&#x27;s that even mean? I can rephrase it: &quot;Mono applications only run (unofficially) on Microsoft&#x27;s CLR&quot;.<p>The actual runtime is an ECMA spec (which has been unchanged since v2, as all MS has added since are implementation changes and more libraries). C# and the core parts of the runtime are under Microsoft&#x27;s Community promise[1]. But you&#x27;re right that MS could try to assert copyright over parts of the extended APIs, and some companies might be worried about that. OTOH the Oracle versus Google thing should alleviate a lot of concerns.<p>As far as F#, it&#x27;s quite a bit more than a few small changes.<p>1: Writeup by Xamarin here: <a href=""http://tirania.org/blog/archive/2009/Jul-06.html"" rel=""nofollow"">http:&#x2F;&#x2F;tirania.org&#x2F;blog&#x2F;archive&#x2F;2009&#x2F;Jul-06.html</a>",2013-11-02 21:43:00,6660942
469,"&gt; And yes, Xamarin is awesome and Microsoft seriously needs to bring that great firm under their wing.<p>I&#x27;m a Microsoft fanboy, but a thousand times no. So they can do what with it exactly, pull another Skype? Xamarin caters to areas MS rarely do and bringing them in would push people out of the windows ecosystem, not inward. MS&#x27;s catering to ios and android is to push people to windows phones and that isn&#x27;t likely to change anytime soon.<p>I&#x27;m definitely glad Xamarin exists, especially after Novell kicked them to the curb. They could&#x27;ve kept their ball too but they decided to play fair and let Mono live on. I would never in a million years think MS could be that generous, and again I love MS for better or worse. Could they be? Sure but in spite of Bill Gates charitable contributions to humanity, those notions rarely took root in the company that enabled him to become that person in the first place.",2013-11-02 22:11:15,6661049
470,"I assume you&#x27;re referring to the CLR here? As in: <a href=""http://en.wikipedia.org/wiki/Common_Language_Runtime"" rel=""nofollow"">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Common_Language_Runtime</a><p>Whilst no, the Microsoft CLR is not open source. It doesn&#x27;t need to be. Because the CLI is a ECMA standard and known-good third party implementations (Mono) already exist.<p>The only thing to be gained from open sourcing the Microsoft CLR would be to benefit Mono. As Mono is the defacto official cross-platform port of the CLR. Since the Microsoft CLR almost certainly contains IP and trade secrets that they wouldn&#x27;t want their commercial rivals to see, it would be more beneficial if Microsoft merely gave a fairly open code sharing and IP license to the Mono &#x2F; Xamarin team so that they could benefit in the exact same way as though it were OSS MIT.",2013-11-02 22:20:52,6661087
471,"They don&#x27;t need to support Windows Phone because it already runs .NET CLR code. MvvmCross enables you to target iOS, Android, Windows Phone, Windows 8 Metro&#x2F;Modern, WPF, OSX Mac from a single code base.<p>Xamarin only needs to fill in the gaps, which are iOS, Mac and Android.",2013-11-02 23:01:14,6661231
472,"In fact, MOST apps in the store are C# and XAML. It&#x27;s the best way to make an app that runs anywhere, using xamarin for other platforms.",2013-11-03 01:45:06,6661776
473,"That&#x27;s true. Mono is generally slower than the CLR, though it has been improving ever since Xamarin took over. There&#x27;s also an option now to use LLVM as the JIT compilation engine in Mono; for server-based applications (where steady-state performance matters more than start-up time), this can greatly improve the performance thanks to LLVM&#x27;s optimizer.<p>With the improvements in the latest 3.2.x branch, I think Mono&#x27;s performance is at least &quot;good enough&quot; for many use cases.<p>FWIW, I do a bit of F# + Mono development on FreeBSD 9 (and now FreeBSD 10) and have found the performance to be quite good. I wrote an installation guide (<a href=""http://fsharp.org/use/freebsd"" rel=""nofollow"">http:&#x2F;&#x2F;fsharp.org&#x2F;use&#x2F;freebsd</a>) if you want to give it a try, e.g., in a VirtualBox VM.",2013-11-03 04:07:21,6662184
474,Xamarin has worked pretty well for my recent projects.,2013-11-09 03:43:50,6700599
475,Do you mean you want something like Mono&#x27;s Xamarin in Python?,2013-11-10 04:30:33,6705222
476,I don&#x27;t think so. Look at C# - completely alien to JVM yet getting more and more cross-platform traction via Mono and Xamarin. I think it&#x27;s more about language robustness and appeal. Also switching from Java to C# you loose less than when switching to Python language feature wise.,2013-11-10 11:52:32,6706123
477,"Well, then you can unlearn Java right now!<p><a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>
<a href=""http://phonegap.com/"" rel=""nofollow"">http:&#x2F;&#x2F;phonegap.com&#x2F;</a>
<a href=""http://www.orubase.com/"" rel=""nofollow"">http:&#x2F;&#x2F;www.orubase.com&#x2F;</a>
etc.
etc.
etc.",2013-11-10 14:48:11,6706557
478,"Can you come up with one thing that you can&#x27;t do with Xamarin (C#) that you can do in Java (Android)? It&#x27;s most certainly not &#x27;very limited&#x27;, I have no idea where you got that information.",2013-11-10 15:14:33,6706637
479,You have the Xamarin extra payload and need to have someone write .NET bindings for the Android APIs.<p>But it is certainly a good way to write portable software across all mobile platforms.,2013-11-10 15:33:23,6706737
480,"&gt; C# is great with Visual Studio, but costly to use.<p>The Windows&#x2F;.NET SDK is free.<p>Additionally, you can make use of SharpDevelop, Xamarin IDE or Visual Studio Express editions.",2013-11-10 15:35:33,6706751
481,"I think you mean <a href=""http://xamarin.com/studio"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;studio</a>",2013-11-12 17:24:10,6719177
482,"Unity really desperately needs a Mono upgrade, as their version is years old. Unfortunately it seems to be a licensing issue with Xamarin, because of LGPL constraints on mobile platforms.<p>It&#x27;s quite frustrating to work with C# without all the features of the last few versions, particularly if you want to use third party libraries.",2013-11-12 17:40:42,6719313
483,This is not surprising at all. I&#x27;ve been wondering if&#x2F;when Microsoft would just buy Xamarin. Perhaps this is the first step?,2013-11-13 15:52:26,6725958
484,Good for Xamarin (I hope). I am a fan of Miguel de Icaza. I asked him a question about Gnome programming and he sent me a book on it. Nice guy.,2013-11-13 16:01:32,6726040
485,"Nothing in this press release points towards such an implementation. Mono and Linux aren&#x27;t even mentioned in the entire article. This is all about C# -&gt; Android&#x2F;iOS. In fact, it weakens the future of Mono by making Xamarin stronger in MS&#x27;s ecosystem with the whole VS 2013 integration and MSDN subscriptions.",2013-11-13 16:03:16,6726053
486,"The scenario I keep hoping for is: ms buys xamarin, MIT licenses the entire xamarin cross platform ecosystem (while charging for build services like phonegap does), adds a &quot;compile to html&#x2F;css&#x2F;js&quot; feature so you can write your web frontend in c#.<p>This scenario leads to the following:  C# wins as the &quot;cross platform mobile language,&quot; window phone is the default first environment for cross platform apps, and as developers we get an elegant &quot;write once* run everywhere&quot; that&#x27;s based on c#.<p>The asterisk: once plus ui customizations on each platform, so more like write (1 + (.1 * num_non_wp8_platforms)) times<p>Unfortunately, though I think these moves would make ms a dominating player in mobile and web for decades, I doubt they&#x27;ll do this.",2013-11-13 16:07:27,6726088
487,"Xamarin relies heavily on mono, I don&#x27;t see them rebuilding it just for Linux when they&#x27;re so heavily invested in the MS platform.",2013-11-13 16:09:38,6726108
488,"This.<p>It&#x27;s hard to see this as anything except Microsoft playing &#x27;me too&#x27; with app developers as people flock away from their CLR for mono.<p>It&#x27;s good for c# developers, there&#x27;s no doubt, but I&#x27;m suddenly wary now; I can well imagine a future where Xamarin is bought by Microsoft and their tools become Microsoft lock in. That&#x27;s not a future I&#x27;m enthusiastic about.",2013-11-13 16:11:56,6726120
489,"There is no way that&#x27;ll ever happen.<p>Much more likely; Xamarin is acquired, monodevelop development halts and the Xamarin offerings become VS pro features, giving Microsoft a foot hold in the mobile space (which they desperately need) and maintain VS revenue.<p>It&#x27;s arguably not a terrible direction for things to go... If, unlike me, you dont passionately despise VS. :p",2013-11-13 16:15:54,6726153
490,To me this seems mostly about Microsoft Phone(and perhaps in the future tablets). It will help to get more WP apps out there if all it takes is a rebuild of a Xamarin iOS or Android project. Makes sense. I&#x27;m guessing Xamarin gets a cash infusion in return.,2013-11-13 16:26:11,6726254
491,"I&#x27;m sad, since Xamarin, the development for Monodevelop and the focus on Linux systems has become abysmal and terrible.<p>This is just a very very sad sellout tactic.
Way to kill off the Linux ecosystem.",2013-11-13 16:36:17,6726338
492,"I think XAML is that format, but it isn&#x27;t without its pain points. You pretty much can&#x27;t do animation without a tool like Blend unless you&#x27;re a sadist.<p>It looks like Xamarin uses .AXML for Android (maybe a XAML flavor) but has to adhere to Interface Builder for iOS (<a href=""http://docs.xamarin.com/guides/cross-platform/application_fundamentals/building_cross_platform_applications/part_1_-_understanding_the_xamarin_mobile_platform/"" rel=""nofollow"">http:&#x2F;&#x2F;docs.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;application_fu...</a>, specifically the Visual Designer section). XAML likely won&#x27;t gain any traction on those platforms though due to NiH on all sides. HTML&#x2F;CSS is likely as close as we get for now but that isn&#x27;t a &quot;native view&quot; in any of the platforms mentioned.",2013-11-13 16:43:05,6726388
493,"Some people prefer C# over Java and VS over Eclipse, and the Xamarin team will probably do a better job of making cross-platform work than most others.<p>I suspect it will still lead to many lowest common denominator apps, but it&#x27;s not like Android doesn&#x27;t suffer from iOS-portitis and hordes of shoddy apps for other reasons, anyway.",2013-11-13 16:56:12,6726474
494,"Microsoft is a possible suitor and that follows logic with what we saw in the Nokia purchase.<p>That said, I still think Amazon will buy Xamarin.",2013-11-13 17:27:07,6726735
495,"Besides his skills as a software developer, I am impressed with the fact that he has held on to his vision and led his company from Ximian, through Novell, then Attachmate and onto Xamarin.",2013-11-13 17:28:29,6726750
496,"What about iOS where you definitely need OSX? Xamarin has some integration with VS (I&#x27;ve never used it myself), but it still needs a mac with OSX installed to work (even if it&#x27;s just a macmini somewhere.<p>If Microsoft does buy Xamarin, I&#x27;d like the following to happen:<p>Xamarin and TestCloud become much cheaper.
More attention given to the IDE - fix the hell out of it
Better documentation<p>I also think it&#x27;s a fantastic way of encouraging developers to work on WP 8. The less code you need to port from Objective-C&#x2F;Java to .net, the better.",2013-11-13 17:34:47,6726795
497,"&gt;What are your experiences with Phonegap?<p>I started very early in PhoneGap.  Keeping up with the changes as the product has matured has been a pain, but expected.  You&#x27;ll be glad it&#x27;s pretty mature at this point.<p>That said, starting with v3.0 the move to NPM has taken development reliability back a few steps in my opinion.  I like the new command line interface, I just wish it worked more consistently.  I&#x27;m sure it will get better.<p>&gt;Is it generally permissibe for making enterprise mobile applications?<p>That&#x27;s what I use it for.  It works well for this purpose.  I wouldn&#x27;t use it for B2C apps though, especially for Android because the browser on Android performs poorly, especially for scrolling - very laggy and spastic.<p>&gt;What features could be missing?<p>There are a lot of plugins that fill in the gaps.  I don&#x27;t recall not being able to do something a native app could do.  I&#x27;ve used, the GPS, photo gallery, camera, enabled &quot;Open In&quot;, FileTransfer, media recording, and probably a few other plugins.<p>&gt;Why doesn&#x27;t everyone use Phonegap if it can deploy to multiple platforms?<p>Because there are other platforms that could be used.  If C# is your thing, you could check out <a href=""http://xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com</a>  With that you could write apps in a MVVM style and reuse your ViewModels in a PCL that could be reused across Windows Phone, Android, and iOS.<p>The thing is, mobile apps are now typically an extension of a web app, so if you already have web developers then PhoneGap gets you there faster.  The end result will be a good product, but will never be a truly great product.",2013-11-13 17:51:30,6726938
498,"Here is the MSFT announcement: <a href=""http://blogs.msdn.com/b/dotnet/archive/2013/11/13/pcl-and-net-nuget-libraries-are-now-enabled-for-xamarin.aspx"" rel=""nofollow"">http:&#x2F;&#x2F;blogs.msdn.com&#x2F;b&#x2F;dotnet&#x2F;archive&#x2F;2013&#x2F;11&#x2F;13&#x2F;pcl-and-ne...</a>",2013-11-13 17:57:56,6726994
499,"They have open-sourced quite a lot (aspnet webstack, reactive extensions, etc). The problem is that a lot of their compiled binaries, delivered via nuget packages have been restricted to windows. This is slowly being undone ( <a href=""http://blogs.msdn.com/b/dotnet/archive/2013/11/13/pcl-and-net-nuget-libraries-are-now-enabled-for-xamarin.aspx"" rel=""nofollow"">http:&#x2F;&#x2F;blogs.msdn.com&#x2F;b&#x2F;dotnet&#x2F;archive&#x2F;2013&#x2F;11&#x2F;13&#x2F;pcl-and-ne...</a> ).<p>Another problem is that they don&#x27;t run their open source projects in an open manner. Contributing requires a CLA and a signature from your boss. Issues and planning are often behind closed doors, but that seems to be slowing changing too (see KatanaProject &#x2F; signalr).<p>If they really wanted to grow their ecosystem 10x, and give windows phone the possibility of a fighting chance, making VS Pro free would be the required.",2013-11-13 17:59:58,6727011
500,"To all those wondering why Microsoft doesn&#x27;t buy Xamarin, it&#x27;s probably because Miguel de Icaza and crew don&#x27;t want to sell. Why should they? There&#x27;s more to life than getting rich, such as implementing your vision with a family of friends and co-workers. Besides, he&#x27;ll probably get rich anyway.",2013-11-13 18:02:35,6727026
501,"Launch events that I could find (not Xamarin):<p>Dec 11 Buenos Aires Argentina - <a href=""https://msevents.microsoft.com/CUI/EventDetail.aspx?EventID=1032571149"" rel=""nofollow"">https:&#x2F;&#x2F;msevents.microsoft.com&#x2F;CUI&#x2F;EventDetail.aspx?EventID=...</a><p>Dec 3 &#x27;Online New Zealand&#x27; (webinar) - <a href=""https://msevents.microsoft.com/CUI/EventDetail.aspx?EventID=1032562086"" rel=""nofollow"">https:&#x2F;&#x2F;msevents.microsoft.com&#x2F;CUI&#x2F;EventDetail.aspx?EventID=...</a><p>Nov 28 Auckland New Zealand - <a href=""https://msevents.microsoft.com/CUI/EventDetail.aspx?EventID=1032570917"" rel=""nofollow"">https:&#x2F;&#x2F;msevents.microsoft.com&#x2F;CUI&#x2F;EventDetail.aspx?EventID=...</a><p>Nov 27 Santiago Chile - <a href=""https://msevents.microsoft.com/CUI/EventDetail.aspx?EventID=1032569260"" rel=""nofollow"">https:&#x2F;&#x2F;msevents.microsoft.com&#x2F;CUI&#x2F;EventDetail.aspx?EventID=...</a><p>Nov 26 Wellington New Zealand - <a href=""https://msevents.microsoft.com/CUI/EventDetail.aspx?EventID=1032570924"" rel=""nofollow"">https:&#x2F;&#x2F;msevents.microsoft.com&#x2F;CUI&#x2F;EventDetail.aspx?EventID=...</a><p>Nov 21 Brno Czech Republic - <a href=""https://msevents.microsoft.com/CUI/EventDetail.aspx?EventID=1032568253"" rel=""nofollow"">https:&#x2F;&#x2F;msevents.microsoft.com&#x2F;CUI&#x2F;EventDetail.aspx?EventID=...</a><p>Nov 19 Praha Czech Republic - <a href=""https://msevents.microsoft.com/CUI/EventDetail.aspx?EventID=1032568250&amp;culture=en-US"" rel=""nofollow"">https:&#x2F;&#x2F;msevents.microsoft.com&#x2F;CUI&#x2F;EventDetail.aspx?EventID=...</a><p>Search: <a href=""https://msevents.microsoft.com/cui/AdvancedSearch.aspx?culture=en-US&amp;evtTyp=1#culture=en-US;advanced=true;pageNumber=1;sortKey=date;sortOrder=ASC;pageEvent=true;hdnInitialCount=1;startDate=11/13/2013;endDate=2/11/2014;kwdAny=;kwdExact=Visual%20Studio%202013;eventType=1;searchcontrol=yes;s=1"" rel=""nofollow"">https:&#x2F;&#x2F;msevents.microsoft.com&#x2F;cui&#x2F;AdvancedSearch.aspx?cultu...</a>",2013-11-13 18:04:05,6727035
502,"This is better than buying Nokia! Finally some smart move from Microsoft. Because C# is a fantastic language, it has powerful tools which other languages lack and Xamarin gave developers a great opportunity(price is high though). I really can&#x27;t understand some people that are in doubt with Microsoft support to C#. It is the best thing they have done and Visual Studio is the second in my opinion. And Microsoft is well aware of this, everyday we can see Microsoft making a move about C#, .Net and Azure ecosystem. Nowadays, Google is more popular for stopping services and no one bats an eye. Give Microsoft some credits guys, at least for things they are doing great.",2013-11-13 18:15:11,6727107
503,"Such a shame Xamarin studio isn&#x27;t available for Linux though.<p>I&#x27;m not getting a Mac to try it out, and in Windows I have VS.",2013-11-13 18:15:18,6727109
504,"&quot;Write Once Run Anywhere&quot; is Anti-Customer. [1]<p>Because of continued platform fragmentation WORA has been, is, and always will be a pipe-dream. People have been attempting to create WORA technologies since the beginning of time and they have all failed.<p>The nice thing about Xamarin&#x27;s model is your UI code uses native constructs, allowing for the best possible, most natural (to the user) experience. But you get to stick with one language (if you want) and your core code is very portable.<p>[1] <a href=""http://ceklog.kindel.com/2013/02/21/james-gosling-screwed-us-write-once-is-anti-customer/"" rel=""nofollow"">http:&#x2F;&#x2F;ceklog.kindel.com&#x2F;2013&#x2F;02&#x2F;21&#x2F;james-gosling-screwed-us...</a>",2013-11-13 18:25:23,6727215
505,"Let&#x27;s face it, being bought by Microsoft isn&#x27;t what it used to be and has some downsides, like preventing Google from promoting Xamarin like they should.",2013-11-13 18:36:33,6727303
506,"Money talks, bull__ walks.<p>So, they are collaborating, writing blog posts and sharing stages. Of course, Xamarin is also shipping more code, which is what impresses me about these guys.<p>Miguel has already said Xamarin has had some links (maybe more information sharing than collaboration) with engineers at Microsoft. How is this much different?<p>This seems like a weak thread. The sort of thing which could quickly cool down or die altogether. There doesn&#x27;t seem to be any solid commitments here. Of course, we still have the assurance that Xamarin will continue to be impressive.<p>I just think it&#x27;s a pretty big leap from this blog post to &quot;maybe Microsoft will buy Xamarin.&quot;<p>Edit: Fixed errors.",2013-11-13 18:52:43,6727430
507,"<p><pre><code>  ...an extended 90-day trial (enough time to write the next
  Instagram or billion-dollar Enterprise app from scratch!)...
</code></pre>
Seems a tad hyperbolic to me.<p>I wish Microsoft would just buy Xamarin and freely license the runtime to all under liberal (e.g. MIT&#x2F;BSD) terms.  That would surely be a big win for C# from a mindshare &#x2F; platform growth standpoint.",2013-11-13 19:16:34,6727624
508,"&gt; <i>What about iOS where you definitely need OSX?</i><p>I predict Xamarin Build Cloud.<p>Devs who want to make WP apps on Mac or Linux have exactly thr same problem, just the other way around. A well integrated, &quot;it just works&quot; cross-platform build solution, straight from the IDE, has a lot of market value and fits perfectly in Xamarin&#x27;s portfolio, Microsoft or not.",2013-11-13 19:19:41,6727665
509,".AXML has no relation to XAML at all. It&#x27;s just plain Android layouts: when doing plain Java Android dev, they&#x27;re just .xml files. I believe that Xamarin made up a new extension for them because it allows them to easily associate the file extension with a special editor in the IDE (Visual Studio and Xamarin Studio&#x2F;MonoDevelop).<p>Xamarin&#x27;s Android interface builder is actually remarkably decent.",2013-11-13 19:28:15,6727751
510,"Xamarin took a <i>lot</i> of VC money. There&#x27;s little precedent in language and tool vendors becoming big and influential firms. So, they must have had an exit strategy or two. I can&#x27;t see how selling to MS is <i>not</i> one of those options.",2013-11-13 19:36:40,6727828
511,"You can bind objective-c libraries so that they&#x27;re usable from a Xamarin app:
<a href=""http://docs.xamarin.com/guides/ios/advanced_topics/binding_objective-c/"" rel=""nofollow"">http:&#x2F;&#x2F;docs.xamarin.com&#x2F;guides&#x2F;ios&#x2F;advanced_topics&#x2F;binding_o...</a><p>Same goes for Java libs:
docs.xamarin.com&#x2F;guides&#x2F;android&#x2F;advanced_topics&#x2F;java_integration_overview&#x2F;binding_a_java_library_(.jar)&#x2F;",2013-11-13 19:46:24,6727916
512,"Great idea, hard to execute in the real world. I know, I&#x27;ve done it. I built an app with Xamarin about 3.5 years ago. Released it as an MVP to the App Store. I wrote the Android version as well and released it (but went native android because I knew it).I eventually wanted to upgrade some features on my iOS app (Xamarin). I tried finding contractors to do it, and the lowest I could find at the time were around 90&#x2F;hr. While I could find great iOS devs for half of that. I ended up having an iOS dev re-write the app in Obj-C for much cheaper than it would have been to add new features to the old Xamarin app.<p>Moral of the story - The idea is great. But the problem is that no one knows how to use Xamarin and those that do charge a premium. If the app is native you can find many more qualified devs that know how to code for the platform at a much more affordable price. All my apps are native now. No more Xamarin.<p>I loved the product, but from the business side it didnt make sense financially for me to continue to go down that road. Worked great to prove the MVP though.",2013-11-13 19:47:26,6727932
513,"3.5 years ago is the key. Xamarin has come a long way in the past 12 months, not to mention the past 42.<p>Developers who know this have grown considerably in that period as well.<p>On an aside, 90&#x2F;hr for a competent dev is cheap. I know most people on HN don&#x27;t make a salary that equates to that but freelancers have an entirely different set of concerns and 90 is low.",2013-11-13 20:11:03,6728119
514,Microsoft isn&#x27;t buying them because devdiv is not a profit driver for Microsoft. Enabling devs to build for other platforms is not a profit driver for them.<p>They will only buy Xamarin defensively. If they feel like someone else might gobble them up and they will lose access to dev mindshare around c# and mobile.,2013-11-13 20:13:48,6728133
515,"&gt; I tried finding contractors to do it, and the lowest I could find at the time were around 90&#x2F;hr. While I could find great iOS devs for half of that. I ended up having an iOS dev re-write the app in Obj-C for much cheaper than it would have been to add new features to the old Xamarin app.<p>An employee working 40 hours per week clocks in around 2K hours annually. Lets assume a freelance developer wants to have a life and largely stick to the same 2K hours. Within that time frame, the developer has to subtract time for running the business, overhead, sick days, vacation days, gaps between projects, non paying clients and the list goes on. By time time the year is up, a freelancer might be hard pressed to bill out 1600 hours.<p>At 1600 hours at $90 &#x2F; hour, a freelancer is looking at $144,000. In most of the top cities of the world (New York, Los Angeles, San Francisco, Singapore, Sydney) this doesn&#x27;t get you far. This probably doesn&#x27;t even get you the salary + benefits of a typical engineer with a decent company in San Francisco. And if you have to deal with the stress of running a business, then you should be looking at making a bit more than you would as an employee, otherwise it isn&#x27;t worth the stress.<p>At half that rate, you are talking about the same scenario, except for in much cheaper cities. Sure, you&#x27;re making quit a bit more than the people stocking shelves at Walmart, but you probably aren&#x27;t even making enough to be worth the added stress of running your own business. You would be better off just by signing on with another company as a salaried engineer.<p>I think we take for granted that we can pick up a developer from anywhere at any time to work on our idea. We don&#x27;t have to open a business and go through a bunch of red tape to hire an employee. We need to remember that while that hourly rate seems high, we are still saving a bundle of money over the traditional route.<p>So, $90 &#x2F; hour is cheap. I know junior Wordpress! freelancers who charge that because they have to due to their location. In this case, the premium isn&#x27;t in what they know, it&#x27;s in where they live. Those same iOS devs wouldn&#x27;t be charging $45 &#x2F; hour if they lived in the above mentioned cities. Not unless they are living in Mom&#x27;s basement.<p>Keep in mind the above numbers are for someone who can actually run a business. A lot of freelancers are hopeless on the business side and don&#x27;t last long.<p>The bottom line is that you were able to get iOS developer to do work at half the rate of Xamarin developers and you were happy with the work. But don&#x27;t say that $90 &#x2F; hour is expensive.",2013-11-13 20:53:12,6728411
516,You should have brought that up to Xamarin. I am sure they would have liked to see what was going on to make mono better.,2013-11-14 02:40:19,6730192
517,"You guys are talking about different things.<p>The licences of the projects (EntityFramework, ASP.NET) are opensource, but the licence only applies to the sources.<p>Nuget packages, however, are binary. And they might have a different licence. So to avoid the latter, you just need to compile the sources yourself instead of using the Nuget packages.<p>EDIT: actually, the last paragraph is not true anymore, thanks to this: <a href=""http://blogs.msdn.com/b/dotnet/archive/2013/11/13/pcl-and-net-nuget-libraries-are-now-enabled-for-xamarin.aspx"" rel=""nofollow"">http:&#x2F;&#x2F;blogs.msdn.com&#x2F;b&#x2F;dotnet&#x2F;archive&#x2F;2013&#x2F;11&#x2F;13&#x2F;pcl-and-ne...</a>",2013-11-14 10:48:43,6731649
518,"XamarinStudio <i>is</i> available for Linux, just under a different name: &quot;MonoDevelop&quot;.<p>It has that name because in Linux the Xamarin offerings don&#x27;t work, therefore they&#x27;re not included in MonoDevelop.",2013-11-14 11:13:25,6731706
519,Xamarin on Android runs on Mono directly on the kernel. It skips Dalvik,2013-11-14 13:03:44,6732027
520,I knew it could (with Xamarin&#x27;s thing they did rewriting Android in C# to test performance) but I didn&#x27;t know that&#x27;s how it worked for the stuff you build with their tools.  That&#x27;s awesome.,2013-11-14 13:14:16,6732062
521,"In my experience, implementing a sufficiently complex app in PhoneGap targeting Android, Windows Phone, iPhone and iPad is absolutely more work with lower quality result than doing native versions of each app through Xamarin.<p>HTML apps have a tremendous hurdle to overcome. Customer expectations are different between something opened in a web browser and something downloaded from the app store. Apps that are amazing as web pages can be awful as apps. The amount of effort required to get a web application to perform in a way that matches user expectations for native UI cues, animations, quality and responsiveness across platforms is enormous and incredibly more difficult than your standard web app.<p>Of course, if you target just one platform, things get a lot better, but at that point, why not just use the native tooling?<p>This has been my experience, having tried both approaches over the course of several years, across team sizes ranging between one and ten developers.",2013-11-15 21:18:12,6742206
522,You can target Mac&#x2F;iOS from Visual Studio with Xamarin. :),2013-11-19 17:19:22,6762641
523,"Xamarin and Unity are heavily used and are based on .NET. There is plenty of .NET around, we just don&#x27;t scream &quot;it&#x27;s the future!&quot; all the time and do not post [useless] 30-liners. The latter might change now :).",2013-11-20 14:42:24,6768230
524,"From my quick review, Ionic is a framework for building mobile applications using web standard technologies (HTML5&#x2F;JS&#x2F;CSS).  You then build your application using PhoneGap -- which builds a native mobile application wrapped in a WebView.  This would be similar to writing a web app using jQuery Mobile and building a mobile app using PhoneGap.  Ionic gives you a nice starting point, just like when you use Bootstrap for a website instead of writing all of your styles from scratch.<p>Titanium apps are written in JavaScript (using Titanium libraries) that hook into native functionality.  Your apps are then compiled into fully native mobile applications (not WebViews).  It really comes down to the differences between running fully native apps vs. web views wrapped in a native application.  There is a good explanation of the differences between here: <a href=""http://stackoverflow.com/questions/17249500/xamarin-2-0-vs-appcelerator-titanium-vs-phonegap"" rel=""nofollow"">http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;17249500&#x2F;xamarin-2-0-vs-a...</a>.",2013-11-22 15:21:14,6781168
525,"&quot;openness&quot; - I want to use my favourite language and familiar environment to produce high-performance apps with good UX. The only advice I have heard from &quot;open web&quot; guys so far is to use transpilers (thanks very much). Xamarin and Mono seem to be the only organization that tries to give developers what they are asking for. It&#x27;s a shame that they have to charge, but it&#x27;s a reality.",2013-11-27 17:47:42,6809752
526,"I&#x27;m going to be a bit nit-picky, but C# isn&#x27;t a vendor-specific language. There is also the mono implementation which is very very good, and doesn&#x27;t lag too far behind the .NET implementation. Xamarin is a decent example of writing C# and targeting multiple platforms.<p>That said, there are better languages for cross-platform development, but that might not be a concern for a large number of companies and people.<p>Locking yourself into a single language is the wrong thing to do regardless, and is what most of the answers in the link suggest.",2013-11-28 23:55:16,6817172
527,"Native, but with the use of C# (Xamarin &#x2F; Mono).<p>And I don&#x27;t think native takes more time. Debugging is much easier with native apps (imho).",2013-11-29 14:02:46,6819400
528,"I&#x27;m using Xamarin.iOS and Xamarin.Android for a modest app. I&#x27;ve already spent about half a year on the Android version, with special care to have all logic in a separate layer. The iOS version had catched up in 2 weeks, from scratch.
We hired a second guy for that, who had no C# experience (but more on iOS) just before I went on a 2 week holiday I just got back from.<p>Needless to say: Xamarin is the perfect mix of cross platform and native for us.",2013-11-29 14:07:17,6819411
529,"Native, using Xamarin. Native apps still give users the most optimal UI. Using Xamarin work can be reduced, because a big part of the code can be shared between platforms. Code for all platforms is written in C#. Xamarin still gives developers the option to wrap libraries written in e.g. Java or Objective-C for use in the apps.",2013-11-29 14:46:06,6819538
530,"Here&#x27;s what I&#x27;ve tried (mostly just for kicks) and my thoughts:<p>1. Native (iOS&#x2F;Android)<p>2. Native (iOS&#x2F;Android) with some content in webviews<p>3. PhoneGap (iOS &amp; Android, cross platform, same app)<p>4. Xamarin (iOS)<p>5. RubyMotion (iOS)<p>I recommend 1 &amp; 2 if you have the resources (time to learn native iOS&#x2F;Android or an experienced developer available). A good approach is to write all the structure&#x2F;navigation natively and individual content in webviews. LinkedIn&#x27;s mobile team uses this technique exhaustively.<p>Xamarin and RubyMotion (4 &amp; 5) are both great 2nd choices if you dislike the Objective-C &#x2F; Java languages or your team is well versed in C#&#x2F;ruby, but you&#x27;ll still have to learn the SDKs. There isn&#x27;t much you can&#x27;t do in these frameworks that you could do &quot;natively&quot;, since you&#x27;re still hooking into the native runtimes (loosely speaking). Xamarin is a bit more stable than RubyMotion, imho.<p>I&#x27;d stay away from PhoneGap if possible. My main takeaway is that &quot;write once, run everywhere, sdk agnostic&quot; is a pipe dream. You&#x27;ll be disappointed when you&#x27;re investing tons of time in the last 10-20% of development, working with fringe cases on different platforms. If you find yourself considering PhoneGap, consider whether or not being on the App Store is necessary at all, or if you can get away with a standard web app through the browser.",2013-11-29 14:46:54,6819541
531,"I think you&#x27;re right to make this distinction. Titanium doesn&#x27;t belong in the &#x27;wrappers&#x27; family and would be better grouped with other &#x27;cross-platform native&#x27; solutions like Xamarin [1], perhaps a 4th category in parent&#x27;s list.<p>[1] <a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>",2013-11-29 15:37:49,6819751
532,"Titanium is still not quite the same as Xamarin. Xamarin cross-compiles to fully native code from my understanding. Titanium, on the other hand, has JavaScript-to-native bindings i.e. a TiView is a JavaScript object which proxies UIView on iOS.<p>All business logic is still running in JavaScript. In fact, Titanium spins up a V8 engine just to run your app. This may be fine for the most simple apps, but if you need to kick off a long running operation to a background thread, for example, you&#x27;re in for some gymnastics.<p>I&#x27;d rather have Grand Central Dispatch, CoreGraphics, CoreAnimation, etc. all at my disposal. Using Titanium felt very restrictive. Their API is a one-size-fits-all between iOS&#x2F;Android&#x2F;etc. As soon as you want to step out of that least common denomination, you&#x27;ve got to write native modules. Which, if the people on your team don&#x27;t know native development, can be a problem.",2013-11-29 16:59:46,6820094
533,"That risk is similar to what Xamarin faced, and evidently they were fund-able.",2013-11-30 18:37:31,6824003
534,"SEEKING WORK - Remote &#x2F; Russia, Moscow<p>Will build your MVP on C# Asp.Net MVC + MS SQL Server
(as well as html + less + js + bootstrap, etc.) from the ground up.<p>Latest project: <a href=""http://geekjob.ru"" rel=""nofollow"">http:&#x2F;&#x2F;geekjob.ru</a><p>Clean &amp; maintainable code guaranteed, lots of wep apps implemented and on the way.<p>Also: iOS&#x2F;Android&#x2F;Windows Phone apps on Xamarin &#x2F; C#<p>contact roman.pushkin &#x2F; at &#x2F; gmail",2013-12-01 16:57:12,6828040
535,"Hobby wise: Haskell, Rust, Nimrod, Haxe<p>Shipping code: Go, Erlang, C++11 (avoiding legacy), F# (with Xamarin)<p>I program in many more, but those are probably my top 8 right now.",2013-12-02 07:59:15,6832408
536,"Tail calls are actually rather un-optimized in .NET. F# avoids them as much as possible. F# used to emit tail calls any time it could, but it hurt performance. IIRC, tail calls were also ignored in many areas prior to v4 (and they still have some limitations IIRC). The JVM could implement tailcalls via analysis; the tail prefix isn&#x27;t truly needed.<p>But Xamarin&#x27;s porting of Java to C# to run Android on Mono without the JVM did show a rather large perf increase. I&#x27;d assume that&#x27;s mostly generics eliminating boxing.",2013-12-03 17:20:39,6841650
537,I understand your point. Consider this: using Xamarin you can get native performance on iOS and better-than-Dalvik performance on Android. Is there a good tool chain for that in JVM&#x2F;LLVM world that supports Scala?,2013-12-03 17:38:57,6841779
538,Or just forget the pig with lipstick and get the hot model - Xamarin.,2013-12-03 22:58:14,6843815
539,"I&#x27;d love them to do a Mono &#x2F; .NET IDE so that I wouldn&#x27;t have to use Xamarin Studio on Linux &#x2F; Mac anymore. Actually, I&#x27;m going to see if I can go put this on a wish list somewhere...",2013-12-03 23:31:45,6843984
540,"Yes, but Xamarin Studio isn&#x27;t supported on Linux: <a href=""https://bugzilla.xamarin.com/show_bug.cgi?id=142"" rel=""nofollow"">https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=142</a>",2013-12-04 07:13:12,6845488
541,"Have you tried MonoDevelop? Its still being actively enhanced by Xamarin.<p><a href=""http://monodevelop.com/"" rel=""nofollow"">http:&#x2F;&#x2F;monodevelop.com&#x2F;</a>",2013-12-04 09:36:36,6845914
542,"Now, this is pie-in-the-sky thinking, but I&#x27;d love to see something like Xamarin, that uses JS (for logic) and HTML&#x2F;subset of CSS (for presentation) that builds cross-platform using native widgets.<p>Hey, one can dream, can&#x27;t they?",2013-12-04 15:11:18,6847318
543,"I think this will stay a dream for a very long while. If Xamarin would create controls based on the lowest common denominator of each platform (with regards to functionality), the capabilities of said controls would be very limited indeed, likely only useful for the most basic of apps.",2013-12-04 15:18:40,6847367
544,"Mmm, yeah that&#x27;s a good point, I didn&#x27;t think that quite through, and to be honest I&#x27;ve not used Xamarin myself. How does it handle the UI layer? Is it re-done for each platform, using C# but with the Android UI and iPhone UI classes?",2013-12-04 16:08:50,6847796
545,"Xamarin actually ported Android to C#:<p><a href=""http://blog.xamarin.com/android-in-c-sharp/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;</a><p>And has some cute benchmarks to show off for it.<p>But go one more level deep: Despite Microsoft&#x27;s Community Promise, many places and legal teams will still view a potential threat if MS has a copyright on APIs used in Mono (not to mention patents).<p>It&#x27;s a great win-win for Microsoft. They get to trumpet their PR and gain face with open source people, as well as deflect some criticism. But they know it&#x27;ll still not hurt them as much as if they officially blessed Mono with a full, proper, transitive license.",2013-12-04 21:36:41,6850411
546,Xamarin is now an official Microsoft partner as announced on Visual Studio 2013&#x27;s launch.,2013-12-05 13:53:28,6854344
547,"They are the official way supported by Microsoft to target iOS and Android with .NET.<p><a href=""http://xamarin.com/pr/xamarin-microsoft-partner"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;pr&#x2F;xamarin-microsoft-partner</a>",2013-12-06 06:25:46,6859725
548,"Not just mono, but Xamarin and Unity are huge, if interrelated uses of C#.",2013-12-13 06:45:24,6899401
549,"sure you do, Xamarin.iOS.",2013-12-14 16:18:00,6906029
550,"&quot;Runtime generics&quot; (they are called reified generics btw) is one of the things that keeps the CLR from being a multi-language VM like it was advertised, as at the bytecode level they are very hard to work around. That&#x27;s one of the reasons for why dynamic languages on the CLR never took off and that&#x27;s why F# has two generics systems in the same language. I&#x27;m much happier with the generics type system provided by Scala - it&#x27;s more flexible, allows for more type safety (so there are far, far less instances in which one needs to do isInstanceOf checks), you also get reification by receiving TypeTags and Scala can also specialize the implementation for primitives if you want it. You get most of the benefits and more, without butchering the runtime. The easiness with which you can generate bytecode on the JVM has been one of the reason for why the JVM has been preferred by language designers.<p>Reactive Extensions are very nice. I&#x27;m experimenting with the Java port, RxJava. Actually I use RxScala, the Scala interface. However, for me they are of limited utility for my current usecase, because in comparison with Iteratees (a concept coming from Haskell, borrowed by Scala and championed in Play2), Rx Observables are very error prone to issues such as backpressure, whereas Iteratees are safe by design. So on one hand, Iteratees are better for handling streams, such as http requests&#x2F;responses, handling big files and so on, while Rx Observables are better for publishing events to event listeners. I can see myself using Observables though. Erik Meijer is now contributing to RxJava btw.<p>The C# continuations are <i>delimited continuations</i>, or partial continuations. They are pretty cool, not arguing about it. But in Scala, the API for the standard Future, is much, much nicer than the API of Tasks in C#, therefore working with Futures directly is more comfortable. Plus, Scala&#x27;s philosophy is to empower the developer to build on the same &quot;magic&quot; that the compiler uses, therefore instead of introducing LINQ or Async, Scala 2.10 introduced Macros. As a result, LINQ and Async are now possible as libraries. Here&#x27;s DB LINQ (see the direct embedding tab): <a href=""http://slick.typesafe.com/"" rel=""nofollow"">http:&#x2F;&#x2F;slick.typesafe.com&#x2F;</a>  ; and here&#x27;s Async, which will be included in the standard library, but it&#x27;s just a library based on macros: <a href=""https://github.com/scala/async"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;scala&#x2F;async</a><p>On Value Types, there&#x27;s nothing ground-breaking about it. On one hand they are great and it would have been cool to have value types on the JVM. There are proposals to include value types that people experiment with in OpenJDK. On the other hand, the JVM being more restrictive about managing memory, gave birth to the most advanced garbage collectors in mainstream usage. C#&#x2F;CLR is great when a low overhead is required, such as on mobile devices, but in a server-side context no GC-enabled language can beat the JVM.<p>On syntax, it&#x27;s true that Java is an abomination. However this gave birth to multiple languages that are flourishing and you can&#x27;t say the same thing about .NET ... Scala, Clojure, JRuby, Jython, Groovy and Rhino are examples with flourishing communities and ecosystems. Similar efforts have been happening for the CLR, but they never made it or are moribund, except maybe F#.<p>I did want to use C# several times, as I view it as a mixed-bag language, as in a language with comfortable high-level features that also has some low-level stuff, which is pretty cool on top of resource constrained devices. And I definitely prefer C# over Java (thank God for Scala and Clojure). Unfortunately the platforms I build upon are mostly Unix and I prefer to build on top of open-source as I&#x27;m the kind of developer that likes being in control. And in spite of the best efforts of those people from Xamarin, or the recent moves from Microsoft to open-source some stuff, .NET doesn&#x27;t really have an open-source community and it&#x27;s very Windows&#x2F;Microsoft oriented.<p>It&#x27;s a pity because it could have been much more than it currently is. And maybe it will, as I&#x27;m seeing some encouraging signs, like Microsoft partnering with Xamarin.<p>We tend to treat languages like they are football teams. We really need to learn from each other and build on top of each other ideas. Cross-pollination is healthy. Conservatism is not. If we jumped between platforms more often, we wouldn&#x27;t be separate communities.",2013-12-14 20:18:10,6906946
551,"&gt; <i>There are C# plugins for Eclipse and IntelliJ as well</i><p>No, there aren&#x27;t. And MonoDevelop has gotten better, Xamarin is doing a good job, but it&#x27;s still a far cry from IntelliJ IDEA. If you want to target Mono, spare yourself the effort and just use Visual Studio.",2013-12-14 20:24:58,6906973
552,"When you write code do woodland creatures surround you in amazement of your sheer awesomeness? Does harp music spontaneously burst from the heavens when you start a new project? After publishing your code on the web, has the internet ever called to personally thank you? Then Senico needs you!<p>Senico is a trendy tech firm HQed in Dallas&#x27; Deep Ellum district. Our team works on both large enterprise projects for the Fortune 500 as well as innovative startups. We need talented developers specialized in modern web applications to join our team and help us create web and mobile applications so beautiful that mother nature develops an inferiority complex.<p>We&#x27;re currently looking to hire NodeJS and C#&#x2F;Xamarin developers. You will have to work locally in Dallas (no remote&#x2F;telecommute).<p>We offer all the normal corporate perks:
- Rock climbing wall
- Free energy drinks and soda
- Beer on tap
- Flexible work hours
- Quadcopter battles
- Coding competitions
- Weekly lunches and happy hours
- Jam sessions on our drumset, guitar, keyboard, and bass
- Oh and paid medical, vacation, yadda yadda yadda.<p>If you&#x27;re wanting to impose your masterful skills on large scale enterprise and innovative start-up projects, then email your amazing resume to jordan.jenkins@senico.com. Include samples of your work so that we may weep at your staggering magnificence!<p>Also, to make sure you&#x27;ve read this post and aren&#x27;t just slinging your resume all over the interwebs, include a link to one of the ugliest websites you&#x27;ve ever seen.<p>- The Senico Team",2013-12-17 22:17:37,6924384
553,"I find it funny that 1 developer advocates building for Android first, because it&#x27;s harder, while others seem to advocate iOS first, because it is easier :)<p>Personally I&#x27;d say go iOS first (because it&#x27;s an easier platform to develop for) and perhaps once the basics are done for the iOS app, start building the Android app side by side. Use Xamarin to build a shared core for both iOS &#x2F; Android (think in terms of network communications, business logic, data parsing, perhaps SQLite storage etc...)",2013-12-19 13:15:39,6934432
554,"Of course it is more difficult, if you use Xamarin. Or other framework, that promises cross-system compatibility and subtly fails on all targets. Talk about self-inflicted pain.<p>If you really want some common, shared codebase, use something like j2objc, where it ends up native to both platforms.",2013-12-19 15:21:45,6935097
555,The best thing about Objective-C are the API&#x27;s. The API&#x27;s are really great (no matter if you use them directly through Objective-C or through Xamarin&#x27;s C# layer). In my opinion the Cocoa Touch &#x2F; Foundation API&#x27;s are of comparable quality as Microsoft&#x27;s .NET (I love them both).<p>Personally I find the Android API&#x27;s harder to use.,2013-12-19 15:33:38,6935172
556,"<i>So a game controller is a (rather terrible) mouse?</i><p>Who said anything about a mouse? I haven&#x27;t use a mouse to interact with my computer (out side of games) in years. Windows 8 &quot;modern&quot; apps are designed to work well in touch environments, and they succeed at that. And yes, there is a lot of overlap between how you use a touchscreen device and how you use a controller. Many UX concepts are the same when using either input method.<p><i>This information density thing comes up a lot, with absolutely nothing to demonstrate or prove it.</i><p>Perhaps we have a different definition of information density. The Windows Phone home screens can provide you with a lot of information without launching a single app. iOS provides a wall of icons to launch apps. Android has widgets, and some of them are beautiful and work well. Live tiles are much more consistent though and trivial to add to your application which means they are included more often.<p><i>XNA Studio is yet another example of unifying technologies in poorly considered ways, and that alone close to killed independent game creation on the Xbox.</i><p>No, Microsoft policies and practices are what almost killed independent game creation on the Xbox. XNA was a great engine for building games and that should be evident by the interest and support around MonoGame. MonoGame is probably the best engine to build a cross platform game at this point. Using MonoGame you can support iOS, Android, Windows, OS X, Linux, Windows 8 Store, Windows Phone 8, PlayStation Mobile, and OUYA. I wouldn&#x27;t be surprised if Xbox One and Playstation 4 were added to that list soon.<p><i>Hell, they care more about abstractions that make it easier to port between the Xbox One and PS4, and eventually to iOS and Android.</i><p>The abstractions already exist for iOS and Android. Using Xamarin you can use C# to build apps for iOS, Android, Windows (desktop and mobile) and OS X. As I said above, MonoGame will likely fill a gap enabling you to write a game that targets both PS4 and Xbox One. Granted, AAA titles aren&#x27;t going to be interested in MonoGame because they are trying to squeeze every last drop of performance out of the system, but it&#x27;s a fantastic option for more causal or indie games.",2013-12-19 22:24:20,6938366
557,"I started SourceDNA because I wanted to build a highly scalable, cross-platform binary similarity engine. We can dump in libraries and apps from all over and discern patterns in their code.  We&#x27;ve been scanning thousands of mobile apps and finding what&#x27;s inside, and we wanted to make this data available now for others to explore.<p>Clickable link: http:&#x2F;&#x2F;sourcedna.com&#x2F;stats&#x2F;<p>This interface lets you see which SDKs (ads, analytics, optimization, etc.) or cross-platform tools (Unity, Adobe AIR, Xamarin, etc.) were used to create the top 500 free apps on both iTunes and Google Play app stores. You can select an individual SDK vendor and the apps containing their code will be listed at the bottom. You can also click on an individual app to see what&#x27;s inside it.<p>I&#x27;d love to hear how you&#x27;d use something like this and if you have suggestions on how to improve it. If you&#x27;re interested in the technical details of how we managed to do all this, I&#x27;m happy to talk about them here.<p>Nate Lawson, Founder",2013-12-20 17:45:32,6942748
558,"If idiomatic and flawless user experience is important, but you still want to at least re-use your business logic then your best bet is Xamarin.",2013-12-25 16:08:52,6963243
559,"I have to agree - if anything there is a greater move away from JavaScript towards native platforms, although I think that C# via Unity and Xamarin.iOS&#x2F;Xamarin.Android is gaining significant popularity. C++ does technically work on both iOS and Android, but I think its use outside of games is fairly small - Google has bold text on the NDK download page saying it won&#x27;t be useful for many applications and Xcode&#x27;s support isn&#x27;t anywhere near as good as its support for Objective-C.",2013-12-26 15:19:04,6966480
560,"The Android NDK is usually used for applications that don&#x27;t use the Android API&#x27;s (which are all Java). Most applications on Android is written in a JVM-based language. The sort of applications that would typically use the NDK are games, emulators, VMs (like Xamarin.Android) and the like.<p>ObjC is also slow. Anytime you write something performance sensitive in ObjC, you usually drop down to pure C or pure C++. Luckily, since valid C is valid ObjC, this is rather easy.<p>Javascript and HTML is actually a great fit for mobile, but there are two complications. 1) You will have to mimick the UI of the native platform. 2) Mobile platforms have sub-par JS engines. iOS don&#x27;t allow JITs outside Safari (even when you use a webview in your ObjC app) which in turn makes JS-based apps in iOS slow. Android has in general had a pretty sucky webview, but that is getting fixed in 4.4 with chromium being the default engine.<p>JS is getting better everyday on the mobile though, I would be surprised if not alot of people were using JS for apps in the coming years.",2013-12-26 16:21:22,6966708
561,Very true about Xamarin - that has exploded in the last six months or so.,2013-12-26 18:05:16,6967146
562,"I&#x27;m not sure who you&#x27;re replying to or if I&#x27;m reading your post right, but Rdio&#x27;s mobile app is not a native wrapper around HTML5, it&#x27;s built on top of Xamarin&#x27;s stack, which provides API wrappers around the native platform.",2013-12-27 21:25:59,6972693
563,"This again, is wrong. Android was made to run managed code from the beginning, it&#x27;s designed around that very fact. Let me try to enlighten you.<p>In Android, every process spins up its own Dalvik VM. Yes, Dalvik VM, not Java VM, as Android doesn&#x27;t run Java. The android development tools does contain a Java Bytecode to Dalvic Bytecode converter (dex), which is why JVM based languages run on Android, as long as you don&#x27;t generate Java bytecode on the fly (which several dynamic languages do).<p>Anyway, each process spins up it&#x27;s own Dalvik VM, which get&#x27;s to run your Application. There really isn&#x27;t any exception to this, which means that even if you create a program using the NDK, you will still need to do some Java to set up an activity that in turn runs the native code.<p>Because calling native code through a foreign function interface (FFI, known as JNI on the JVM) creates some overhead, Android does as little of this as possible. This is why most the UI API is implemended directly in Java&#x2F;Dalvik-Bytecode, and only the low-level drawing API is in native code (or implemented directly in the VM, not certain).<p>If you program an app using only the NDK, you therefore won&#x27;t have access to the native UI API, meaning you will have to write glue-code to call the Java API, or use your own GUI API (like Qt).<p>&gt; Because of that brilliant idea to simply ignore what an OS provides, they have re-implemented everything its own, proper way - famous Strings, Calendar, UTF-32, you name it.<p>Right... So normally, out of the box, you will have access to wchar, socket, time.h and math.h. You don&#x27;t really re-implement this in the JVM, you write bindings to the low-level functions, and then write abstractions (UTF-16, Strings, DateTime ...) on top of that. The actual bindings are usually generated using Swing or something like that.<p>&gt; So, the developers of complex (read: real-world) apps such as FB have realized that this unnecessary Java layer can&#x27;t be used for anything ...<p>Hopefully, I&#x27;ve been able to explain why cutting out the Dalvik&#x2F;Java layer brings more pain than it&#x27;s worth. Most applications on Android are running on the Dalvik&#x2F;Java VM. The exceptions are VMs (Like Xamarin.Android) and OpenGL applications, like games, which require more fine grained controll of memory allocations to avoid garbage collections in the middle of a render-loop.<p>Just in case you are not convinced, here is Google&#x27;s own warning on the use of the NDK for app development.<p>&quot;Before downloading the NDK, you should understand that the NDK will not benefit most apps. As a developer, you need to balance its benefits against its drawbacks. Notably, using native code on Android generally does not result in a noticable performance improvement, but it always increases your app complexity. In general, you should only use the NDK if it is essential to your appnever because you simply prefer to program in C&#x2F;C++.&quot;<p>P.S: Facebook did use HTML&#x2F;JS for their app for a while, but switched to the native SDK because the HTML-based app was to slow. The native SDK (Java) seems to suit them just fine.<p>P.P.S: Check out this link to see why using the NDK is a pain in the <i></i><i></i>. <a href=""https://mflerackers.wordpress.com/2013/08/25/using-the-ndk-and-jni-to-build-android-applications/"" rel=""nofollow"">https:&#x2F;&#x2F;mflerackers.wordpress.com&#x2F;2013&#x2F;08&#x2F;25&#x2F;using-the-ndk-a...</a>",2013-12-27 22:17:15,6972857
564,"<p><pre><code>    The idea that MS is out to envelope developers by enticing 
    them into a language that requires massive cash outlays or
    *ongoing licensing fees* is not supported by reality.
</code></pre>
...<p><pre><code>    The only requirement being that they run on a Windows OS
</code></pre>
Mhm.<p>Yes, I suppose you <i>can</i> run <i>some</i> C# on a non-windows machine, but it&#x27;ll have bugs, break, some libraries won&#x27;t be supported and there&#x27;s no tooling support.<p>...but don&#x27;t worry, you can happily tell everyone how free and open source it is. That&#x27;s really important!<p>(by comparison, have a look at go which actually bothered to make a commitment to supporting various platforms; and don&#x27;t even start with that whole &#x27;xamarin is awesome&#x27; stuff; yes it is, but it in no ways acts as a caveat for microsoft&#x27;s &#x27;we&#x27;ll make the spec public, that&#x27;s good enough right?&#x27; behaviour)",2013-12-28 11:00:39,6974699
565,"C# developer here, also love the language.<p>I completely agree and I only hope that this new <i>thing</i> will be just as good as C# but fully cross-platform. It would be great.<p>&gt;mobile<p>Xamarin is pretty solid, although it costs a lot.",2013-12-28 11:10:24,6974717
566,"Xamarin has been nice so far; it&#x27;s not that expensive compared to any serious project, but it should be cheaper to capture larger audiences. The free version is very crippled even for trivial projects.",2013-12-28 11:25:06,6974737
567,"Don&#x27;t bother. No one is maintaining the cross platform GTK bindings (or .Net MVC framework) and basically no one cares about it. It&#x27;s just getting more and more out of date.<p>Look at an actively maintained solution like Xamarin or Unity; Xamarin lets you write your UI specific code for each platform; Unity lets you share UI across platforms but you won&#x27;t get a &#x27;native&#x27; look and feel on any.<p>For both of these you won&#x27;t be able to use the majority of existing .Net infrastructure (nlog, nject, nhibernate, etc) because they are locked into the windows CLR, but there are a few ports and you can often get away with compiling the source from codeplex yourself (the prebuilt DLLs just wont work).<p>(Unfortunately, porting your existing application is absolutely out of the question in most cases, for the reason above. Perhaps if you&#x27;ve carefully isolated concerns it might be possible...)",2013-12-28 13:42:05,6974958
568,"I am big C++ fan, but i understand that the C++ language is going into nowhere. It&#x27;s like &quot;all in one&quot; solution that is too big, too hard to learn and use nowadays. I&#x27;ve been using C++ for more than 10 years, still many things are shocking me ))<p>I am sure C# is the &quot;Next Main Desktop App Dev. Language&quot;. I really wish MS would OPEN-SOURCE it one day. You can read article in my blog about that here (really short): <a href=""http://anthonyakentiev.github.io/blog/2013/12/08/what-if-see-sharp-become-open-source"" rel=""nofollow"">http:&#x2F;&#x2F;anthonyakentiev.github.io&#x2F;blog&#x2F;2013&#x2F;12&#x2F;08&#x2F;what-if-see...</a><p>I wish C# will be used freely everywhere - on Apple, on Android, on Linux... Really - Mono&#x2F;Xamarin does not have a full .NET&#x2F;CLR&#x2F;C#&#x2F;frameworks support.",2013-12-28 14:40:51,6975070
569,I am sure I would have similar issues with Java on *nix because of my lack of experience with both. Cross-platform is definitely a major C# strength at least in the mobile space given the power of Xamarin tool chain. Android and iOS do matter and they are not Windows.,2013-12-28 19:08:31,6975877
570,"I recently worked on a small-ish desktop app that shuttled data between a HID USB device and a web service. We targeted Windows and OSX.  The UI portion of the application was very simple and I still found the Xamarin&#x2F;GtkSharp combination buggy and frustrating.<p>We used Wix for the Windows installer and the included OSX tools to make the Mac installer (<a href=""http://s.sudre.free.fr/Stuff/PackageMaker_Howto.html"" rel=""nofollow"">http:&#x2F;&#x2F;s.sudre.free.fr&#x2F;Stuff&#x2F;PackageMaker_Howto.html</a> was helpful).<p>A TeamCity build system using NuGet worked fine for building both flavors, though the Mac build was really just a shell script that TeamCity launched. We used the Xamarin compiler for Mac.<p>In hindsight I wish we had taken (found?) the time to go all the way and write separate OSX specific UI code and not used GtkSharp. And not require the install of the Mono framework for Mac users-- that really kills the experience. Supposedly you can bundle in Mono with the Xamarin .Mac product but we haven&#x27;t found the time to get that far yet.<p>*EDIT: I failed to mention explicitly this was C#&#x2F;Mono. Also for those interested I used <a href=""http://www.signal11.us/oss/hidapi/"" rel=""nofollow"">http:&#x2F;&#x2F;www.signal11.us&#x2F;oss&#x2F;hidapi&#x2F;</a> as a wrapper around the Mac HID USB APIs and it worked fine.",2013-12-29 01:30:39,6977694
571,"&gt; C# only works on Windows<p>That&#x27;s not true.<p>&gt; yeah, I know about Mono<p>And you know it :-). I agree if you want to express that C# on Linux is a niche. But there&#x27;re big projects using it in production. Have a look at the Mono project page. Also, have a look at Xamarin.<p>&gt; can&#x27;t do mobile, can&#x27;t do big data, probably won&#x27;t work very well for scientific computing<p>There&#x27;s no language that does all these things well. Java is for Android and big data suited, but not for scientific computing. Fortran, C and C++ are great at scientific computing, but certainly not for mobile (except Qt on niche plattforms). Objective C is not appropriate for big data and scientific computing. Rust and Go aren&#x27;t the can-do-it-all languages &#x2F; ecosystems either.<p>C# and the .NET ecosystem are actually second to Java in terms of reach and versality. Taking Xamarin into account C# has the top spot for mobile.<p>&gt; equally I worry that it&#x27;ll be used as a way to generate patents to prevent the ideas being used elsewhere<p>FUD",2013-12-30 05:35:17,6983208
572,"SEEKING WORK - Remote&#x2F;London. May consider relocating.<p>F#
C#
Xamarin (iPhone&#x2F;Android development)
ASP.NET MVC
Websharper
Livescript&#x2F;Funscript<p><a href=""http://www.perfectshuffle.co.uk"" rel=""nofollow"">http:&#x2F;&#x2F;www.perfectshuffle.co.uk</a>",2014-01-01 15:20:06,6995171
573,"There is Hadoop, Microsoft have been pursuing it aggressively recently.<p>SciPy type stuff is best handled using F#, which also works on Mono, and has some features that I haven&#x27;t seen in any other languages (e.g. Type Providers).<p>There are multiple .NET web frameworks, including Microsoft&#x27;s own ASP.NET MVC and Web API, but also OSS efforts like FubuMVC, Nancy, ServiceStack, Simple.Web and more, most of which work as well on Mono as on MS .NET.<p>As you say, the Node story on Windows has improved lately, and most current languages work as well on Windows as on any other platform.<p>C# itself is probably second only to JavaScript in terms of cross-platform development: Xamarin for Mac and mobile; Mono for Linux (yes, it&#x27;s incomplete, but Linux people should be used to that); Unity for game development across consoles, mobile devices, web and traditional PCs. By &quot;cross-platform&quot; I don&#x27;t necessarily mean write-once-run-everywhere, which results in lowest common denominator dreck anyway, but the ability to reuse your skills and some code in many different environments and domains.",2014-01-01 17:46:50,6995648
574,Or you could pay for Xamarin and avoid having to deal with Java.,2014-01-04 12:23:20,7010847
575,"The problem with Java 8 on Android is JDK 7, as it introduced invokeDynamic that will have to be supported by Dalvik, plus I think the additions to the standard library are also a work in progress. It will happen though.<p>For Android you can use Scala and many people do it. There&#x27;s a SBT plugin for painless setup and you can work with IntelliJ IDEA as your IDE. Some people even go for Clojure. For iOS, there&#x27;s RoboVM [1] and you can also use that in combination with Scala - it&#x27;s very promising.<p>Java the language sucks, but the JVM and the ecosystem are great and you&#x27;ve got mature languages designed to run on top of it, languages with big communities behind them. Of course, learning a new language and finding the best stuff in a huge ecosystem where choices abound takes time and patience, but I think you&#x27;ll learn to appreciate it - or if you like C# so much, there&#x27;s always Xamarin, though it&#x27;s a little pricey.<p>[1] <a href=""http://www.robovm.org/"" rel=""nofollow"">http:&#x2F;&#x2F;www.robovm.org&#x2F;</a><p>[2] <a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>",2014-01-04 21:55:14,7013128
576,"Notice how everything he writes about mobile development is wrong?<p>&gt;<i>First of all, you have to do your mobile development twice</i><p>Nope, there are plenty of frameworks with large user bases, both OSS and with corporate backend to do it once. From Xamarin to PhoneGap. Especially 2D game developers are spoiled for choice.<p>&gt;<i>The devices are memory-starved, CPU-starved, and battery-starved.</i><p>The devices have never been better (obviously), and currently pack a 2005 era laptop power in the size of pack of cards and 1GB or more of memory. And the battery lasts the whole day, at least with the devices I&#x27;m familiar with.<p>&gt;<i>You dont get a choice of languages; if you hate both Java and ObjC, get another job.</i><p>Really? Because there are iOS bindings for all popular languages (and I&#x27;ve used several) and I&#x27;d guess there are Android bindings too. Now, one can say that to be a great developer you also have to know Obj-C (which I&#x27;m familiar with), but that&#x27;s in no way a prerequisite, just a nice-to-have. Plenty of people have built amazing things without learning Obj-C.<p>&gt;<i>Unit testing is a bitch.</i><p>Haven&#x27;t found it such. Except if he means with all the Android flavors? That&#x27;s orthogonal and inherent to mobile.<p>&gt;<i>Fortunately for your users but unfortunately for you, the UX-quality bar on mobile is high and there is no fast or cheap way through; it requires inspiration and iteration.</i><p>And that belongs in a list of reasons &quot;mobile suchs&quot; (sic), why?<p>&gt;<i>You cant make money. Seriously, Apple is always talking about the billions and billions they pay out of the app store, so why is it that I dont know anyone whos making serious money on mobile apps?</i><p>Perhaps you don&#x27;t have a lot of friends? Or friends in the right circles? Because for a market that &quot;can&#x27;t make money&quot;, they just paid $10 billion to developers.",2014-01-09 10:14:42,7029656
577,"I want to see some good Xamarin &amp; PhoneGap apps, honestly the ones I&#x27;ve seen don&#x27;t come close to natively built ones.  Also if you are developing a game, you&#x27;d better stay far away from UIKit and do everything in OpenGL if you hope to get the same type of performance on Android using a translation tool.<p>The article is pretty much spot on.  For most people who want to write great software, the client side is currently a mess.",2014-01-09 10:21:28,7029669
578,"There&#x27;s an App Showcase on Xamarin&#x27;s website: <a href=""http://xamarin.com/apps"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;apps</a><p>Out of those, I use Rdio daily and played Bastion a lot and they work great. I didn&#x27;t know they were made with Mono until now.",2014-01-09 10:30:15,7029695
579,"&gt;<i>I want to see some good Xamarin &amp; PhoneGap apps, honestly the ones I&#x27;ve seen don&#x27;t come close to natively built ones.</i><p>I don&#x27;t know, what&#x27;s bad about these <a href=""http://xamarin.com/apps"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;apps</a> , e.g. Rdio which I&#x27;ve used and is fine?<p>Xamarin is a binding to Cocoa and other libs, it doesn&#x27;t recreate any UI itself. So the &quot;don&#x27;t come close to natively built ones&quot; doesn&#x27;t even make sense from a technical standpoint. Not to mention that C# is compiled AOT.<p>&gt;<i>The article is pretty much spot on. For most people who want to write great software, the client side is currently a mess.</i><p>The article isn&#x27;t even about those people in the first place. He even laments that &quot;UX-quality bar on mobile is high&quot; as a reason why mobile sucks.",2014-01-09 10:35:09,7029708
580,"this is awesome!<p>btw if you plan to make an iOS app, maybe you&#x27;ll be delighted to know that you can apply as an open source developer to free Xamarin licenses: <a href=""http://resources.xamarin.com/open-source-contributor.html"" rel=""nofollow"">http:&#x2F;&#x2F;resources.xamarin.com&#x2F;open-source-contributor.html</a><p>(I guess writing F# would make you happier than ObjectiveC, given that you wrote your server side in Haskell ;)",2014-01-09 10:40:00,7029726
581,"Xamarin and Phonegap are completely different beasts. You are thinking about Phonegap now. Xamarin ones are natively built ones; you use Apple classes to build everything but just in C# instead of Objective-C. So you have to rebuild the frontend twice indeed for Android and iOS but it does look and function &#x27;native&#x27; as if you did it with Xcode.<p>Phonegap =&gt; not so much; most just works like shit, but you only have to build once for a lot of platforms. It&#x27;s a big reason for the proliferation of extremely bad apps in the Play store though; just wrapping of a website or form and putting it in as app.",2014-01-09 10:43:43,7029736
582,"&gt; Nope, there are plenty of frameworks with large user bases, both OSS and with corporate backend to do it once. From Xamarin to PhoneGap. Especially 2D game developers are spoiled for choice.<p>With Xamarin you need to build the GUI twice as you are using the native classes per platform to build them, hence the excellent results.<p>2D games is a whole different ballgame; there are indeed 100s of platforms for devving 2d games on anything. But I think we are talking about apps; games is a solved problem already with Unity2D&#x2F;3D, Corona, Haxe and many others.",2014-01-09 10:46:54,7029745
583,"&gt; there are iOS bindings for all popular languages (and I&#x27;ve used several)<p>Care to list some, other than Xamarin and RubyMotion?",2014-01-09 10:48:59,7029751
584,"Which Xamarin apps that you&#x27;ve seen don&#x27;t look native?<p>As others have pointed out, Xamarin provides C# bindings for the native APIs. It is fundamentally different to Phonegap, which takes a lowest-common-denominator Java&#x2F;Swing approach.",2014-01-09 10:50:03,7029757
585,"There are iOS bindings for F# [1] with some level of support from Xamarin [2]. I&#x27;m not aware of any others.<p>There are <i>Cocoa</i> bindings for a number of languages [3], but I&#x27;m fairly certain they are desktop-only.<p>[1] <a href=""http://fsharp.org/use/ios/"" rel=""nofollow"">http:&#x2F;&#x2F;fsharp.org&#x2F;use&#x2F;ios&#x2F;</a><p>[2] <a href=""https://forums.xamarin.com/discussion/3465/f-language-binding-add-in-for-xamarin-studio-4-1-0"" rel=""nofollow"">https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;3465&#x2F;f-language-bindin...</a><p>[3] <a href=""http://en.wikipedia.org/wiki/Cocoa_(API)#Other_bindings"" rel=""nofollow"">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Cocoa_(API)#Other_bindings</a>",2014-01-09 11:21:41,7029837
586,"They are indeed for desktop. As Objective-C becomes better (and it does it pretty fast, it has covered two decades of language development from 1970s to 1990s in just 7 years), most of the amateur iOS languages bindings become stale.<p>There are currently no high-quality, production-ready, native 3rd party language bindings for iOS that I know of, except for Xamarin mentioned above and Unity family.<p>In iOS 7 though, there&#x27;s some activity in JavaScriptCore.framework on providing seamless integration between JavaScript and Objective-C.",2014-01-09 11:38:04,7029893
587,"No mention of Midori&#x2F;M# (unlike Rust).<p>&quot;The client-side mess  Things are bad. You have to build everything three times: Web, iOS, Android. Were talent-starved, this is egregious waste, and its really hurting us.&quot;<p>Not really, Xamarin did a good job of simplifying this (and you can use decent modern languages). HTML5&#x2F;CSS&#x2F;JS on the other hand is the real client-side mess - let&#x27;s hope we will see more PNaCl&#x2F;asm.js developments for non-game applications in 2014.",2014-01-09 11:41:28,7029903
588,"&gt;Browsers suck too.<p>I think browsers are great from a user perspective. Everyone knows browsers, they are familiar with using them, navigating with them and all importantly making purchases.
Coding with Javascript I agree can be like working with one hand tied behind your back, just because of its limitations, but you know what, loads of us can build apps with this and we can be guaranteed it will work on most devices!
I imagine Dart may provide a better playing field for the developer in the future.<p>&gt;Mobile sucks.<p>I tend to agree, although Xamarin and Titanium are trying to help.<p>&gt;UX-quality bar on mobile is high and there is no fast or cheap way through; it requires inspiration and iteration.<p>I think Microsoft went a lonq way with Windows 8 &quot;Metro&quot; style design to basically tell developers, &quot;build this way&quot; then we should have great consistency with UX across mobile app landscapes",2014-01-09 13:28:53,7030315
589,"This is one of the most ill-informed and circlejerky posts on HN I have ever seen. Most of the fallacies in the article have already been addressed, but I thought I needed to point these few relating to mobile out:<p>&gt; Mobile sucks. First of all, you have to do your mobile development twice. You dont get a choice of languages; if you hate both Java and ObjC, get another job. Unit testing is a bitch.<p>You obviously have never done mobile development, or have tried really hard to stay ignorant at what&#x27;s available to you. Have you heard of Xamarin, or saurik&#x27;s cycript?<p>&gt;Fortunately for your users but unfortunately for you, the UX-quality bar on mobile is high and there is no fast or cheap way through; it requires inspiration and iteration.<p>&gt; The right way to use the Internet is to click in the search box at the top of your browser and type in what you want, and find it, and click on it, and use it. But if the information or service or whatever that youre looking for has been sucked into mobile, you have to install the app, which means another level of search in the mobile-app store, where search isnt nearly as good as what Google and Bing provide.<p>...I&#x27;m not even going to bother addressing this.<p>&gt; You cant make money. Seriously, Apple is always talking about the billions and billions they pay out of the app store, so why is it that I dont know anyone whos making serious money on mobile apps?<p>I don&#x27;t know, maybe because everyone you know is a shit developer?",2014-01-09 13:45:28,7030381
590,"Sorry, I got Xamarin confused with Titanium, which was a pretty bad experience for me for the week that I tried it.  If I tried to do anything fancy, it was completely useless.<p>Also any time you are using 3rd party tools like Titanium &#x2F; Xamarin to develop these apps it comes with gotchas &#x2F; limitations that may not even be worth it in the end (it seems like Xamarin has less gotchas).  The main issue is that you still have to do UI twice in the end (iOS &amp; Android), and one more time for web.",2014-01-09 19:18:47,7032523
591,"I&#x27;ve done most of my development work in F# over the past few years. Most of that was on Windows, but I&#x27;ve done some cross-platform work using F# on Mono (on FreeBSD and Linux).<p>Overall, Mono isn&#x27;t as fast as the .NET CLR on Windows, but it has improved greatly over the past few years (since Xamarin took over development from Novell and hired a team of full-time developers); in fact, a couple of months ago I saw a post here on HN about an HFT firm who&#x27;d built their trading stack on Mono.<p>As for F#, it&#x27;s usually quite speedy, whether you run it on Windows or Mono (OS X, Linux, FreeBSD, etc.)",2014-01-11 21:21:33,7043797
592,Xamarin,2014-01-13 01:52:12,7048394
593,"I think it can work, though you have to be careful to avoid conflict with community goals.  It seems to work best when the &quot;premium services&quot; involve technical support or custom open source development, rather than closed-source code.<p>Canonical and Red Hat are examples of for-profit businesses that primarily build and distribute free software, including employing some of the developers and managing some of the open source projects they distribute.  I believe both make money primarily through &quot;premium services&quot; (especially &quot;enterprise&quot; support services).<p>Ximian was a for-profit company started by Nat Friedman and GNOME project founder Miguel de Icaza, which developed much of the GNOME code base for a while.  (It was later acquired by Novell.)  Miguel went on to found the Mono project and Xamarin, the for-profit company that leads development of Mono.<p>Qt, MySQL, InnoDB, and Berkeley DB were each developed in part by businesses using dual licensing models, where licenses for use with non-free-software were available for a fee.  (The original companies have since been acquired by Nokia, Sun, Oracle, and Oracle, respectively.  Sun was itself later acquired by Oracle.)<p>The author of SQLite earns income by providing commercial support and custom development services: <a href=""http://www.sqlite.org/support.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.sqlite.org&#x2F;support.html</a><p>The developers of CyanogenMod recently founded a VC-backed company to fund its development.  I&#x27;m sure there are a bunch more examples like this that I&#x27;ve forgotten or don&#x27;t know about.<p>I agree that a non-profit foundation has benefits for free software projects.  (I&#x27;ve been a developer on three projects associated with non-profits: Audacity, Debian, and Mozilla.)  &quot;For profit&quot; as I used it above may be the wrong label, though.  &quot;Taxable&quot; might be a better word in some cases.  If a company is privately held, then its owners can use it to pursue a mission other than maximizing profit.  For example, I&#x27;m employed by the Mozilla Corporation, a taxable entity that is a wholly-owned subsidiary of the non-profit Mozilla Foundation.  The Corporation has to pay taxes because of the nature of its income and spending, but its mission is still that of its sole shareholder, the Foundation.",2014-01-15 18:32:36,7065127
594,C#. It&#x27;s a modern multi-paradigm multi-type-system language.<p>Best choice if you can get Visual Studio (paid) along with ReSharper (paid).<p>Will let you target all mobile platforms via Xamarin (paid) (since you want to develop an app as opposed to a website).<p>If you want to get a prototype quickly rather than focus on code quality then one of the purely dynamic language options would also be OK.,2014-01-20 13:29:54,7089357
595,"I agree with most people here: stay healthy and keep learning new things. To me the learning process is quite fun every single time. And often you&#x27;ll find while learning that you don&#x27;t like some kind of technology, but at least you can reason why. But the few times you do like the new tech, you might expand your options to whole new horizons.<p>Currently I&#x27;ve learned:<p>- TI Basic (when I was very young, for the TI-99&#x2F;4a)<p>- LotusScript (ancient tech, yay!)<p>- Visual Basic (the horror!)<p>- Objective-C (cool language)<p>- C# (sweet language)<p>- Java (yuck! - the crappy version of C#)<p>- a bit of HTML &#x2F; JavaScript (hate browser differences)<p>- Python (pretty nice language, except for the indent requirements)<p>- Django (pretty cool framework, but eventually didn&#x27;t &quot;click&quot; with me)<p>- C (cool language due to very small library, still need to figure out some pet project to use it on).<p>- Xamarin (very nice to build iOS &#x2F; Android &#x2F; WinPhone apps with 1 language but still optimised UI per platform)<p>- SQL (I know enough to get around databases, but don&#x27;t particularly enjoy this)<p>Hoping to pick up Lua in the future, perhaps in combination with a C or Objective-C program. Dabbled a bit in OpenGL, would like to make a real game with it one day, not just the very lame Pong clone I created.<p>If you don&#x27;t enjoy learning new stuff, better move out of software development I think. Cause you won&#x27;t invest your free time which means you&#x27;ll get behind on other software developers who take their job more seriously. This in turn might make you much harder to employ.<p>Also: put stuff out on Github, be active on StackOverflow. Since I&#x27;ve put several (mainly abandoned) products om my Github this week, it seems a lot more recruiters have shown an interest in me. Though maybe it&#x27;s just coincidence, I&#x27;ll have to see how it works out in the long term ... Anyway, having some pet projects in different languages that interest you on your Github, might make it easier for you to pivot into new areas.",2014-01-21 12:19:06,7094786
596,We have higher-level tools and languages on WP platform. And we can use Xamarin for cross-platform cod reuse. Thankfully there is no strong need for HTML5.,2014-01-22 09:26:18,7101668
597,"To be fair I hadn&#x27;t looked at the license comparison in awhile (<a href=""http://unity3d.com/unity/licenses"" rel=""nofollow"">http:&#x2F;&#x2F;unity3d.com&#x2F;unity&#x2F;licenses</a>). It looks reasonable - I think I recall at one point you couldn&#x27;t even submit to the App Store without a pro license, which I may be imagining.<p>Oh well. I stand corrected :-)<p>Maybe I was thinking of Xamarin&#x27;s license costs instead ;-)",2014-01-22 18:12:16,7104326
598,"Yes, just like how no one would use C# if it weren&#x27;t for Microsoft or Go if it wasn&#x27;t for Google.<p>There are a lot of people who like Objective C including myself. If people didn&#x27;t the majority of iOS apps would be developed in straight C, C++, Ruby, C#, Delphi, or Actionscript.<p><a href=""http://www.embarcadero.com/products/cbuilder/ios-development"" rel=""nofollow"">http:&#x2F;&#x2F;www.embarcadero.com&#x2F;products&#x2F;cbuilder&#x2F;ios-development</a><p><a href=""http://www.rubymotion.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.rubymotion.com</a><p><a href=""http://xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com</a><p><a href=""http://www.embarcadero.com/products/delphi/ios-development"" rel=""nofollow"">http:&#x2F;&#x2F;www.embarcadero.com&#x2F;products&#x2F;delphi&#x2F;ios-development</a><p><a href=""http://www.adobe.com/devnet/air/air_for_ios.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.adobe.com&#x2F;devnet&#x2F;air&#x2F;air_for_ios.html</a><p>If no one liked Objective C you wouldn&#x27;t have people like Mattt Thompson taking time to write his excellent NSHipster columns.<p><a href=""http://nshipster.com"" rel=""nofollow"">http:&#x2F;&#x2F;nshipster.com</a><p><a href=""https://github.com/mattt"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;mattt</a><p><a href=""http://postgresapp.com"" rel=""nofollow"">http:&#x2F;&#x2F;postgresapp.com</a><p>You not liking a language is not a benchmark of language popularity. If it were, my own biases would dictate that Javascript is a language no one likes, propped up by Mozilla and ECMA.",2014-01-23 08:58:48,7107469
599,"What don&#x27;t you like about Windows 8?<p>As someone who developped for iOS, Android and Windows Phone&#x2F;8, I prefer (by far) the MS ecosystem and tools. It&#x27;s just nicer to use, and I can build an app in a fraction of the time (for the same quality) as it takes with other platforms.<p>With Xamarin, things will get even better (I&#x27;ll get to use VS for 80% of my work).",2014-01-23 14:54:26,7108492
600,"I wish they&#x27;d buy:<p>* Xamarin and polish the debugging, VS integration and Mono in general (maybe replace a lot of it with MS&#x27; .NET implementation? I can dream)<p>* MvvmCross and polish it and put it into the .NET BCL<p>* JetBrains (or just ReSharper) and give it a once over (performance- and code analysis-wise) and ship it with VS.<p>* Maybe Digia for Qt to replace MFC (this one&#x27;s kind of selfish since Qt is used in places Microsoft probably doesn&#x27;t care for - maybe they could sponsor the Windows side).<p>&gt; Cheaper than innovating weak product.<p>Aside from MFC I think Microsoft has fairly solid solutions to a lot of problems (Azure, Active Directory, Exchange Server, Visual Studio, Office, .NET).",2014-01-23 22:27:09,7111793
601,Agreed. I wish they would would buy Xamarin and make it easy to build C# MVC applications and deploy on Linux&#x2F;BSD. Give me that with entity framework to MySQL&#x2F;Postgresql and I am sold. Will convert over to using it for everything. Add in ReSharper and it has the potential to be the most productive environment on any platform.,2014-01-24 01:43:39,7112871
602,Can&#x27;t sell windows server licenses if you let people run on Linux.<p>Xamarins price is way too high and I bet apple would block the apps built with it if msft bought them (and they&#x27;d likely sue for reverse engineering).,2014-01-24 06:01:51,7113573
603,"Xamarin lets you write in C# and still build 100% native apps. If you have not looked at C#, coming from ObjC it will feel like you just shed 100 pounds of weight.",2014-01-24 16:38:42,7115766
604,"Ive built about 4 apps in Xamarin now - nothing major though.<p>I love the ability to write apps in C#. The language is amazing. However, it can be exceedingly difficult to use 3rd party libraries in your application. It is possible - you can generate bindings for static libraries, but sometimes you run into solutions you just can&#x27;t solve.<p>Also, all the tutorials you run into on the web are using Objective C. So you still have to know the language. The Xamarin community is practically dead compared to the vibrant native ecosystem that iOS enjoys.<p>Ultimately, I&#x27;m rethinking the decision to go Xamarin, and I am considering going native.<p>What I&#x27;ll miss: 
Ability to have Android and iPhone apps sharing a common codebase.
C#.",2014-01-24 17:10:48,7115992
605,"&gt; C++ is the one language that can work on both iOS and Android (and Windows phone?)<p>C# can do that too, using Xamarin.",2014-01-27 15:54:34,7130923
606,"C++&#x27;s benefit is that it is common to all SDKs.<p>With Xamarin you must buy it, which may not be an option for hobby developers.",2014-01-27 19:04:29,7132360
607,"Xamarin does have a nice UI for working with Xcode&#x2F;iOS, though I too fall on the cheap side of the fence. :)",2014-01-27 21:05:44,7133228
608,"I have played around with all three, Java, C++, C#.<p>For business I would surely advise Xamarin, as their prices are quite reasonable.<p>But if you are just hacking some stuff every now and then, it might not be worth it.<p>And on that case, there is also the possibility to compile Java to native code in iOS (RoboVM) or use any other language that either has an AOT compiler, or has a compiler available that compiles via C.<p>It is always a matter how much time vs money, one wants to invest.",2014-01-27 22:27:30,7133782
609,Most important tool missing - Xamarin.,2014-01-30 09:09:34,7149704
610,"Mono and Xamarin [2] are things you should be looking at.<p>[1]- <a href=""http://www.mono-project.com/Main_Page"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;Main_Page</a>
[2]- <a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>",2014-02-04 08:01:39,7176090
611,"Mono&#x27;s not been abandoned so much as that its direction has changed. Lately it&#x27;s been more about native experiences on mobile OSes rather than services running on Linux.<p>That being said, Xamarin has done an admirable job keeping Mono up-to-date on the latest .NET features lately.",2014-02-04 08:09:41,7176122
612,"Looking at puppet labs documentation site, http:&#x2F;&#x2F;docs.puppetlabs.com&#x2F;, or xamarin&#x27;s documentation site http:&#x2F;&#x2F;docs.xamarin.com&#x2F;guides&#x2F; are really great technical documentation sites.<p>What tools (paid or free) exists to build these types of technical documentation sites?",2014-02-04 18:15:14,7179208
613,"Incorrect, Xamarin is currently the best option for multi-platform development and it has a good Visual Studio integration.",2014-02-04 19:21:37,7179676
614,"Doesn&#x27;t that link just say you can also use .NET and Lua on iOS?<p>So I guess your answer is, Objective-C, Lua, or Microsoft technologies (implemented by Xamarin)? I guess Microsoft may have a role to play in this. ;)",2014-02-04 20:15:51,7179972
615,My 2 cents would be: open up C# and the CLR. Buy Xamarin and work towards a ubiquitous platform.,2014-02-04 20:49:30,7180153
616,"Windows Phone 8 ... not open-source, doesn&#x27;t have anything like CyanogenMod, cannot be forked, does not allow app installs from third-party sources, doesn&#x27;t allow replacing Bing&#x27;s search with anything else (and the available setting in IExplorer for setting the in-browser search provider doesn&#x27;t work) and wifi tethering must be explicitly allowed by the mobile career (which is a PITA since my mobile career couldn&#x27;t wire the settings so I&#x27;d have to take my phone to them).<p>That last point is one of the reasons for why I switched away from iOS to Android. I have yet to encounter an Android phone that doesn&#x27;t do Wifi tethering because the mobile career says so. And my prior mobile career also had the nerve to ask me for an extra 4 EUR per month for wifi tethering. It&#x27;s my device damn it and I feel that Windows Phone is a shitty iOS replacement, without the sexy.<p>&gt; <i>How many languages can you use to write apps for your iPhone or Android device? Objective C and Java respectively and that&#x27;s about it.</i><p>For targeting iOS you can actually use Ruby [1], C# [2], Java [3]. Many iOS games are using Lua for scripting. Speaking of which, Unity 3D is a platform for building games and you can use Javascript, C#, Boo or UnityScript (a sort of ActionScript). The problem with iOS is that Apple had artificial restrictions that disallowed virtual machines, so bytecode and virtual machines were out. I think they lifted those restrictions, though iOS is what I call a defective by design platform.<p>On Android there are no limits. People build stuff with Java, because it&#x27;s the least painful path and works fairly well. Games are still being built with C++. I have used Scala and it works well. Many people are also building apps with JRuby and Clojure ... though Dalvik is not as capable as a real JVM, so dynamic stuff has performance issues.<p>Even if you target the browser, you can compile C++ to asm.js and for replacing Javascript there are full-featured replacements available that use Javascript as bytecode - like Dart or ClojureScript.<p>&gt; <i>server side development which is in a sense a niche</i><p>Err, what? 99.9% of all software being built today is either server-side or has indispensable business logic that&#x27;s handled server-side.<p>&gt; <i>[Linux, server-side] could have co-existed with Microsoft perfectly happily</i><p>You&#x27;re probably too young to remember all the shit Microsoft did to prevent Linux and the web as a platform from happening. That&#x27;s OK, you&#x27;ll live and learn.<p>[1] <a href=""http://www.rubymotion.com/"" rel=""nofollow"">http:&#x2F;&#x2F;www.rubymotion.com&#x2F;</a><p>[2] <a href=""https://xamarin.com/studio"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;studio</a><p>[3] <a href=""http://www.robovm.org/"" rel=""nofollow"">http:&#x2F;&#x2F;www.robovm.org&#x2F;</a>",2014-02-04 21:46:51,7180456
617,"And I&#x27;m totally stoked to learn that Scott Guthrie has been promoted to take Satya&#x27;s place. Both of you guys are awesome! Now when are you going to open up C#, CLR and buy Xamarin ;)?",2014-02-05 00:21:10,7181163
618,"&gt; Perhaps because Ximian is spending most of their time on mobile and their partnership with Microsoft?<p>Xamarin. Ximian is, as they say, an <i>ex-parrot</i>.",2014-02-05 06:48:45,7182291
619,"Wow, literally everything you say is false.<p>&gt; The world of Google and Apple (Samsung and FOSS aren&#x27;t even a player) is a world of closed computing platforms<p>As a user of Omnirom and a donator to Replicant I don&#x27;t understand how you come to this conclusion.<p>Agreed, the alternatives to google apps are not too good today, but that could relatively easily be changed. But if compared to windows phone. Really? How?<p>&gt; where people can&#x27;t control their own devices<p>If installing a different operating system with the tools from the official SDK is not controlling my own devices, what is?<p>Again, the proprietary drivers is a bad situation, but compared to windows phone, what exactly do they more openly?<p>&gt; and can&#x27;t and don&#x27;t code for them.<p>All the tools required to build apks are open source. The eclipse android plugin was open source and android studio is open source. Enabling installing your own apps directly is natively built in and can literally be enabled in seconds. If you &quot;can&#x27;t and don&#x27;t code for&quot; android even if you want, then there is really nobody but yourself to blame.<p>&gt; More languages? I don&#x27;t think so. How many languages can you use to write apps for your iPhone or Android device?<p>As others have said, you may want to use android&#x27;s gui toolkit, but other than that native applications can rather easily be wrapped. As it is linux, you may even run command line programs in any language you can compile for arm or compile an interpreter for directly.<p>&gt; Objective C and Java respectively and that&#x27;s about it.<p>Have you actually heard about xamarin&#x27;c c# for mobile devices? python + kivy? ...?<p>&gt; With Google not only do you not control your apps&#x2F;device<p>Well, I can compile the operating system myself and remove any apps I don&#x27;t like in the process. I could also remove them from the device because I have root rights. There is literally nothing but the proprietary drivers and firmware I don&#x27;t control, but again, how exactly does that get better with windows phone?<p>&gt; even your data isn&#x27;t under your control any more.<p>I use the google apps for convenience but you can use your android device without them perfectly fine. Install f-droid. Install only open source apps. Try doing this with windows phone?<p>&gt; Yes, Microsoft&#x27;s business practices weren&#x27;t so great, but I don&#x27;t agree the new world is much better.<p>With android being open source you can see the benefits directly: Other systems like Blackberry OS (or whatever it is called) or Sailfish OS can (rather) easily implement android&#x27;s runtime and run almost all android apps natively. Compare this with what wine has to do?<p>&gt; As a developer it actually feels worse.<p>It feels worse not to have proprietary microsoft specific tools that lock you into the microsoft ecosystem forever?",2014-02-06 09:17:17,7189449
620,"Besides, since the Visual 2013 launch event, Xamarin has become an official Microsoft partner.",2014-02-08 16:55:29,7201691
621,"Possibly, but just saying learn C# so you can program for Windows Phone is the wrong selling point. It should be learn C# so you can develop native-quality apps for all mobile platforms. Microsoft should completely embrace Xamarin. That would solve the OSX problem as well, as developers could use whatever OS and IDE they prefer.",2014-02-09 01:30:59,7203780
622,"Xamarin allows you to use Visual Studio and .NET&#x2F;Mono to target Android and other platforms. [1]<p>dot42 focuses on Android exclusively and targets dex&#x2F;dalvik instead of the Mono runtime. [2]<p>[1] <a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>
[2] <a href=""https://www.dot42.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.dot42.com</a>",2014-02-09 01:38:58,7203803
623,"The .NET framework[0] is always useful and I think it&#x27;s here to stay for a long while. You&#x27;d be able to write mobile apps using Xamarin or business apps for Windows. Also apps for the new Ubuntu mobile OS will be possible.<p>Personally I find Go[1] interesting and it&#x27;s something I&#x27;m hoping to pick up in the coming year. It seems like a fun language, well suited for building web services that handle lots of traffic.<p>Lua[2] might also be nice to learn. It&#x27;s used for scripting in a lot of games. For example: in World of Warcraft you can create your own Lua add-ons. Lua can be easily integrated into your own apps &#x2F; games, since it&#x27;s just a small C library. It might be a good language to learn if gaming interests you, since lots of games make use of Lua in some way.<p>And as someone else already mentioned in this thread: functional programming will become bigger in the future. You can use the functional programming style with .NET if you choose to learn the F# language.<p>---<p>[0]: <a href=""http://en.wikipedia.org/wiki/.NET_Framework"" rel=""nofollow"">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;.NET_Framework</a><p>[1]: <a href=""http://en.wikipedia.org/wiki/Go_(programming_language)"" rel=""nofollow"">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Go_(programming_language)</a><p>[2]: <a href=""http://en.wikipedia.org/wiki/Lua_(programming_language)"" rel=""nofollow"">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Lua_(programming_language)</a>",2014-02-09 10:05:56,7205039
624,"From the trends I see, I&#x27;d recommend to become a Javascript expert (not just passing knowledge of jQuery).<p>Then Node.js and Angular. You should be set for the next 10 years.<p>Outside enterprise, .NET is sinking into irrelevance. I don&#x27;t know for Xamarin though.<p>Edit : fwiw my current job is C# &#x2F; WPF since 2009. So don&#x27;t take my comment about .NET irrelevance as mindless Microsoft hatred.",2014-02-09 10:34:44,7205091
625,"Windows is on more than 90% of PCs (including a lot of Macs), Visual Studio is one of the most popular development environments, and C# is one of the most sought-after skills in the job market. And as others have noted, Xamarin for Visual Studio lets you develop for iOS and Android as well.
<a href=""https://xamarin.com/visual-studio"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;visual-studio</a><p>Also, C# isn&#x27;t compulsory because you can develop in HTML5 instead.<p>So, it might be impossible to get people who specialize in iOS apps to develop for WP8, but it should be possible to grow a comparable ecosystem. And making apps run on both W8 and WP8 would be a good move in that direction.<p>The short term view may be bleak but the future is uncertain, and the long term _could_ look different.",2014-02-10 13:09:15,7210760
626,"To start over again, I&#x27;d have had a much bigger focus on standards and open-source, standards-compliant software. Having been spoiled by Visual Studio, I now lack the patience necessary to setup a dev environment from scratch with Emacs or Vi or whatever.<p>And no, Eclipse is not an alternative, though <i>maybe</i> NetBeans is, which are two statements I really wouldn&#x27;t have said 10 years ago. I don&#x27;t really feel like it&#x27;s a case of Visual Studio having gotten significantly better. NetBeans has gotten significantly better and Eclipse has gotten significantly worse. MonoDevelop and Xamarin Studio are waaaaay too buggy to be useful. I find myself gravitating to a text editor like Geany or really anything that combines syntax highlighting, tabbed documents, and a file explorer. It&#x27;s amazing how infrequently those three things come together (I&#x27;m looking at you, Notepad++ and Notepad2), or just don&#x27;t work very well (Hi there, LightTable and DrRacket).<p>While I like C#, the promise of quality cross-platform software with it is mostly a boondoggle. The hoops you have to jump through, and the state of the dev tools for Mono, just push me towards Java anytime I need a cross-platform desktop GUI app.<p>And that&#x27;s sad. Because it&#x27;s not like Java does a particularly good job of it, it just does a site-better job of it than most anything else. I don&#x27;t have a good enough handle on the C toolchain to pick up and run with Qt or GTK and cross compile for every platform. And nobody pays enough attention to desktop in basically any other language.<p>Please, correct me if I&#x27;m wrong, because I&#x27;d really, really like to be wrong here. I suppose I could do [Pythong|Ruby|OCaml|Haskell|Racket]+[GTK|Qt], but it feels grating. It doesn&#x27;t match. As far as I can tell, there is no GUI library that works well in functional languages--even a wrapper on top of an OO one. But again, correct me if I&#x27;m wrong. Please.<p>Other than that, I wish I had ditched SQL Server a long time ago. Postgres is just as easy to install and use now, and has been for several years. I wish I had the balls to replace my clients servers with Postgres and just not tell them about it. They probably wouldn&#x27;t notice.<p>I wish I had never wasted time on Python.<p>I wish I had kept gaming to my Playstation and stuck it through with Linux back in 2000.<p>I wish I had not gone to college. Going to college meant I had to get a job that paid well to service my debt afterwards. And for where I lived, that meant I had to buy a car. Even still, being 22 years old and having only $35k in debt was far better off than most of my peers, and even better still than most of the kids graduating today, so I guess I&#x27;m not too badly off. But still, I think about  the last 10 years and really wish I had been writing all of that software for myself rather than The Man.<p>What the hell was the point of writing all those projects in college for the command line? 4 years of wasted practice on an interface only other programmers care about. It is such a fundamentally different paradigm, and most of my peers didn&#x27;t transition well. <i>I</i> didn&#x27;t transition well, and I&#x27;ve been either the most successful person or at least in the top 3 of my graduating class.<p>I wish I had never stopped doing screwy shit in JavaScript. There was stuff I wrote in 1997 that people are pushing today as &quot;the power of HTML 5!&quot; If I stuck with it, instead of listening to my &quot;betters&quot; at work or in college, then I think I could have contributed a lot more.<p>So, less about what specifically I would have studied, and more about not listening to what others have to say about what I should have been doing.",2014-02-10 15:57:44,7211690
627,"Wow. I&#x27;m building an app for route planning &#x2F; public transport in France, the first version of which was in full-JS and won a competition from RATP:<p><a href=""http://data.ratp.fr/fr/actualites/article/finale-de-lopendatalab-la-ratp-recompense-2-ap.html"" rel=""nofollow"">http:&#x2F;&#x2F;data.ratp.fr&#x2F;fr&#x2F;actualites&#x2F;article&#x2F;finale-de-lopendat...</a><p>We have now moved the route-planning part to a server in C++ but we want to move it back to the client using something like Xamarin&#x2F;C#. Any thougths on this?<p>Will definitely buy the book! (No Paypal, though?)",2014-02-11 08:05:54,7216444
628,"I used to complain loudly about the state of native desktop development with managed platforms, even doing some Qt prototypes instead.<p>Then I got to do some work in WPF and was quite impressed how far the XAML stack has become.<p>Now if Xamarin cared to support it, it would be great.",2014-02-11 08:24:45,7216513
629,"F# has a huge following on macs. The Xamarin guys drive it, and practically every major open source .Net library is available for mono.<p>I haven&#x27;t tested it on linux, but I&#x27;ve found it works pretty well on macs.",2014-02-14 03:18:43,7236658
630,"It&#x27;s getting better and better.  They even have an F# programmer working stuff at Xamarin now. Check this out: <a href=""http://7sharpnine.com/posts/danger-unstable-structure/"" rel=""nofollow"">http:&#x2F;&#x2F;7sharpnine.com&#x2F;posts&#x2F;danger-unstable-structure&#x2F;</a>",2014-02-14 04:09:29,7236848
631,"The Seattle F# user group just had an event last night, and the first talk was 1 hour on how to create iOS apps with F# using Xamarin&#x2F;Mac.  If anyone is interested, a recording is at <a href=""http://www.youtube.com/watch?v=MriHEnq5MR4"" rel=""nofollow"">http:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=MriHEnq5MR4</a>",2014-02-14 18:41:32,7240163
632,The price is not expensive for what professional developers tend to pay for their tooling.<p>Just try to imagine how much money you would need to charge for software to be able to live from it and pay all running expenses.<p>I just would like that they settle their issues with Xamarin and update they .NET runtime to a more modern one.,2014-02-17 18:57:55,7253714
633,"Xamarin is one of the biggest backers of C#&#x2F;.NET, and the reason .NET is probably the simplest way to create a 3-platform smartphone application today. You can even use F# for that which is even nicer than C# and open source. So the ecosystem has a few open source languages and several backing companies.",2014-02-17 20:33:51,7254318
634,"It&#x27;s not very true that you&#x27;re locked into anything anymore.  See Mono, Xamarin, Sharpdevelop, etc.",2014-02-17 20:57:03,7254440
635,I have Mono projects in production. Xamarin Studio is pretty nice these days. I don&#x27;t have a lot of performance sensitive .Net code so I don&#x27;t notice any real difference between Microsoft&#x27;s and Xamarin&#x27;s implementations.<p>One problem I&#x27;m running into at the moment is I&#x27;m trying to port a vendor&#x27;s reference SOAP Service over to Mono&#x2F;Linux and their provided secret sauce DLL is blowing up when calling their objects&#x27; constructors. I&#x27;m yet to pin it on Linux or Mono. Here&#x27;s hoping the vendor is Mono friendly and willing to debug it. If not we&#x27;re going to have one oddball Windows server in a sea of Ubuntu EC2 instances.,2014-02-18 00:34:54,7255521
636,"Personally, I find Xamarin Studio to be quite buggy, often needing several quit+restart a day (I do iPhone apps), a colleague also does Android apps with Xamarin (on Windows) and experiences similar problems.",2014-02-18 09:50:31,7257265
637,"They&#x27;re using Xamarin, according to their showcase site. This video mentions before that, they had four different codebases for four different platforms: <a href=""http://www.youtube.com/watch?v=oETiK-v7rkE"" rel=""nofollow"">http:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=oETiK-v7rkE</a> so I&#x27;m guessing that means native development.",2014-02-20 13:31:33,7270615
638,"The company I work for recently decided to develop some cross-platform apps. After researching a few different things, we decided Cordova (Phonegap, but not branded) best fit our needs.<p>Aside from Titanium, we also looked at MonoTouch[0] and Xamarin[1], which I believe (didn&#x27;t completely read through) is built on both Cordova and Mono.<p>If you were building from scratch, maybe another one of those would make sense for you. We are working within an existing project (mixed native and webview), and Cordova seemed to best fit our requirements there.<p>[0] <a href=""http://www.mono-project.com/Main_Page"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;Main_Page</a>
[1] <a href=""https://xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;</a>",2014-02-20 13:49:22,7270675
639,MonoTouch (= Xamarin.iOS) has nothing to do with Cordova.,2014-02-20 15:52:20,7271384
640,We found that both Xamarin and Corona work really well depending on your needs; much better than Cordova for practically anything. Because sometimes clients demand it we have used Cordova and Appcelerator in the past but now we simply refuse; it creates horrible stuff which feels and looks bad unless you sink so much time in it that you could&#x27;ve written in natively for every platform 10x over. It&#x27;s ok for fast prototyping but actually both Xamarin &amp; Corona beats them there easily too.,2014-02-20 17:19:48,7272083
641,"I wasn&#x27;t sure if it was Xamarin or another framework that was ultimately using Cordova underneath. After reviewing their docs a bit more, it appears Xamarin was not the framework where this was the case.",2014-02-21 00:37:08,7274697
642,"&gt; Or for that matter, rewriting your app for every phone platform.<p>Cordova, Qt&#x2F;C++, Xamarin Mono, Unity, Cocos-2D-X, Titanium, ....<p>There are lots of alternatives to minimize duplicate native code. Plus it is not as if one doesn&#x27;t need to write once, debug everywhere with HTML 5.",2014-02-25 13:51:12,7297561
643,"Rdio is probably one of the bigger success stories for Xamarin&#x2F;Mono
You can see a list here: <a href=""https://xamarin.com/apps"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;apps</a>",2014-02-26 16:29:21,7305864
644,rdio is using the xamarin tools for ios and android.<p>mvc + mono website on linux success story - i haven&#x27;t seen one.,2014-02-26 16:33:24,7305894
645,"That article is 2.5 years old; Mono has gotten <i>significantly</i> better since Xamarin spun off from Novell, and much progress has been made in the last 18 months or so. It would be interesting to re-run those benchmarks with the latest version of Mono though.",2014-02-26 17:00:40,7306056
646,"I tried Mono a few months ago because I was thinking of writing cross-platform (ish) desktop GUI application.<p>My dev platform is Ubuntu so I downloaded MonoDevelop and load the GtkSharp example (or maybe it was just the skeleton project template). Hit compile, bunch of errors showed up. Apparently I don&#x27;t have the GTK libraries. Googled a bit, it looks like I had to download gtk-dev, compile, and do a bunch of things before I can run a &quot;Hello, World&quot; GTK sharp app.<p>I wade through the net and the tutorials and documentations are either for older versions or just weren&#x27;t there (for example, integrating with NuGet).<p>It&#x27;s a bit sad because I&#x27;m sure there are tons of engineering effort went into Mono but it just doesn&#x27;t feel polished enough.<p>It&#x27;s open source but lately I felt that it&#x27;s more of a teaser for Xamarin than anything else.",2014-02-26 17:40:41,7306301
647,"That situation is now verging on the comical. Is it really so hard to cut a new deal with Xamarin? Even if they can only offer the new Mono version for paid users in Unity Pro, they need to do <i>something</i>.<p>If Unity go another major version still using Mono 2.6, they seriously risk losing ground among developers making CPU&#x2F;memory-intensive games. Or even those concerned about optimizing for mobile platforms.",2014-02-26 17:42:58,7306314
648,"Mono. I think it&#x27;s a bug or something.<p><pre><code>    Mono JIT compiler version 4.0.0 (master&#x2F;c198a39 Pk feb 21 22:02:35 EET 2014)
    Copyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com
        TLS:           __thread
        SIGSEGV:       altstack
        Notifications: epoll
        Architecture:  x86
        Disabled:      none
        Misc:          softdebug 
        LLVM:          supported, not enabled.
        GC:            sgen</code></pre>",2014-02-26 18:28:39,7306614
649,"I JUST (today) build from source on github and got this:<p><pre><code>     mono -V
    Mono JIT compiler version 3.4.0 (master&#x2F;8f2d3ea Wed Feb 26 11:59:41 EST 2014)
    Copyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com
        TLS:           __thread
        SIGSEGV:       altstack
        Notifications: epoll
        Architecture:  amd64
        Disabled:      none
        Misc:          softdebug
        LLVM:          supported, not enabled.
        GC:            sgen</code></pre>",2014-02-26 19:09:13,7306878
650,Roslyn and the MS&#x2F;Xamarin partnership suggest Mono will be benefiting in some big ways in the coming year.,2014-02-26 19:17:49,7306941
651,"I&#x27;m a lot less optimist, I think it will just focus Mono development on the mobile platforms (Xamarin on Android&#x2F;iOS) but will do nothing good for desktop or server use.",2014-02-26 20:08:54,7307314
652,"So baking in Xamarin as a compile target in Visual Studio. Conciously changing their licensing terms of various BCL NuGet packages to allow their unrestricted use on Xamarin&#x2F;Mono platforms... yeah, there&#x27;s clearly no hints at all as to what they&#x27;re up to.<p>Read between the lines man.",2014-02-27 02:03:15,7309818
653,"I&#x27;m not quite sure I understand his objections to Xamarin. He says, &quot;It can only output to intermediate Xamarin libraries, not native ones.&quot;<p>On iOS Xamarin does compile down to native code and on Android is compiled to dex format. They are not interpreted on those platforms.<p>Xamarin can utilize PCL assemblies, so non-ui code could be written once and used multiple places without recompilation. This is actually very handy since those libraries can be built on Windows, where the toolchain is better (IMO VS is better than XS) and the system is more powerful.",2014-02-28 16:00:20,7319468
654,"I&#x27;m sorry if this wasn&#x27;t clear. The purpose of building this library was to have something which could be distributable to any mobile developer, not just the ones using Xamarin. If you did it through Xamarin, you could only give it to Xamarin developers, which is very limiting. We need something that could be importable by most developers, especially native SDK ones.",2014-02-28 17:14:59,7320046
655,"It&#x27;s objective-c and spritekit.
I started making games back in 2009 using objective-c and uikit. Honestly, once you get those sprites moving on the screen I find that it really doesn&#x27;t matter what you&#x27;re using, but Spritekit is awesome.<p>I&#x27;m pretty good with Xamarin in c# development. I use that mainly for business apps, but nothing beats objective-c and the opensource projects out there to make iOS apps.<p>Thanks man",2014-02-28 17:46:20,7320260
656,"Xamarin (<a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>) - San Francisco, full time, relocation available<p>At Xamarin, we believe that great, native mobile user experiences have the power to transform customer relationships and employee productivity. Unlike other cross-platform mobile frameworks that deliver lowest common denominator experiences through UI abstraction libraries, we make 100% of the iOS and Android APIs available through our native bindings. Xamarin developers deliver high performance, fully native experiences and also share on average 75% of their source code across platforms.<p>Xamarin is the only platform with complete API coverage and deep code-sharing capabilities across iOS, Android and Windows apps, for a total of 2.6 billion devices you can reach in C#.<p>We have a number of positions available (<a href=""http://xamarin.com/jobs"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs</a>), but I&#x27;m looking for Customer Success Engineers (<a href=""http://xamarin.com/jobs/oHTMXfw3"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;oHTMXfw3</a>) to join our team.<p>Basically, you will become our customers&#x27; trusted advisor  providing technical expertise, on-boarding project guidance, and implementation assistance.<p>It&#x27;s a great opportunity if you already have the technical chops, but want to explore a different aspect of the business.<p>Shoot me an email at valentin@xamarin.com if you have questions or would like to apply.",2014-03-01 17:34:11,7325180
657,"SEEKING WORK - Remote or Greenville, SC<p>Looking for part-time work to build out a portfolio. I have done mostly corporate work but I&#x27;m looking to get out on my own a little bit more. This means I need more experience to show but that&#x27;s kind of hard when your employer owns the source :) Chicken&#x2F;egg and all that.<p>I&#x27;m a full-stack senior developer with about 12 years of experience, mostly in Microsoft-based stuff (C# and ASP.NET MVC&#x2F;Web API is my current comfort zone), but I&#x27;m also dabbling in Node and PhoneGap (and Xamarin!). I also prefer git and Angular for front-end stuff so I&#x27;m not completely brainwashed. Lots of database experience with SQL Server, but I also like Couch and MongoDB as well. Oh, and I&#x27;ve done SharePoint too if that helps (or hurts).<p>I can help you design and develop your MVP or I can just help you fill in the areas you&#x27;re missing on your dev team.<p>My email is in my profile, or you can hit me up on Skype at cbsmith5.",2014-03-02 03:57:13,7327636
658,"I can&#x27;t speak for all of them but I use Xamarin at work, and it absolutely does translate to native look and feel for the app.  Although once you get to the GUI layer, it&#x27;s not much more than a thin C# wrapper for the native OS framework and you have to write a lot of platform specific code. But everything else is cross-platform. And you&#x27;re coding in C# and not Objective-C (or Java), which is a more predictable and less verbose experience, at least for me, and I&#x27;ve made half a dozen apps using Objective-C.",2014-03-05 19:03:44,7348995
659,"There&#x27;s lots of cool start-up culture in Denmark. (Podio, Zendesk, Zyb, etc)<p>While the system isn&#x27;t always too kind to start-ups (high tax etc) they still do exist.<p>I&#x27;ve been working as a developer in Denmark for 7 years now (currently Xamarin) and haven&#x27;t had a problem finding interesting projects.",2014-03-13 15:09:34,7392282
660,"F# for several reasons 1) Tooling, I like proper thick IDE&#x27;s like xamarins or VS. 2) better platform support (I&#x27;m serious, it isnt tied so much to windows as you might think but is one of few languages you can e.g make a 3-platform mobile app with today!). Running Haskell in the same IDE with the same compiler on several platforms is hard. Making android&#x2F;iOS or web apps with it is also tricky. 3) I like ML more than Haskell, 4) trivial to slap a non-functional C# front end on F# business logic should that be necessary, much harder to do from Haskell or ML without having to resort to C&#x2F;C++.",2014-03-14 06:48:41,7397312
661,"I agree. I just started learning Android development about a month ago with Xamarin C#. Although its in C#, as a .net developer there are so many other things to learn.<p>Its exciting really. You see similarities and you also see differences. I think this helps more than it hurts since these &quot;new ideas&quot; will help me with the other environment (and vice versa).<p>This actually got me interested in learning other languages&#x2F;frameworks (php, haskell, ruby on rails). After I get the hang of Android, I want to play around with an iOS app from scratch. Sure, I could use some conversion software to do this job. But, I&#x27;d rather not. I like to understand what&#x27;s going on under the hood. I guess its the CompSci in me.<p>I guess what I&#x27;m saying is that I think it is so much better to have a universal understanding of these technologies then to blindly stick to one &quot;team&quot;.<p>As an aside...didn&#x27;t Facebook mentioned they used PHP not because it was &quot;better&quot; but because it happened to be the technology that worked for what they were doing at that time?",2014-03-14 12:30:17,7398301
662,"Xamarin is really the &quot;killer app&quot; for .NET at the moment.  Being able to use a common codebase for Windows RT, Windows Phone, Windows, OS-X, Android, iOS is amazing.  Being able to do full native work on top of that on every platform.  The apps look, feel and act native cause they are using native widgets.<p>Last I checked the F# supports was still a little crufty (over a year ago) -- but if they really get the F# support to be top tier, I will have to return and have another look.",2014-03-14 18:30:52,7400825
663,"OP here. I wanted to comment on the discussion around &quot;.NET vs. other things&quot; coversation that has started brewing here. I&#x27;m not one to hate on any environment or ecosystem. I do make fun of PHP or Java at times, but it&#x27;s all good-natured. Not to be too PC, but yes, every thing has its pros and cons.<p>Personally, however, I think C# as a language strikes the right balance in terms of power, ease-of-use, learnability and code readability. Even if you have a problem with Microsoft, I think it is wrong to let your &quot;MS-hate&quot; translate into &quot;C#-hate&quot;. It is a beautiful language and the open-source community around it is growing rapidly. The progress made by platform-independent endeavors (case in point Xamarin) is admirable.<p>In the unlikely scenario that all of programming were to converge into one language, I would want it to be an open-source, platform-independent version of C# (with maybe just a tad more constructs borrowed from the functional programming world).<p>P.S. I also think it is a mistake to lump C# and Java in the same bucket. Ten or more years ago, maybe. Today, they are VERY different.",2014-03-17 14:45:25,7415271
664,The languages themselves are fine. The frameworks around them on mono are always half incomplete or not the latest version. Although I have noticed its getting better lately.<p>For example its easier to get started with F# with MVC on the Xamarin IDE then it is in VS. Hope it takes off.,2014-03-17 17:58:49,7416780
665,"Yes please.<p>Having suffered through MonoDevelop and now Xamarin Studio (which is much nicer) and the various bugs introduced each time you upgrade Xamarin.Mac and other miscellaneous problems I&#x27;d love for Microsoft to come in and:<p>* Polish Xamarin&#x27;s tools<p>* Polish Xamarin&#x27;s code (and swap out Xamarin&#x27;s implementation of the core CLR&#x2F;BCL with Microsoft&#x27;s own ... presumably MS&#x27; GC is two cuts above the Mono one)<p>* Add more QA to the release process (I don&#x27;t know how Xamarin.Mac 1.4 got released with a broken NSApplication.BeginSheet implementation)<p>* Make Xamarin&#x27;s Visual Studio integration free<p>* None of those &quot;WCF is Xamarin Enterprise only&quot; licensing restrictions<p>* Buy MvvmCross too<p>(Don&#x27;t get me wrong, Xamarin&#x27;s platform and what they do is amazing. But even if it works 99% of the time that&#x27;s still a lot of things going wrong, given the size of .NET. Microsoft&#x27;s tools and code aren&#x27;t perfect either but I find I have way less issues with them relative to Xamarin.)",2014-03-18 02:00:31,7419531
666,"This would be great news, but I&#x27;m worried they&#x27;d stop developing the tools for other (non-MS) platforms. If anything, they need to do the opposite and make building iOS apps in C# a better experience than building them in Objective-C. Right now, if I know my app will have more than just the basic animations&#x2F;UI elements&#x2F;etc. using Xamarin&#x2F;C# just isn&#x27;t an option, since I don&#x27;t know if it supports a more advanced feature set.",2014-03-18 02:12:39,7419578
667,"&gt; but I&#x27;m worried they&#x27;d stop developing the tools for other (non-MS) platforms<p>This seems like an odd concern, since Microsoft&#x27;s tools for Windows are better than Xamarin&#x27;s tools for Windows. They&#x27;d be buying Xamarin specifically for their non-MS tooling.",2014-03-18 02:14:31,7419588
668,"Recently priced out Xamarin for my organization, that is super expensive. Do most people buy just 2 platforms (Android and iOS) per developer?<p>How does Xamarin do with differences like the Android Action Bar vs. Apple&#x27;s bar at the bottom?",2014-03-18 02:21:58,7419620
669,"It&#x27;s magnitudes cheaper than hiring a team of developers for each mobile platform, like what most of the sheep following the herd companies seem to do.<p>Xamarin leaves details to do with views and presentation up to you. In a properly designed application using MVVM pattern you can use the appropriate native and best practices per platform.",2014-03-18 02:37:34,7419681
670,Then what is the point of buying Xamarin? To shrink the group of potential Windows Phone developers even smaller than it is now?,2014-03-18 02:49:15,7419726
671,"Xamarin maps iOS and Android API&#x27;s 1:1, and you usually have access to bindings within days (sometimes hours?) of SDK releases.<p>Note the date:
<a href=""http://blog.xamarin.com/introducing-ios-7-support/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;introducing-ios-7-support&#x2F;</a>",2014-03-18 03:22:48,7419860
672,"It&#x27;s boggled my mind why Microsoft hasn&#x27;t tried to buy Xamarin sooner to do something like this. If they give the tools away for free and provide good documentation, samples, and support they could attract a lot of developers. Hell, they could even give some sort of financial incentive to attract developers too. It&#x27;s annoying enough to have to develop for iOS and Android, if you could do both at the same time with less effort AND get Windows phone support... well that&#x27;s just a huge win win all around.",2014-03-18 03:25:32,7419877
673,"I was pretty sure this would happen once Xamarin spun out of what was left of Novell. Open source .NET proved that C# is a great language outside of Windows and it wouldn&#x27;t take much money for Microsoft to acquire it. Throwing Microsoft&#x27;s considerable resources at Xamarin would allow Microsoft to gain a huge foothold in cross platform development, and thus would be much more likely to have developers port their apps to Windows.<p>Microsoft used to embrace, extend, and extinguish their competition before they got too big and too afraid of their own shadow(and shareholders) with Windows and Office. Honestly, it makes total sense for Microsoft to acknowledge they are running a distant #3 and get as many developers behind them as they can. Make Microsoft the place where real hackers go to write code.<p>Buying Xamarin is embracing. As is maybe a Nokia Android phone. Microsoft needs to make their own &quot;better&quot; version of Android with their own services and get people hooked on that. Then make the &quot;best&quot; version of Android called Windows A. It&#x27;s Windows, on Android. Windows A&#x27;s best features would be closed source and patented. It would potentially crush Android in the mainstream.<p>I don&#x27;t think that Microsoft has the guts to try and pull that off, but if they did, it would be a feat.",2014-03-18 03:33:58,7419912
674,"I tried out Xamarin over a year ago (around the time 4.0 hit) with a bit of enthusiasm because C# is a good language and ended up frustrated by bugs.<p>I&#x27;m excited about the muscle of Microsoft getting further behind the platform. It is used surprisingly frequently for iOS apps. Regardless of whether I end up using it, this is a good thing in terms of pressure on Objective-C&#x2F;Cocoa and Java&#x2F;Android to improve developer workflows. This is exactly the kind of competition the mobile development space needs.",2014-03-18 03:36:06,7419924
675,"Bingo.<p>Develop in Visual Studio using Xamarin for iOS and Android while writing in C#, now the incremental cost to also developing for WinPhone is much, much lower. And by owning these tools, as well as the WinPhone platform, Microsoft can make that increment almost arbitrarily small.",2014-03-18 03:38:19,7419931
676,"Microsoft have been purchasing cross platform applications and tools and shutting them down forever.<p>In general it is what they do.<p>If they do <i>not</i> do that for Xamarin, it would be a departure.<p>So, I will wait and see.  it does sound hopeful though.",2014-03-18 04:01:30,7420051
677,"Has anyone used Xamarin to build an app on iOS and Android? What was the experience and time to market like? Is the end product a full native app, not a hybrid app? Are there any cons?<p>I am currently learning Intel XDK but surprised why I have never given Xamarin a thought.<p>p.s. What about QT creator?",2014-03-18 04:19:20,7420137
678,"&gt;  None of those &quot;WCF is Xamarin Enterprise only&quot; licensing restrictions<p>Are you kidding me? Let&#x27;s suppose Microsoft buys Xamarin and doesn&#x27;t bury it.  Further, let&#x27;s suppose that they actually pump money into polishing and enhancing their tools.  Do you actually believe that Microsoft wouldn&#x27;t wrap 10 flavors of Student, Home, Business, Pro, and Ultimate licensing around the result?",2014-03-18 04:36:50,7420190
679,Mono is independent from Xamarin. It would stay that way and I doubt Miguel &amp; Nat would let is flounder. It&#x27;s the basis upon which this who story is based.<p>Mono has its own devs and community.,2014-03-18 04:41:53,7420215
680,"I have built multiple iOS and Android apps with Xamarin and found the experience to be great. I love C# so being able to use that was a plus and there are some cases where Xamarin made the APIs of the native platform a bit cleaner by implementing some abstractions. All the native plumbing was still there but implementing a tableview in Xamarin on iOS was quite a bit shorter in code than in ObjC.<p>It really is a phenomenal piece of engineering.<p>Biggest drawback, hard to find examples of things in C# so you have to be able to read documentation and code samples in ObjC or Java and mentally map them to C#.",2014-03-18 04:44:31,7420226
681,"Yes. iOS. Everything but UI was C#&#x2F;Xamarin. Biggest pain was ramping on iOS and not realizing just how awful Storyboard was and how many was the Xcode designer wanted to screw me.<p>The integration between the two using Xamarin Studio on the mac felt slightly clunky at times. Tweak UI, hook up event handlers, go back to Xamarin... watch it pull those changes across. If it failed, and it did at times, you could end up repeating changes.<p>Xamarin Studio is not Visual Studio. Better than Xcode, but it&#x27;s not nearly the tool VS is.<p>Final app is a native experience nearly on par, performance-wise, with objective-c stuff. Most perf issues I hit also had more to do with working through iOS patterns &amp; practices (e.g. long table views&#x2F;lists with custom cells).<p>The cons are usually friction and requirements to understand more than a single tool&#x2F;language. You will need to bring up multiple games at once.<p>There is a 1:1 mapping between iOS SDK and library access in the Xamarin API.<p>I also did the kata thing and made simple apps to deploy across platforms just because I could. That was fun.",2014-03-18 04:54:46,7420261
682,"I maintain a website about options for cross-platform mobile development, and the page about the C# options (where Xamarin is a leader) is one of the most-viewed.<p>[1] <a href=""http://www.mobilechameleon.com/"" rel=""nofollow"">http:&#x2F;&#x2F;www.mobilechameleon.com&#x2F;</a>",2014-03-18 04:56:28,7420268
683,Yet he did ditch the fully open source approach they had going before with Mono... Xamarin Studio isn&#x27;t exactly cheap. He certainly prefers making money to running a charity.,2014-03-18 05:18:27,7420330
684,"I think they&#x27;re already using their own fork of an older Mono version. They couldn&#x27;t work out a mutually beneficial licensing deal with Xamarin to keep using their newest Mono versions or something.<p>I think Unity have a good relationship with MS, so Mono being moved to MS should be good news to Unity -- <i>for a while</i>.",2014-03-18 05:47:02,7420391
685,"I think the shift towards cloud services is key here - just like today&#x27;s OneNote announcement. But more than extending their tooling to competitor&#x27;s platforms, I think this is a sneaky way to actually make their platform more viable.<p>Microsoft has tried to pay individual developers to get them to develop for WP, but this is short-sighted and ultimately doesn&#x27;t address the opportunity cost involved. There are a number of cross-platform mobile tools out there (PhoneGap&#x2F;Cordova, Telerik Icenium, Xamarin, etc). For a small team, it&#x27;s damn near impossible to maintain both Android and iOS, let alone Windows Phone.<p>The fact that Xamarin is compiled to native code and built around Mono makes it a particularly interesting play, since it&#x27;s probably better suited for games as compared to the HTML 5-based solutions.<p>I evaluated, and liked, Xamarin a lot. As a .NET developer and part of a very small team, it made a ton of sense for me. The main issue was price - it&#x27;s very expensive which kind of becomes cost prohibitive for the small team that it is a great fit for.<p>If Microsoft buys Xamarin and builds it into Visual Studio (or gives it away as part of MSDN&#x2F;BizSpark), all of a sudden you have a lot of people building mobile apps in C#&#x2F;.NET - and targeting Windows Phone becomes much, much easier.<p>Microsoft can&#x27;t compete straight up  with Android or iOS because it doesn&#x27;t have the same audience that either of those platforms have. But providing tooling that makes our lives easier doing cross platform development is an ingenious trojan horse to getting people to be able to target Windows Phone as well.... or even Windows 8 for that matter since it&#x27;s just the CLR at the end of the day.<p>[1] <a href=""http://tmarman.com/Blog/Post/ba9a711f-dcdb-40b5-bca9-ad6eb5b8ad58"" rel=""nofollow"">http:&#x2F;&#x2F;tmarman.com&#x2F;Blog&#x2F;Post&#x2F;ba9a711f-dcdb-40b5-bca9-ad6eb5b...</a>",2014-03-18 05:59:08,7420417
686,"I don&#x27;t get the excitement. Nothing stopped Microsoft from releasing an open-source .NET implementation that works cross-platform, coupled with the toolset to build UIs on top of Android and iOS. It&#x27;s actually one of their core competencies and if relative nobodies could pull off RoboVM, then Microsoft has no excuse other than being defensive about Windows and they had plenty of time to do it, ever since 2001. Mono and Xamarin are only possible because a bunch of folks weren&#x27;t bounded by Microsoft&#x27;s bottom line.<p>At best this would be an acquihire. At worst this is a defensive acquisition.  I hope it doesn&#x27;t happen, because nothing good can come out of it.",2014-03-18 06:12:50,7420440
687,"Yes, for all the brilliant tech guys here, people seem to be incredibly misinformed about Xamarin. It is not like Titanium or Codenameone; it&#x27;s a C# API on top of the native SDKs. It&#x27;s not an abstraction, it doesn&#x27;t allow you to write your frontend code one time for all platforms. And it <i>does</i> allow you to use all and every native feature by using the native APIs. It&#x27;s just weird everyone here keeps crying about &#x27;it has to be objective-c&#x2F;java&#x27; without actually checking with Xamarin <i>is</i> apparently.",2014-03-18 07:58:59,7420689
688,"Right. You still ideally need someone who knows iOS to do the iOS app and someone who knows Android to do the Android app. Because the best way to build apps on each one is still different.<p>What Xamarin basically does for you (from my experience using it) is that you can now share the bits of code that are not OS-specific (like your business logic, data access layer, web services etc...). It doesn&#x27;t try to hide the underlying platform from you though.<p>It&#x27;s not a solution for write-once deploy everywhere (those solutions suck anyway).",2014-03-18 08:00:14,7420695
689,"Yeah, price was an issue for me (using it as a single developer for a hobby project).<p>I started doing an Android app using it and loved it but when it came to pay for the developer version, I couldn&#x27;t justify the cost - especially for an ecosystem that is constantly changing (and therefore requires constant updates which are also paid).
I sucked it up and re-wrote the app in Android Studio. Nowhere close to as pleasant as Xamarin but got the job done.",2014-03-18 08:03:27,7420707
690,"Not again! Fortunately when Attachmate acquired Novell it didn&#x27;t stop mono&#x2F;linux. Xamarin was completely focused on mobile apps but for the core of mono and monodevelop it has been great times.<p>But what will happen now? Will Microsoft silently kill cross platform, especially linux? What interest do they have not to do it?<p>Having invested heavily in a linux&#x2F;mono&#x2F;web stack this worries me a lot.",2014-03-18 08:11:32,7420724
691,"I have built a lot of apps with Xamarin (and others like Intel XDK and it&#x27;s predecessors); Xamarin has been the best experience for me so far. I don&#x27;t mind Objective-C, but compared to C#&#x2F;F# (yep F#! Nice!) it&#x27;s not very nice for my taste. Xamarin fixes that with 2 very nice languages and a solidly written small layer on the native API.<p>I have produced apps for iOS and Android with it after having written many native apps for both, so the transition was very easy as you use the same API&#x27;s. You just reuse a lot of non-UI code.<p>Note that I don&#x27;t use visual tools for either platforms; not in Xamarin nor native; all UI is handcoded which, for me, has been proven to be a lot faster indeed. Reuse, refactoring and reasoning with UI code are easy that way while these visual aids don&#x27;t really do anything beyond &quot;Hello World&quot;.<p>QT Creator is nice but when I tried it 6 months ago it was not ready for prime time mobile wise and it is an abstraction over the gui&#x2F;api meaning it is farther away from the API&#x2F;device than you would sometimes want.<p>Intel XDK to me was a horrible experience, but after making so many HTML5 mobile &#x2F; hybrid apps, I learned to hate the process. It&#x27;s not ready; just forget about it for now. Make web stuff (responsive, web apps) in HTML5, make apps in something else.<p>I would suggest learning native (Java&#x2F;Objective-C) first, getting some good experience with that in, then moving away from the visual tooling like storyboards etc (It&#x27;s a matter of taste but &gt; 100 apps later I would never use it again unless it improves a lot somehow... and I don&#x27;t see that happening) and then maybe use something like Xamarin  if you don&#x27;t like the original native languages or want to reuse a lot of code. A more painful way of reuse which is used in games a lot is to write the common code in C++ and only the UI in the native tech. This is not a nice process at the moment IMHO esp as Android requires you to do that via the NDK and I have had issues with that.",2014-03-18 08:12:11,7420726
692,That&#x27;s why I suggest you learn &#x27;native&#x27; on both first before moving to Xamarin; it&#x27;s very easy for me to map those code examples. Actually especially when Xamarin used more idiomatic .NET for a particular case; it is more natural to me so it&#x27;s actually the first thing I try when I see an example.,2014-03-18 08:14:18,7420730
693,"Dr. Dobb&#x27;s did a review of this experience:
<a href=""http://www.drdobbs.com/tools/xamarin-20-review/240150634"" rel=""nofollow"">http:&#x2F;&#x2F;www.drdobbs.com&#x2F;tools&#x2F;xamarin-20-review&#x2F;240150634</a>",2014-03-18 08:17:29,7420740
694,"This is a bizarre statement. MS could have developed Xamarin on their own, but they didn&#x27;t. Today Xamarin exists and is a very powerful tool with a large userbase. If MS now decides they want to enter that space, especially since it is becoming more and more worthwhile due to mobile platforms, then it makes more sense to buy Xamarin than to work in parallel on their own. It also makes sense not to fragment the market for such products.",2014-03-18 08:24:55,7420757
695,"Xamarin has quite a few products <i>based</i> on Mono which they sell. A separate implementation of .NET and the BCL doesn&#x27;t benefit Microsoft that much, but the <i>other</i> offerings Xamarin has might.",2014-03-18 08:34:38,7420783
696,"Great news if true. I&#x27;ve always thought MS should be more involved in the Mono&#x2F;Xamarin platform. It makes far more sense for MS&#x27;s mobile strategy than adding Android compatibility to WP. Instead, encourage devs to create a single .NET app that can be deployed to Android, iOS, and OSX, in addition to first-class support on WP and W8. You&#x27;d lose out on the current hot apps, but for the future it makes sense. For instance, several Nokia X Android apps were ported from their WP counterparts using Xamarin - <a href=""http://blog.xamarin.com/nokia-x-for-csharp/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;nokia-x-for-csharp&#x2F;</a> .<p>My only concerns if this were to happen are,<p>* What happens to Mono on Linux, BSD &amp; OSX? Does Mono simply become a deployment target for mobile devices?<p>* What happens to MonoDevelop?  Will VS be the only way to develop such apps?<p>* What about the web? I&#x27;d love to see a Mono port to pNACL or asm.js. An NACL port already exists, but it would be great to have one codebase targeting almost all platforms.<p>Either way, as someone considering using .NET with ServiceStack on the backend and Xamarin on the frontend, it&#x27;s very exciting.",2014-03-18 08:52:08,7420837
697,"I think it would be great, if they would polish the core libraries.<p>Too many subtle differences when I&#x27;ve tried it the last time (some years ago). Afterwards we changed our course and stopped using it.<p>We were mostly interested in using Winforms applications on Windows and Linux - but it didn&#x27;t really work for our application. I had the feeling that Xamarin wasn&#x27;t interested in making the code any better for our use - instead they were interested in mobile application development.<p>If Microsoft baught them I really wished our use case would be improved too.",2014-03-18 09:29:02,7420943
698,"Xamarin.iOS generates full iOS binaries, not Objective-C source code, and they can be published to the app store.",2014-03-18 10:14:09,7421085
699,"I&#x27;ve also used Xamarin to develop for both Android and iOS, and I found it to be a good experience. The tools deliver what they promise, in my opinion. Built application look and feel like full native apps.<p>I don&#x27;t want to repeat the comments made by others, but one other other thing that impressed me was being able to compile c# code into a portable class library dll on windows, then just copy the binary to a macbook and link it into my iOS app project. Very cool code reuse.<p>Not knowing ObjC made getting started on iOS harder than it could have been because examples tend to be in ObjC - although Xamarin have some useful snippets and recipes on their site. Android was easy because of the similarity between Java and C#. You still need to learn the platform APIs, obviously.<p>Its been some time since I felt so positive about a new piece of developer-orientated technology. Definitely recommended.",2014-03-18 10:33:11,7421134
700,"&gt; Develop in Visual Studio using Xamarin for iOS and Android while writing in C#, now the incremental cost to also developing for WinPhone is much, much lower<p>You are counting the cost delta between writing C# for iOS and Android, something that is not that common, and also writing for Windows Phone. Most teams I know of prefer to write their code using the native toolkits. For them, writing in C# would be an extra cost. Few see writing equivalent code in Objective-C and Java as prohibitive because it&#x27;s very common to host the bulk of the functionality on servers and only run UI code on the mobile client. UI code has traditionally been non-portable.<p>For those who are already writing their mobile apps in C# for whatever reason, porting to Windows Phone is already easier than porting from Objective-C or Java.",2014-03-18 10:57:58,7421196
701,"And just as we were talking about .NET in other environments and Mono and Xamarin, we hear the news about Microsoft in talks to acquire Xamarin. Interesting.",2014-03-18 11:34:36,7421301
702,"It makes strategic sense when they&#x27;re in 3rd place and theyre buying a cross platform tool that is about an order of magnitude better than any of the others.<p>Because theyre in 3rd place, theres basically zero cannibalization cost and only the potential upside of &quot;owning the cross platform framework (i.e. the java) of mobile&quot;<p>As I&#x27;ve said before: I want to live in a world where ms buys xamarin, open sources or provides the software for nearly free.  Ms could plausibly win the app wars this way, and by extension mobile.<p>Of the three&#x2F;four mobile languages C# is tied with JavaScript for the one I&#x27;d most like to spend my weeks working in, and alone in first for the one id most like to mentor a child in.<p>&quot;code for windows phone, get iOS and android for nearly free&quot; is an extremely compelling proposition.<p>What makes this not a strategic disaster like OS&#x2F;2 or android on bberry in my opinion is 1) it is a 3 legged race not a 2 way race and 2) it is a &quot;write in our language, we&#x27;ll compile to the competitors&quot; not a &quot;we can run our competitors apps&quot;",2014-03-18 11:44:10,7421335
703,"Xamarin is a tremendous accomplishment, but microsoft should tread a little lightly here.  As it stands, Xamarin may have nearly saturated the market it has available to it.<p>To operate on Xamarin effectively, in addtion to C#, you need to be able to (1) Make use of Objective C documentation and Stack Overflow, etc.  (2) Make use of Java documentation and SO (this is easier).  (3) Learn the AXML UI development patterns of Android, (4) Learn the nib UI development patterns of iOS.<p>For (1) and (2) Most of your corner cases have not been hit by Xamarin devs yet, sure, growing will help this, but it will always be just like Mono and C# documentation -- there is <i>some</i> mono information, but often, you go back to the MS CLR documentation and try to figure out where its not quite the same.  So right now, you are looking at let&#x27;s say your A+ through B- level developers as being &#x27;capable&#x27; of handling this.  Microsoft needs big box corporate knucklehead &quot;developers&quot; to be able to succeed with their tools go get the kind of traction they need.<p>I don&#x27;t say this is an impossible task for Microsoft, in fact, they are second only to jetBrains in terms of developing the best IDE&#x27;s (that was my #1 hope was that Xamarin would contract with JetBrains for Xamarin Studio) and they certainly have more resources and the expertise to get it done.  But it&#x27;s not a home run, and it&#x27;s not nearly &#x27;right once, run anywhere&#x27;.<p>This could be a super exciting development, I&#x27;ll be watching for more!",2014-03-18 12:53:23,7421546
704,Would this make Xamarin free ?,2014-03-18 13:31:23,7421752
705,"&gt; As I&#x27;ve said before: I want to live in a world where ms buys xamarin, open sources or provides the software for nearly free<p>I want to live in a world where Mono implements the full .NET Framework and I can run PowerShell scripts on Linux. Somehow I doubt that is part of Microsoft&#x27;s plan here :-(",2014-03-18 13:37:55,7421781
706,"Might be worth reminding that Mono and Monodevelop are still LGPL license software, so they can&#x27;t exactly &quot;shut it down&quot;. The Xamarin products for mobile development are not freely licensed - that&#x27;s what Microsoft are purchasing.",2014-03-18 14:21:41,7422056
707,"&gt; As it stands, Xamarin may have nearly saturated the market it has available to it.<p>No way Xamarin has saturated the market with their licensing costs. $1000&#x2F;yr per seat (for VS integration, last I looked) is cost prohibitive. If this deal lowers that cost significantly, it&#x27;s a very compelling way to go for lots of devs.",2014-03-18 14:36:57,7422138
708,"&quot;As it stands, Xamarin may have nearly saturated the market it has available to it.&quot;<p>The key part of that is &quot;the market available to <i>it</i>&quot; (Xamarin).<p>Right now a .NET&#x2F;Windows shop that wants to have an iPhone app has a choice between doing (1) xamarin, (2) having devs learn native iOS development, (3) try one of the HTML5 app frameworks, or (4) contracts the work out. Certainly in the cases of (2), and (4), and maybe (3), it&#x27;s entirely possible that a Windows phone version of the app will never be built.<p>While the &quot;.NET shops only use stuff from Microsoft&quot; meme isn&#x27;t exactly true, it&#x27;s accurate in a decent number of cases. If Xamarin is &quot;from Microsoft&quot;, though, all of a sudden all of these .NET shops that might be considering options 2, 3, or 4 have a much bigger reason to choose option 1. And hey, now that Xamarin&#x27;s from Microsoft, I bet they make it <i>really</i> easy to build your iOS&#x2F;Android app for WP, too.<p>The way I see it, at this point, Microsoft doesn&#x27;t want to compete on apps. They&#x27;re never going to be the primary target for most apps until they have the market share to justify it. So, how to best level the playing field, apps-wise? Make it super-simple to build an app for iOS, Android, and WP at the same time.",2014-03-18 14:58:11,7422295
709,"Bad news.<p>If Microsoft was interested in having a cross-platform runtime or a cross-platform IDE, they could have done it years ago.<p>Now, as some kind of side-effect of buying Xamarin, the have acquired most people behind Mono&#x2F;MonoDevelop ... how do you think this will work out?<p>Maybe not immediately, but as soon as someone in the management decides that costs need to be cut, someone will ask the question why microsoft maintains two runtimes, two class libraries, two IDEs, etc. and kill them.",2014-03-18 14:58:19,7422299
710,"$149 per month, yikes! And people say that Xamarin is expensive.",2014-03-18 15:42:52,7422576
711,"Speaking of RoboVM, sounds like it is making very good progress [1]. And can&#x27;t beat its price of free.<p>LibGDX is using RoboVM these days instead of Xamarin, due to the price. Also anecdotally they found RoboVM runs even faster than Xamarin [2], despite being a young project.<p>[1]: <a href=""http://blog.robovm.org/2014/03/robovm-0010-is-here.html"" rel=""nofollow"">http:&#x2F;&#x2F;blog.robovm.org&#x2F;2014&#x2F;03&#x2F;robovm-0010-is-here.html</a><p>[2]: <a href=""http://www.badlogicgames.com/wordpress/?p=3161"" rel=""nofollow"">http:&#x2F;&#x2F;www.badlogicgames.com&#x2F;wordpress&#x2F;?p=3161</a>",2014-03-18 15:45:04,7422592
712,Is Xamarin performance on parity with native on Android and iOS or is this just a marketing gimmick? I&#x27;ve heard mixed stories about long startup time and stability of mono runtime on android...,2014-03-18 16:10:07,7422743
713,"I was worried about this last year when Xamarin announced their new revenue model: what protections are in place for the various open source pieces of their technology? Last time I asked for more details it stopped because it was my job to limit the scope of the answers with a list of specific questions; I felt it didn&#x27;t make sense to narrow things down like that.<p><a href=""https://news.ycombinator.com/item?id=5251474"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=5251474</a>",2014-03-18 16:33:35,7422923
714,"I think this is a great move for both Xamarin and Microsoft.  The company I work for is currently using Xamarin to help create cross platform apps with a consistent backend architecture.  Sure, we have to develop different front ends for each platform, but we can leverage C# for everything and we don&#x27;t super stars on any one platform to allow us to generate things quickly and well.<p>I was waiting for something like this to happen, ever since I watched this video from Hanselman at the Xamarin Evolve conference last year: <a href=""http://www.hanselman.com/blog/XamarinEvolve2013TalkVideoHowCSavedMyMarriage.aspx"" rel=""nofollow"">http:&#x2F;&#x2F;www.hanselman.com&#x2F;blog&#x2F;XamarinEvolve2013TalkVideoHowC...</a>",2014-03-18 17:14:58,7423307
715,"The more comparable license from Xamarin would be the $999 license, which works out to be $999 &#x2F; 12 = $83.25",2014-03-18 18:53:21,7424113
716,"I agree C# from pure language point of view had a better road map and unlike Java which was sort of kind of run by committee did not need colossal consensus from disparate groups for new language features.<p>JVM vs CLR its a different story - I am hearing Microsoft in negotiation with Xamarin to buy&#x2F;invest, that may make Mono get feature&#x2F;implementation parity with CLR. Till then JVM is the only thing close to platform agnostic environment in town.",2014-03-18 19:54:59,7424561
717,"The real problem with C# is that it is still basically Windows-specific. Yes, Mono is out there, but have you actually tried to build a Mono app without using Xamarin? Have you looked at what the Xamarin licenses cost? Once your project reaches a certain level of complexity, you have to pay them outrageous fees. And even with it, it still feels like you&#x27;re operating something that could keel over at any second. The ecosystem there is just terrible, which is a shame because F# is such a great language.<p>The thing that makes Java so great as a platform is that there are so many totally reasonable tools that you can just download and use. Eclipse, IntelliJ (community version, which is still pretty good), the myriad of excellent alternative JVM languages, all freely available and cross platform.",2014-03-18 21:00:36,7424934
718,"Guys this is bad new! I don&#x27;t see why everyone&#x27;s cheering this on. Xamarin is what gave life back into the Mono project. It renewed interest in the Mono VM ecosystem, educated people about the possibility of running Mono in the enterprise....Xamarin was giving Mono the boost it needed. Mono sat dead for years...Microsoft&#x27;s probably just trying to buy Xamarin to cherry-pick the cross-platform mobile development and kill off the VM outside of a mobile app context.",2014-03-19 00:56:26,7426167
719,Yesterday&#x27;s discussion on HN about Xamarin possibly getting purchased by Microsoft was mostly positive about what it meant for Microsoft. But if that were to pass I think Day 1 releases to C# developers of things like iOS 7.1 and Android Wear Preview would (probably) become a thing of the past.,2014-03-19 04:29:39,7426818
720,"I miss &quot;Platform&#x2F;OS&quot; -&gt; OS&#x27;s like Linux, BSD.. Platforms like browsers, xamarin, cordova, etc<p>Those are not on the &quot;Software development tools&quot; category.. :&#x2F;",2014-03-19 19:57:19,7431376
721,"I&#x27;m guessing it&#x27;s something like Xamarin: <a href=""https://store.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a><p>(Albeit way cheaper)",2014-03-20 14:18:05,7435632
722,"C# has a huge presence in cross-platform gamedev and mobile as well: Unity3d, MonoGame, Xamarin.",2014-03-21 09:22:47,7441345
723,"Also, thanks to xamarin, c# now is often used in those mobile-shop that want to keep a single codebase and publish for all the main mobile platforms (wp, android, ios)<p>Less context switch and faster develop than having 3 different codebases and different teams for each one.",2014-03-21 12:20:46,7441796
724,"As someone who has used several cross-platform frameworks (Titanium, Cordova&#x2F;PhoneGap, investigating Xamarin), I have a question about going &quot;full native&quot;: how do you handle shared core code?  Our app has an engine that drives the business logic, and the cross-platform frameworks have been useful because we don&#x27;t have to deal with modifying the core codebase for different platforms [0].  Is it possible to create platform-agnostic libraries that can be shared?<p>[0] Despite the many claims of &quot;cross-platform UIs,&quot; we have many cases in our UI layer of doing different things on different platforms.",2014-03-21 13:21:17,7442049
725,As a C# developer I am well into a project using Xamarin. I have not run into any road blocks and I am very happy with the performance on both iOs and Android. I currently have 80-90% shared code utilizing portable libraries and MvvmCross. Only real learning curve has been at the UI level but they are both rather WPF&#x27;ish especially Android. I highly recommend this path for a C# dev.,2014-03-21 13:31:21,7442138
726,"Xamarin is great for sharing code. You just rewrite the GUI layer per platform. It&#x27;s great, cannot really say it any differently.",2014-03-21 13:52:23,7442282
727,"I always recommend (and when it&#x27;s about employees demand) people to first learn everything native in Objective-C&#x2F;Java(&#x2F;C# if you need wp8 as well) before trying to unify things with C#&#x2F;Xamarin, C++ or JS. That way you have a solid understanding what is possible and you don&#x27;t lock yourself in. That said; Xamarin rocks and I hope MS doesn&#x27;t kill it.",2014-03-21 13:54:44,7442297
728,I&#x27;ve had quite a lot of luck developing HTML&#x2F;JS apps in Sencha Touch (very basic CRUD apps of course). Really noticed a speed improvement running the latest release on an iPhone 5S. Not sure how much room there really is for HTML&#x2F;JS ports at this stage. Titanum was a let down for me. Am keen to try Xamarin next. Or just go native? Thoughts?...,2014-03-21 14:11:31,7442374
729,You are forgetting about the modern contender - Xamarin. It&#x27;s a sweet spot between HTML5 and native: modern high-level language and a very decent performance.,2014-03-21 15:33:23,7442861
730,isn&#x27;t Rdio built with Xamarin and therefor uses native UI elements ?,2014-03-21 18:18:09,7443818
731,"C# will be around &#x27;forever&#x27;. It&#x27;s robust, well-supported, well-documented, and with Mono &#x2F; Xamarin works across many platforms (including iOS and Android). I haven&#x27;t experienced inherent memory leaks as you have described (10+ years of heavy use). Performance limitations are more tied to IO (disk, network etc) than the language.<p>That said, this isn&#x27;t an either&#x2F;or question. One can learn more than a single language at a time. A decent programmer, IMO, has knowledge of several languages, and there is no disadvantage at all in making one of those C#.",2014-03-21 19:49:52,7444455
732,Anyone here tried xamarin? It&#x27;s a 1:1 map of the iOS &#x2F;Mac API. I love c# and wish I could use it to write native code. C++ is just too clunky to me to use daily. The one thing about iOS and Mac dev that I hate is the interface builder. Worst. ui. designer. ever.,2014-03-22 02:06:49,7446804
733,"Have you considered PyObjC for programming Mac OS in Python?<p><a href=""https://pythonhosted.org/pyobjc/"" rel=""nofollow"">https:&#x2F;&#x2F;pythonhosted.org&#x2F;pyobjc&#x2F;</a><p>Or Xamarin for programming iOS using Mono&#x2F;C#?<p><a href=""http://docs.xamarin.com/guides/ios/getting_started/hello,_world/"" rel=""nofollow"">http:&#x2F;&#x2F;docs.xamarin.com&#x2F;guides&#x2F;ios&#x2F;getting_started&#x2F;hello,_wo...</a><p>Or F-Script for programming Mac OS X from a command-line shell?<p><a href=""http://www.fscript.org/"" rel=""nofollow"">http:&#x2F;&#x2F;www.fscript.org&#x2F;</a><p>All three are quite well established and work pretty well for what they do.",2014-03-22 02:07:58,7446819
734,"I tried to do Android development and threw in the towel.<p>But picked it up again later using Xamarin Studio. Much nicer experience and easier to make a nice design.<p>I managed to make a small app and have it run on my iPhone and Windows Phone, and my flatmates Android.<p>Lots of fun, just lacking ideas to make a real world app now :(",2014-03-24 04:37:30,7456735
735,"Or F#, if you are using .net or mono. It&#x27;s pretty well integrated into Visual Studio these days, and quite good in Xamarin Studio.",2014-03-26 14:48:51,7473749
736,"I agree.<p>The most exciting thing would be Mono becoming a first-class citizen for .NET.<p>I think this is likely for two reasons:<p>1) They may well acquire Xamarin, which would result in them &#x27;owning&#x27; Mono.<p>2) The new CEO has been extremely forward thinking vs the rest of Microsoft on supporting open source software on Azure.<p>3) Increasing amounts of ASP.NET and other .NET technologies are open source now<p>I would love for them to do this. I think they&#x27;d also do very well out of it, as Azure is great platform.",2014-03-27 17:59:39,7482038
737,"meh sorry - I mean: working ASP.NET <i>mono</i> ecommerce (no, not aspDotNetStorefront - ASP.NET MVC app on green field). I started when Mono was in Novell&#x27;s hands and hoped they will push harder for C#&#x2F;Web&#x2F;Linux but it didn&#x27;t happen and now Xamarin is interested solely in mobile so it&#x27;s even less reasonable to use Mono for web on Linux these days. Don&#x27;t get me wrong I admire Mono guys but Monodevelop (even recent versions) is just not IntelliJ level IDE and Java with it is not so bad (especially Java8). Maybe I would go with ROR or Python but it&#x27;s SPA (Dart on client side) so Java is just webservice (Dropwizard makes it frictionless)",2014-03-27 20:52:18,7483386
738,"No, it isn&#x27;t. It would make the likes of Xamarin and RubyMotion impossible. You&#x27;re confused with the fact that App Store policies do not allow downloading and running new executable code.",2014-03-28 10:38:18,7486329
739,I thought Xamarin and RM compiled to objc.,2014-03-28 10:49:34,7486362
740,"Yeah, I am pretty sure that Xamarin compiles down to Obj-C on the iPhone, but on Android it includes a VM in java that runs .net (mono).",2014-03-28 12:30:09,7486734
741,"I was really hoping the &quot;developers&quot; portion would announce a Xamarin acquisition. Maybe at BUILD, but curiously as this talk was going on I got an email from Xamarin telling me to visit them at BUILD.",2014-03-28 14:45:07,7487552
742,"Close.  According to <a href=""http://xamarin.com/how-it-works"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;how-it-works</a> , they do Ahead-Of-Time compilation to go straight to ARM binaries for iOS.",2014-03-28 15:11:59,7487733
743,"SEEKING WORK - London or Remote<p>F#&#x2F;C# development<p>Business automation, robotics, pharmaceuticals, financial markets<p>Cross-platform apps in Xamarin<p>Desktop&#x2F;Server apps (.NET and Mono)<p>REST APIs<p><a href=""https://github.com/endeavour"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;endeavour</a><p>PM me or get in touch via form on website @ www.perfectshuffle.co.uk",2014-04-01 15:17:17,7508865
744,".NET Software Developer. Remote full-time, international welcome.<p>US: We&#x27;re DealerBuilt. We make DMS software that runs car dealerships. We&#x27;re a young startup trying to unseat antiquated incumbents and we already count some of the highest volume dealerships in the world as our customers.<p>You&#x27;d be working on the Interfaces Team.  Our team:<p><pre><code>  - develops our large web API
  - builds integrations with partner software and hardware
  - creates DealerBuilt&#x27;s advanced interfaces (mobile, etc.)
</code></pre>
TECHNOLOGY: Our team is a .NET shop. We use C#, WCF, ASP.NET, WPF, Xamarin, JavaScript, and PostgreSQL.<p>YOU: We&#x27;d prefer candidates with a BS CS and 3+ years experience, but talented entry-level developers are encouraged to apply. You should be proficient in C# and SQL (Postgres preferred). Experience with our other technologies is a big plus.<p>Send resume and cover letter to avis.haberkamp@dealerbuilt.com.",2014-04-01 15:35:29,7509028
745,"SEEKING WORK - San Francisco, CA or REMOTE, TRAVEL OK<p>I build apps, websites, APIs, and turnkey solutions that solve critical business problems. Here are some recent projects (more at <a href=""https://www.pilvy.com/"" rel=""nofollow"">https:&#x2F;&#x2F;www.pilvy.com&#x2F;</a>):<p>* (client wishes to remain nameless): An iOS VPN client for a major VPN service provider that uses iOS configuration profiles to deliver an easy-to-use VPN experience. [Objective-C, Cocoa Touch]<p>* IVPN Client for Mac &amp; Windows: Built a custom VPN client (on top of OpenVPN) for IVPN (<a href=""https://www.ivpn.net/"" rel=""nofollow"">https:&#x2F;&#x2F;www.ivpn.net&#x2F;</a>), who needed built-in privacy features like DNS leak prevention and firewall blocking. [C#, .NET, Objective-C, Xamarin.Mac]<p>* VMware End User Computing Demo Portal (<a href=""https://www.vmwdemo.com/"" rel=""nofollow"">https:&#x2F;&#x2F;www.vmwdemo.com&#x2F;</a>): A purpose-built Desktop as a Service (DaaS) that allows VMware&#x27;s sales and marketing teams to easily demonstrate the Horizon product suite to high-value customers. Eliminated a ton of time-consuming work by automating Active Directory&#x2F;LDAP account provisioning, expiry, and integration with Horizon Workspace. Deployed in different sales regions with full i18n support. [node.js, Windows Active Directory, various VMware APIs]<p>I&#x27;m looking for short-term (1-3 months) projects. Thanks for looking!<p>tech: Objective-C&#x2F;Cocoa&#x2F;iOS, node.js, JavaScript, Ruby on Rails, C#&#x2F;.NET, Python, Elixir&#x2F;Erlang<p><a href=""https://www.pilvy.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.pilvy.com</a> | <a href=""https://github.com/ammmir"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;ammmir</a> | amir at pilvy dot com",2014-04-01 17:26:34,7510002
746,"Lots of rumors at this point about what will be announced...<p>Windows Phone 8.1<p>Windows 8.1 (big update)<p>New Nokia models<p>Surface 3<p>I would also not be surprised to see an announcement of an acquisition in the dev space, Xamarin comes to mind but I dont think that will happen (yet).",2014-04-02 14:22:10,7515667
747,As a Xamarin customer I&#x27;m also wondering if Microsoft will announce a purchase or investment today. The risk for Microsoft has to be that if they don&#x27;t then someone else might buy them first.<p>Xamarin&#x27;s twitter feed has been kind of quiet today.,2014-04-02 15:17:19,7516102
748,I&#x27;m hoping that MS arranges with Xamarin to be able to provide some form of the VS+Xamarin toolset for at least some SKU&#x27;s of VS2013 and up for free. Sort of like InstallShield LE. They could delight if it were more.,2014-04-02 15:28:14,7516195
749,"The amazing thing is that you can potentially write all your code in C# and have backend&#x2F;frontend logic for the web (ASP.NET), Windows, Windows Phone, and even iOS&#x2F;Android (via Xamarin). Wow.",2014-04-02 17:36:43,7517348
750,"I missed the cross platform part, I&#x27;ve been bouncing between the live stream and work this morning. So the claim is iOS apps with WinJS as if it had been built in Obj C with XIBs and not just a web view hosted in a native harness? If true that would be pretty amazing (it would probably also cause Xamarin to shit a brick)",2014-04-02 17:41:59,7517407
751,"Interesting move in the right direction. I wonder if they&#x27;ll take it further and let you write iOS and Android apps using Xamarin &#x2F; Mono?<p>This would actually provide an easy path for developers to get into the Windows ecosystem while ignoring the whole market share issue. Combine first class integration with an awesome IDE (Visual Studio), and frankly way better tooling than Eclipse this would be a pretty compelling reason for me to use Xamarin, and by extension have a Windows run target for my app.",2014-04-02 18:11:47,7517691
752,"The amazing thing is that you can potentially write all your code in C and have backend&#x2F;frontend logic for the web, Windows, Windows Phone, OSX, FreeBSD, OpenBSD, Tru64, VAX, Arduino, Linux Kernel, Windows Kernel, Mach, Hurd, and practically every processor or operating system ever built, and even iOS&#x2F;Android (via Xamarin). Wow.<p>You can even link to and reuse that code from languages such as: C++, C#, Java, Ruby, Perl, Python, assembler, lua, scheme, lisp.<p>The future is gonna be so 1970.",2014-04-02 18:41:36,7517949
753,"What&#x27;s to say, once they complete the purchase of Xamarin, that universal also includes OSX, iOS, Android and even Linux?",2014-04-02 19:01:23,7518105
754,".Net native code compilation, aka static linking for the .net age. This feature is a LOOOOONG time coming, they should have had it available a decade ago.<p>P.S. Mark my words, this is going to be a huge deal. Especially since MS is acquiring Xamarin, which basically does the same thing, but for mobile platforms. With the ability to develop in .net languages and still deliver a plain-jane .exe that doesn&#x27;t require jitting it&#x27;ll open up a lot of new opportunities. Especially if they start targeting non-windows platforms like linux, iOS, and android with fully-baked tools. Imagine how much more popular C# would be if it wasn&#x27;t tied to the Windows platform? And if you could choose whether or not you wanted to ship a small managed exe or a fat native exe that launched quickly?",2014-04-02 19:33:52,7518332
755,"Some people here have mentioned this already but I am quite surprised with all the happiness and it&#x27;s nice but... I have been writing apps on my Mac targetting asp.net, ios, android, wp8 and win8 with a lot of reuse and perfect frontends for two years. I love f#&#x2F;c# and it works like a charm. Business wise it is nice that you have to pay only once but outside that what in god&#x27;s name is so nice or special about this? I was hoping this would include a build system on Azure and a unified system using Xamarin all from VS. This is nothing at all. Wow I can target those 3 wp8 users from my win8 codebase app. Pfff. So it&#x27;s just fanboys or almost nothing changes or I am missing some significant thing even though I am quite deep in this ecosystems for years now?",2014-04-02 19:54:58,7518491
756,"&gt; Imagine how much more popular C# would be if it wasn&#x27;t tied to the Windows platform?<p>It&#x27;s not. Recent versions of Mono are quite good. You will have to pay Xamarin at least $299&#x2F;year to deploy on iOS or Android, though.",2014-04-02 20:06:52,7518572
757,&gt; Especially since MS is acquiring Xamarin<p>Is this certain? Was it announced?,2014-04-02 20:07:32,7518578
758,"&gt; he amazing thing is that you can potentially write all your code in C and have backend&#x2F;frontend logic for the web, Windows, Windows Phone, OSX, FreeBSD, OpenBSD, Tru64, VAX, Arduino, Linux Kernel, Windows Kernel, Mach, Hurd, and practically every processor or operating system ever built, and even iOS&#x2F;Android (via Xamarin). Wow.<p>Have you ever done C development like this, ever in your life?<p>I did. Between 1994 and 2003, we had applications run across Windows, HP-UX, Aix, DG&#x2F;UX, GNU&#x2F;Linux, BSD, Solaris.<p>An awful mess of #ifdefs, compiler specific behaviours, lack of POSIX compliance, OS specific extensions.<p>This on the server side, and lets not forget there are ZERO portable standards for writing portable GUI code in C.<p>Finally, C shouldn&#x27;t never had become mainstream given its lack of safety, that we are still suffering in 2014. There were better systems programming languages in the late 70&#x27;s, they just weren&#x27;t at Bell Labs.",2014-04-02 20:17:53,7518661
759,"There are rumors that Microsoft is considering the purchase of Xamarin [1].  And now Microsoft is now previewing their .NET AOT compiler for X64 and ARM.  I see great things in C#&#x2F;.NET&#x27;s future in mobile and cross platform development.<p>On another note, I wonder if Microsoft addressed the inherent limitations of AOT in C# [2]. I wonder if it&#x27;s a compile-time error, or if that segment of code is interpreted.  I doubt it&#x27;s interpreted, as that&#x27;s a giant perf loss.<p>[1] <a href=""http://www.wpcentral.com/microsoft-reportedly-considering-acquisition-xamarin"" rel=""nofollow"">http:&#x2F;&#x2F;www.wpcentral.com&#x2F;microsoft-reportedly-considering-ac...</a><p>[2] <a href=""http://www.mono-project.com/AOT#Limitation:_Generic_Interface_Instantiation"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;AOT#Limitation:_Generic_Interfac...</a>",2014-04-02 20:19:54,7518672
760,"At first I thought it was a cross platform app building something-or-another (kinda like Xamarin), but now that I actually am building it and playing around with it I see that it&#x27;s something else entirely.<p>I&#x27;m actually glad this happened though. Seems like MS is finally rallying around C# as the defacto language for building apps (as opposed to Visual Basic or even Visual C++). This project might succeed (or at least find a nitch) among developers who are building touch centric web applications.",2014-04-02 21:33:23,7519214
761,"This seems to be the sole source of those rumors:<p><a href=""http://www.crn.com/news/mobility/300072056/sources-microsoft-in-talks-to-acquire-mobile-app-development-startup-xamarin.htm"" rel=""nofollow"">http:&#x2F;&#x2F;www.crn.com&#x2F;news&#x2F;mobility&#x2F;300072056&#x2F;sources-microsoft...</a><p>&quot;Microsoft is in the final stages of negotiations that could lead to either an acquisition or major investment in Xamarin, sources with knowledge of the discussions told CRN recently.&quot;<p>The article is from march 17th and there doesn&#x27;t seem to be anything newer.",2014-04-02 21:45:14,7519294
762,"If MS buy Xamarin then it&#x27;ll be a fantastic validation for a team that was dumped by Novell not so long ago.<p>I&#x27;m also very excited about the idea of getting back into C# again. I always loved the language, but moved away from the .NET stack. Here&#x27;s hoping.",2014-04-02 22:17:16,7519454
763,"Still rumor and I don&#x27;t expect to see anything on that front for some time. Why buy the cow when the milk is free, not like Xamarin is flirting with enabling Java on iOS or something - they are sold out to C#&#x2F;F# so Microsoft is reaping the benefit.<p>More evidence, Xamarin announced their Evolve conference dates, times and prices and when it goes on sale - if Microsoft were buying them they would hold off on letting several thousand people spend thousands of dollars for a dev conference that would later be tantamount to a bait and switch.",2014-04-02 22:36:23,7519541
764,One admittedly crazy theory is that this is laying the groundwork for building iOS apps and therefore would compete with Xamarin. Any kind of JIT would not be allowed on the iOS app store.,2014-04-03 00:57:10,7520157
765,"From a platform perspective, Qt is good for all the desktop environments, but for mobile, .NET&#x2F;Xamarin is the way to go.<p>From a language perspective, why in the world would you want GUI code in C or C++? Both languages make it very easy to shoot your foot off and have no idea what happened. However, C can be very elegant if used for the right reasons. C# is safer, but also not perfect. That&#x27;s where F# comes in. :)",2014-04-03 03:50:07,7520822
766,"What in the world are you talking about? Apps in Xamarin can be as much as 10mb for a full app. Its linker is smart and knows not to bring in stuff it doesn&#x27;t need. If you don&#x27;t, it&#x27;s around 40mb.",2014-04-03 03:58:06,7520851
767,"I&#x27;m talking about releasing a cross platform app for Windows, Linux, OSX, Android, and iOS, and the differences between Java&#x2F;C# and C.<p>To be fair I haven&#x27;t tried to release an app for Windows&#x2F;OSX from Xamarin but my understanding is that it requires the .NET or Mono frameworks which on most computers is a 100 to 200 MB install.<p>For Java you&#x27;re for sure going to have to download the JRE. When you start the app it eats gobs of memory.<p>Maybe it&#x27;s changed but even Xamarin itself requires Mono to be installed, this is the kind of shit I&#x27;m talking about, you should download the app, drag it to applications, done. Or on Windows click Next a whole bunch of times.<p>Even the monstrosity that is XCode is a one drag install.",2014-04-03 04:33:58,7520975
768,"&gt; <i>C# is a much higher-level language than C, with a much richer set of libraries that can be relied upon to be everywhere. That&#x27;s why it matters.</i><p>Actually this is not true. I&#x27;ve just been tasked with maintaining some C# code that is used as a business tool.<p>No problem, I thought, I&#x27;ll just use Xamarin and Mono on my Mac. I made progress, but as soon as the C# code went to use the OleDbConnection stuff (to write to an MS Access database and make Excel files) it threw a DLLNotFoundException. So now I have to find a Windows machine to do the rest of my debugging.",2014-04-03 05:09:38,7521070
769,"The word is, that Microsoft is talking with Xamarin about a possible acquisition.",2014-04-03 05:57:15,7521210
770,"This could lead to a way to build a dynamic language on top of .NET and eventually be usable in iOS? I ask because: <a href=""http://docs.xamarin.com/guides/ios/advanced_topics/limitations/"" rel=""nofollow"">http:&#x2F;&#x2F;docs.xamarin.com&#x2F;guides&#x2F;ios&#x2F;advanced_topics&#x2F;limitatio...</a> aka: No Dynamic Code Generation",2014-04-03 13:03:23,7522479
771,This confirms to me that as a software agency we were right to stick with C# even when it was &quot;uncool&quot; and there were plenty of new kids on the block (I&#x27;m looking at you RoR).<p>There were a number of times when I wondered if we had backed the wrong horse in Microsoft but being able to gain traction on mobile development (assuming the Xamarin purchase goes ahead) and other changes such as native compilation makes me happy with stuck with them.,2014-04-03 13:05:18,7522486
772,Miguel just demo&#x27;ed building a C# iOS app using a modified Roslyn-powered C# compiler with Xamarin Studio on OSX.,2014-04-03 17:06:00,7524250
773,Quite a lot of people actually. These moves have been on the cards for years. Just waiting now for the next big move in the coming months of when they acquire Xamarin.,2014-04-03 17:08:44,7524277
774,"I was hoping there would be an announcement at Build that they had acquired Xamarin, but that didn&#x27;t happen. All that was mentioned was that they were a partner that they were working with. Still a possibility in the future though.<p>The open sourcing of Roslyn can only mean good things for Xamarin.",2014-04-03 17:23:15,7524410
775,"Microsoft clearly is involving Xamarin in this announcement -- parts of Xamarin are going into the same dot net Foundation that&#x27;s in charge of this, and de Icaza was on stage for part of this. It may be best for Microsoft at this point if they support and involve Xamarin without buying it outright, people who want to use Xamarin with MS tooling can take advantage of Visual Studio integration, people who are wary of Microsoft can use Xamarin Studio and Mono and never officially touch Microsoft&#x27;s stack while still becoming part of their ecosystem.",2014-04-03 17:36:08,7524522
776,I&#x27;m not sure any of this would have happened without Miguel. Mono really gave .NET a second life when MS dropped the ball.<p>It&#x27;s also somehow satisfying to witness Xamarin&#x27;s success and further opening of .NET after all the bashing and hating Mono received from the free software community.,2014-04-03 18:16:25,7524837
777,"&quot;Devices &amp; services&quot;
Azure is your servers and the .net + C# tooling story from dev to deploy makes the question of selling Windows servers in a VM world moot. Many of the moves coming out of this Build seem to point to a world where it&#x27;s going to be cheaper and easier to pay for all the MS services and tooling than to try to cobble it together with other people and platforms.<p>We&#x27;re looking at a lowered on-ramp to .net apps that run more smoothly than java+linux+every-support-tool-bit (dev-wise) across devices (and things). It&#x27;s compelling.<p>Everything from dev to deployment and ops is getting touched at this conf. This shows where MS&#x27;s strengths can present differentiation. Their profit source is, and has been, building&#x2F;selling tools and platforms for others to run businesses. When the thing people hate becomes more like what they aspire to have&#x2F;be, the tension is palpable.<p>Google is about the only other player nearly capable. But Google&#x27;s mission has far less to do with selling shovels vs. harvesting and monetizing.<p>Apple is just not in this space. If anything, they sure feel like a device-only company in this conversation. WWDC is about the garden. Build is handing out spades, shovels, and, now, dirt.<p>Xamarin&#x27;s Evolve, last year, felt a bit like all this does. The are big things happening. If nothing else, at least it feels like change, if not progress for devs and consumers.",2014-04-03 18:19:56,7524863
778,"Red Hat, for instance, makes a ton of money off the reverse model, where they let CentOS give away their core offering for free (heck, they&#x27;re even paying people to work on CentOS now), and they make their money off clients who have money and are willing to exchange it for support and such for otherwise free offerings. There&#x27;s really no reason Microsoft can&#x27;t do something similar here (and they seem to be trending in that direction, although not quite to the extent Red Hat has) -- a mix of free-as-in-beer and open source tools for a &quot;core&quot; offering, so people can get into the Microsoft developer ecosystem, and a variety of paid offerings on top of that as their needs grow. And the extent of Microsoft&#x27;s partnership with Xamarin shows just how much Microsoft is depending on Mono for their strategy, it&#x27;d be senseless at best to kill it.",2014-04-03 18:43:45,7525069
779,"They announced a Foundation with members outside of Microsoft, in charge of a mix of their code and code from Xamarin. So you need to coordinate all of that. You also probably need to have lawyers review all the code and make sure that MS has the rights to everything included so they can do this, someone to scrub all the comments to make sure developers didn&#x27;t throw in something embarrassing or worse, you need to set up workflows for reviewing community bug reports and patches... this isn&#x27;t something you can do in an afternoon.",2014-04-03 19:00:56,7525176
780,"I mean, they&#x27;re not going to open source the NT kernel anytime soon. But look at what they&#x27;re actually doing. They have their Azure cloud services, they have their Visual Studio development tools, they have their new WinRT platform that doesn&#x27;t have nearly the penetration that their legacy Win32 platform they want to kill has.<p>So look at what they&#x27;re actually doing, right now: they&#x27;re open-sourcing key parts of the .NET platform, and they&#x27;re partnering with Xamarin to support even more open-source elements that makes the .NET platform appealing to new kinds of developers. So there&#x27;s a low barrier to entry to getting started with .NET development and getting into that ecosystem. Once you&#x27;re on the hook, as you grow you&#x27;ll run into more and more things Microsoft can sell you. Microsoft can sell you their line of Visual Studio development tools, which provide the best .NET development experience. They can sell you Azure hosting for your .NET apps, which will likely offer the best .NET hosting possible (and even if you&#x27;re not on .NET or are mixed between .NET and something else, Azure is getting very competitive with Amazon and Google). And if you&#x27;re writing phone and tablet apps for iOS&#x2F;Android using Xamarin, Microsoft is right there for you to expand your reach by porting to Windows Universal, where you can get your app on Windows 8 tablets and PC, Windows 8.1 phones and the Xbox One. That&#x27;s Microsoft&#x27;s vision of the future.<p>And yes, if you&#x27;re running ASP.NET on Mono on Debian via AWS, to support your iOS app developed in Xamarin using Xamarin&#x27;s IDE, Microsoft doesn&#x27;t really benefit there. But that&#x27;s also the case if you&#x27;re running Node.js or PHP on AWS to connect to an iOS app written in ObjectiveC. And people in the former group are still much better PROSPECTIVE customers for future Microsoft endeavors than people in the latter group. (Not that Microsoft doesn&#x27;t want to sell the latter group stuff too -- look at Azure.)",2014-04-03 20:11:48,7526127
781,"Whenever I read Patrick, I&#x27;m reminded I have bad thinking about how to price something. My idea of a fair price is = COST_TO_MAKE x 2 or something like that. In reality, it&#x27;s VALUE &#x2F; 2. Meaning, if a backup service provides $100 worth of value (reduction in risk), I should be ok with paying $50 for it. I shouldn&#x27;t reject a backup service because I know that it costs $1 and they&#x27;re charging me $100.<p>Consumers are pretty price sensitive, and business that sell directly to consumers must cater to this. This is why Patrick is always advocating that you start a business that sells to other businesses. A business doesn&#x27;t mind paying for something as long as the cost is below the value it gets them. Isn&#x27;t that the basics of business? Buy low, sell high? Buy a service that provides $X value as long as the cost is &lt; $X?<p>I first can across this difference when I was a newbie DBA. We needed to upgrade our SQL Server cluster to the latest edition. I reviewed the differences between the various editions, and decided we could use some of the features in Enterprise vs. Standard. I did a little estimation, and showed how much time we could save between the DBAs and the developers if we got Enterprise. It was nowhere near the difference in the license costs, but I passed my findings onto the IT manager and the CEO. The CEO said buy Enterprise. I was stunned, and thought it was a bad decision. The reality was that we got so much value out of SQL Server, it didn&#x27;t matter that we paid more than what was absolutely necessary.<p>Developers have the consumer pricing mindset as well. They complain about IntelliJ, Xamarin, or Visual Studio licensing, or worry about SQL Server costs. Even if an IDE provides you with a 1% performance gain, I&#x27;m pretty sure that&#x27;s worth it for most companies. Who cares if a language&#x2F;framework&#x2F;database&#x2F;server is free if reduces your output by even 5%. That&#x27;s just bad business. You can claim a license fee on your taxes, but you can&#x27;t claim an opportunity cost.<p>Consumer tight-fistedness for consumers can also be a bad thing. I live in a relatively cheap area of the US. When I travel, I&#x27;m shocked at the prices. In order to feel comfortable, I have to ask myself not Is this a good price? but Would I rather pay $15 for a pina colada or go without? Often the answer is, Yes, I&#x27;d rather sip a coconutty concoction on the beach in Hawaii than have an extra $15 when I get home.",2014-04-03 20:41:27,7526440
782,"How this affects the (pretty high) Xamarin prices?
<a href=""https://store.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a>",2014-04-03 22:34:44,7527496
783,"Really confused about the Xamarin&#x2F;MSFT situation. I see Miguel everywhere on Build, and other MS teams casually mentioning cooperations with Xamarin.<p>Certainly Microsoft wouldn&#x27;t mind just throwing some millions at them and buying them outright, so are we to deduce that any such offer was rejected?",2014-04-04 00:30:33,7528260
784,"Or we are to dedude that Microsoft didn&#x27;t want to make such an offer, because while they want to spread .NET into a cross-platform standard, they still prefer a third party like Xamarin to deal with iOS, Linux and the like support for .NET (perhaps for public perception reasons).",2014-04-04 00:32:38,7528273
785,I think that Microsoft is doing a really smart move. Xamarin is towards being the main framework for cross platform mobile development and Microsoft is positioning itself very well there.,2014-04-04 00:57:03,7528385
786,"Outside of my 9-5 work, I&#x27;ve probably deployed nearly as much C# code (via Mono) under Linux as I have under Windows.  In a few ways it&#x27;s been very nice, in others a bit frustrating.  I think that if MS Dev-Div buys out Xamarin, we&#x27;ll see where things are <i>really</i> headed here.  It will either be a new era of OSS tools from MS, or back to the old &quot;kill it for cross platform in v.Next&quot; ...<p>I&#x27;m hoping that the tooling and integration gets a lot better in *nix, but nod sure how the Mono license (MIT iirc) and this new C# license (Apache) will jive together.<p>Personally, most of my new dev for the past couple years has been in node.js (which has its&#x27; own niceties and quirks).",2014-04-04 03:10:04,7528965
787,"I tried to log onto my IM client (Pidgin) and found that my google account had been disabled.  I clicked their contact&#x2F;appeal link, and the response I received gave no information whatsoever -- just repeated the same message to review the policies for over a dozen Google services to try and figure out on my own what I might have done to get my account disabled.<p>The google account I created 4 months ago to use for IM (over gtalk XMPP) is only used for this one thing -- Pidgin IM with my coworkers.  2 of my coworkers google accounts they created for this purpose were also disabled on the same day.  When I created a new google account, it was disabled within an hour.<p>My normal personal google account I use for gmail, and my business google account I use for google apps, still works without a hitch.  The only thing I can assume, is that Google no longer allows you to use them exclusively for XMPP instant messaging - unless you use their google talk interface built into gmail.<p>Especially frustrating because there is no way to tell if this is true.  I&#x27;m just taking a guess, because that&#x27;s all I can do.  If there&#x27;s some other reason my account might have been disabled, there&#x27;s no way for me to find out.  Now I&#x27;m worried about the lifespan of my other google accounts.  Don&#x27;t really know what to do, because Google won&#x27;t give me any information about what I did wrong.  But it makes me afraid they might one day shut down my gmail account also, without telling me why or giving me any means to find out why.<p>Some google products I like, and some I don&#x27;t.  I hate google+, for example.  But webmail is something I rely on, and until yesterday, gmail was such a slick implementation that I had no reason to investigate using anything else.  Now I realize relying on a behemoth corp for something that&#x27;s mission-critical (to me) may no longer be acceptable.<p>It&#x27;s ironic and a little bit weird (in a Twilight Zone kind of way), that Google seems to be behaving more and more like the Microsoft of old, and yet I&#x27;m watching the annual MS developer conference that&#x27;s taking place this week (channel9.msdn.com for the video), and the things they&#x27;re doing -- git support in team foundation server, universal apps built in JS that work on pc&#x2F;tablet&#x2F;phone&#x2F;xbox (and maybe ios&#x2F;android soon through cooperation with xamarin), open-sourcing the .net compiler, etc -- make them seem like more like the google of a decade ago.<p>Creepy.  I&#x27;m not sure how to react.",2014-04-04 06:44:00,7529721
788,"The latest Mono should be much better for handling F#, as it received some love from Xamarin, as they started promoting it. You can&#x27;t blame Mono for not running F# well, when .NET itself had and probably still has its own share of problems: <a href=""http://blogs.msdn.com/b/clrcodegeneration/archive/2009/05/11/tail-call-improvements-in-net-framework-4.aspx"" rel=""nofollow"">http:&#x2F;&#x2F;blogs.msdn.com&#x2F;b&#x2F;clrcodegeneration&#x2F;archive&#x2F;2009&#x2F;05&#x2F;11...</a>",2014-04-04 09:46:42,7530254
789,"I&#x27;ve been following this for a while. I applaud the effort but there is no way they can keep up with VS. Also Xamarin forked SharpDevelop ages ago into MonoDevelop, but I don&#x27;t know if any contributions flow back from MonoDevelop to SharpDevelop.",2014-04-04 10:01:24,7530303
790,"Actually, SharpDevelop is not the same project as MonoDevelop: <a href=""http://monodevelop.com/"" rel=""nofollow"">http:&#x2F;&#x2F;monodevelop.com&#x2F;</a><p>MonoDevelop was forked from SharpDevelop but they diverged. Unity has MonoDevelop with Unity-specific patches and they are a little behind. Xamarin Studio is also MonoDevelop with proprietary stuff.<p>Speaking of the &quot;linux version&quot;, linux distributions are very far behind in the package versions provided and the folks at Xamarin are only doing packages for OpenSuse. If you want to do development with Mono, Linux is unfortunately not a good OS to be on. Mind you, this is nobody&#x27;s fault - it&#x27;s just lack of interest.",2014-04-04 10:06:53,7530322
791,"mono team is really fast to address problem found by fsharp on runtime&#x2F;msbuild&#x2F;corelib&#x2F;etc.<p>Xamarin sponsor one dev fulltime (@7sharp9) to work on F# (see activity on github, is not only about Xamarin projects).<p>This link on .NET is really old (2009)",2014-04-04 12:30:00,7530864
792,"You don&#x27;t get a lot of the more advanced&#x2F;business&#x2F;enterprise-y features like advanced debugging features, very little code metrics, only the more basic unit testing things, no MSDN subscription benefits, no Azure credits.<p>You can still still use Nuget, write unit tests, debug, all of the basic stuff you need to write programs for .NET. The Unreal Engine 4 source works just fine with VS 2013 Express. Xamarin Business and its Visual Studio plugin works just fine in express. You can still connect to TFS, Perforce, or Git repo.<p>edit: to clarify that this is for VS Express compared to VS Pro&#x2F;Premium&#x2F;Ultimate not compared to Sharp Develop.<p>edit2: removed that it supports add-ins like Resharper.",2014-04-04 13:55:40,7531395
793,"Almost a meta comment, but Microsoft seems to be knocking their BUILD conference out of the park this year. I think we&#x27;ve already seen more notable announcements and improvements than we&#x27;ll see at WWDC.<p>Just the fact that there was a talk about developing iOS apps by the founder of Xamarin is telling. The fact that he was wearing Google Glass is another...",2014-04-04 13:57:33,7531410
794,"That&#x27;s a rather unique take, given how Xamarin has managed to build a massively successful company around the idea of using .NET to target non-Windows platforms.",2014-04-04 14:21:48,7531553
795,a <i>relatively</i> successful company.<p>Xamarind is a drop in the sea of .NET,2014-04-04 15:27:35,7531961
796,"Perhaps I&#x27;m paranoid but I&#x27;m seeing a lot of tentacles extending around a few ecosystems from Microsoft. I see lots of praise but some rational analysis and caution might be worth considering.<p>For ref, I deal with Microsoft a lot and wrote a ton of c# over the least decade (more than anything else probably) so I&#x27;m not biased against necessarily but all-encompassing announcements like the ones over the last couple of weeks make me suspicious.<p>Edit: to extend my thoughts on this some more:<p>I don&#x27;t think we&#x27;re seeing embrace and extend. I think we&#x27;re seeing &quot;go on - use our tooling&quot;. Once you&#x27;re in a tool ecosystem it&#x27;s hard to get out of. I mean really hard. Same goes with cloud ecosystems which neatly integrate with their tooling. Their offering is to host all of your stuff (Azure) and mediate between you and what you&#x27;re working on (Office&#x2F;VS&#x2F;Xamarin potentially).<p>A fully heterogenous system with a sole vendor mediating your access becomes an interesting situation when for political, financial or legal reasons you want or need to leave.",2014-04-04 21:04:54,7534373
797,"I think public perception is actually a big thing, though on the other hand the people most worried about that I think have already written off Mono as being &quot;obviously in bed with Microsoft&quot;, so I&#x27;m not sure how much having Xamarin as a third party would help.",2014-04-05 19:06:51,7538061
798,"With the new sgen GC it&#x27;s viable. The old Bohem-based GC was pretty terrible with F# as it allocates a huge number of transient objects.<p>As for tools, beyond frameworks Xamarin Studio has a good-enough F# environment. There&#x27;s also an emacs major mode.",2014-04-06 21:23:43,7543044
799,"I played with Xamarin Studio + F# + OS X about a year or two ago. Right away I noticed that F# is a second class citizen in Xamarin. Weird bugs, weird warnings, unfinished parts, hard to find help online and in IRC channel. And since it&#x27;s a smaller language, there are 1&#x2F;100th the number of tutorials&#x2F;resources at much lower quality. Anyone who wanted to run my app on Linux or Mac had to deal with Mono 2 vs Mono 3. Despite spending a lot of time, I never figured out how to compile a windows binary on Mac or a Mac binary on Visual Studio (or how to have a project folder that works both in Xamarin and Visual studio without both git problems and linking problems). Starting a C# project is a pleasant experience, starting a F# required searching for add-ons and manual configuring (both in Xam and VS). I couldn&#x27;t even run the iOS sample app without paying hundreds of dollars for the full version because the iOS libraries made the binary (of the one page sample app) to big for the trial version. Response in IRC was &quot;yeah, we know. Oh well&quot;.<p>A real shame. I&#x27;d love to dedicate myself to an open source functional language with a GUI toolkit that runs all platforms, desktop and mobile.",2014-04-06 22:05:55,7543279
800,"You say it&#x27;s been a year or two since you tried Xamarin Studio + F# -- I urge you to give it a try again, using up-to-date versions of both (and Mono too). There has been a significant amount of effort put forth by the F# community in the past year to improve the F# + Mono + Xamarin Studio stack; in fact, Xamarin hired one of the best F# developers&#x2F;consultants in the community (@7sharp9) specifically to improve F# support in Mono and Xamarin Studio.<p>If you have any questions, or you try F# + XS + OSX again and still run into issues, post something to the fsharp-opensource list (<a href=""https://groups.google.com/forum/#!forum/fsharp-opensource"" rel=""nofollow"">https:&#x2F;&#x2F;groups.google.com&#x2F;forum&#x2F;#!forum&#x2F;fsharp-opensource</a>), or ask on StackOverflow.",2014-04-06 23:38:05,7543742
801,"In the past few weeks, we have been porting WebSharper IDE support (project templates, build, deploy and run) to MonoDevelop and Xamarin Studio, and apart from a couple smaller glitches this work is now done, and you should be seeing WebSharper for MD and XS released in the coming days.
(Until then, you can manually invoke WebSharper if you are careful with the command line options and don&#x27;t mind scripting the process.)<p>We have not yet succeeded, though, in making CloudSharper Local run on mono due to some unimplemented methods in the mono stack.  Once these are addressed, you can also develop mono&#x2F;Linux F# web apps in CloudSharper, and should hopefully find that experience a lot less daunting than using the conventional IDEs.",2014-04-06 23:49:20,7543785
802,Very excited to learn of the templates being made accessible in Xamarin Studio! I can&#x27;t wait!,2014-04-07 03:39:31,7544505
803,Why not write the code in C# (for example) and extract it to $SYSTEM_PROGRAMMING_LANGUAGE? It wouldn&#x27;t be much different than what Xamarin are doing now for creating iOS and Android apps with C#.,2014-04-08 00:35:47,7550669
804,"We shared our design with Miguel for feedback ahead of the release. He gave us a boatload of very high quality and informed feedback. Thanks! We haven&#x27;t been able to act on most of it yet, since it relates more to what to do next than what we released just now.<p>We&#x27;re hoping to see this NuGet package supported on top of Mono, too. As we&#x27;ve done previously, we&#x27;ll share our tests with Xamarin to ensure consistent behavior between implementations.",2014-04-08 23:57:27,7556842
805,"SEEKING WORK - Freelance mobile developer (Android and iOS) Portland Oregon&#x2F;Remote<p>I have over 20 years industry experience from design, development, architecture, QA and product support. Front-end and back-end development. Java, C#, Objective-C, Xamarin, PHP, MySQL, C&#x2F;C++<p>Portfolio<p>Nike + Running -- Nike&#x27;s premier running application. Social, client-server, 30+ screens. Java&#x2F;Android<p><pre><code>   https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.nike.plusgps&amp;hl=en
</code></pre>
Nike + Vertical -- Mobile&#x2F;Google Glass prototype for hands-free help with rock-climbing.<p>Caller Dashboard  Developer&#x2F; Android Architect. Caller id on steroids. Multi platform communication portal for mobile phone. Notifies base station of incoming phone calls and other information about the contact. Android Tablet, Android Phone, Ultrabook C#&#x2F;WPF, Java&#x2F;Android, Intel CCF, IMAP.<p>Fridge Art iOS  Developer. Social picture sharing app using refrigerator metaphor. Allows someone to share a virtual refrigerator door with other people. Any photos posted to fridge owner&#x27;s door, automatically shows up on shares. C#&#x2F;Xamarin. Unpublished<p>Fridge Art Server  Developer. The web-service server for the Fridge-art project. Provides api&#x27;s to add, view, delete, modify virtual refrigerators and art. PHP&#x2F;Kohana&#x2F;Mysql Unpublished<p>Vapp (Veteran&#x27;s Appliction) Android  Developer. Mobile component for a web portal for veterans. Provides a mobile searching platform, messaging, cloud file storage, veteran community access, and resources. Java&#x2F;Android, REST, JSON.<p>Life Sampler Android  Developer. Automatic student questionnaire application. Queries students at scheduled times during the day, syncs results via ssh. Java&#x2F;Android.<p>East into 5K Android  Developer. Added GPS capabilities, media player integration, in app purchasing. Java&#x2F;Android<p>Walk There iOS App  Developer. Live walking tour application. Provides visual and audio information as the user goes on walking tours around the Portland metro area. Added enhancements. Objective C&#x2F;iOS.<p>Economist Pocket World in Figures iOS App Lead Engineer&#x2F;Developer. 20+ screen application. Scoped effort, created engineering bids&#x2F;schedule, created architecture, and implemented product. Pocket World in Figures application provides easily navigable access to the data in The Economists Pocket World in Figures book. Objective-C&#x2F;iOS&#x2F;SqlLite.<p>Android social picture puzzle  Lead developer&#x2F;architect. Application uses any picture, and creates a puzzle that can be sent to other mobile applications or email addresses. Scramble-puzzles stored on website. Java&#x2F;Android&#x2F;SqlLite. C#&#x2F;mono&#x2F;Asp.net, Linq to MySql, MySql, REST&#x2F;Json",2014-04-09 19:04:45,7561553
806,"Unity has a license from Novell for an older version of the software, which is how they can use it in places they can&#x27;t use the LGPL. Xamarin sells Mono under a commercial license, but Unity apparently doesn&#x27;t want to pay what Xamarin is asking for a license to the updated code.",2014-04-10 00:04:12,7563390
807,Unity has an option. They can pay Xamarin. They don&#x27;t want to. The end.,2014-04-10 02:37:23,7563855
808,"Which is sad because the massive unity code base is stuck in the C# dark ages.<p>On the other hand, mono is &#x27;open source&#x27; so it&#x27;s kind of rubbish for Xamarin to be asking license fees when they have their own (pretty rubbish) competing game stack with monogame that they have a vested interest in (not commercially, but Xamarin developers work on it).<p>I find this sort of &#x27;kind of open source but actually you have to pay us ahahahahaa~&#x27; thing pretty distasteful.",2014-04-10 03:42:26,7564038
809,"Short version &quot;Real world, please care about our hipster frameworks that are using languages older than some enterprise ones. We don&#x27;t want to use Xamarin to re-use maximum code while retaining native performance and languages that don&#x27;t suck; we don&#x27;t want to use Unity3d to be able to quickly prototype at low cost and hight quality. Please pigeon-hole Node.js in every freaking domain, because everything is an IO throughput problem plus you get to use a crappy language not just on client side but on server side as well!&quot;.",2014-04-10 08:33:06,7564860
810,"Unity is free to use Mono commercially under the existing open source license, so long as they contribute their changes to the Mono runtime. They can even take advantage of this without making any of their own code open source, because Mono is licensed under the LGPL, not the GPL itself. Xamarin has made it very friendly to use Mono in commercial products without getting paid for it. I don&#x27;t see what&#x27;s distasteful in asking people to pay if they want license terms that go above and beyond what the LGPL offers. The commercial party gets the additional licensing features they want, and the money funds further development effort which goes to other users of Mono, both paid and libris&#x2F;gratis users under the LGPL. Everybody wins.",2014-04-10 14:30:58,7566370
811,Libgdx works with RoboVM now and the results are very nice. For non-game projects I&#x27;m curious as well. I&#x27;m sticking with Xamarin but I hope there will be more alternatives in non-Objective-C languages.,2014-04-12 12:55:58,7577722
812,Can anyone compare this to Xamarin in terms of features&#x2F;stability&#x2F;workflow ? Xamarin is .NET&#x2F;C# which is arguably nicer than Java but its also not too cheap if you just want to play around with stuff.,2014-04-12 13:07:55,7577738
813,"Also, I want to understand how its creator monetarize this? Or it is just a no-profit project?<p>Anyway I&#x27;m happy to see competion against xamarin. Now I only want also a javascript to native (and not just webview-running) for any platform",2014-04-12 14:06:53,7577857
814,"No.<p>They prohibit on-device dynamic native code generation (ie. no JIT and no interpreters that attempt to mark memory as executable).<p>They also (generally) prohibit interpreters that download code from the network and execute it.<p>If you&#x27;re doing a workflow like: non-ObjC language -&gt; llvm -&gt; native code, Apple has no problem with that generally (currently).<p>They just want to make sure that the executable code that ships in your iOS app is all they have to worry about, that it can&#x27;t generate access to system libraries&#x2F;routines that were not present when submitted to them.<p>This is why things like Pythonista and LuaBox are in the store currently, in addition to many apps written in other languages with other IDEs (Xamarin, etc.)",2014-04-12 18:50:02,7578736
815,"holy crap!<p>I&#x27;ve avoided iOS because Objective-C scared me and I stuck to Android. I have some pending questions before I use this however.<p>1) How much code share can there be between Android and iOS? Is it just limited to business logic like Xamarin?<p>2) Can you use an Android game engine, create the game in Android and build for iOS?<p>3) In order to create and run iOS simulator, do you need to be on the mac and have Xcode? Any way to do it on a non-Mac machine?<p>4) Can you use RoboVM to create Android and iOS at the same time?<p>Amazing stuff!",2014-04-12 19:31:09,7578874
816,"&gt; Xamarin is ... not too cheap if you just want to play around with stuff.<p>If you just want to play around then take note that the starter plans are free [1].<p>[1] <a href=""https://store.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a>",2014-04-13 07:01:07,7580531
817,"Thanks!
It&#x27;s written in C#, we use Xamarin to target both iOS and Android. We also have a PC version running on standard MS.NET<p>I&#x27;m not familiar with Harmattan.",2014-04-13 07:20:57,7580573
818,"That&#x27;s really cool! I didn&#x27;t expect that you could use Xamarin for such games.
Are you by any chance planning a Windows&#x2F;Windows Phone release?",2014-04-13 13:29:05,7581243
819,"Still, from the consumer side of things there&#x27;s far less friction&#x2F;lock-in.  Switching between phone platforms brings pain only in app selection, most data (like pictures, calendars and email) is all online and doesn&#x27;t need to be moved over[1].<p>The key here like you say are software developers.  I think Microsoft is aware of this and their purchase of Xamarin is them taking steps to solve this problem.  In the future you could see Microsoft showing developers how they could build their applications for all major smartphone OSs with their tools, allowing them to eat up ground in the app space.<p>[1] Contrast this to PC vs Mac, where even switching from an old PC to a new PC can be a daunting task, and the risk of data-loss is high.",2014-04-16 16:03:15,7598584
820,"This is exciting to hear!<p>Did you use one codebase to write the application?<p>Do you need Mac OSX to compile for iOS or run emulator?<p>Did you use C++ or is there a workaround to it?<p>Basically I&#x27;m hoping that new Qt can replace Intel XDK, RoboVM, Xamarin. However, the biggest hurdle is developing for iOS on a non-Mac machine.",2014-04-16 21:09:53,7600549
821,"&gt; This is exciting to hear!<p>Thanks!<p>&gt; Did you use one codebase to write the application?<p>Yes, only one codebase<p>&gt; Do you need Mac OSX to compile for iOS or run emulator?<p>Unfortunately yes. I hope that in the future Apple will allow some sort of cross-compiling.<p>&gt; Did you use C++ or is there a workaround to it?<p>Only C++ and Qt Widgets (no QML yet)<p>&gt; Basically I&#x27;m hoping that new Qt can replace Intel XDK, RoboVM, Xamarin. However, the biggest hurdle is developing for iOS on a non-Mac machine.<p>It can replace (at least for my needs), but you will always need a Mac OSX to compile for iOS as far as I know (because of XCode dependency and licensing stuff)",2014-04-16 21:20:21,7600601
822,"Under the syntactical surface, Lua is really more like Javascript than Python.<p>Unity has support for Boo, which is just a Python-like front end for the CLR. I&#x27;m pretty fond of it, myself. I prefer to use it whenever I can, inside Unity and elsewhere. The docs could use a lot of love, but it&#x27;s still very easy to learn and extremely productive and a joy to write. I rarely touch MonoDevelop &#x2F; Xamarin Studio; I write Boo in Sublime Text, and find it very satisfying.<p>Another path I&#x27;ve been tempted to explore is to use Moonscript with Gameplay3D, but Unity is hard to leave.<p>I could be wrong, but I have the impression that Unreal is too unwieldy for a solo developer, which is how I plan to stay for the foreseeable future.",2014-04-19 15:50:14,7613691
823,"Can someone help me understand the mono issue here, is it Unity at fault? The Mono runtime? I ask because the mono stuff for Xamarin is very close to 100% compatible with the latest .NET framework and I am using Linq and async&#x2F;await in my iOS and Android apps with no problem. MonoDevelop (Xamarin Studio) has gotten much better in the past couple years as well.<p>So, what gives? What is the nature of the mono problem and who is responsible?",2014-04-19 18:53:41,7614311
824,"Unity uses the last runtime version of Mono they have a custom licence for, because they can&#x27;t use a LGPL one on iOS (it needs static linking).<p>And the relation between Xamarin and Unity seems bad : <a href=""http://gyazo.com/ecdf4d7e732ec876b4de9ddf95fdedca"" rel=""nofollow"">http:&#x2F;&#x2F;gyazo.com&#x2F;ecdf4d7e732ec876b4de9ddf95fdedca</a>",2014-04-19 20:22:07,7614591
825,"I think Embarcadero is seriously hurting themselves with their bunker mentality.<p>Their whole &quot;there are only X paying customers left, therefore we need to charge $3000&quot; stinks of someone who is preparing for failure, instead of growth.<p>It really looks like low self-esteem play of some group that secretly believes the market doesn&#x27;t want what they have, so they desperately milk their few remaining customers to make next months payroll.<p>I keep hoping some startup sees the huge arbitrage opportunity that is sitting there. Someone just needs to come along and build a quality GUI around the toolchain - very much like what Xamarin did for Mono - and similarly they need to charge a sane subscription model (free for OS&#x2F;hobbyist, $99 personal dev, $399 corporate lite, etc).",2014-04-19 21:50:10,7614852
826,"I have recently joined a small successful ISV selling and developing a couple of Delphi apps in an industry vertical in which I have significant experience; my prior experience has been C#&#x2F;.Net for quite a while, and before that Java. I recall buying the Delphi IDE way back in the day; possibly when I was still at university, definitely when Borland was still around!<p>So some informed observations:<p>1. The quality of the IDE is incredibly dire compared to Visual Studio+Resharper or Jetbrains IntelliJ. Perhaps it will be improved if a buy a license for Castalia. That said, I&#x27;ve been using XE3, maybe the more recent versions are better but it seems that Embarcadero have been focusing on getting into the cross-platform mobile game (one which I think Xamarin&#x2F;Phonegap&#x2F;Titanium, etc are playing better) rather than increasing the quality of the tools or enhancing the language. XE6 may have some improvements under Embarcadero&#x27;s &quot;QPS&quot; (Quality&#x2F;Performance&#x2F;Stability) project. We haven&#x27;t upgraded our licenses since the versions since XE3 didn&#x27;t bring anything for us, but if we want to see Delphi survive then perhaps we should be chucking some money Embarcadero&#x27;s way!<p>2. The language is quite verbose, and I find the need to declare the &#x27;interface&#x27; for a class separate to the implementation of the methods quite cute. There&#x27;s so much ceremony around anonymous methods that it hardly seems worth it some times. Lack of built-in multicast delegates for event handlers.<p>3. I recently attended a local symposium put on by the user group. There didn&#x27;t appear to be much diversity amongst the attendees. I would charge that lack of diversity is not a sign of a healthy software development community. Speaking with one of the organiser&#x27;s, they mentioned that Embarcadero doesn&#x27;t introduce new Delphi customers to the user group any more since it is just &quot;grumpy old men&quot;.<p>4. At this symposium one of the talks was on dependency injection. I was bemused that this was a new idea to the Delphi world. One of the advertisers in the symposium papers was a consultancy whose pitch basically was &quot;so you&#x27;ve been making money from selling a product, but you&#x27;re getting old and want to retire. Pass the source code and rights over to use and we&#x27;ll work out an arrangement to continue development whilst maintaining a royalty stream for you&quot;.<p>5. Packaging of open-source for easy reuse is challenging in Delphi. Unlike managed environments such as .Net or Java, reusing well-known open source components is as simple as adding an assembly or a JAR to your project (yes, I acknowledge that in the past this has had its own challenges, but I think in the .Net world at least Nuget has largely conquered this). The native binaries nature of Delphi has meant there is no such equivalent (that I&#x27;m aware of), although I&#x27;m considering leveraging Nuget&#x27;s packaging format and tools for BPLs.",2014-04-20 00:25:15,7615287
827,"To be honest, I think that &quot;not getting the love it deserves from MS&quot; is the best thing that happened to F# :-). They did really good job at supporting the community - by open-sourcing F# and now also accepting contributions to the official MS release.<p>But the fact that they did not keep full control of F# means that the community had time to setup &quot;The F# Software Foundation&quot; (<a href=""http://fsharp.org"" rel=""nofollow"">http:&#x2F;&#x2F;fsharp.org</a>) and develop a really healthy open-source ecosystem around F#.<p>If you look at the data-science story around F#, there are libraries like F# Data, Deedle, R Type Provider, etc. I&#x27;m biased, because I contributed to most of them, but I think that community did much better job than Microsoft would in this area. So &quot;not getting the love&quot; is more like &quot;getting freedom&quot;. And I think it really helped F# in many ways.<p>Do not get me wrong - MS is an important contributor and everyone in the community acknowledges that. But they are just a part of the F# story (there is excellent Xamarin support, great open-source projects etc.)",2014-04-20 00:27:56,7615294
828,"Hi.<p>I hire for a global tech organization, and I&#x27;d just like to give you a little bit of insight:<p>1. Don&#x27;t use middleware unless you have to. Your salary will be lower, and you won&#x27;t get to work on &#x27;as&#x27; amazing things. This includes Xamarin, PhoneGap, Trigger and all the things in between<p>2. Pick one first. iOS or Android. Don&#x27;t dual-learn. It&#x27;ll take you longer. Get a decent foundation on one first, and pick the one that makes more sense to you from a language point of view. (hint: Objective-C is weirder than it looks, Java is insanity)<p>3. I&#x27;ve hired people who had less than 1 year experience with mobile development who have subsequently turned into extremely senior developers. It&#x27;s totally possible buddy.<p>4. Reading is (mostly) useless to form a foundation. Pick a project, work on it, scrap it, begin again with newfound knowledge and keep doing that until you feel comfortable with the concept of creating mobile apps.<p>Hope that helps ;)",2014-04-22 03:31:24,7625638
829,"I love Mono Develop &#x2F; Xamarin studio, but it needs split panes desperately.",2014-04-28 14:36:08,7660189
830,"&quot;I still really like the .NET environment and C# language, ... &quot;<p>This is not my case, but I really do find value in learning a technology that helps you build cross-platform solution. I seriously considered using it.<p>&quot;Thankfully, there is the Mono .NET implementation that I can use and it is really well supported.&quot;<p>But it&#x27;s kind of unsupported and most of the time it lags behind. Currently on my brand new ubuntu system, it&#x27;s version 3.2, on my &quot;stable&quot; ubuntu its 2.10. The current version is 3.4.<p>&quot; As well as being open source, Mono also has a company, Xamarin, sponsoring its development as they use the mono system for their IOS and Android ...&quot;<p>You cannot develop iOS nor Android application on Linux with Xamarin, You need Windows or OS X.<p>This is old bug still accurate.
<a href=""https://bugzilla.xamarin.com/show_bug.cgi?id=142"" rel=""nofollow"">https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=142</a><p>This is an actual deal breaker for us. Haft of the team is using OS X and the other haft Ubuntu.",2014-04-28 14:56:13,7660318
831,"Have they fixed the bug where you can&#x27;t copy&#x2F;paste between mono apps and native OS X apps yet?<p><a href=""https://bugzilla.xamarin.com/show_bug.cgi?id=3106"" rel=""nofollow"">https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=3106</a><p>--<p>Steps to reproduce the problem:<p>1. Copy some text in any non-mono application<p>2. Paste it to mono application.<p>Actual Results:<p>Copy&amp;Paste doesn&#x27;t work.<p>Expected Results:<p>Working clipboard.<p>How often does this happen?<p>Always.<p>--<p>Wow. So by cross platform they mean &quot;unusable GUI apps on Macs&quot;",2014-04-28 15:07:51,7660399
832,"Sure, but that&#x27;s an issue in packaging software for Linux that goes far beyond Mono&#x2F;Xamarin. Any software you develop for Linux that has external dependencies is dependent upon the decisions of at least a dozen major distributions on what to support, package and ship. Solving that problem is way behond the scope of the Mono runtime.",2014-04-28 15:35:38,7660627
833,"There are multiple native compilers for .NET. Xamarin uses one for iOS and Android apps (well, in the case of Android, you&#x27;re compiling to Dalvik bytecode, but it&#x27;s just as native as any other Android app).",2014-04-28 15:36:52,7660639
834,This post inspired me to fire up my Linux mint virtual box and test mono. I&#x27;m every impressed by its potential. It does lack some awesome c# features like async&#x2F;await. I&#x27;ve been using Xamarin for a while now and love it. My only fear for mono on Linux is the lack of XAML like interface equivalent. I dislike GTK. I&#x27;m keeping my fingers crossed :),2014-04-28 15:40:48,7660664
835,"Nice, I just gave a talk on Xamarin and building cross-platform native apps at a mobile workshop this weekend.",2014-04-28 15:52:00,7660751
836,Xamarin.Android apps do not compile to Dalvik bytecode. Every app ships with MonoVM which runs side-by-side with Dalvik.,2014-04-28 16:57:55,7661202
837,"Thank you for the correction; I seem to have had Xamarin on Android confused with Xamarin on iOS, which does compile to native code.[1]<p>1) <a href=""http://docs.xamarin.com/guides/ios/advanced_topics/limitations/"" rel=""nofollow"">http:&#x2F;&#x2F;docs.xamarin.com&#x2F;guides&#x2F;ios&#x2F;advanced_topics&#x2F;limitatio...</a>",2014-04-28 17:05:16,7661255
838,"That&#x27;s why you&#x27;d use monomac, mono touch  or wpf on osx,iOS and windows, respectively. Xamarin also has a solution for android.",2014-04-28 17:16:12,7661358
839,I&#x27;m pretty sure async&#x2F;await is supported<p>Source: I&#x27;m using async&#x2F;await in Xamarin.Android<p>Maybe it&#x27;s because Linux Mint doesn&#x27;t have the latest version of Mono in the package repository?,2014-04-28 21:04:23,7663055
840,"&quot;Expect more information on IL2CPP soon&quot;<p>...and how to fork it, ideally?<p>I hope Unity3d will follow Microsoft and partner with Xamarin. They wouldn&#x27;t be in business without Mono - time to give back to the community.",2014-04-29 18:25:07,7668979
841,"There was a time when Unity was going to go with a C++ api during that Apple ToS 3.3.1 clause that banned lots of platforms like Flash in 2010: <a href=""http://blogs.unity3d.com/2010/07/02/unity-and-ios-4-0-update-iii/"" rel=""nofollow"">http:&#x2F;&#x2F;blogs.unity3d.com&#x2F;2010&#x2F;07&#x2F;02&#x2F;unity-and-ios-4-0-update...</a><p>The fear was Apple would ban mono AOT as well. During that time they were going to go C++.  I wonder what would have happened.<p>Now that UE4 is pure C++ it does have that. C# is great and you can accomplish most things with plugins via C&#x2F;C++&#x2F;Obj-C&#x2F;Java but having the pure C++ option would be killer. Then it would be a much easier jump into final form for WebGL&#x2F;asm.js&#x2F;etc.<p>Unity also has the Mono 2.x runtime and hasn&#x27;t updated Xamarin licenses to go to mono 4.  I wonder if they would be smart to jump to a C++ api at some point that could still use C# scripting possibly but goes to this lower level C++ form. It is hard with such a large userbase to jump to C++ but in 2010 they almost did.",2014-04-29 19:20:23,7669339
842,"SEEKIING WORK - Greenville, SC or remote<p>I&#x27;m a full-stack developer with about 12 years of experience, mostly in Microsoft-based stuff (C# and ASP.NET MVC&#x2F;Web API is my current comfort zone), but I&#x27;m also dabbling in Node and PhoneGap (and Xamarin!). I also prefer git and Angular for front-end stuff so I&#x27;m not completely brainwashed. Lots of database experience with SQL Server, but I also like CouchDB and MongoDB as well. Oh, and I&#x27;ve done SharePoint too if that helps (or hurts).<p>I can help you design and develop your MVP with a design, spec and deployment plan, or I can just help you fill in the areas you&#x27;re missing on your dev team.<p><a href=""http://cbsmith.org"" rel=""nofollow"">http:&#x2F;&#x2F;cbsmith.org</a>
<a href=""https://github.com/cbsmith402"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;cbsmith402</a>",2014-05-01 13:35:05,7679596
843,"SEEKING WORK - Freelance mobile developer (Android and iOS) Portland Oregon&#x2F;Remote<p>I have over 20 years industry experience from design, development, architecture, QA and product support. Front-end and back-end development. Java, C#, Objective-C, Xamarin, PHP, MySQL, C&#x2F;C++<p>Portfolio<p>Nike + Running -- Nike&#x27;s premier running application.  <a href=""https://play.google.com/store/apps/details?id=com.nike.plusgps&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.nike.plusg...</a><p>Vapp (Veteran&#x27;s Appliction) Android   <a href=""https://play.google.com/store/apps/details?id=com.omf.vapp"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.omf.vapp</a><p>Ease into 5K Android  <a href=""https://play.google.com/store/apps/details?id=com.runhelper.c25k"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a><p>Bridge to 10K Android  <a href=""https://play.google.com/store/apps/details?id=com.runhelper.b210k"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a><p>Ease into 10K Android  <a href=""https://play.google.com/store/apps/details?id=com.runhelper.ei10k"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a><p>Walk There iOS App  Live walking tour application. Article: <a href=""http://blog.oregonlive.com/my-portland/2011/09/metro_and_kaiser_permanente_launch_free_walk_there_iphone_app.html"" rel=""nofollow"">http:&#x2F;&#x2F;blog.oregonlive.com&#x2F;my-portland&#x2F;2011&#x2F;09&#x2F;metro_and_kai...</a><p>Economist Pocket World in Figures iOS App  <a href=""https://itunes.apple.com/gb/app/the-economist-world-in-figures/id438709514?mt=8"" rel=""nofollow"">https:&#x2F;&#x2F;itunes.apple.com&#x2F;gb&#x2F;app&#x2F;the-economist-world-in-figur...</a><p>Caller Dashboard   (Android Tablet, Android Phone, Ultrabook)  link: <a href=""http://www.thugdesign.com/projects"" rel=""nofollow"">http:&#x2F;&#x2F;www.thugdesign.com&#x2F;projects</a><p>Nike + Vertical -- Mobile&#x2F;Google Glass prototype for hands-free help with rock-climbing.<p>Fridge Art iOS  Social picture sharing app using refrigerator metaphor. Unpublished<p>Life Sampler Android  Data collection application.",2014-05-01 15:27:07,7680341
844,"Freelance - Brussels Belgium, Remote, Half time or Full time<p>I&#x27;m a full stack Web and mobile developer who loves to craft rich frontend experiences.<p>Xamarin iOS &#x2F; Android, C#, ASP.NET MVC, Angular, Mongo, SQL Server, Entity Framework, HTML&#x2F;CSS<p>Resume: <a href=""http://cozypixel.com"" rel=""nofollow"">http:&#x2F;&#x2F;cozypixel.com</a><p>Contact thibaut [at] cozypixel",2014-05-02 12:22:37,7685213
845,"&gt;If C# worked on iOS and Linux<p><a href=""https://xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;</a> imho a much better alternative to C++.  I really like C# as a language, it&#x27;s got that general purpose excellence, but when you get on with things like LINQ,Rx,TPL it&#x27;s very hard to go back to a language without such first class citizen frameworks.",2014-05-02 14:36:40,7685915
846,"Any location, Relocation, Full Time<p>Stack: JS (node &amp; client-side), Python, PHP, C# (.Net, Xamarin), ObjC, Java, Semantic Web - fullstack + mobile stuff, plus some experience in devops<p>Resume, Contact: <a href=""http://codezen.ru"" rel=""nofollow"">http:&#x2F;&#x2F;codezen.ru</a><p>Would love to work on something new and awesome in a new and awesome country. Exact topic doesn&#x27;t matter as much as the product &#x2F; idea and team. I can offer 10+ years of experience in webdev and 4+ in mobile. Have experience of building stuff from idea to release (including 3 startups).",2014-05-02 14:38:20,7685923
847,"Remote - Full-time | Part-time<p>I&#x27;m a mobile developer who values innovation and best practices. I particularly favor the Xamarin SDK and adjacent technologies. I hack on open source, speak and blog about cross-platform&#x2F;mobile development.<p>Stack: Xamarin.iOS, Xamarin.Android, Xamarin.Mac, C#, REST, Azure, TDD<p>Github: <a href=""http://github.com/alexandra-marin/"" rel=""nofollow"">http:&#x2F;&#x2F;github.com&#x2F;alexandra-marin&#x2F;</a><p>LinkedIn: <a href=""http://www.linkedin.com/in/alexandramarin01"" rel=""nofollow"">http:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;alexandramarin01</a><p>Blog: <a href=""http://xmonodev.wordpress.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xmonodev.wordpress.com&#x2F;</a>",2014-05-02 19:18:37,7687570
848,"No it definitely also runs on iOS, and, interestingly, Xamarin: <a href=""http://docs.xamarin.com/samples/PaintCode/"" rel=""nofollow"">http:&#x2F;&#x2F;docs.xamarin.com&#x2F;samples&#x2F;PaintCode&#x2F;</a><p>I met the authors in person &gt; 1 year ago, when they were thinking about whether Java (Android) code generation would make sense. Would love to learn that they made it happen too.",2014-05-07 19:09:57,7712096
849,"They say they support C# with Xamarin.iOS, so no Android support through that.",2014-05-07 22:08:12,7712904
850,"While SQL Server has and will continue to be an excellent technical option, the costs can be a drag.<p>That said, the work various .net-related people have out or are working on have the very real availability or promise to lift that dependency, if not provide portability, with DB choice. See RavenDB (document DB) &amp; biggy (Postgres 1st class). Supporting this for more traditional takes on relational store is that there is increasing experience in the .net world for applying coding patterns that can help projects pivot&#x2F;abstract out the data tool dependencies.<p>If you have a sensitivity in this area, there are options which, when calculated with the ancillary benefits of applying existing .net experience and the great MS free  + cloud tools, would pan out very well for many problem spaces.<p>Obviously, YMMV, but if you are doing a wide spectrum of cloud + mobile, Azure is very compelling and Xamarin can become nearly as large a burden cost-wise. That total burden still can be extremely competitive and the ramp for existing .net shops a pretty clear winner. But being a C# developer has never been so promising - and it wasn&#x27;t ever that awful to begin with.<p>If anything, the problem of coming from the old MS-dev platform-planning and having to understand the range of options and optimizing for costs around those is the weak spot.",2014-05-08 15:46:05,7715895
851,Still takes longer for non trivial apps to get the it right on a large array of devices of X in Html than native. Especially using something like Xamarin I would gladly take up the challenge. Hybrid has it&#x27;s place ofcourse; for more complex text markup embedded in apps.,2014-05-08 21:53:41,7717949
852,"Given the rise of Xamarin, support for C# would be great as well (the recently updated PaintCode has supported Xamarin&#x2F;C# code generation since its first release I think).",2014-05-09 04:21:44,7719357
853,"That&#x27;s a fair point, but now you can develop in VS on Windows and target pretty much every platform out there. They&#x27;ve also announced official support for Cordova, and they have the whole Xamarin thing going on. VS already has Python support, and Node.js tools are also being added.<p>This is starting to look like a pretty decent environment to work in.",2014-05-12 16:52:23,7733863
854,"Visual Studio is still pretty dependent on Win32 &#x2F; x86 under the hood - a lot of the UI was ported to WPF and more of the tooling, including the compiler, is being ported to C#.<p>So no, I think VS for Mac &#x2F; Linux is still a ways off. They&#x27;re moving in that direction though - wouldn&#x27;t be surprised if they bought Xamarin in order to make it happen.",2014-05-12 19:31:20,7734910
855,"You should definitely also check out ServiceStack. Dapper-like ORM, amazing web service capabilities and awesome serializers all in one place. Supports everything too (Mono, Xamarin etc).",2014-05-13 00:01:55,7736029
856,ASP.net vNext was specifically about this.<p>And you don&#x27;t need VS to do .net development; check out monodevelop or xamarin studio (they&#x27;re the same basic thing),2014-05-13 19:26:44,7740110
857,"How is .NET losing relevance?<p>You can make mobile apps with Xamarin, and apps for any desktop OS thanks to Mono.<p>You can make high-quality 2D&#x2F;3D games with Unity<p>You can make high-performance web applications with ASP.NET + IIS.",2014-05-13 20:43:18,7740581
858,"Xamarin &#x2F; Mono and Unity run pretty much everywhere. Unity even runs on WebGL, none of this is tied to windows stacks.<p>Also, Microsoft has a great startup programme with Bizspark, we built a company on it a few years ago that eventually ended up as part of a $700m acquisition",2014-05-13 21:07:17,7740713
859,"<i>&gt; If you think you need Visual Studio to do .NET development, it&#x27;s because you fundamentally don&#x27;t understand the technologies at play and just wanted to say something provocative and witty.</i><p>On the off chance you&#x27;re not just being knee-jerk and defensive because Something You Like is under fire--people think that VS is necessary because life is <i>way too short</i> to spend building something half as good as the other options in twice the time. I mean, could write Scala in TextMate, too, if I had the jones for it. But I could also <i>not</i>, and use IntelliJ, because I value having tools that are able to improve my productivity. (And decrease my frustration; by sticking with the JVM I have the benefit of not have to rely on Mono, whose GC, from experience, I do not trust in long-running processes; after spending a year owning a trivial Mono ASP.NET app that presented no end of troubles, I am very happy not needing to have a watchdog ready to kick it over when it undergoes its daily spaz-out.)<p>Xamarin Studio is not an acceptable product, either. I&#x27;ve been trying to use it for a couple weeks now and about ready to pitch a computer out a window--the basic functions of <i>editing code</i> are magnificently broken and have been for a long time. Random phantom line breaks in the editor that aren&#x27;t in the code file, bad auto-indenting, phantom error highlighting, no partial-build error solving--and Visual Studio doesn&#x27;t work on OS X. (To say nothing of the &quot;you have to restart because XS forgot how to talk to xbuild&quot; bugs...) That leaves the shitty bodges you well-actually&#x27;d your way into or not doing .NET at all. The latter makes a lot more sense for a lot more people.<p>I really enjoy C# and F# and I&#x27;d love to use .NET more if the frustrations in using it on not-Windows were not of such a magnitude. I am critical because it should be better and isn&#x27;t. (Worse, Xamarin removed most reasons to contribute to the Mono ecosystem a while ago by making so much of the useful bits commercial, which is understandable--gotta eat--but also unfortunate.)",2014-05-13 21:47:53,7740885
860,"This is amazing work. As someone who implemented a significant part of the iOS API on top of Android, I can say it&#x27;s not trivial :) Disclaimer: we created an Apportable competitor for Xamarin based projects which will see the light this week.",2014-05-14 06:18:04,7742451
861,"This kind of problem makes it clear to me that application developers need to understand and be responsible for the full stack of software that they ship, including bundled C libraries. One can&#x27;t just use a high-level cross-platform runtimes like Mono&#x2F;.NET and ignore everything underneath, because when the shit hits the fan, the app developer has to fix it, not pass the blame and wait for someone else to handle it.<p>(For the same reason, I think it&#x27;s better to rent dedicated servers than to use virtual machines or whatever-as-a-service. And colocation might be better still, if one can afford the up-front expense.)<p>What isn&#x27;t clear to me is whether we should still use a high-level runtime like Mono&#x2F;.NET, for mobile apps in particular, even though we have to be responsible for lower layers. On the one hand, very few developers would want to mess with manual memory management and C-style error handling when writing business logic, database access routines, or UI code. On the other, if we have to grasp the whole stack anyway, then we can more easily do that if there&#x27;s less of it. On iOS, cross-platform C code plus iOS-specific Objective-C code is less complex than cross-platform C code plus P&#x2F;Invoke glue for the former plus cross-platform C# code plus UI code in C# (which will be foreign to iOS developers not familiar with Xamarin) plus glue between Mono and ObjC. Similar logic applies to Android (although there will always be JNI glue between native code and Java) and even Windows Phone (as of 8.1, which supports WinRT and native code using that). So, for a more comprehensible software stack since we have to be responsible for the whole thing anyway, should we just give up on higher-level languages and runtimes, acknowledge that we&#x27;re ultimately dealing with C machines, and stick to C or maybe C++ for cross-platform code? Would that be putting too much emphasis on hypothetical debuggability, and not enough on other things like developer productivity and approachability to less-than-expert developers?",2014-05-16 18:31:41,7757075
862,"I always thought I&#x27;d feel similarly, but I&#x27;ve been doing a bunch of .NET&#x2F;Mono stuff in Windows 8 (instead of using Xamarin Studio), as a virtual machine in my Mac. Works pretty great, as long as I correctly train my fingers to hit the right shortcuts when in and out of the VM.",2014-05-20 20:38:38,7775028
863,"&quot;I still havent forgiven Microsoft for their countless misdeeds so Asp&#x2F;C#&#x2F;F# are all right out.&quot;<p>So Xamarin is Microsoft now? Better tell them, because they don&#x27;t know it yet. Clojure is a .NET language as well by the way.",2014-05-21 09:02:04,7777243
864,"Apologies for that oversight, Xamarin was not even mentioned on the C# wiki page and I had totally forgotten about them. That said, I see C# very much as a Microsoft eco-system component even though there have been several re-implementations (such as Mono and DotGNU). Just like I see Go as part of Google and erlang as part of Ericsson.",2014-05-21 09:10:44,7777264
865,"Talk about pedantic distinctions.<p>First, Xamarin might not be Microsoft, but those languages are developed and controlled (feature wise) by Microsoft, and are best used and more mature with the MS ecosystem. Plus, Xamarin works professionally with MS for quite some time (and a complete acquisition&#x2F;acqui-hire isn&#x27;t even that far fetched).<p>Second, Clojure is not used in .NET by anyone but 10 people. That port is if not abandoned, very near it. And even if it was, most Clojure&#x2F;JVM software is rendered unsuable on the CLR. For all intends and purposes Clojure is 99.9% a JVM language first (and Clojurescript which is also not .NET).",2014-05-21 09:58:10,7777384
866,"Keep in mind that Microsoft now require you to login with their latest IDE. The moment this will bite you in the ass depends on what license you use (retail, partner etc). If your a partner you get a rolling 30 day trial that&#x27;s tied to your MS Partner account and if you&#x27;ve ever used the MS Partner website you know what a complete piece of shit that is. 
From the Partner account you assign development rights to a developer which then flicks a switch in your MSDN account, allowing your developer to login to Visual Studio.
Problem is these stars dont always align and your left hanging on the phone to support for hours (this has happened to 2 of our 3 devs now, took 24+ hrs to sort)
The only solution is to switch back to VS2012.<p>Xamarin also require that you log in to their IDE, so far so good with them though.",2014-05-21 11:46:52,7777692
867,"Looking for: Mentor<p>Location: Montreal, Canada<p>Current job: Mobile app developer (Windows Phone, Xamarin iOS and Xamarin Android). Mostly C#, Windows, Visual Studio, TFS, etc.<p>Interests: semantic web, knowledge representation, linguistics and constructed languages, UI&#x2F;UX (bleeding edge, wearable and mobile), product design, logic&#x2F;declarative&#x2F;functional&#x2F;reactive programming, distributed systems, smart contracts, task&#x2F;project&#x2F;time management and GTD, quantified-self, life-hacking (nootropics, speed reading, psychology, polyphasic sleep, diets), political science (geolibertarianism), transparency (as opposed to privacy), crypto-currencies&#x2F;Ethereum, minimalism.<p>People that inspire me: Bret Victor, Alan Kay, Douglas Engelbart, Albert Einstein, David Allen, Jacque Fresco, and of course Steve Jobs (haters gonna hate).<p>Other: I type in Dvorak. I&#x27;m an INTP. I want to change the world. I challenge you to find someone more ambitious than me. I have trouble executing my grand visions. I seek an open-minded mentor that share my vision of the world and wish to share some wisdom.",2014-05-27 04:28:46,7802860
868,"Given the renewed spirit of open-ness at MS, and more support from Xamarin for Mono, there&#x27;s a chance that this might be sooner rather than later?",2014-05-27 11:58:14,7803971
869,"It&#x27;s too bad you were downvoted, this is a good question.<p>First, I&#x27;d question why you&#x27;d still think of it as a proprietary ecosystem. It&#x27;s an open source (Apache 2), cross platform framework. It&#x27;s not even directly released by Microsoft, it&#x27;s released under MS Open Tech, which is a foundation just focused on open source development. And it&#x27;s not just &quot;throw it over the wall open source&quot;, it&#x27;s an open source project that&#x27;s set up for and encouraging contributions.<p>Even the compiler it runs on is open source, also under Apache 2 (<a href=""http://roslyn.codeplex.com/license"" rel=""nofollow"">http:&#x2F;&#x2F;roslyn.codeplex.com&#x2F;license</a>).<p>As for the &quot;why&quot; bit, here are some reasons:<p>- If you&#x27;re developing on Windows, Visual Studio is a pretty good web editor. That includes Visual Express for Web (free) with the Web Essentials extension (also free, works on Express). You can develop on Windows (inc. a VM) and deploy anywhere.<p>- C# really is a pretty nice language. It&#x27;s static and compiled, but has support for some dynamic features. Linq is really useful. Generics work well. The language spec is under an open standard. Everyone has their own preferences on languages, but it&#x27;s pretty nice.<p>- As a web framework running compiled assemblies, it can run pretty fast.<p>- If you&#x27;re interoperating with .NET and&#x2F;or Mono, of course this is pretty useful.<p>- C# and .NET are actually really good for cross-platform development (e.g. Xamarin hits ios, android, wp, maybe even tizen soon). For example, C# runs better on my Mac than Ruby does on my Windows machines.<p>- If you find that ASP.NET MVC 6 (the version vNext will run, including MVC &#x2F; Web API &#x2F; SignalR) works for you but you don&#x27;t like Windows, you could dev on Mac &#x2F; *nix and publish to Azure &#x2F; Mono &#x2F; whatever.",2014-05-27 11:59:14,7803975
870,"I really don&#x27;t understand why this is being downvoted into oblivion. It&#x27;s a valid question.<p>One answer is simply that C# is an awesome language. It is roughly as expressive as Ruby and Python, yet it is usually faster and it has much more powerful tooling (MonoDevelop, Visual Studio), partly enabled by its static typing (which is mostly up to taste, I suspect).<p>Also, .NET is <i>very</i> batteries-included and the open source ecosystem is decent (decent, not good).<p>As an example, I currently run a team that develops a C# backend. We dev on Macs, Linuxes and Windowses, we deploy to Docker containers on Linux hosts, we use Postgres for data and the open source ServiceStack for API bindings. When e.g. one of our Mac devs does a deploy, not a single byte of Microsoft code is touched.<p>I&#x27;m not saying you should do this too. But it&#x27;s a valid option, and you can perfectly well do C# without depending on Microsoft tooling or paying them anything. Of course the future is still very much determined by MS, so we&#x27;re betting that MS doesn&#x27;t kill Mono-for-Linux once they buy Xamarin. But that&#x27;s not very different from Oracle and Java, really. MS made stronger and fairer community promises, if that&#x27;s something.",2014-05-27 12:09:50,7804010
871,Oh so it&#x27;s like Xamarin but for Java?,2014-05-28 12:44:48,7809597
872,"similar, only better.
In Codename One you end up with 1 java project to maintain for all supported platforms, in xamarin you end up with 2 project to maintain in c# (1 for each platform: iOS, Android)",2014-05-28 13:00:09,7809648
873,Are you limited to a particular version of the jdk or can we use 7+?<p>Re xamarin... anything they do well that you do not (yet)?,2014-05-28 13:50:18,7809862
874,"It&#x27;s a Java 5 subset, but we have plans for Java 8.
Re xamarin - it&#x27;s a good product targeted for c# devs",2014-05-28 14:19:43,7810026
875,"You might want to check out Xamarin&#x27;s announcement about Xamarin 3.  &quot;Xamarin.Forms is a new library that enables you to build native UIs for iOS, Android and Windows Phone from a single, shared C# codebase&quot;",2014-05-28 15:12:08,7810367
876,Awesome work guys! Can&#x27;t wait to give Xamarin.Forms a try!<p>I&#x27;m wondering how well Xamarin.Forms will work with MVVM and bindings.,2014-05-28 15:22:10,7810692
877,"I appreciate that this is an initial announcement, but does anyone know what the situation is with upgrades for existing users?<p>Edit: Forgot to say that this new version looks really good - congrats to the Xamarin team! Not having to launch XCode is going to massively improve my quality of life.",2014-05-28 15:22:21,7810694
878,This looks amazing. Especially Xamarin forms.<p>Surely Microsoft will acquire them soon? They&#x27;d be totally nuts not to.,2014-05-28 15:25:19,7810714
879,This looks amazing. Especially Xamarin forms.<p>Surely Microsoft will acquire them soon? They&#x27;d be totally nuts not too.,2014-05-28 15:28:08,7810733
880,"Xamarin.Forms is designed to work with MVVM and data bindings: <a href=""http://xamarin.com/forms"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;forms</a>",2014-05-28 15:30:51,7810750
881,"We have support for Azure, Parse, and others already:<p><a href=""http://components.xamarin.com/view/azure-mobile-services"" rel=""nofollow"">http:&#x2F;&#x2F;components.xamarin.com&#x2F;view&#x2F;azure-mobile-services</a><p><a href=""http://components.xamarin.com/view/parse"" rel=""nofollow"">http:&#x2F;&#x2F;components.xamarin.com&#x2F;view&#x2F;parse</a>",2014-05-28 15:31:34,7810755
882,"It&#x27;s fully released and supported. You can download here:<p><a href=""http://xamarin.com/download"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;download</a>",2014-05-28 15:33:30,7810765
883,Thanks Nat! That&#x27;s awesome news.<p>To what extend is XAML support in Xamarin.Forms? Can I use it to create multiplatform controls&#x2F;views?,2014-05-28 15:35:01,7810774
884,"Thanks for all the kind words, everyone! This release was the result of a lot of hard work; especially the new visual designer for iOS, which took two years to build.<p>You can read more about our platform here:<p><a href=""http://xamarin.com/platform"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;platform</a>
<a href=""http://xamarin.com/studio"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;studio</a>
<a href=""http://xamarin.com/visual-studio"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;visual-studio</a><p>And our new Xamarin.Forms library is explained here:
<a href=""http://xamarin.com/forms"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;forms</a>",2014-05-28 15:38:08,7810801
885,"Yep, totally not responding and I have no idea what a xamarin is.<p>EDIT:<p>Looks like the main website is up:<p><a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a><p>They let you build apps for other platforms in C# which is cool.",2014-05-28 15:41:30,7810825
886,"Hey Guys,<p>I&#x27;m the co-founder of Avocarrot (<a href=""http://www.avocarrot.com/"" rel=""nofollow"">http:&#x2F;&#x2F;www.avocarrot.com&#x2F;</a>) and we were wondering for a while whether to build a dedicated plugin for Xamarin. How easily can you integrate an native Android or iOS SDK with your Xamarin apps? Would it make a big difference for you if a Xamarin plugin was available?",2014-05-28 15:41:45,7810827
887,"Now all they have to do is make it free. Seriously though, as a student I can&#x27;t shell out $299 for a license and even at the $99&#x2F;year student rate (with proof of relevant course work), I can&#x27;t see myself paying $99&#x2F;year to write&#x2F;maintain apps I&#x27;ve built. Especially considering the $99&#x2F;year Apple app store fee.<p>Please, Xamarin, show us young C# devs some love!<p>update: not really sure why the down votes. I&#x27;m big fan of Xamarin and C# in general. All I was doing was pointing out that there&#x27;s no way I can afford&#x2F;am willing to buy their software and that I think I speak for the majority of student developers.",2014-05-28 15:41:58,7810829
888,"Can I show two files open at once vertically split yet?<p>Follow Up: The answer is no. This is a pretty big productivity killer, and the ticket to implement this feature has been around forever. This is the last major gripe that is keeping me from using Xamarin Studio in lieu of VS2k12.",2014-05-28 15:43:10,7810835
889,"This is cool. I didn&#x27;t know about Xamarin until now. I use Rdio a lot, and it&#x27;s generally a very good, smooth-running app on my Nexus 4. Didn&#x27;t realize it was built cross-platform like this!",2014-05-28 15:49:02,7810868
890,"Looks cool, but why translate to native UI elements at run-time as opposed to compile-time? Does it help with debugging?<p>Forgive my ignorance as I have not used Xamarin.",2014-05-28 15:50:52,7810883
891,Any plan to also support Windows 8 in Xamarin Forms ? This would allow the same level of cross platform-ness for tablets.<p>Great work !,2014-05-28 15:52:57,7810895
892,"You have two options:<p>1. You can bind the native iOS or Android library into C#, which is relatively straightforward:<p><a href=""http://developer.xamarin.com/guides/ios/advanced_topics/binding_objective-c/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;advanced_topics&#x2F;bind...</a><p><a href=""http://developer.xamarin.com/guides/android/advanced_topics/java_integration_overview/binding_a_java_library_"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;android&#x2F;advanced_topics&#x2F;...</a>(.jar)&#x2F;<p>2. Or you could create a single, managed library in C#, which would also make it easier to get Windows support.<p>Option 2 is more work.",2014-05-28 15:53:52,7810902
893,"Kind of amazing that Xamarin now seems to have better dev tools for iOS than Apple do.<p>I was badly burnt by buying a Xamarian dev license a couple of years ago for $499 then not using it (my own fault entirely) so I&#x27;ve been hesitant to jump back in to Xamarin-world, but it&#x27;s really only a matter of time. I&#x27;m very impressed.",2014-05-28 15:54:43,7810907
894,I certainly did not like the lousy words written above which explains the down-votes. But certainly the team at Xamarin can look upon his request and try if they can lower the license fee for students.,2014-05-28 15:54:51,7810910
895,"I have been working with Xamarin stuff for a couple years now, released about 7 apps with them and honestly cannot imagine another approach. I mainly work with smaller startups in specific line of business scenarios and it has become a necessity to not only have viable mobile offerings, but they have to have parity across platforms and support both phone and tablets. When I go into a sales meeting and pitch the idea that I can build for Android and iOS using the same language and sharing much of that code - I usually crush my competitors on price - which saves the customer money and makes more money for me (yipeee!)<p>The Forms work in Xamarin 3 seems lined up to make that pitch even easier and will likely help Xamarin grow into the enterprise even faster as ease of management in the code base is going to be a major driver in decisions for IT shops that now have to support a much more diverse platform set than they did in the days when a website was good enough.",2014-05-28 15:56:22,7810919
896,"Xamarin Studio doesn&#x27;t have this feature yet, but you can use Visual Studio to build Xamarin apps (and many developers do).<p>Split panes will be coming to a future version of Xamarin Studio, though.",2014-05-28 15:56:37,7810922
897,"Yes, you can use XAML to create multiplatform controls&#x2F;views with Xamarin.Forms.<p>Xamarin.Forms supports all of XAML 2009 and uses the XAML syntax with its own namespace and types. So, no existing XAML designer will work with Xamarin.Forms. However, the names and properties should be familiar to any experienced XAML developer.",2014-05-28 15:59:00,7810939
898,"Thanks for the endorsement!<p>We built Xamarin.Forms because we have lots of enterprise customers building apps with a dozen or more screens doing simple things like tabular data display and data entry, but who have a native UI requirement in their app. Xamarin.Forms should make these types of apps much easier to write quickly.",2014-05-28 16:00:19,7810951
899,Drop me a note - nat@xamarin.com,2014-05-28 16:00:45,7810953
900,"Xamarin is the cross-platform solution I would consider first for developing mobile apps, and I can&#x27;t think of a second one that&#x27;s close. If your team is mostly experienced in C# or if F# is your thing, I would really seriously consider it versus training for iOS and Android. It&#x27;s an very hard problem, and Xamarin has successfully gone from &quot;That&#x27;s neat but weird&quot; to what looks like a practical tool that isn&#x27;t going to leave you stranded with an oddball code base.",2014-05-28 16:01:24,7810956
901,It would go a long way towards providing potential users of Xamarin&#x27;s long-term existence.,2014-05-28 16:03:57,7810977
902,Sorry to hear about the error message. Can you email your logs and the storyboard file to support@xamarin.com?,2014-05-28 16:07:34,7811002
903,"Did you not pay attention to Microsoft&#x27;s BUILD (Microsoft&#x27;s version of WWDC) conference this year, where they gave Xamarin the limelight and official blessings?",2014-05-28 16:09:09,7811013
904,Apple&#x27;s storyboards and xib files are essentially XML serialized views. Apple deserializes them at runtime and its a feature built in to Cocoa and Cocoa Touch. Since Xamarin is just wrapping the native libraries it is easier and more compatible to just follow the same approach.,2014-05-28 16:10:18,7811029
905,From a technical standpoint the &quot;translation&quot; is pretty much a standard Model-View-Presenter approach. This allows both us and you maximum flexibility when working with and extending Xamarin.Forms. We expose to users the same API&#x27;s we used to implement the initial set of controls.,2014-05-28 16:11:40,7811037
906,"I tinkered around with Xamarin, and a very basic app (using some 3rd party libraries) or even using the tutorial&#x2F;sample apps was immediately outside of their free tier.<p>Now I would like to understand the logic behind the 30 day free trial. If you are preventing app distribution (binaries are only valid for 24hrs when compiled in the trial version) why restrict it to 30 days? Why not allow people to tinker around as much as they want? I see no negatives to having an unlimited trial, and then simply charge to remove the &#x27;24hr binary&#x27; restriction.<p>As it is, the little free time I had over those 30 days to play with Xamarin equated to around 5 hours, most of which was going through the tutorials and sample apps (which you cant use in the free mode). I certainly haven&#x27;t experienced enough to commit to a purchase, and now I likely never will.<p>I spoke with one of your colleagues about this. He offered me 20% discount on the business tier if I purchased iOS and Android (~$1600 &#x27;value&#x27;) within 4 days... All i wanted to do was evaluate the damn thing...<p>I think what you are doing is great, but please try and apply some common sense to your evaluations.",2014-05-28 16:18:41,7811075
907,"Xamarin.Forms looks <i>very</i> compelling. In a former life I was a .NET person, and so I&#x27;ve always kept my eye on Xamarin, but the only real mobile stuff I&#x27;ve done has been native cocoa touch dev on iOS.<p>Even though Xamarin.Forms might be a lowest-common-denominator type of thing, being able to build basically &quot;universal&quot; apps looks awesome.<p>The indie license really isn&#x27;t very expensive, but I wish the starter version allowed bigger apps (but maybe stripped out publishing to app stores or something), so you could really thoroughly check it out without spending $300.",2014-05-28 16:32:33,7811162
908,"Man, as much as I&#x27;d love to use Xamarin w&#x2F; VS, 3 platforms for a single developer (myself) is $3000.  It looks like a great product but wow, I can&#x27;t swing that solo while bootstrapping.  Have you considered a free-until-release approach?  Don&#x27;t get me wrong, you guys need to make money, I&#x27;m just wondering if there is a more optimal &#x2F; appealing approach for those that are between Indie and Business.",2014-05-28 16:34:24,7811180
909,Xamarin is great. I saw a colleague of mine developing apps with it and was simply amazed. I think it definitely deserves all they&#x27;re asking for it. Just one thing though: Why do I have to pay 700$ difference per year just for VS support? Is it really that hard to integrate?,2014-05-28 16:37:37,7811208
910,I agree; I haven&#x27;t even bothered to tinker around with the free trial.  The minimum price is too high to just buy to play around with and free version is too restricted to get a feel for the platform.  What I would want is the ability to do <i>everything</i> but distribute&#x2F;publish an application (even the 24 hour binary restriction is fine).<p>I also don&#x27;t understand why Visual Studio support isn&#x27;t included in the Indie price or the free trial since I suspect the vast majority of developers who want to code mobile apps in C# use Visual Studio.  So for $300 I get a sub-par product and for free I don&#x27;t know anything about it.<p>If you aren&#x27;t a mobile developer <i>today</i> then there&#x27;s really no reason to consider Xamarin.  They aren&#x27;t marketing to developers who currently aren&#x27;t doing mobile development but are interested in it.  They should be trying to woo developers who are on that ground level so we&#x27;ll buy in once we&#x27;re committed.,2014-05-28 16:39:54,7811230
911,Considering it&#x27;s per-developer:<p>Imagine an enterprise of 20 devs hacking away at various Xamarin projects with one dedicated &quot;deploy&quot; person. They&#x27;d get away with not paying licenses for 19 of those devs.,2014-05-28 16:48:26,7811311
912,"They could do that right now anyway with a single license and a shared computer if they were really interested in circumventing the licensing.<p>I think a much larger issue is the current (and onwards) generations of indies, enthusiasts and kids who are actively prohibited from trying Xamarin.",2014-05-28 16:52:18,7811333
913,"Which would be breach of terms, resulting in unlimited civil penalties. It should be pretty easy for Xamarin to track that kind of behaviour.<p>If said enterprise was so inclined they could share a valid license, or simply create new trial accounts every 30 days.<p>Organisations I have worked for tend to be pretty hot on their licensing obligations. Fines can be pretty steep.",2014-05-28 17:01:48,7811414
914,"I know that the official comment regrading Linux support is that there are no plans to support it right now, I just want to say that there are people on Linux that are willing to pay for your product!<p>I&#x27;m developing cross platform mobile apps with HTML5 and I would jump at the chance of using Xamarin instead (I was a C# developer in another life).<p>I might just end up running it in a VM, but it would be great running Xamarin Studio on Linux.<p>Thanks :-)",2014-05-28 17:11:50,7811493
915,"Thanks for your quick reply Miguel, I do understand the difficulties of supporting the Linux ecosystem.<p>I hope that someday it becomes worthwhile for Xamarin to provide that support, in the meantime, another laptop or a VM will have to do. ;)<p>Xamarin 3.0 looks great, congratulations!",2014-05-28 17:26:50,7811589
916,"I&#x27;ve never played with C# or Xamarin but this tool set is looking really good, specially the F# thing.<p>Anyone care to share their stories about F#? it appears to be a nice functional language.",2014-05-28 17:37:41,7811660
917,"Agreed, for all i can see Xamarin is perfect, but as i can&#x27;t really play around with it and as it&#x27;s quite expensive if you just want to publish a hobby app, i can&#x27;t see myself using it yet.",2014-05-28 17:54:57,7811783
918,Except that you need to use Lua (and most Xamarin customers are C# shops) and you don&#x27;t have any control on the build process of the app. I hate waiting for some cloud service to send me back a binary version of my app. A slightly better alternative for Lua coders is to use Corona Cards (you do the building on your own machine) but this doesn&#x27;t have a <i>free</i> version.,2014-05-28 18:42:46,7812013
919,"This. I have been using C# with Unity3d a lot and love it and i would love to try Xamarin with a sideproject, but $1000 per year&#x2F;seat (yes i want VS integration) is just too much.<p>Making this more affordable would do wonders for C#s popularity in the mobile space and possibly trickle down to a lot of other usecases.",2014-05-28 19:09:23,7812165
920,"It&#x27;s a real shame that Xamarin has a such a prohibitive pricing structure.<p>My employer would love for me to use this on projects but they simply won&#x27;t pay that much for a tool EACH YEAR.<p>Considering Visual Studio, if you actually pay for it and don&#x27;t go to an event and get a free copy, is a one time cost that a company can semi-easily justify (we&#x27;ve been on VS2010 for over 4 years now, with 5 developers, that&#x27;s a major expense if we have re-subscribe each year).<p>But with Xamarin, unlike Visual Studio, it&#x27;s a 1 year subscription.  I hate to say it but I agree with my employer, as much as I LOVE using Xamarin to build mobile&#x2F;cross platform apps, the current pricing model is just crazy.<p>I&#x27;d say drop the subscription only option (maybe have that as one of the choices), and add some &#x27;buy it, you own it forever&#x27; options, hopefully without raising the price (ideal world you&#x27;d drop the price, too).",2014-05-28 19:17:16,7812201
921,"Completely agree, I&#x27;ve tried three times to start using Xamarin always hitting the paywall, it&#x27;s annoying and I&#x27;m pretty sure they lost a lot of visibility this way.
Just waiting for MS to buy them or release something similar.",2014-05-28 19:24:38,7812246
922,"Would be nice if after subscribing you get a better price to renew your subscription, I don&#x27;t see that as an option right now though, right?<p>For example my Xamarin License expired on May 24th; to renew I have to pay the full price again, correct?",2014-05-28 19:25:13,7812249
923,You <i>do</i> own the software forever.  It doesn&#x27;t expire after a year; you just will no longer have access to new releases and support.  It&#x27;s their last FAQ item on the pricing page.<p>It does seem a bit odd to hide that detail on the very bottom of the page.  I have other development tools (JetBrains products) that having similar pricing models without signing up for a &quot;subscription&quot; and with a discount for renewing each year.  I feel a lot better about that than what Xamarin has presented here.,2014-05-28 19:57:06,7812438
924,"They aim on enteprise clients otherwise I cannot justify the pricing.<p>I cannot imagine spending 600 USD for both platforms just to build hobby project (and with missing Visual Studio support) and if I cannot build a hobby project, how can I propose it to my employer when I don&#x27;t have any experience with it?<p>I would love to use Xamarin and would be willing to pay (I could justify 300 USD for all platforms (iOS, Android, Mac) with Visual Support for my hobby and indie projects. I hope Microsoft buys them or they will be more friendly to indie and hobby developers.",2014-05-28 19:58:11,7812443
925,"I don&#x27;t understand how come that Indie license does not include Visual Studio support? I think the biggest issue with Xamarin for me is this: <a href=""http://i.imgur.com/wmdaLL7.png"" rel=""nofollow"">http:&#x2F;&#x2F;i.imgur.com&#x2F;wmdaLL7.png</a>",2014-05-28 20:01:12,7812463
926,"Surely today with this news, the one on xamarin and that on codenameone it is likey orgasm-day for all the crossplatform tools lovers.",2014-05-28 21:19:45,7813033
927,"The JetBrains stuff is also cheaper. I&#x27;d love to buy Xamarin just to play around with. But $300 for a single platform, and I don&#x27;t even get Visual Studio support with it? The idea of using C# for apps really appeals to me. But only because that means I could use Visual Studio and ReSharper.<p>To compare that with the JetBrains business model. I can get a personal license for IntelliJ IDEA for $200, and there&#x27;s even a free open source version that does 95% of the things I want with no limits. Their other products also have fully unrestricted 30 day trial periods.<p>I guess Xamarin isn&#x27;t targeting indie developers or hobbyists in that field. Which is OK. But it feels a little insulting to have an &quot;indie&quot; license which is so prohibitive and at the same time expensive.",2014-05-28 21:22:30,7813050
928,"Presumably yes if it uses native APIs. On iOS, although .nib files are supported, people tend to prefer Ruby DSLs to define interfaces though. I imagine that something similar will happen on Android.<p>Expect that it won&#x27;t be long before somebody comes out with a cross-platform wrapper for native UI elements similar to Xamarin 3.0.",2014-05-28 22:05:42,7813273
929,"I agree. Xamarin has a price difference between &quot;Business&quot; and &quot;Enterprise&quot; but really the 600 bucks for Visual Studio support is what differentiates between Enterprise vs everything else.<p>I wonder if Visual Studio starting to integrate Phone Gap tooling could eat away at part of Xamarin&#x27;s value proposition.<p>Regardless what Xamarin does with pricing, their announcement today with the new native UI builder is huge, congrats to the team.",2014-05-28 22:26:16,7813362
930,"Hey, when it comes to mobile, I develop them in pure Objective-c for iOS, and pure Java for Android. I use tools provided by both compagnies. So yeah, I do the jobs twice, but I think it&#x27;s ok.<p>Anyone have feedbacks coming from what I do to something like RubyMotion or Xamarin? These solutions sound very interesting, but I&#x27;ve yet to try them. I think I&#x27;m too attached to my Objective-c and workflow.<p>Also, is there peoples who originally used RubyMotion or Xamarin and went to use OC and Java?",2014-05-29 12:19:16,7815826
931,"Most enterprise app dev shops are going with paid systems such as Appcelerator Titanium, Xamarin, CoronaSDK where if you buy in, you get all of the goodies.<p>What is the best solution for hobbyist app developers who want to build cross-platform apps from a single code base and don&#x27;t want large up-front costs?",2014-05-29 15:25:06,7816682
932,"I may be stupid, but I found Xamarin too bugged. And to use it well, i have to know C#, iOS and Android well. With Phonegap I need to know web dev well, phonegap, and much less of the underlying platform.",2014-05-30 19:59:29,7823683
933,"SEEKING WORK - Remote or Southeast&#x2F;Mid&#x2F;West Michigan<p>We are a small, experienced team trying to get off the ground doing cross-platform mobile, web, desktop and game development.<p>Languages: C#, C++, Objective-C, Java, Javascript, Clojure<p>Other Buzzwords: Xamarin, Cocos2D-x, SpriteKit, Unity, Angular, AWS, Azure, Google Cloud, ASP.NET [WebForms, MVC, Web API], NancyFX<p>More information can be found at <a href=""http://www.logicdispatch.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.logicdispatch.com</a> or email mark[dot]rathwell[at]gmail.",2014-06-01 13:29:51,7829078
934,"Southern New Jersey, Philadelphia, northern Delaware &#x2F;&#x2F; In-House or Remote &#x2F;&#x2F; Full-Time<p>Stack (professional): C# + .NET (ASP.NET MVC+Razor, etc), Javascript (jQuery, React, Backbone.js, TypeScript), HTML5&#x2F;CSS3, MSSQL&#x2F;MySQL&#x2F;PostgreSQL, RabbitMQ&#x2F;ZeroMQ, Cassandra, Linux (Puppet, Pacemaker, DRBD), Xen, VoIP (Asterisk&#x2F;OpenSIPS&#x2F;Homer&#x2F;etc), Photoshop&#x2F;Illustrator<p>Stack (personal): C++, Lua (Embedding, OpenResty, Luvit), Python (OpenCV), Xamarin iOS, more...<p>Resume: <a href=""https://www.dropbox.com/s/rwftk3pj1jkm676/Resume%20-%20Alex%20Forster.pdf"" rel=""nofollow"">https:&#x2F;&#x2F;www.dropbox.com&#x2F;s&#x2F;rwftk3pj1jkm676&#x2F;Resume%20-%20Alex%...</a><p>Contact: alex@alexforster.com<p>I&#x27;ve been programming since I was 14, and started doing it professionally at 20. I&#x27;m currently the &quot;jack of all trades&quot; programmer-and-more in a small IT department for a ~2000 employee company. I&#x27;ve enjoyed incredible flexibility to learn and implement different technologies in my current role, but unfortunately, I have to begin looking elsewhere as we&#x27;re quickly losing our autonomy to our enterprisey parent company.<p>The approximate responsibility split at my current job is 60% pure software development, 20% devops, and 20% networking. I absolutely adore C#, but since it isn&#x27;t as vogue as I wish it was, I should mention that I&#x27;m almost as fluent in several other languages. I&#x27;m proud of having a well-diversified set of skills, and if my &quot;keyword soup&quot; resume piques your interest, I&#x27;d love to have a more in-depth conversation with you.<p>I&#x27;m tied to the area for family at the moment, but I&#x27;d be happy to spend a bit on a coworking space and work remotely.",2014-06-02 02:05:34,7831535
935,"SEEKING FREELANCER - Remote<p>I&#x27;ll be taking a break from consulting for the next few months, and I have a project with a fantastic client that I&#x27;d like to hand off to someone capable and trustworthy.<p>The project is a VPN client for Windows and Mac OS X. It&#x27;s written in C#, .NET, and Xamarin.Mac&#x2F;MonoMac, with a dash of Objective-C. OpenVPN is used for VPN connectivity, and the client integrates with firewalls (Windows Firewall, pf on Mac), monitors Wi-Fi connectivity, and a few other things. It&#x27;s a client&#x2F;server model with the UI built using WPF&#x2F;XAML (Windows) and Interface Builder (Mac), talking to a &quot;backend&quot; Windows Service and LaunchDaemon on Mac over localhost.<p>I&#x27;m looking to find a strong candidate I can recommend to my client. The work will consist of adding functionality (UI work is relatively minor) on both platforms, resolving bugs found by customers in the field, etc. The apps are mostly feature-complete, but there is always room for improvement :)  Strong understanding of networking fundamentals (TCP&#x2F;IP, DNS, routing, firewalls), and significant experience working with C#&#x2F;.NET is a must. Some experience with Xamarin.Mac, Mono, Objective-C, Cocoa, and Xcode are highly desirable :)<p>Email amir at pilvy dot com if interested.<p>Thanks for looking!",2014-06-02 08:37:09,7832463
936,"Southern New Jersey, Philadelphia, northern Delaware | In-House or Remote | Full-Time<p>Stack (professional): C# + .NET (ASP.NET MVC+Razor, etc), Javascript (jQuery, React, Backbone.js, TypeScript), HTML5&#x2F;CSS3, MSSQL&#x2F;MySQL&#x2F;PostgreSQL, RabbitMQ&#x2F;ZeroMQ, Cassandra, Linux (Puppet, Pacemaker, DRBD), Xen, VoIP (Asterisk&#x2F;OpenSIPS&#x2F;Homer&#x2F;etc), Photoshop&#x2F;Illustrator<p>Stack (personal): C++, Lua (Embedding, OpenResty, Luvit), Python (OpenCV), Xamarin iOS, more...<p>Resume: <a href=""https://www.dropbox.com/s/rwftk3pj1jkm676/Resume%20-%20Alex%20Forster.pdf"" rel=""nofollow"">https:&#x2F;&#x2F;www.dropbox.com&#x2F;s&#x2F;rwftk3pj1jkm676&#x2F;Resume%20-%20Alex%...</a><p>Contact: alex@alexforster.com<p>I&#x27;ve been programming since I was 14, and started doing it professionally at 20. I&#x27;m currently the &quot;jack of all trades&quot; programmer-and-more in a small IT department for a ~2000 employee company. I&#x27;ve enjoyed incredible flexibility to learn and implement different technologies in my current role, but unfortunately, I have to begin looking elsewhere as we&#x27;re quickly losing our autonomy to our enterprisey parent company.<p>The approximate responsibility split at my current job is 60% pure software development, 20% devops, and 20% networking. I absolutely adore C#, but since it isn&#x27;t as vogue as I wish it was, I should mention that I&#x27;m almost as fluent in several other languages. I&#x27;m proud of having a well-diversified set of skills, and if my &quot;keyword soup&quot; resume piques your interest, I&#x27;d love to have a more in-depth conversation with you.<p>I&#x27;m tied to the area for family at the moment, but I&#x27;d be happy to spend a bit on a coworking space and work remotely.",2014-06-02 13:42:08,7833364
937,"Malaga&#x2F;Amsterdam&#x2F;London, Remote (on location can be discussed), Full &#x2F; Part time can be discussed<p>Stack: C#&#x2F;F#, Java, Mobile (Xamarin, Objective-C, Java), C&#x2F;C++, Haskell, Coq, Clojure, JS (Node), HTML5, Idris, Hadoop, Cassandra, Linux (can do drivers&#x2F;kernel modules)<p>Contact: tycho@e-lab.nl<p>Recent experiences: EMV (software, hardware, embedded), Bluetooth, running iOS code on Android, formal verification and writing&#x2F;auto translating a ton of mobile apps (iOS, Android), devops on Linux.. Can&#x2F;did manage teams and lead research (related to software dev and formal methods).<p>Looking for a challenging job in the dev tools, programming languages or verification space as well as mobile and&#x2F;or embedded development.",2014-06-02 14:55:15,7833820
938,"I feel the exact same way. For a while now I&#x27;ve been looking at other ways to develop for iOS, such as HTML5 with PhoneGap or C# with Xamarin, but it&#x27;s always been a kludge.<p>Swift looks amazing and I&#x27;m really excited to try it out tonight! Great job Apple devs.",2014-06-02 20:06:35,7835936
939,"Just glanced thru the Swift book in about 3 hours. Conclusion: all your programming language are belong to Swift, mostly stolen good ideas, some innovations, a few gripes.<p>I can say Swift takes inspiration and improves on at least these languages:<p>C:<p>typealias<p>struct<p>control structures<p>labeled statements AKA gotos<p>varargs<p>C++:<p>default arguments<p>class instance construction syntax<p>&#x2F;&#x2F; comment<p>superclass, implementing protocol declaration syntax<p>semi-virtual class init, deinit<p>Go:<p>No parentheses around the condition part of control statements<p>Unicode identifiers<p>shorthand for signed and unsigned integer types U?Int(8|16|32|64)<p>C#:<p>in-out params<p>properties<p>subscript access of class member values<p>Objective-C:<p>ARC<p>protocols<p>extensions<p>param names as method names<p>willSet&#x2F;didSet<p>nil?<p>Java:<p>enum<p>@final<p>super keyword<p>override method keyword<p>Scala:<p>Local type-inference, blend of an ML flavored FP with OOP without the noise and believe it or not, even more powerful in specifying generic type constraints. No stupid JVM type erasures either so you can actually create an instance of a generic type, just like C++ templates.<p>Self:<p>self<p>Python:<p>for i in enumerate(seq)<p>for key, value in dictionary<p>Type(value) explicit type conversion syntax<p>No public&#x2F;private&#x2F;protected class member access modifier bullshit<p>Array literals, dictionary is also like Python but use [] instead of {}<p>Ruby:<p>0..100, 100_000<p>Lisp:<p>closures<p>Scheme, Coffeescript:<p>? optional type modifier<p>Bash:<p>$0, $1... inside short callback closures<p>Innovations<p>---------------<p>break-less switch, optional fall-thru, comma as multiple case, case can be any value of any type, condition or a type constraint for pattern matching, supports method call shorthand<p>generic type constraint queries<p>overflow operators<p>@prefix, @postfix, @infix, @assignment modifiers for operator overloading
Trailing closure as partial function application<p>Gripes<p>------<p>Seems like array[4..6] is even more useless than Javascript&#x27;s Array#slice, and a far cry from Python&#x27;s slices.<p>No set literals and list&#x2F;set&#x2F;dict comprehension.<p>Nothing for concurrency???? No yield, no generators, no channels, not even the synchronized keyword.<p>There&#x27;s no decorator or annotations, and Swift isn&#x27;t Objective-C, what&#x27;s with the odd-ball @ modifiers?<p>I don&#x27;t see namespaces as mentioned in the WWDC slides, and goto is definitely still here so you might just write another gotofail.<p>Looks like Swift is Apple&#x27;s answer to Go, Rust, Scala, Java, PyObjC&#x2F;RubyMotion, Unity, Xamarin and all these HTML5 + JS&#x2F;Phonegap people. I&#x27;ll definitely pay attention to Swift. If the performance results hold up, Swift + iOS8 will definitely leave Android&#x27;s ancient Java 5 crap way out in the dust.<p><a href=""https://itunes.apple.com/us/book/swift-programming-language/id881256329?mt=11"" rel=""nofollow"">https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;book&#x2F;swift-programming-language&#x2F;...</a>",2014-06-02 23:11:13,7837099
940,I wouldn&#x27;t say that. Swift must be in part an effort to stave off C#&#x2F;Unity&#x2F;Xamarin. Imagine if Microsoft got a significant foothold into the iOS development tool chain.,2014-06-03 00:48:18,7837526
941,I would&#x27;ve voted for buying&#x2F;licensing Xamarin instead; C#&#x2F;F# would&#x27;ve given them everything including a lot of fresh programmers. On the other hand i&#x27;m happy they didn&#x27;t as they would&#x27;ve tossed out Android and (at least for me) there is no alternative yet to the speed &#x2F; power of development here.,2014-06-03 06:50:52,7838479
942,"I&#x27;ve been doing this (writing for iOS without using Objective C) for a long time now using Xamarin, so my reaction to the announcement was along the lines of &quot;oh, that&#x27;s cute.&quot;",2014-06-03 23:55:16,7843373
943,It&#x27;s true that C# is not as prevalent on non-Microsoft platforms as it is on Windows but there are a handful of  mid-size to big multiplatform projects using C#.<p>e.g.<p>- Xamarin (multiplatform mobile apps)<p>- Unity3d (multiplatform games)<p>- Monogame (multiplatform games)<p>- Unreal Engine 4 (build system)<p>I guess Swift could fill the same gaps. I would especially love to be able to develop multiplatform mobile apps with swift since switching between ObjC and Java all the time is quite taxing.,2014-06-04 09:11:45,7844677
944,"Go is a great language.<p>...but to be fair, writing UI and graphical applications has never been it&#x27;s strong point, and still is not.<p>Although you can write NDK applications which steal the raw graphics context to do whatever they like (mandala, xamarin, unity, etc.), tapping into the android UI layer is significantly slower and more complex.<p>Given that the NDK website still says:<p><pre><code>    In general, you should only use the NDK if it is essential to your 
    appnever because you simply prefer to program in C&#x2F;C++.
</code></pre>
I&#x27;m pretty skeptical Google is going to push anything based off of it as a first class citizen, ever.<p>(That said, the upcoming I&#x2F;O has what, 4 or 5 slots devoted to NDK related things; clearly despite the android team, at least someone is paying attention to the fact that people use it. <i>A lot</i>. So you never know~)",2014-06-04 13:37:50,7845428
945,"He hit the nail on the head with Ruby Motion for Android. Don&#x27;t forget C# with Xamarin. Kind of makes Swift pointless for any serious [cross platform] mobile development. You can get the benefits of modern languages today, without Swift.<p>I&#x27;m personally not excited about Swift because Swift doesn&#x27;t save you from Cocoa.<p>It&#x27;ll just be:<p><pre><code>   let userDefaults = NSUserDefaults.standardUserDefaults()
   let lastRefreshDate: AnyObject? = userDefaults.objectForKey(&quot;LastRefreshDate&quot;)
</code></pre>
instead of:<p><pre><code>    NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];
    NSDate *lastRefreshDate = [userDefaults objectForKey:&quot;LastRefreshDate&quot;];
</code></pre>
When people complain about Objective-C, they&#x27;re really complaining about Cocoa&#x2F;UIKit.",2014-06-05 01:15:55,7849613
946,"No down votes here, it&#x27;s a terrible article. You&#x27;d think after  all these years tech journalists would have a clue about Apple&#x27;s decision making process. Apple is about as likely to buy Xamarin and release a cross-platform development environment as they are to start selling Samsung phones in the Apple Store.",2014-06-05 04:00:38,7850153
947,I don&#x27;t see how swift locks you in more that objective C ? I guess as its so much more accessible and easy to step into from javascript &#x2F; java &#x2F; C# it makes it more tempting to use compared to using something like Xamarin. I don&#x27;t see this as a dark ploy just Apple wanting to make themselves as developer friendly as possible.,2014-06-05 12:22:54,7851514
948,"Youi Insurance, Sunshine Coast, Australia.<p>Want to work for a dynamic, fast growing insurance company which writes all its own software?  Like the idea of living on the Sunshine Coast (average winter temperature 21 degrees), and working in an office a minute from the beach?  Do you want to write software using C#, F#, AngularJS, Xamarin and Raven DB?<p>Youi is looking for experienced .Net developers preferably with strong web skills or Xamarin focused mobile skills.  If youre interested in working somewhere with an awesome technology vision, an emphasis on work&#x2F;life balance and a fun work environment as part of a fast growing, profitable business get in touch with mattco@youi.com.au.",2014-06-06 11:20:27,7857205
949,Could be a good Go-alternative of Xamarin in ~5 years or so.,2014-06-06 13:15:01,7857644
950,"Your opinions are fine, but some of your facts are incorrect.<p><a href=""http://xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com</a><p><a href=""http://www.rubymotion.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.rubymotion.com</a><p><a href=""http://www.appcelerator.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.appcelerator.com</a><p><a href=""http://unity3d.com"" rel=""nofollow"">http:&#x2F;&#x2F;unity3d.com</a><p><a href=""http://developer.coronalabs.com"" rel=""nofollow"">http:&#x2F;&#x2F;developer.coronalabs.com</a>",2014-06-07 05:06:01,7861357
951,"If you&#x27;re enamoured with MVVM and know C# you might consider trying out Xamarin + MvvmCross [1]. I&#x27;m using it on a few projects and the code shared across platforms is (ballpark) 70-90% depending on the size of the project.<p>Xamarin&#x27;s come out with Xamarin.Forms which looks like it <i>could</i> supersede MvvmCross but I gave it a shot and it&#x27;s pretty immature right now. Plus its dependency injection leaves a little to be desired [2].<p>[1] <a href=""http://www.codeproject.com/Articles/566270/"" rel=""nofollow"">http:&#x2F;&#x2F;www.codeproject.com&#x2F;Articles&#x2F;566270&#x2F;</a><p>[2] Out-of-the-box it appears to have a global service locator and no constructor injection.",2014-06-09 23:33:44,7871122
952,"Care to share your experiences, thoughts and opinions?<p>I&#x27;m interested about any platform, but particularly interested to hear from anyone who has used Titanium, Delphi&#x2F;AppMethod or Xamarin.",2014-06-10 13:32:17,7872327
953,"Do I need still need to spend $17,091 a year to equip 3 developers with reasonably unrestricted Xamarin on 3 iOS, Android and Windows Phone? Or $8,991 if I don&#x27;t care for hot fixes.",2014-06-10 18:23:31,7874394
954,"Xamarin doesn&#x27;t cost anything for Windows Phone. Xamarin Indie is reasonably unrestricted, but let&#x27;s just go with Business for now:<p><pre><code>    Order Summary
    Xamarin.Android Business    999     3    2997.00
    Xamarin.iOS Business        999     3    2997.00
                                            $5,994.00
    Multiple Licenses                  10%    599.40
                                               Total:
                                            $5,394.60</code></pre>",2014-06-11 02:03:10,7876256
955,Xamarin gives partial Visual Basic support along with full support for C#.,2014-06-12 04:50:39,7881862
956,"Very interesting!  To help give some context is it similar to Xamarin&#x27;s approach but uses Javascript instead of C# as the base language?<p>Also curious if you will be encouraging&#x2F;hosting a components store similar to <a href=""http://components.xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;components.xamarin.com&#x2F;</a>?",2014-06-13 13:09:32,7888594
957,"This is often a returning topic here on HN where most users probably work in startups and&#x2F;or companies with consumer facing apps. Those would want every platform to have the look &amp; feel of the platform you&#x27;re running on. Although... Seems the new version of iOS Skype is WP8 styled and feels a bit alien on iOS while it&#x27;s not unpleasant at all. So not sure if I agree always. Anyway; if you have apps for internal use or use with partners, it is actually often better for the apps to be 100% identical on all platforms as that will save tons of support calls. That&#x27;s why a lot of companies just do iOS first, design it for that and will make the Android version exactly identical. To save time there, often HTML5&#x2F;Cordova is used for that by internal departments &#x2F; IT, but I know you can make MUCH nicer apps in the same &#x2F; less time if you use Xamarin (Forms or Metaframe) (or maybe a solution like this) (although I cannot imagine IT would pick JS over .NET or Java, ever).",2014-06-13 17:50:17,7890023
958,"I know you asked a closed question, but would you consider Xamarin? This way you would earn more transferable skills (C#, multi-platform toolkit, etc.) and not lock yourself in one platform. You could also develop in raw C++ and have only a thin ObjC wrapper over it.",2014-06-15 20:36:50,7896231
959,"Learn C# instead:<p>0) easily very cross-platform (but you will have to pay), mainstream in mobile games via Unity3D;<p>1) not locked to one company: .NET by Microsoft, Mono by Xamarin;<p>2) open-source and welcoming feedback;<p>3) modern and innovative (not like Swift, but for real - introducing stuff like async&#x2F;await, mixed dynamic&#x2F;static typing etc.);<p>4) allows building mobile, web, desktop, butt software today;<p>5) first-class IDE, that will get an extensible compiler-as-a-service in 2015;<p>6) best in class automated refactoring via ReSharper.",2014-06-16 08:03:12,7897848
960,Seems author is not familiar with Xamarin and C#.,2014-06-18 08:12:09,7909000
961,"Hi,
    I&#x27;m currently a rising Senior in college and I would like to be as marketable as possible after graduation. I&#x27;m most interested in mobile app development and have worked with Android for over a year with a few apps on google play here and there.
    What is the best route for me to take to make myself more desirable as an app developer? My plan was to redo an app in iOS and then pick up a cross platform like Xamarin for a larger project.
    Is there a more efficient way for me to spend my last year before looking for jobs?",2014-06-19 20:48:08,7918212
962,"You could always try the Xamarin way. Basically the same APIs, but with nicer languages (C# or F# instead of Java).",2014-06-21 05:50:39,7924307
963,"As a C# developer, have you looked at Xamarin? I have done several apps with it, shared code between iOS and Android. I highly recommend you give them a try.",2014-06-21 14:22:53,7925044
964,Another .NET dev here in the same boat as OP. I really want to play with xamarin but the cost puts me off :(,2014-06-21 21:24:32,7926105
965,"In part, that&#x27;s because of the poor app ecosystem.  I&#x27;ve been very interested in Windows Phone as a mobile platform, but there&#x27;s just too much stuff I&#x27;ve come to rely on my phone for that a Windows Phone doesn&#x27;t do because there aren&#x27;t any apps.<p>And part of the reason for the poor app ecosystem is that they&#x27;ve actively discouraged developers from developing for their platform.  Heck, there&#x27;s a huge number Android and iOS apps that are written in C# using Xamarin, and are therefore theoretically very easy to port to Windows Phone, but haven&#x27;t for reasons as basic as the developers not wanting to upgrade to Windows 8.",2014-06-24 16:48:47,7938742
966,"Not sure why the above comment was downvoted -- it seems to make a sensible point. (Though I don&#x27;t know if I&#x27;d agree with &quot;actively discouraged.&quot;)<p>If I were Microsoft, I&#x27;d give significant $$$ to folks who have created cross-platform app development platforms. Then I can improve the number of Windows Phone apps pretty quickly. I may not get apps optimized for my platform, but at least I&#x27;d have <i>something</i>, and then I could offer additional incentives for optimization. That&#x27;s what Amazon is doing with the Fire phone and developer credits.<p>Xamarin would be one example, and PhoneGap (or whatever it&#x27;s called now) can probably be made far nicer and faster. Last year Microsoft did announce a partnership with Corona, but as far as I know nothing has come of it yet in terms of a public release of the SDK: <a href=""http://coronalabs.com/blog/2013/10/29/windows-phone-8-and-windows-store-support-coming-to-corona-sdk-in-2014/"" rel=""nofollow"">http:&#x2F;&#x2F;coronalabs.com&#x2F;blog&#x2F;2013&#x2F;10&#x2F;29&#x2F;windows-phone-8-and-wi...</a>",2014-06-24 17:10:41,7938871
967,"I&#x27;m a C# developer (and strong supporter of .NET and Xamarin) and this signals to me that I have that <i>many more</i> options now - its great and very exciting for me to hear all this great news coming out of Microsoft almost every other week.<p>DevDiv&#x27;s tools and frameworks is where it&#x27;s at when it comes to building big multi-platform codebases - backend, front-end, desktop, mobile, cloud, whatever. Add to that the immense infrastructure and operations support I get from the MS business ecosystem and it&#x27;s just icing on my Productivity Cake. I don&#x27;t mind paying them because I get great stuff for the price.<p>I never understood how tech-intelligent people would hold so much hate towards a company that pretty much provides some of the broadest selection of tools and solutions geekdom has ever known.<p>Side Anecdote: A little bird recently told me that while working at Box, the attitude from management was so hateful against Microsoft that they were willing to blow through huge amounts of money just to roll their own HR system. What?! As an investor I want my investments to make me more money any way possible - and NOT be wasted trying to recreate wheels just to satisfy some sort of nonsensical personal grudge. This opinion people have with the brand loyalties (and grudges) they hold are non-sense through and through and bad for business.",2014-06-24 17:13:16,7938882
968,"Not entirely.  A huge percentage of iOS apps are written using Flash.<p>The iPad (and HTML5) did kill Silverlight and Flash (to some extent) <i>as browser plugins</i>, but not as platforms in general.  Flash seems to be hanging in there outside of the browser plugin space, and Silverlight died because Microsoft thinks it&#x27;s more fun to respond to market challenges by sweeping everything off the table and into the dustbin than it is to just pivot and keep moving forward.<p>Here&#x27;s an alternative strategy that I strongly suspect would have been less expensive for Microsoft in terms of both development cost and social capital:  Keep Silverlight as the mobile development API, and carry it forward as the platform for developing on both WP8 and Windows tablets.  Pay Xamarin to incorporate support into their dev tools.  Deal with performance considerations by expediting the AOT compiler for .NET, which clearly ended up needing to happen anyway.  Deal with cross-language goals by . . . wait, you&#x27;re still on .NET, cross-language is one of its core competencies.  No need to sink resources into developing yet another iteration of COM, so that&#x27;s a huge time saver.  And as an free bonus, take advantage of the fact that Silverlight&#x27;s already got an OS X implementation to let your developers use the technology to ship cross-platform desktop apps, similar to what Adobe&#x27;s doing with Air.",2014-06-24 17:42:53,7939127
969,"Visual Studio certainly is an option for Android, iOS and OSX development, when combined with Xamarin. I even think this is the best crossplatform mobile toolset that currently exitst and others think so too [1].<p>If you think the Android SDK is very good, have you ever started the emulator and tried to debug an app? It&#x27;s horrendously slow and buggy, if it works at all. iOS and especially WP are so much faster and easier to develop for.<p>[1] <a href=""http://www.drdobbs.com/tools/xamarin-3-enterprise-edition-reviewed/240168321?pgno=2"" rel=""nofollow"">http:&#x2F;&#x2F;www.drdobbs.com&#x2F;tools&#x2F;xamarin-3-enterprise-edition-re...</a>",2014-06-24 18:52:02,7939687
970,"Read it with a little grain of salt. Author seems to be clueless about C# (one of the sources of inspiration for Swift):<p>&quot;I dont think of C# as mainstream. Its probably to do with the kind of thing that I do for a living; but a proprietary language that only works on Windows, which is a platform that I have zero access to.&quot;<p>Mono, Unity3d, Xamarin etc.",2014-06-24 21:09:04,7940662
971,"I don&#x27;t know the answer to this, but maybe moving to Xamarin would help? It will cost you some money, but may simplify trying to support your platforms. I think it&#x27;s cool what you&#x27;re doing, I&#x27;d love to learn from someone like you. But I purposefully limit what I work with technologically. I think there are ways to handle your business, without having to manage every detail.<p>I only work with stuff I can do in Python. If I can&#x27;t do it in Python, I don&#x27;t do it. It is nice, but I also don&#x27;t make the money I&#x27;m sure you are either. So your problem is definitely self-imposed, but it&#x27;s not like you&#x27;re not properly compensated- you&#x27;re just complaining &#x2F; letting off steam. For what you&#x27;re doing, I&#x27;d go learn C# and pay for Xamarin licenses.",2014-06-26 02:32:35,7947863
972,"Kivy is perhaps a better fit than the closed Xamarin.
Cross-platform Python, oh yeah!",2014-06-26 09:08:54,7948687
973,How does Xamarin compare to a more open (and free) solution like MonoCross?,2014-06-27 15:45:27,7954500
974,Have you ever tried Xamarin Studio? It&#x27;s not as good as Visual Studio but it&#x27;s a very decent IDE. I&#x27;m currently using it instead Visual Studio.,2014-06-27 15:53:06,7954557
975,"Unless I&#x27;m mistaken, MonoCross isn&#x27;t a replacement for Xamarin (formerly Monotouch and Monodroid). It&#x27;s a layer on top that abstracts the platforms differences. You&#x27;d still need a Xamarin.iOS and&#x2F;or Xamarin.Android license to use it.",2014-06-27 15:56:28,7954585
976,"You can&#x27;t really compare them. MonoCross is a crossplat MVC framework that you use on top of Xamarin&#x27;s Monotouch&#x2F;droid&#x2F;etc. to increase your shared code. Xamarin allows you to write about the same code for multiple platforms, but it doesn&#x27;t make it easier to share the same exact code. E.g <a href=""http://components.xamarin.com/view/xamarin.mobile"" rel=""nofollow"">http:&#x2F;&#x2F;components.xamarin.com&#x2F;view&#x2F;xamarin.mobile</a><p>The code looks similar across platforms, but it&#x27;s not exactly, the same - you can&#x27;t make one change and have it carry across to all platforms. Monocross brings you closer to a write-once for all platforms experience.<p>A better comparison is Monocross v.s. MvvmCross",2014-06-27 15:59:29,7954605
977,"It&#x27;s clear to me that Xamarin is trying to get everyone to pay right now. The free license won&#x27;t even allow you to build the Xamarin.Forms demo, and Forms is one of the most significant new features they added. Cross platform apps with a common UI and codebase, no more separate views for each platform, and data binding! I think they&#x27;re scaring off small developers by requiring the several hundred dollar investment to use Xamarin, even if it is a great product.<p>Where I work, we chose Xamarin over PhoneGap&#x2F;Cordova.",2014-06-27 16:02:10,7954619
978,"Ah, thanks, I didn&#x27;t catch that MonoCross required Xamarin - it&#x27;s not obvious from the homepage at all (or even looking for it on any page).<p>Was hoping to use it to learn some C# (beyond the simple hello world type of thing) - Xamarin&#x27;s pricing is pretty steep for an amateur&#x2F;hobbyist.",2014-06-27 16:13:32,7954697
979,"Xamarin&#x27;s IDE is not as good as VS, but it is often much better than XCode, and C# and F# are both more pleasant languages to work in for people with the vast majority of experiences (C++, Java, .Net, Ruby), so even without all the cross platform goodness I prefer to work with Xamarin. (Swift may change some of that, I haven&#x27;t looked into it yet).<p>I&#x27;ve never had a problem easily translating Obj C StackOverflows or blog posts to Xamarin&#x2F;C# so essentially you get the whole community as well, with no worries about Xamarin specificness.<p>That said, I think their current pricing structure makes sense for them right now.  They are not &#x27;quite&#x27; at the polish level, not quite at the level that average people can do things averagely.  There is still just a little more cross platform knowledge and effort required.  The price serves as both a barrier to entry to manage the community size, and provides them enough capital (on top of outside investment) to keep investing toward a fully mass market approach.",2014-06-27 16:19:58,7954737
980,"We just did a webinar about Xamarin Studio last week in case you&#x27;re interested <a href=""http://xamarin.wistia.com/medias/z797ghqlps"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.wistia.com&#x2F;medias&#x2F;z797ghqlps</a>",2014-06-27 16:22:58,7954755
981,"The killer problem with Xamarin is to use it effectively you have to be expert in both Xamarin and the native platform you&#x27;re targeting. This is because most of the work of mobile apps ends up being tied to the UI, which has a platform specific API.<p>If your app happens to deviate from this, then at least for Android once more you&#x27;re in platform specific land (for example, services), but I&#x27;ve seen people doing things like rolling their own ghetto mini database in C# to give themselves a portable data model, when it would be faster to use SQLite on Android and iOS, just to justify the decision to use Xamarin at all.<p>So, it can work, but people have a tendency to greatly overestimate how much of a mobile app can actually be platform independent anyway. Games are a different proposition, and this is one reason why Unity has cleaned up.",2014-06-27 16:23:20,7954756
982,Good decision since Xamarin is much more native when compared to PhoneGap&#x2F;Cordova (Titanium is another thing I&#x27;ve been looking at). The student discounts for $99&#x2F;year&#x2F;platform should be the normal price.,2014-06-27 16:25:50,7954776
983,"Personally I much prefer Ruby Motion to Xamarin. I like ruby more, it&#x27;s a closer work flow to my standard python&#x2F;django, Ruby&#x2F;Rails based workflow (terminal and text editor based). Intellij provides a great ide (MUCH better than Xamarin studio, one of my least favorite IDE&#x27;s all though visual studio is even better than intellij&#x27;s offerings IMO). In version 3.0 they will offer Android support and at that point I think Ruby Motion will be the best native app option.<p>Almost forgot to mention that, all of the ruby is compiled down to actual Native obj-c runtime code. Great performance and look, as good as a regular Obj-C or Java app.",2014-06-27 16:27:54,7954786
984,"YMMV but for me, there was not &#x27;learning&#x27; of Xamarin. There really is no Xamarin framework - there is the mobile frameworks themselves for which there is an almost 1:1 translation. CalculateFoo in ObjC or Java will in nearly every case be CalculateFoo in C#. In the cases where the recommended method is to use a higher level abstraction (like for table data in iOS), the option to use a mirror of the ObjC pattern is there but there is an easier approach available if you choose that.<p>The key for me was understanding the idiosyncrasies of both Android and iOS and their patterns and then using C# to craft as much reusable code as possible. It drives my approach and I failed to get the re-use level I wanted on my first true cross platform app build, but since I have learned those lessons I have gotten much better at it.<p>(note: I have yet to use Xamarin.Forms, this experience is based on Xamarin in the past 15 months)",2014-06-27 16:30:54,7954801
985,"It amazes me that the constant complaint on here is the price. Seriously folks, if you are a professional developer (by that I mean your primary ability to earn money for you and your family is the development of software) then the cost of a Xamarin license should be looked at as a factor of time.<p>How much time will it save you? Lets imagine your current project to build an iOS and Android app of identical functionality you are estimating at 6 weeks for each platform. 12 total weeks. Lets say that Xamarin tech gives you a 10% boost (it will be much higher but lets be conservative), that means over the 60 business days, you get back 6. Assume you have 8 hours of work per day and you just bought 48 hours of your time. The basic license which does nearly everything most people need is the Indie license and $300 per platform. Six hundred dollars to buy 48 hours of your time back means the purchase is viable if you value your time at more than 12.50 per hour.<p>If you value your time less than that, you have bigger problems than which mobile tooling to use.<p>The truth is the productivity factor is much higher than 10% and the license is good for a year, pick up a couple other projects like this through the year and that number collapses.  For me this year I will probably do 4 cross plat projects with Xamarin and my productivity diff is north of 50%. The purchase is a no brainer.",2014-06-27 16:42:43,7954878
986,"Well, but if Xamarin comes with the functionality of that sort of plugin included, it&#x27;s totally fair to say Xamarin has X and Cordova doesn&#x27;t.",2014-06-27 16:47:34,7954912
987,"I disagree. The core write-your-code experience is full of jank, to the point where I have wondered in the past whether the XS folks develop it in XS. Its smart indentation isn&#x27;t smart (randomly indenting another three levels, not being smart enough to stick to the indent level I pick when I backspace to where I want it--next line, back out there again!) and occasionally the text widget will &quot;lose&quot; a line of text and take a few seconds to remember that it actually exists.<p>The Xamarin toolchain has steadily improved and its PCL support makes a lot of things a lot easier, but I can&#x27;t envision a use case where I would want to do my development in their IDE. I keep a Windows machine just to have VS so I can do the 90% case there and suffer through the 10% in XS.",2014-06-27 17:06:50,7955025
988,"If you prefer Ruby that&#x27;s cool, but I feel like I should mention that Xamarin is also statically compiled on Apple platforms: <a href=""http://developer.xamarin.com/guides/ios/advanced_topics/limitations/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;advanced_topics&#x2F;limi...</a><p>In fact, every app in the Apple app store is statically compiled. App store guidelines prohibit dynamic code generation, preventing the use of a JIT compiler: <a href=""http://stackoverflow.com/questions/21689993/xamarin-ahead-of-time-aot-compiler-vs-an-ordinary-compiler"" rel=""nofollow"">http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;21689993&#x2F;xamarin-ahead-of...</a>",2014-06-27 17:07:03,7955029
989,"Being honest, there will be very little learning curve going from VS to Xamarin Studio. They tried to make that switch as painless as possible.<p>You are right, there is a factor of learning that needs to be baked into your consideration but there comes a point where you put a little trust in people who came before you and tell you &#x27;I have done this, I have been where you are - follow me and you will be fine&#x27;.<p>On the flip side, Nat Friedman is incredibly approachable. I am sure if you simply email him and tell him your concerns he will accommodate you with a longer trial period or some kind of money back guarantee, that just how he is.",2014-06-27 17:08:05,7955035
990,"There are so many factual errors and outdated assumptions in your thread that i wont take the time to do a writeup. To put it short: 
- You&#x27;re wrong.
- Given the current speed of Javascript on mobile, Xamarin is just a job creation tool for unemployed .NET&#x2F;WPF Developers. - You cannnot reuse run-of-the-mill web devs for hybrid app development.
- Good web developers are just as expensive as good native devs.
- Hybrid app development is not easier than native development.<p>Have a nice weekend.",2014-06-27 17:24:10,7955132
991,The big question IMHO is will Microsoft buy Xamarin or not. If they do the price will certainly fall drastically. On one hand it will give MS way more apps on their app store. On the other if Xamarin becomes very popular Apple may block Xamarin built apps from it&#x27;s app store.,2014-06-27 17:25:43,7955140
992,"Maybe the tacit assumption here is that I&#x27;m doing development for Android and iOS; I&#x27;m currently interested in neither, although I do think F# is a compelling language and I&#x27;d love to be able to advocate for it at my workplace. However, given the fact that we&#x27;re a Linux shop, Xamarin has made it really hard to push for Mono&#x2F;F# as an alternative to Scala.",2014-06-27 17:32:58,7955178
993,"30 days. 100% Risk Free, Unconditional money back guarantee.<p>Lets just get expense out of the way because that argument is actually invalid. For professional devs like us, if you cannot learn something new enough to make a decision on it - in 30 days, then we have bigger problems than license fees.<p>If that is the case for you then money is not the issue, it is time. Having 30 free days for me to spend learning a tech is a unicorn, it does not exist.<p>I understand your frustration because there are so many amazing techs out there I wish I had the time to learn but just don&#x27;t. I made the decision to invest my time in Xamarin when I realized that the custom mobile dev market is slowly eating the custom web appdev market I was doing so well in. I made a conscious decision to make a bet on Xamarin (mainly because I knew C# very well) because I saw value in their approach vs others.<p>I have been very successful financially in my career so it could be that I look at time and money different than others, especially college students learning CS, but my statements were aimed at pro devs.<p>(an aside, I think Xamarin offers very steep discounts to students)",2014-06-27 17:37:49,7955205
994,"To add to this: think about the target market for this. It&#x27;s not the person who knows objective-c and wants to make an Android app. It&#x27;s not the person who knows Java and wants to make an iOS app. It&#x27;s the person who already knows .NET and wants to make an app for either of those platforms.<p>I guess I also made a fundamental mistake in the above sentences. It&#x27;s not a person, but rather a business that is looking at it. In the .NET world, it&#x27;s common to have an MSDN license for each developer. Looking at the costs from that perspective and the licensing costs for Xamarin make a lot more sense.",2014-06-27 17:47:20,7955265
995,"Sure. It&#x27;s probably better to link to the blog post that has the video and the slides available: <a href=""http://blog.xamarin.com/webinar-recording-native-mobile-apps-in-xamarin-studio/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;webinar-recording-native-mobile-apps...</a>",2014-06-27 17:53:06,7955301
996,"This is mostly true with Xamarin also, platform code is platform code. Most of your code sharing is business logic&#x2F;accessing rest api&#x27;s&#x2F;core algorithms. UI&#x2F;platform type of code is always going to be hard to port. That being said MacRuby (which is basically what Ruby motion is and JRuby (ruby on the jvm which I think the Android is based upon) are pretty close to source code compatible last I checked so I think it&#x27;s likely a good chance.",2014-06-27 17:54:00,7955308
997,"I think you are missing the point here so I&#x27;ll layout the three reasons price is a big deal to some (I&#x27;m basing my arguments on the ($1000 per platform price because that is the first place I think it&#x27;s really worth while):<p>1. If I&#x27;m bootstrapping a startup, That $2000 is easily at least 1 entire year of web hosting, or a new MacBook, or a couple of new servers. Bootstrapping has thin enough margains that $2000 is a large amount of money and runway for a young company and that&#x27;s only for one dev. Have two dev&#x27;s? that&#x27;s even more of your runway gone. $4000 could sustain two devs for two months if they are really cheap and try hard. Xamarin is unlikely to save you that two months.<p>2. If I&#x27;m developing an indie game there are A HUGE amount of cheaper better options available. Unity, Unreal, Cry Tech, cocos2D&#x2F;3D, or Apportable. All cheaper and better for game dev.<p>3. If I&#x27;m learning how to develop mobile apps with the hope of  obtaining a full time job. Then Xamarin job posts are fairly rare, so spending even $600 to learn the dev process and then still not have the skills to get a full time position is a losing value equation.<p>4. There are cheaper tools out there, like Ruby Motion or Apportable.<p>I think the Xamarin guys are brilliant and made a great product but I think the value is very limited to existing Dot Net or independent app developers. Yes it makes a lot of sense for those groups but there are a ton of others that the price is a real barrier to entry.",2014-06-27 18:11:55,7955421
998,"Great, now I feel like my reply was way too snarky. I&#x27;ll give the XS IDE a try and I want to be clear to any Xamarin&#x2F;dev folks reading here, I in no way think all this stuff should be free. I just see that as a limiting barrier and, judging by the comments here and elsewhere, so do others. I appreciate your reply and insight, thanks!",2014-06-27 18:22:00,7955475
999,"Right and as an independent dev Xamarin makes a mertic SHIT ton of sense, though once Ruby Motion has Android I&#x27;d argue that is a way better value. But as a guy working a day job hoping to bootstrap a startup&#x2F;indie game on my nights and weekends $600-$2000 is  ALOT of dough to drop, Ruby motion is $200 and I can swing that without much of a second thought, honestly I could swing $600-$2000 is within my range also I mean I&#x27;m extremely lucky in my salary compared to the rest of the world but it&#x27;s A LOT harder to justify on top of a $3000 macbook pro retina, an intellij license, and the rest of my day used dev tools. Not trying to attack you on your stance I just would love Xamarin to rearrange their pricing to something that makes sense for different markets. I know that $20 a month plus 15-20% of app profits or something more flexible may make them much more popular with certain crowds.",2014-06-27 18:22:15,7955478
1000,"100% true.  I&#x27;m going to piss many off by this statement I&#x27;m sure... but if you are a web developer Xamarin offers no advantages against PhoneGap&#x2F;Cordova  I don&#x27;t know anyone that is &quot;just a C# developer&quot; and hasn&#x27;t done any web development, maybe Xamarin makes sense for those.<p>Take a look at Ionic Framework if you think PhoneGap&#x2F;Cordova can&#x27;t provide a native look and feel.",2014-06-27 18:47:31,7955626
1001,"I have done a lot amount of development in MonoTouch &#x2F; MonoDroid (full time for about 2.5 years now). I started using them back when they were beta, and I would wager we have one of the larger apps written in Xamarin (about 250kloc).<p>First of all, it&#x27;s tricky. It took our team a long time to get the rhythm of simultaneous Android&#x2F;iOS development. For a long time every single push broke something.<p>Some annoyances:<p>Visual studio project files don&#x27;t merge. You need a special xml aware merge tool to do this. Even then, its a pain in the ass.<p>It can be very tricky to abstract the differences between Droid and iOS if you&#x27;re interacting with the OS a lot.<p>Some things to know:<p>Just because you&#x27;re in C# land, doesn&#x27;t mean your API is. You&#x27;re going to spend a lot of time implementing stuff in C# that feels wrong because your API is ObjC&#x2F;Java.<p>Sometimes there isn&#x27;t a good mapping between NS data types between the APIs.<p>You&#x27;re going to spend a LOT of time in the iOS &#x2F; Droid docs, so you&#x27;d better be comfortable with ObjC &#x2F; Java.<p>Overall I&#x27;m happy with the experience.",2014-06-27 18:48:29,7955632
1002,"Someone mentioned Titanium earlier.  Titanium shares the major advantages Paulo points out in his case for Xamarin (i.e. single language, cross-platform, native apps, access to native APIS).  But Titanium also has a couple clear advantages over Xamarin:<p><pre><code>  - Titanium is FOSS - Xamarin&#x27;s cost is merely very inconvenient; its closedness is much more repulsive
  - Titanium doesn&#x27;t sideline those of us who develop on linux (a linux-based OS rules the mobile market, after all)
</code></pre>
On the other hand, C# is a beautiful, evolved language that I would love to try out with mobile development, and I can appreciate a shiny IDE.  However, as long as the above conditions apply, I&#x27;ll always consider open and developer-friendly solutions like Titanium first before resorting to Xamarin.",2014-06-27 19:17:09,7955785
1003,Xamarin recently released special pricing for small businesses and startups. Just FYI!,2014-06-27 19:25:16,7955830
1004,"The power of Xamarin is obviously that you have a single language (C#) even if you have a &quot;fat&quot; UI&#x27;s that are platform specific. Having a single language means that you can have your business logic as a single code base rather than it in two or more languages with all the consequences of code base specific bugs.<p>But I do agree with you, Xamarin is not a build once run anywhere kind of solution. If you want to build Android app with it you still need to be very familiar with all the ins and outs of Android, same for iOS.",2014-06-27 19:52:05,7955986
1005,We recently introduced pricing for SMBs and Start Ups. You can shoot an email to hello@xamarin.com if interested.,2014-06-27 20:04:09,7956038
1006,"I want to use Xamarin like <a href=""http://www.remobjects.com/elements/hydrogene/"" rel=""nofollow"">http:&#x2F;&#x2F;www.remobjects.com&#x2F;elements&#x2F;hydrogene&#x2F;</a> remobjects c# works.<p>(Well, I guess I&#x27;d prefer to use it in F# too).<p>How well does it work to ignore the .Net parts and just use the nice IDE&#x2F;Packaging&#x2F;Not java story?",2014-06-27 20:50:18,7956232
1007,"I think the only important difference between the $300 and $1000 licences is the Visual Studio add-in and while I prefer VS to Xamarin Studio, I would assume the starving devs at a start-up will be fine with it.<p>The only way your math makes sense to me is if a start-up only plans on releasing for one platform at first. If you&#x27;re going to build an iOS app first and only move on to Android if that iOS app is successful than it probably doesn&#x27;t make sense to use Xamarin.<p>If you&#x27;re planning on doing both iOS and Android at the same time (and maybe Windows Phone as well), the added developer hours (same dev or an additional dev) to build the same project in another language instead of sharing 50% of the code and just building another UI would probably cost you more.<p>I never heard anyone for Xamarin selling it as a game dev solution. IIRC Unity is actually running on the same Mono engine from Xamarin (it&#x27;s an open source project, but I think they&#x27;re running it). Last time I checked some of those other solutions had expensive licenses too.<p>Xamarin is still too new to see lots of job postings looking for that skill. I also think that in the near future companies using Xamarin will use it for LOB apps. That&#x27;s a big market for .Net developers building desktop software or internal web sites. A transition to Xamarin might makes sense for both these companies and these developers.<p>The bottom line, products are targeted at specific customers. Xamarin could have decided to go after the start-ups, but since most start-ups are content with releasing an app on a single platform first, the proposition of getting additional platforms with less work isn&#x27;t that enticing. It&#x27;s much easier to sell the product to an enterprise as their cost for multiple teams with different skills would be a lot higher than the Xamarin license.",2014-06-27 23:12:18,7956702
1008,"Apple tried blocking certain platforms in the past, at that time Xamarin wasn&#x27;t included since they are following the guidelines set in Apple&#x27;s developer terms of use. Apple changed their mind very quickly about that decision too.<p>Xamarin still requires a mac. Your code is still compiled using LLVM (or whatever engine Apple will introduce later). The resulting app that is uploaded to Apple looks just like an app that was built using XCode.<p>It will be interesting to compare a simple app and see the difference in the resulting package between Xamarin and XCode",2014-06-27 23:15:59,7956720
1009,"If I&#x27;m not mistaken, MSDN subscribers (not BizSpark though) also get a discount on Xamarin licenses (or maybe it was just their university learning subscription)",2014-06-27 23:19:16,7956728
1010,"Everyone on the Xamarin Studio team uses Xamarin Studio to develop Xamarin Studio.<p>Smart Indent, afaik, has been fixed. The problem you describe was only an issue for multi-line lambdas, iirc.",2014-06-28 10:43:58,7957928
1011,I hope they will add C#+Xamarin support when their project N arrives. Sell for 30% of Visual Studio price: win for everyone (except MS).,2014-06-28 12:33:18,7958026
1012,I&#x27;m a grad student working on my Masters Project. It&#x27;s a Personal Health Information System. I&#x27;m using this project to develop a cross platform application using #Xamarin. I&#x27;m hoping to have a prototype soon.,2014-06-29 05:49:38,7960467
1013,"The line issue pops up for me in regular control for blocks and I&#x27;m using the most recent beta (which I&#x27;m uncomfortable doing but had to do to get anywhere). My indenting still gets very confused anywhere I have #if blocks.<p>You know I like you guys, I loved doing GSoC with Mono and I wouldn&#x27;t have interviewed over there if i didn&#x27;t like what you&#x27;re trying to do, but these issues make it really hard recommend Xamarin. Having my IDE make me legitimately mad is a bummer.",2014-06-29 16:12:43,7961516
1014,How does one become Xamarin certified from Australia&#x2F;Malaysia?,2014-06-30 02:57:33,7963473
1015,"Android L with the Material design language looks very attractive. But I really dislike the Java&#x2F;XML combo for development.<p>So, anyone tried the alt-Java&#x27;s for coding Android apps: Kotlin, Xtend, Scala etc.<p>Or even Xamarin or QT&#x2F;QML.<p>P.S With ART, I hoped Google were moving away from Java and would bless one of the alt-Java syntaxes and eventually cut-out Java and evolve ART independently. But apparently not.",2014-07-01 10:47:13,7969974
1016,"BOSTON Full-time
<i></i>Xamarin<i></i> is hiring <i></i>Release Engineer<i></i> <a href=""http://xamarin.com/jobs/oV5xYfwf"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;oV5xYfwf</a><p>Come join the team in the Boston office!  <i></i>Xamarin<i></i> is redefining cross-platform mobile development by unifying fully native app development for iOS, Android, Mac and Windows in a single C#-based platform!<p>Email me (paula@xamarin.com) if you have questions!",2014-07-01 13:55:08,7970618
1017,"C# and&#x2F;or F# + Xamarin: <a href=""http://fwaris.wordpress.com/2014/03/26/xamarin-f-experience-report/"" rel=""nofollow"">http:&#x2F;&#x2F;fwaris.wordpress.com&#x2F;2014&#x2F;03&#x2F;26&#x2F;xamarin-f-experience-...</a><p>(I have not yet tried, but am going to)<p>PS: why hate XML? It has its place. JSON is not meant to be extensible and it&#x27;s a data, not mark-up language.",2014-07-01 19:29:20,7972956
1018,"It&#x27;s important to remember that C# does not imply .NET<p>Xamarin has done some great stuff lately, for example you can use C# to make a native 3-platform mobile app. This is still proprietary tech, but it isn&#x27;t Microsoft and it isn&#x27;t .NET<p>In my eyes the best thing about the .NET ecosystem is the tools, if you like me fancy a polished IDE like IDEA, then VS is definitely one of the best ones around. In my eyes tools are more important than platforms, languages and licenses. The productivity hit of poor tools is much more expensive than anything else.<p>Also, if you are looking at C#, don&#x27;t forget to consider F#.<p>Compare a minimalist service built on Node&#x2F;AWS with one built on F#&#x2F;Azure and it&#x27;s not too different in cost but a much nicer language and better tools.",2014-07-07 09:21:02,7997848
1019,"What about Xamarin though:<p><a href=""https://xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;</a><p>I&#x27;ve been kind of avoiding mobile development after getting my fingers slightly singed by spending too much time with jQuery Mobile before giving up - the one thing that tempts me to try doing some mobile development is the Xamarin tool set.",2014-07-07 09:45:57,7997933
1020,"Two reasons:<p>a) I can&#x27;t imagine somebody bothering to support .net software on the Linux desktop without being paid for it. I know those guys[1] are a minority, but it takes only a minority to create an absolutely toxic atmosphere. Maintaining a end user product can lead to frustrating interactions, and it doesn&#x27;t really help if your choice of technology means that there exists a significant number of people who literally want you, your spouse, your three year old daughter and the family dog to die in a fucking fire.<p>b) Mono was always a bad choice for asp.net, which means that the software people <i>are</i> actually paid for doesn&#x27;t run well on Linux. That was mostly a problem outside of xamarins control, and I hope it becomes better not that the devdiv MS seems to be somewhat committed to work together to make it truly interoperable.<p>[1] Just look at the comments at <a href=""http://techrights.org/2013/02/09/tombye/"" rel=""nofollow"">http:&#x2F;&#x2F;techrights.org&#x2F;2013&#x2F;02&#x2F;09&#x2F;tombye&#x2F;</a>.",2014-07-07 11:07:00,7998173
1021,"I would at least put C# on the table for consideration though.  But that&#x27;s because I really like C# and have a bit of experience developing in Xamarin with it for both the CLR and mono, so I know the workflow and tech CAN work on linux.  The quality of some stuff out there, like this <a href=""http://www.codeproject.com/Articles/168662/Time-Period-Library-for-NET"" rel=""nofollow"">http:&#x2F;&#x2F;www.codeproject.com&#x2F;Articles&#x2F;168662&#x2F;Time-Period-Libra...</a>, is phenomenal.  The concurrency stuff is pretty solid as well.  But it&#x27;s a different ecosystem too and you get casualties like ServiceStack.",2014-07-07 13:20:54,7998641
1022,"...and then close eyes and pretend that IntelliJ supports C#, F#, Xamarin, UnityVS and other useful things.",2014-07-07 15:15:41,7999263
1023,"Likewise, we are running our SaaS product&#x27;s backend with full C# -based stack (built from scratch without using any PaaS specific technologies for IPC&#x2F;RPC etc.etc. so can be run on any provider) on top of Windows VMs, but database is running in Postgres. The licensing being one of the major reasons for that and avoiding SQL Server, even though it was a technology I had lot of experience from before when I was doing IT administration in MS environments. But Postgres is not that dissimilar, at least when you tend to do lots of operations in the code and not inside the DB as storprocs..<p>Our client&#x2F;agent piece is also written fully in C# (we support only Windows workstations at the moment so it was no-brainer decision) and recently I have been looking into Xamarin to leverage that investment when moving into other client platforms.<p>This has worked great as I have a history purely in Microsoft technologies so the administration is lot less of a burden compared to trying to figure out everything for some other stack. If you are fluent in one technology, why not use it, right? And besides, with Mono there&#x27;s at least theoretical path for running parts of the backend on Linux, but in the big picture the licensing costs for Windows vs. Linux in managed hosting is peanuts.",2014-07-07 16:05:31,7999508
1024,"I&#x27;ve often seen OCaml compared to F#; as someone who knows Haskell and Rust (among others), which is better to learn? I&#x27;m not really a Windows guy, which makes me think OCaml, but I&#x27;ve seen that Xamarin now works with F#, which is appealing to my inner app developer.",2014-07-08 02:01:42,8002684
1025,"After working many corporate jobs over the years, this kind of rhetoric seems trite and overused. &quot;We are stream-lining our processes and going to empower our employees to change the world!!!!&quot;. So many corporations that fell behind the trends and are just trying to reinvent themselves to that they can get back on track use the same words. However, in this case, it seems different. Microsoft has over the past few months kinda proved that they mean it. Open sourcing .NET and other technologies, playing nice with many different startups like Xamarin to help empower and push them forward on their stack. It really does feel different and for the sake of the technology world, I hope they do. We need more than 2 giants competing in the consumer market, and we need people willing to dare to move the needle forward, pushing the bar everyday. If there is a company with the means and resources to do it, its Microsoft. I don&#x27;t work there, but I hope an employee can shed some more light on the internal changes that are taking place.",2014-07-10 16:50:33,8015675
1026,"Windows.  Mac.  iOS.  Android.  Windows Phone.<p><a href=""http://xamarin.com/platform"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;platform</a>",2014-07-12 12:26:49,8024388
1027,"Rdio<p>Dow Jones<p>Tesco<p>Microsoft<p>Bosch-Siemens<p>Direct Energy<p>Ara<p>Sennheiser<p>Kimberley-Clark<p>Xactware<p>National Instruments<p>To pick just the people on <a href=""http://xamarin.com/customers"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;customers</a>",2014-07-12 14:41:05,8024640
1028,"SQLite is great for its mobile crossplatform availability. We recently used for a crossplatform app (with Xamarin) on iOS, Android and Windows Phone.<p>However, we found the WP version of SQLite to be much much slower than SQLite on iOS and Android, where it is built-in. On WP, SQLite cost about 3 seconds extra on application start up. Eventually we replaced SQLite with custom json serialization to get the the same performance as iOS&#x2F;Android.",2014-07-14 22:26:43,8033630
1029,Does this mean Realm would be usable for Xamarin-based apps in the near future?,2014-07-15 22:23:14,8039486
1030,"<i>Where Ocaml is better</i>:<p>- Single Core Speed (Ocaml is fast)<p>- native compilation without requiring some installed runtime<p>- Polymorphic Variants (Last I read, to be used only when regular variants are not sufficient)<p>- Modules and Functors (there&#x27;s a proof of principle for F# supporting these)<p>- GADTs (allow for richer more expressive types, much more flexibility than regular algebraic data types)<p>- camlp4<p>- more pervasive structural typing, higher kinded types...type system is not weighted down by a foreign runtime<p><i>Where F# is better</i>:<p>- better support for not-sequential programming in all its forms: actors with lightweight threads, parallel, async, gpu (many production ready choices), reducers (and Go style channels if they accept joinads)<p>- Active Patterns are a dark horse<p>- Type Providers are curious. They seem like dumbed down metaprogramming at first but it&#x27;s one of those cases where constraints benefit creativity. Although you could certainly do what they provide (and more easily at times) with metaprogramming, I&#x27;ve never seen metaprogramming used that way before. And especially with the proliferation of APIs, stuff like json inference makes going to a language without them like going from 3 monitors to one.<p>- Units of Measure<p>- More libraries and Better cross platform support via Xamarin and unity3d<p>- #light. F# syntax is a tiny bit cleaner and surprisingly close to Python at times.<p>- Computation expressions&#x2F;do notation are not quite monads and can be more flexible. Tomas Petricek argues the case here: <a href=""http://tomasp.net/blog/2013/computation-zoo-padl/"" rel=""nofollow"">http:&#x2F;&#x2F;tomasp.net&#x2F;blog&#x2F;2013&#x2F;computation-zoo-padl&#x2F;</a><p>Why the above do not matter: The MLs tend to be more pragmatically focused than other functional languages and espouse using as little fancy code as possible. The core of both languages are the same, so much of the time and ignoring library choices, you won&#x27;t be seeing many differences between F# and OCaml. It&#x27;s more like Portuguese vs Spanish than English vs German.",2014-07-17 00:08:26,8045326
1031,"This is quite an unfair comparison.<p>First of, Microsoft does support the development of .NET and associated components. It is definitely not an active support relationship, but MS answers the questions Mono developers have and has provided some help for the Moonlight project. Furthermore, it seems Microsoft <i>is</i> making an effort to make ASP.NET on Linux more attractive.<p>Having said that, it doesn&#x27;t even matter <i>what</i> Microsoft does with .NET. If Swift stays &#x27;closed&#x27; as it is, you can use it to develop Mac and iOS applications. If .NET stays &#x27;closed&#x27; as it is, you can use your .NET experience to develop Windows desktop applications, &#x27;Windows Store&#x27; applications, web applications and services, client side web programming, Windows Phone apps, apps for iOS and Android with Xamarin, Linux desktop applications, and even operating system development or protocol verification if you&#x27;re an adventurous academic. All of these things are being done right now by people, and good tools exist for those things. I realize that people on HN don&#x27;t like Microsoft&#x27;s lock-in or tools, but experience with .NET <i>does</i> give you access to a very diverse set of areas to program in.<p>Now I&#x27;m quite convinced that Apple will open source Swift (they appear to have informally confirmed they&#x27;ll be doing exactly that [1]). And then its basis on LLVM will make sure that it can be used in other places as well. But I doubt Swift&#x27;s uptake outside of Apple apps will be bigger than Objective-C&#x27;s simply because, unlike Microsoft, Apple won&#x27;t use or promote Swift anywhere for anything else than Apple apps.<p>The point is that &#x27;openness&#x27; of a language itself does not matter much for the value to learn it. It depends on how much you can do with the language. Even if you assume &quot;You can never use Swift outside of Apple&#x27;s context&quot; and &quot;You can never use .NET outside of Microsoft&#x27;s context&quot; are both true (which they are not), Microsoft&#x27;s context for .NET is <i>much</i> broader than Apple&#x27;s is for Swift.<p>[1]: <a href=""https://twitter.com/mxweas/status/474581160454942721"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;mxweas&#x2F;status&#x2F;474581160454942721</a><p>[2]: Of course one can argue that developing Mac+iOS applications itself presents more value than all of the .NET things I mentioned combined. But that was not the point of this discussion.",2014-07-21 09:46:23,8063079
1032,"You can use Xamarin (C#, F#) for Android though, which will let you go multi-platform in future.",2014-07-22 12:15:39,8068502
1033,"Definitely agree with T440 (I have the T440s) w&#x2F; 9 cell battery especially if your commute to and from work is large. Macbook Pro + VMFusion + VS results in &lt; 2 hours battery life. It&#x27;s much better to do native Windows 8.1 and then VMware OSX.<p>You&#x27;ll get 8-10 hours battery life (under load, else 16 hours), touch screen Windows 8, touch screen OSX&#x2F;iOS simulator, touch screen Android simulator and touch screen Windows 8 Phone simulator - concurrently all at the same time.<p>This is my setup for cross-platform mobile dev using Xamarin. There&#x27;s something special about commuting on the train, doing iOS&#x2F;Droid&#x2F;WP8 development in Visual Studio without being chained to a physical mac-mini or multiple computers.",2014-07-23 09:01:43,8073427
1034,"There are a ton of cross-platform frameworks, both proprietary and OS. Here are a few of the bigger ones: Marmalade, Cocos2d-x, LibGDX, Xamarin, and Unity (you can 2d with Unity now, I believe).",2014-07-28 04:24:36,8095176
1035,"I have recently started using Xamarin for a client who wanted apps for the major mobile platforms. It was a little confusing at first to get going and understand how to structure my app. It took about a whole day to understand what I needed to know. But once it clicked, it was very easy to write my code for the platforms in a small amount of time. The code I wrote is 100% reusable for each of the platforms.",2014-07-28 18:10:25,8098409
1036,"1. It will only lower the barrier. While not being innovative in any way Swift is a modern language and does simplify development.<p>2. Based on your concerns, using Swift is a really bad idea, since you will be tied to single platform. I would opt for C# + Xamarin instead.",2014-07-29 07:55:25,8101138
1037,Agreed. Here I treat nearly all text as text and edit in vim. That&#x27;s why I like how simple and readable Markdown is.<p>Having a different editor for different text documents seems redundant to me. However I&#x27;ll admit my two exceptions are using Xamarin for C# and ADT for Android apps.,2014-07-29 14:31:49,8102404
1038,"Yes, even iOS is more open - you can use C&#x2F;C++, C#&#x2F;F# (Xamarin), Java&#x2F;Scala (RoboVM) to build apps. Now that&#x27;s a freedom.",2014-07-31 07:58:13,8112934
1039,"Location: Hyderabad,India<p>Remote: No<p>Willing to relocate:Yes<p>Technologies: Django,Git,C#,Xamarin.OSX,Spring MVC<p>Resume: <a href=""http://in.linkedin.com/pub/rashid-khan/4b/b64/542"" rel=""nofollow"">http:&#x2F;&#x2F;in.linkedin.com&#x2F;pub&#x2F;rashid-khan&#x2F;4b&#x2F;b64&#x2F;542</a><p>Email: rashood.khan@gmail || rashid@imrashid.com",2014-08-01 16:03:32,8120843
1040,"That looks like pretty good value.<p>It&#x27;s much lower risk to a small shop like mine.<p>I could stick 3 developers on it for $150 a month to cover Android and iOS and not worry if we don&#x27;t use it much for a month or two because other priorities come up.<p>Actually, scrap that.<p>I think I still REALLY want Xamaine to give us a 6 month unlimited free trial for up to 5 developers. That way, if it sticks and it&#x27;s as good as they say, we&#x27;d happily pony up the $534 a month to get the team on it and would probably run with it for a long time.<p>In comparison, using native Android + iOS tools costs us about $5 a month, 1% of the Xamarin cost.<p>Entry barrier still too high for me. Just sharing my thinking :)",2014-08-01 18:52:48,8122144
1041,"I did a fair amount of experimentation with phone gap&#x2F;Cordova a couple of years ago.  What really killed me wasn&#x27;t so much perf as places where you want or need native UI.  For example, if you want a nice mapping experience, JS based maps suck on mobile compared to the native map widget.<p>Based on this I think the Xamarin model makes a lot more sense in today&#x27;s mobile landscape.  Be smart about building shared logic and view controllers and wire it up to fully native UX.",2014-08-03 17:22:07,8128481
1042,"One day. One day I hope Xamarin will find a different financing model, or like you said include VS support in their indie plan. It&#x27;s just far too expensive right now.",2014-08-04 22:00:39,8134300
1043,Xamarin Studio is a really awesome product that doesn&#x27;t get enough love because of anti-MS sentiment.,2014-08-04 22:10:05,8134349
1044,"I also dislike their pricing.  But their CEO was very open to discussing it by email the other month when they had a big new release, someone more articulate than me may convince them on the merits of a different model.<p><a href=""https://news.ycombinator.com/item?id=7810310"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=7810310</a> =&gt; nat@xamarin.com.",2014-08-04 22:16:26,8134380
1045,Xamarin Studio 5.2 supports this.,2014-08-04 22:17:00,8134383
1046,"Did they get rid of the eval period (30 day money back guarantee is not the same as an eval period) when they switched to a monthly subscription model?<p>Edit: the trial is mentioned in the extended FAQ <a href=""http://xamarin.com/faq#pricing"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;faq#pricing</a><p>One thing I didn&#x27;t realize was that it any app built with the trial version can only be used for a 24 period. My plan was to build a LOB app, get my company to see the value in it and then have them purchase the full license. The 24 hour window makes that really difficult.",2014-08-04 22:28:37,8134422
1047,"Indeed! <a href=""http://developer.xamarin.com/releases/studio/xamarin.studio_5.2/xamarin.studio_5.2/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;releases&#x2F;studio&#x2F;xamarin.studio_...</a>",2014-08-04 23:04:14,8134562
1048,Well not having a linux working version ( at least of xamarin.android) is not helping to fight back that sentiment,2014-08-04 23:04:31,8134563
1049,"I&#x27;ve talked to lots of people ranging from investors to developers, for whom &quot;C#&quot; is a dirty word because of its relationship with Microsoft (which, at its most benign, is viewed as stodgy, old, and slow by these folks).  In my humble opinion, it&#x27;s a shame, because their developer products are fantastic, and Xamarin has done a great job of bringing those tools to new and highly relevant platforms.",2014-08-04 23:07:26,8134570
1050,"It&#x27;s funny - I have the opposite view having worked in C# years ago and appreciated that it was a lot more flexible and pragmatic than Java (as a language - libraries and platform aside).<p>To me the problem is that it&#x27;s not native to either Android <i>or</i> iOS, and so good as it is, there is always some impedance mismatch.<p>Are there any great apps developed using Xamarin that feel fully native?",2014-08-04 23:28:35,8134658
1051,"True. But then again, Xamarin Studio is not a developer. :)",2014-08-04 23:47:55,8134732
1052,"I have come to the conclusion that people A) this sentiment is an edge case and B) people will never be happy.<p>The last time there was a thread about Xamarin on here the top comment was complaining about the cost of a license, several weeks later they announce monthly pricing.<p>Now the complaint is we don&#x27;t get Visual Studio support with indie pricing. Seriously folks? I am not trying to be a Xamarin apologist but the company has to make money and find a model somewhere that makes sense - putting VS support in an up-level SKU makes all the sense in the world if you follow the trends.<p>Look at it this way, the majority of Xamarin customers who want Visual Studio support are businesses for whom the cost of the licenses is irrelevant in the larger picture (I dont want to provide a math lesson but if they x-plat savings are manifest, the ROI on the licenses is near immediate). That is where Xamarin can find the margin to support the lower tiers. If they had the ability to support the entire company on $25&#x2F;developer&#x2F;year then I venture they would because there is value for them right now not in taking profit but in growing the developer base. Alas they are not doing that which tells me they are finding customers in the enterprise more than willing to pay for their product. In order to get TRIPLE the revenue per customer they add one specific sweet spot that they know nearly all those customers want - Visual Studio support. If they put that in the lower tiers they nuke their margins because it is the feature that matters most to the enterprise dev teams who are often filled with people who know and enjoy visual studio above other environments. It also enables them to not purchase a secon machine (mac) for each of these developers which gets beyond the hardware and licensing costs and has an effective cost on IT operations.<p>So yes, it would be nice if Visual Studio support were included in the indie tier - but it would not be prudent. Besides, how many &#x27;indie&#x27; developers do you know are actually completely dependent on Visual Studio? I love Visual Studio and half my consulting revenue comes from the hours I spend in it - but the other half of my time which is usually spent doing mobile development is done in Xamarin Studio because - surprise, it is really pretty good.",2014-08-04 23:50:42,8134746
1053,"&gt; Now the complaint is we don&#x27;t get Visual Studio support with indie pricing. Seriously folks?<p>My comment from that thread: <a href=""https://news.ycombinator.com/item?id=7811180"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=7811180</a><p>So now instead of $3k out of pocket for VS support, it&#x27;s <i>only</i> $1k.  I&#x27;m sure it&#x27;s a good product, but <i>my</i> complaint has not changed (so I&#x27;m not sure why you said &#x27;<i>now</i> the complaint is&#x27; since you&#x27;re replying to someone that has maintained the same complaint).  I mean, if you wanna gimmie $1k so I can test out Xamarin+VS for more than 30 days, I&#x27;d totally be down, but until then, I&#x27;m merely posting on HN (since their company reads HN) that it is still cost prohibitive even though I <i>want</i> to give them money.",2014-08-05 00:00:57,8134784
1054,"You can dev for free with android&#x2F;ios tools, you don&#x27;t have to use Xamarin.  The point of Xamarin is that you can make more money faster by developing and releasing for multiple platforms from one code base.",2014-08-05 00:55:50,8134972
1055,"Screw C#. Xamarin&#x27;s party trick is F#. It&#x27;s basically Swift, on steroids, which lets you write a single codebase to target Android, iOS and Windows Phone.",2014-08-05 01:58:52,8135160
1056,"Don&#x27;t mind me, but this is giving me flashbacks to 15 years ago when this was the Qt user&#x27;s response to the FUD about license prices given out by certain developers who may or may not have later founded and joined Xamarin.<p>Fascinating how the tables turn.",2014-08-05 01:59:30,8135163
1057,"Yes. I don&#x27;t know of any big apps like Rdio that you would recognize yet, because Xamarin hasn&#x27;t supported F# that long, but there are cross-platform apps being written in F# now.",2014-08-05 02:27:03,8135234
1058,"<p><pre><code>    &gt;So it&#x27;s back at $3k for VS support for iOS&#x2F;Android&#x2F;Windows :-(
</code></pre>
Given the current Windows Phone app market it&#x27;s probably more cost effective to skip that platform in Xamarin and just work in VS with native project types.",2014-08-05 02:39:23,8135266
1059,"There are some case studies here: <a href=""http://xamarin.com/customers"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;customers</a>",2014-08-05 02:47:40,8135281
1060,"For most people it might be, but I&#x27;m a solo bootstrapper, so time == $^$ for me :-&#x2F;<p>I&#x27;d really like to see a trial until release subscription option, I think that would afford a lot more people time to test and play with what Xamarin has to offer, 30 days just seems too limited to really dive into it unless you can guarantee you won&#x27;t get pulled off onto other tasks&#x2F;projects.",2014-08-05 03:43:06,8135397
1061,"Presumably that is the only one.  Xamarin features it, but everything else they feature is an in-house corporate line of business app.  If there are &#x27;lots of great apps&#x27; out there, you&#x27;d think they&#x27;d tell us.<p>Not encouraging.",2014-08-05 04:36:54,8135534
1062,The problem with &quot;trial until release&quot; is it would leave the door open to all kinds of jailbreaking&#x2F;sideloading shenanigans. Sounds like more trouble than it&#x27;s worth.<p>I heard on a podcast one of the Xamarin evangelists (don&#x27;t quote me on this but I think it was James Montemango) state that if you request an extension you can get a 90 day eval. But that was before the subscription pricing plan was available so that may have changed.,2014-08-05 05:14:01,8135645
1063,"Well, first I am creating a little game, and MonoGame (awesomely cross-platform opensource port of XNA) is awesome, and I would love to work in officialy supported Xamarin on linux and not fiddle around with old builds of MonoDevelop.<p>And second, for doing any serious CI&#x2F;QA-Automation, Linux sucks the least IMHO :) But that might be just the years at RedHat speaking :P",2014-08-05 05:29:14,8135687
1064,"What I hear in the market is that people are scared of a (already rumoured earlier this year) takeover by MS. Because it&#x27;s not totally open source, that is a very real danger and companies need to take that into account. I love Xamarin and how it works but experiences from the past after acquisitions does make us cautious in going all in on it.",2014-08-05 07:33:16,8135913
1065,Xamarin recently hired the maintainer of Mono on Debian to work on getting Linux versions of Xamarin working,2014-08-05 08:35:07,8136033
1066,"That is true. I have a Xamarin plan for use with Visual Studio for developing mobile apps in F#.<p>However I&#x27;m just keep running into stumbling blocks and general frustration developing in Windows, having switched from 10yrs of Linux purely for VS. With the general improvements in Mono and the open sourcing of F# I&#x27;d love to use them all together on Linux and take advantage of the greater OSS developer ecosystem there.<p>Monodevelop&#x2F;Xamarin Studio is fine for development, more so with the newly-added split-view, and the F# support is pretty much on a par with VS these days, but without Xamarin.Android&#x2F;iOS support I simply can&#x27;t move.<p>Maybe I should suck it up and buy a Mac instead.",2014-08-05 09:58:04,8136199
1067,"I believe Tachyus (<a href=""http://tachyus.com"" rel=""nofollow"">http:&#x2F;&#x2F;tachyus.com</a>) is using Xamarin + F# for their product.",2014-08-05 10:59:58,8136295
1068,"Visual Studio is included in BizSpark so a lot of indie&#x2F;small companies are using it (our startup included, 5 people all in all).<p>Would be nice if Xamarin offered something for BizSpark, as I know they have some offerings for people&#x2F;companies with MSDN subscriptions.",2014-08-05 11:50:55,8136416
1069,"I have been nearly sidelined twice by underestimating C# and MVVM (which is what Xamarin forms uses).<p>If you think that C# is just MS version of java then please take a deep look at it again. The only big thing that I can think of adding to it would be pattern matching - it has pretty much everything else, even monads for threads (async await) which is crazy awesome.",2014-08-05 14:28:09,8137040
1070,"You miss one point - companies with more than 3 employees can&#x27;t buy the indie plan anyway so they lose nothing.<p>If I was Xamarin I would have made the Indie plan much cheaper, in order to grow the ecosystem, because that is their biggest weakness right now. They are already at a no brainer for companies, but lacking an ecosystem they may end up like Delphi.<p>Of course I have also been arguing to everybody who wants to listen that MS should by Xamarin as an investment in their mobile business.",2014-08-05 14:34:41,8137073
1071,"Client web development <i>is</i> a fad. Using a document markup language and a scripting language to build apps - what a joke.   And what is this &quot;desktop development&quot; you are referring to? When it comes to modern development, desktop is just a subset of the native experiences, all of which could share the same logic (e.g. via Xamarin).",2014-08-06 12:56:00,8142204
1072,"Mono is about 25 to 50% slower on computational stuff, which is negligible in almost any business application that has a multi-server topology.<p>We use C# for business logic (API). One of the first building blocks was to create an open framework for defining and running services that both compatible with .Net and Mono. We&#x27;ve been using that now for a quite a while. While VS is still our primary dev environment for the API, Xamarin Studio is becoming more and more appealing. One of the obstacles when developing with mono is that not all functionality is available or identical. It&#x27;s of course always possible to contribute a fix or missing code, but sometimes it&#x27;s just easier to work around it (once you know where the hole is). In production, everything runs on Linux and we use vagrant provisioned VMs to replicate the latest release locally. It works quite well for us now, but it took some effort.<p>That said, we chose this setup because we liked C#, not because we wanted WCF or ASP.Net. We actually don&#x27;t like most of the heavy frameworks, including ORMs. Instead, use rely on HttpListener for web-services, PHP for HTML page composition in-front of the API and straight-up MySQL queries for all DB-related stuff. It makes it much easier to evolve a running system when you know what the bits do all the way down! Just my $0.02 cents.",2014-08-10 15:07:44,8159894
1073,"Any time you build a large application, you need to be able to choose the best language and platform for any given part of the system. It doesn&#x27;t matter if you like Node.JS, sometimes Go is a better solution. It doesn&#x27;t matter if you like Ruby, sometimes you need a little C++. If you get yourself so caught up in .NET that the entire solution needs to be built with it, you are starting out with a terribly and broken architecture, that either will fall apart in the future when you realize .NET isn&#x27;t the best tool for a certain part of the system, or severely limit your ability to add new features because you never come to that realization.<p>If you stick with a pure .NET stack, your app will not only be more expensive to maintain, but also have less functionality. The thing you have to realize is that the benefit of using something other than .NET has more to do with how many lines of code you don&#x27;t have to write than it has to do with how many lines of code you have to write. It doesn&#x27;t matter if right out of the gate you may be slower with a new platform, because:<p>a) that won&#x27;t last long
b) the amount and quality of open source code on the .NET platform is laughable compared to just about any other platform, and that&#x27;s a very big deal. Open source moves fast enough to overtake giants like Microsoft, use that to your advantage. Your competitors certainly will be doing it.<p>So what tool would I recommend instead of .NET? Your brain. There is no silver bullet. Choose the correct platform for every part of your system. Embrace open source. Don&#x27;t reinvent wheels that don&#x27;t need to be reinvented. Perhaps there will be parts of the system that make sense to write with .NET, but certainly it won&#x27;t make sense for all of them. There are tools like mono and Xamarin that will allow you to have a bit more platform flexibility while still using .NET. At the very least, get off of Windows and don&#x27;t pay money for databases like SQL server when there are free alternatives that will better address your needs. Build your backend with something like microservices so that you are free to use something other than .NET when it makes sense. Force yourself to build a part of the system with something else to validate your architecture works even if it is a small part of the system.",2014-08-10 18:06:04,8160259
1074,"Consider switching to Xamarin + MonoGame. You will have to pay, but features might be worth it (better yet familiar language more mainstream in gamedev, decent cross-platform support). Alternatively try using Unity3d if you don&#x27;t mind scripting instead of programming.",2014-08-11 11:23:34,8162818
1075,"Why is this &quot;sad&quot;? VB.NET offers little (anything?) over C#. I&#x27;ve never seen a bit of VB.NET you couldn&#x27;t transpile into perfectly readable C# outside of <i>really gross and bad</i> implicit type conversions around Booleans.<p>If Xamarin should care about VB.NET, it should be better at things than C# is.",2014-08-12 22:05:51,8170461
1076,"They&#x27;ve chosen instead to partner with Xamarin, and therefore allow them to continue to exist.  Compared to the bad old days of embrace-extend-extinguish, that seems like a huge improvement to me.<p>Maybe it would be even better if they were to open source just the .NET runtime and core libraries in order to cut down on the workload that both companies have to put into maintaining their own separate versions of the core platform.  But there&#x27;s also something to be said for friendly competition and having two different groups working on their own innovations.",2014-08-12 22:48:53,8170623
1077,Thanks for providing those links. I&#x27;m really excited to see Xamarin hiring a developer for Linux support issues.,2014-08-12 23:05:40,8170671
1078,"<a href=""https://bugzilla.xamarin.com/show_bug.cgi?id=17170"" rel=""nofollow"">https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=17170</a>",2014-08-12 23:55:17,8170833
1079,They could just acquire Xamarin.,2014-08-13 02:41:27,8171214
1080,I hope not.  It would be bad for both companies and the platform as well.  Microsoft has a proven track record of flat-out failing to execute in the spaces where Xamarin operates.,2014-08-13 03:40:46,8171346
1081,Are you or is anyone aware of how the F# support for monodevelop(Xamarin Studio) and mono is coming along?  I&#x27;ve had good experiences making console and service projects in Xamarin(monodevelop) and would like to give F# a go.. But I just don&#x27;t see chaining myself to the VisualStudio&#x2F;Windows environment.,2014-08-13 05:46:44,8171600
1082,"Not really.<p>Unless Xamarin starts supporting all the platforms out there with Java compilers and JVMs available, that are currently out of scope for them:<p>- BlueRay players<p>- Temperature controllers with network capabilities<p>- Programmable smart cards<p>- Robotics like JamaicaVM<p>- Real time systems like Atego Perc<p>- Car infotaiment systems like JamaicaCAR<p>- Mainframe systems like OS&#x2F;400<p>- Microcontroler systems like MicroEJ<p>This is a very small sample where you can find Java code running.",2014-08-13 07:44:47,8171848
1083,"F# is supported in Xamarin Studio: <a href=""http://developer.xamarin.com/guides/cross-platform/fsharp/fsharp_support_overview/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;fsharp&#x2F;fs...</a>",2014-08-13 09:07:31,8172049
1084,"A gallery of apps developed using Front-End technologies (Qt, XAML, Xamarin, Cocoa, Android GUI API etc.). Demonstrate the ability to choose the right tool when GUI quality is not important (HTML) or is important (native).",2014-08-14 12:42:11,8177136
1085,"It depends on where you&#x27;re looking. In my country banking is dominated by Java and I&#x27;ve seen mixtures too and migrations from C# to Java.<p>.NET has several problems. Microsoft targeted Windows while Java&#x27;s rise is correlated with the rise of Linux on the server-side. Linux on the server-side is cheap and reliable and people want more and more Linux and Microsoft&#x27;s cooperation with Xamarin is kind of too late and is meant for mobile phones and not Linux, but who knows. Microsoft also failed to create an open-source community around .NET, while Java&#x27;s open-source ecosystem is huge and even the commercial tools available are cheaper. Microsoft advertised .NET as being multi-language but dropped the ball later and failed to attract new languages, whereas other languages are flourishing on top of the JVM, keeping Java the platform hip. Microsoft also failed to convince startups to use .NET and today&#x27;s startups are tomorrow&#x27;s corporations.",2014-08-14 14:58:00,8177788
1086,"It is. It&#x27;s also unavoidable with anything that doesn&#x27;t compile to dalvik bytecode because none of the UI is exposed natively.  If you want to see at a high level the horror involved check out this documentation from Xamarin:<p><a href=""http://developer.xamarin.com/guides/android/under_the_hood/architecture/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;android&#x2F;under_the_hood&#x2F;a...</a><p>Still, it performs better than you&#x27;d expect.",2014-08-14 18:51:19,8179138
1087,"&gt; 1) Mono hasn&#x27;t been updated for five years due to licensing issues on iOS. GC pauses with a complex game can be hundreds of milliseconds, being stop the world non generational.<p>I really don&#x27;t get why this is like this still.<p>Currently they seem more willing to implement their own IL2C++ generator, than agreeing with Xamarin about a new license.<p>Personally, specially given that C++11&#x2F;14 is quite an improvment over C++98, I would go Unreal instead.",2014-08-15 13:55:37,8182127
1088,"For each native platform, there actually aren&#x27;t many (viable) choices. Android has Android (framework) and Java. iOS has iOS (framework), and a choice between two very similar and interoperable languages, Objective-C and Swift.<p>If you decide to go HTML5 cross-platform you have Phonegap vs. other web wrappers (wrappers); Ionic, Famo.us, Sencha, hand-rolling-your-own (frameworks); and finally just JavaScript (language).<p>This is ignoring other cross-platform things like Xamarin (which consists of Xamarin the framework, C#, and still also the iOS or Android frameworks, depending on your targets), Titanium, etc.",2014-08-15 21:23:56,8184302
1089,"True, and also front-end doesn&#x27;t have to be based on legacy tech (HTML&#x2F;JS&#x2F;CSS). In this mobile-first world, native is a good option. Xamarin Forms is worth looking at.",2014-08-16 20:01:51,8187365
1090,Is it fair to say that Apportable : Objective-C :: Xamarin : C#?,2014-08-19 17:21:39,8198575
1091,more pedantically Approtable : native :: Xamarin : CLR<p>As part of a thought experiment I got Mono running on top of Apportable&#x27;s platform (I used to work on Mono myself ironically). We just work at a lower level at Apportable.<p>Xamarin has great high level tools for developing apps if you want to write in C#. We rely on the tools the developers already use and know (mainly Xcode) to develop for other platforms while also providing you a native userland that has most of the same native APIs and frameworks you find on iOS (and most Unix like environments) that you don&#x27;t get on Android out of the box.,2014-08-19 17:32:07,8198641
1092,"It&#x27;s moderately interesting because it was built using Xamarin. So the top iPad app (at least for a little while) was built using C#.<p><a href=""http://blog.xamarin.com/tom-hanks-vintage-typewriter-inspired-hanx-writer-app/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;tom-hanks-vintage-typewriter-inspire...</a>",2014-08-19 17:34:07,8198654
1093,"You might also take a look at F# running on Xamarin&#x27;s stack, which is probably a bit more mature.",2014-08-24 22:27:32,8219877
1094,I notice you launched on both iOS and Android which often a portable stack was heavily leveraged (e.g. Xamarin or HTML5). Can you share some tech details?,2014-08-28 15:54:02,8237837
1095,"BTX Trader - <a href=""https://www.gocelery.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.gocelery.com</a> - New York, NY - Full-Time - Mobile Developer<p>- Who are we<p>We&#x27;re a funded bitcoin startup focused on broad digital currency adoption. Our primary product, Celery, is a easy and fast way for customer to acquire digital currency.<p>We launched a month ago and the response has been positive and overwhelming. We need to get build new features, release a mobile app, scale our infrastructure while still doing a good job at handling our current customer order flow and performing bug fixes.<p>Our stack: JavaScript, Python, Scala, C, AppEngine, EC2, S3, Backbone, Node, Compass, D3, Redis, SQS, ELB<p>What we&#x27;re looking for<p>Broadly, we&#x27;re looking for a developer passionate about coding. Knowledge of JavaScript helps a lot these days but other languages are fine too.<p>Currently though, we need someone to take charge of building our mobile app. Want to go native? use cordova, titanium, xamarin? -- you decide. Don&#x27;t know what to use? That&#x27;s cool too as long as you&#x27;re willing to learn.<p>What we&#x27;re offering<p><pre><code>  - Competitive compensation
  - Small team (6 folks right now)
  - Ability to traverse up and down the tech stack
  - Sweet co-working space with free beer (WeWork)
  - Learn stuff about the hot digital currency and payments space
  - Buy new hardware for yourself
</code></pre>
How to apply<p>Shoot us an email to careers@gocelery.com",2014-09-01 14:11:58,8252891
1096,"For C# devs, Xamarin is a good choice I believe, despite being paid.",2014-09-01 15:46:48,8253384
1097,"KickBack Rewards Systems, Remote (Idaho)<p><pre><code>  KickBack Rewards Systems
  http:&#x2F;&#x2F;www.kickbacksystems.com
  http:&#x2F;&#x2F;careers.kickbacksystems.com
</code></pre>
KickBack Rewards Systems is a privately held company founded in 1999 that specializes in customer specific marketing and payments for over 1000 US clients. Our clients include a half-dozen Fortune 50 companies, one of them is an anchor partner in our national coalition loyalty program. As the CTO and Director of Software Development I need some help! You will be joining a medium sized team of 13 developers who all commit to their projects as a labor of love and their lives work. If you are interested in any of these positions my contact information is located under my profile.<p>-<p>Back-end engineer<p>I am looking for that elusive 10x engineer polyglot that can create scalable back-ends. The right person is on-board with microservices and has been implementing them since before they were a fad. Message queues, concurrency and fault tolerance should be second-nature to you. Our current stack is Python, Celery, and Docker.<p>-<p>Front-end engineer<p>Our front-end tools are all built in AngularJS with a half dozen other JavaScript libraries like D3. We have some interesting UI&#x2F;UX challenges in graphing metrics and representing data that our current front-end team describe as nothing less than &quot;the most exciting and challenging work they&#x27;ve had for awhile.&quot; You&#x27;re supported by an incredible UX team to perform the heavy lifting as far as design and deciding which A&#x2F;B testing should occur.<p>-<p>Mobile Developer<p>KickBack uses Xamarin (C#) to build a native and compiled mobile application for iOS and Android.  We have an amazing contractor building our app who is acting as the lead, architect and senior engineer. You&#x27;ll be working with the best. We&#x27;re looking to add a little redundancy and augment the team with additional resources if we can.<p>-<p>Security engineer<p>Last but not least, I am looking for an Information Systems Security expert. KRS works in a live transaction processing environment and identifying fraud, patterns and preventing information breaches and transaction fraud is second nature to the right candidate. I&#x27;m looking for that type-a engineer who cannot sleep if he or she believes an attack vector exist. He or she has an extreme sense of responsibility and can execute on delivering best-practice prevention methods. 
This role is both advisory (&quot;Team, implement  this best practice&quot;) and execution (&quot;Team, I implemented this best practice..&quot;) We&#x27;re lean and mean so you should have no problem at all hacking on Ruby one day to deploy a new &#x27;hids&#x27; through Chef or drafting a Cisco IOS access-list the next.<p>-<p>To apply:<p>Email me, my contact information is located under my profile, or, visit <a href=""http://careers.kickbacksystems.com"" rel=""nofollow"">http:&#x2F;&#x2F;careers.kickbacksystems.com</a>",2014-09-01 16:15:50,8253562
1098,"I&#x27;ve had opportunity to play with it (at work), but given the price, not a likely choice for my hobby projects. It&#x27;s not without its  drawbacks, either. Since it&#x27;s not native development (for Android), we &#x27;e adding more moving parts into the equation.<p>And, for instance, most of the sample apps for Xamarin.Forms wouldn&#x27;t even build when I tested Xamarin.<p>I had to fix folder paths (to Android SDK) manually.<p>The product is superb, but Android is under rapid development and Xamarin folks will always have to play catch up with them.<p>And in meantime, weird things - all sorts of incompatibilities - are bound to be popping out.",2014-09-01 16:36:21,8253661
1099,Xamarin Forms is really new. Xamarin Android(Accessing native Apis via C#) is quite stable.,2014-09-01 17:21:36,8253859
1100,"I would subscribe to that, IF Unity guys bothered to settle with Xamarin and offered a modern C# compiler.<p>As things are, C++11 looks more appealing.",2014-09-05 12:15:32,8273424
1101,"I am aware of it, and it feels so wrong.<p>Unity started as a Mac engine and only got big when they integrated C# into their tooling. Now that they are everywhere in the indie scene, why bother paying the guys that helped them get famous?<p>&quot;Thank you Xamarin and bye&quot;<p>EDIT: Provide some more context.",2014-09-05 13:33:27,8273746
1102,"Yeah, and most probably way more expensive ($ dev hour * time) than just settle their argument with Xamarin.",2014-09-05 13:35:14,8273758
1103,"Another viable  and possibly more enjoyable  approach would be to use C# for the full stack, irrespective of platform. See <a href=""http://xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com</a>",2014-09-07 10:57:49,8280758
1104,"No offense against C# (I like the language) but Xamarin is a commercial product <a href=""https://store.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a> which makes you dependent on Xamarin. Xamarin is definitely more advanced and I guess you can also do cross compiling UI apps. But before going the Xamarin road I would look more into QT.",2014-09-07 11:10:02,8280779
1105,"&gt; But before going the Xamarin road I would look more into QT.<p>Which is also commercial, unless you plan to release an open source app.",2014-09-07 13:28:45,8281050
1106,"Another option that I&#x27;m currently using for a prototype at work is Java (or any JVM language) via RoboVM <a href=""http://www.robovm.org"" rel=""nofollow"">http:&#x2F;&#x2F;www.robovm.org</a> - it works similar to Xamarin so it compiles Java bytecode to LLVM to a native binary. The advantage over Xamarin is, that it uses the Apache 2 license so doesn&#x27;t require hefty license fees or a subscription and you are independent. RoboVM will be released in the next couple of month in version 1.0 and it works very very well.<p>My current prototype uses Java for all the backend &#x2F; business logic (data base communication, file access, network access, threading etc.) and it communicates via a JavaScript bridge to a WebView UI layer for which I have targets for iOS (RoboVM), desktop (JavaFX), HTTP server (Jetty) and later possibly Android. All from a single Java code base which shares large amounts of code between the platforms.",2014-09-07 13:44:10,8281097
1107,"Jaberer, I wouldn&#x27;t worry so much about the platform either. If there comes a time where you want to make an iOS&#x2F;Android version, you can always try out Xamarin, which lets you use Visual Studio and C# to generate Android and iOS apps with relatively little extra effort.<p>I&#x27;m not related to Xamarin in any way, I&#x27;m just a fan of their cross platform mobile development solution. I&#x27;m also a student, and their academic license is only $99&#x2F;year (though it will get expensive when we graduate).",2014-09-07 14:22:20,8281188
1108,"(This is a reply to this whole sub-thread, not just this comment.)<p>Most well-known approaches to cross-platform mobile app development have left me dissatisfied. The root problem is the required bridging overhead between the cross-platform code and the platform&#x27;s native runtime (the ObjC runtime on iOS; Dalvik&#x2F;ART on Android). Using C&#x2F;C++ for the cross-platform code is the lowest overhead approach on iOS, but it&#x27;s suboptimal on Android.<p>So why does this matter in practice? A few reasons:<p>Multiple coexisting memory management systems: In general, my understanding is that a garbage collector behaves best when all memory, or very near all of it, is under the collector&#x27;s control. My fuzzy intuition is that the least optimal situation is two coexisting garbage collectors, e.g. Xamarin.Android or a JavaScript engine other than Rhino on Android. But mixing a garbage collector with reference counting or manual memory management, such as with native code on Android or RoboVM or Xamarin.iOS, also seems to be suboptimal. If a significant amount of memory is allocated outside the scope of the GC, then the GC doesn&#x27;t have as much information with which to intelligently decide when and how much to collect. Also, in hybrid systems like the ones being discussed here, objects under the GC&#x27;s control sometimes have to be pinned so they can be accessed by the outside code; this interferes with copying or compacting collectors.<p>More information:<p><a href=""http://developer.android.com/training/articles/perf-tips.html"" rel=""nofollow"">http:&#x2F;&#x2F;developer.android.com&#x2F;training&#x2F;articles&#x2F;perf-tips.htm...</a> (see the section &quot;Use Native Methods Carefully&quot;)<p><a href=""http://developer.xamarin.com/guides/android/advanced_topics/garbage_collection/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;android&#x2F;advanced_topics&#x2F;...</a><p><a href=""http://developer.xamarin.com/guides/cross-platform/application_fundamentals/memory_perf_best_practices/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;applicati...</a><p><a href=""http://www.virtualdub.org/blog/pivot/entry.php?id=360"" rel=""nofollow"">http:&#x2F;&#x2F;www.virtualdub.org&#x2F;blog&#x2F;pivot&#x2F;entry.php?id=360</a><p>Basically, having two coexisting memory management systems is messy. I&#x27;d rather avoid it.<p>Bridging adds overhead: Consider the cost of copying strings between the cross-platform component and the native string implementation, or mapping an array of cross-platform objects to a native array of wrappers so the objects can be used from UI code. There&#x27;s always some overhead for marshaling. Maybe it&#x27;s not much in practice, and I&#x27;m just being anal. But just knowing that it&#x27;s there bothers me. The best way to keep software fast is simply to minimize the amount of pointless crap it has to do. So it seems best to minimize indirection and overhead by having just one implementation of strings, collections, etc.<p>Heavy use of external functions obstructs whole-program optimization: The Android performance tips document referenced above mentions this in the context of JNI methods and JIT compilation. I imagine the same applies to ART&#x27;s AOT compilation, since the native methods are still opaque to the compiler, unlike the Dex bytecode. And for combinations such as Xamarin.Android or a JS engine other than Rhino on Android, there are two JIT compilers working suboptimally, because neither of them can see into the other&#x27;s world.<p>Hybrid setups thwart obfuscation on Android: It&#x27;s common for Android developers to use ProGuard (or its commercial big brother DexGuard) to shrink, obfuscate, and optimize their apps. Having a significant non-Java component in the app seriously limits the effectiveness of this practice.<p>Hybrid setups limit the usefulness of debuggers: If you&#x27;re mixing Java and native code on Android, or using Xamarin, RoboVM, or a JavaScript engine, can you get a single useful stack trace across the platform-specific and cross-platform components when something goes wrong, as it inevitably will?<p>So are we doomed to rewrite the same common logic in Objective-C for iOS, Java for Android, JavaScript for client-side web apps, and (C#|JavaScript|C++) for Windows Phone, if we want that code to integrate well with the host platform? Luckily, no.<p>RubyMotion has the right idea, I think, and there&#x27;s apparently an Android version on the way, but nothing for Windows Phone&#x2F;WinRT or client-side web apps.<p>Another option is to write common code in Java, then use J2ObjC for iOS, IKVM.NET for Windows and Windows Phone, and GWT for the Web. Some teams within Google are doing this (minus the part about IKVM.net on Windows, AFAIK), including the team that developed J2ObjC. This approach certainly doesn&#x27;t have the polish of a commercial product like RubyMotion or the Xamarin tools. But on the other hand, all the tools are free, so this should appeal to cash-strapped indie developers. One thing I don&#x27;t like about J2ObjC is that the JRE emulation library has a larger footprint than I&#x27;d like. On a more aesthetic level, I don&#x27;t like the fact that this approach takes Java, which is designed to be a platform unto itself, and tries to make it work on other host platforms.<p>And then there&#x27;s RemObjects Elements (<a href=""http://www.remobjects.com/elements/"" rel=""nofollow"">http:&#x2F;&#x2F;www.remobjects.com&#x2F;elements&#x2F;</a>), a compiler toolchain with two language front-ends and three platform back-ends. On the language side, we have a choice of C# or Oxygene (a language based on Object Pascal). Either of these languages can be compiled to .NET bytecode, JVM bytecode (and from there to Dalvik bytecode for Android), or native code for the Objective-C runtime. (Note that the C# language front-end only provides the language; it doesn&#x27;t attempt to bring the .NET class library to the other platforms.) Each platform back-end uses the target platform&#x27;s preferred memory management system. That means GC for .NET and Java, and automatic reference counting for the Objective-C runtime. There&#x27;s a cross-platform standard library called Sugar for things like collections, date&#x2F;time manipulation, making HTTP requests, and XML, but emphatically <i>not</i> UI. Sugar has a very small footprint; in fact, many Sugar classes and methods are mapped to their platform-provided counterparts at compile time. Like the Xamarin suite, RemObjects C# and Oxygene are commercial products, but the pricing is very reasonable. I&#x27;m looking forward to trying this toolchain on a real project, probably using the C# front-end.<p>I know this has been a long comment; it covers a topic I&#x27;ve been thinking about a lot for more than a year. I know a lot of developers will just accept the added complexity and inefficiency I&#x27;ve described, for the sake of getting things done, i.e. accepting complexity and runtime inefficiency in exchange for developer efficiency. But then, added complexity translates to developer inefficiency at some point, especially when something goes wrong. And inflicting runtime inefficiency feels wrong when the machines in question aren&#x27;t ours. That is, the trade-off between programmer time and machine time is different for client-side apps than for server-side apps. Luckily, it appears we can have the best of all worlds, especially with the RemObjects products, at least if we&#x27;re willing and able to pay for excellent tools and accept that some of those tools will be closed-source.<p>(I guess readers will have to trust that this whole comment isn&#x27;t actually a marketing piece for RemObjects. I just discovered the RemObjects products last night, and they don&#x27;t seem to be well known, so I&#x27;m excited about them.)",2014-09-07 16:01:23,8281522
1109,"Professional Windows Phone developer here.<p>Here are the tools&#x2F;processes usually used in WP8 app development:<p>IDE: Visual Studio
Language: C# or F#
UI: XAML (WPF) and Visual Designer
Deployment: Windows Phone simulator (really good) or Device
Architecture: MVVM (Model-View-ViewModel) with Two-Binding<p>If you do it right, you should be able to reuse 80-90% of the code in a Windows 8 app. With Xamarin, you can reuse 50-75% of the code on iOS and Android (depends if the app is UI-heavy or not).<p>I worked with native iOS (Xcode and Objective-C), native Android (Eclipse&#x2F;Android Studio and Java), and Windows Phone. Microsoft has, by far, the best tools which makes building a Windows Phone app quicker than doing the same on any of the other two platforms. iOS is the second-best, and Android is the worst. Xamarin makes things a little better.",2014-09-07 17:47:01,8281825
1110,"I believe he made the right decision in starting with Windows Phone. Not only is it easier to build an app on this platform, but once he validate the idea, he can easily port the app to iOS and Android with Xamarin and share at least 50% of his code with all platforms. The opposite (porting an iOS&#x2F;Android app to Windows Phone) is much less trivial.",2014-09-07 17:49:51,8281834
1111,"It is currently possible to share 90% of the code between a Windows Phone and a Windows 8 app. Heck, it is even possible to write the UI of an app once and make it work on both platforms. The binaries are now the same on Windows Phone and Windows 8 (I think you can submit a single one for both apps), and universal apps are already a thing (you can buy it once and get the app on Windows 8 and Windows Phone).<p>It&#x27;s a matter of time before people realize they can use Xamarin to port a Windows app to iOS&#x2F;Android in a matter of days.",2014-09-07 17:54:48,8281846
1112,"SEEKING WORK - Remote, Travel
Location: Europe, Latvia<p>Full stack .NET developer, backend&#x2F;frontend. Currently actively developing for mobile platforms using Xamarin framework. Offering Xamarin development for iOS, Android and Windows platforms.<p>Linkedin: <a href=""http://lv.linkedin.com/in/philous/"" rel=""nofollow"">http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous&#x2F;</a><p>Email: philip.gaevsky@outlook.com",2014-09-08 07:34:30,8283744
1113,"So, someone who chooses to build independent native apps instead of Xamarin&#x2F;PhoneGap earns the most?",2014-09-08 12:31:19,8284372
1114,"This is great...I am already a subscriber for most of their product they just found a new  way for me to give them more money.<p>I would love to see them implementing a C# (Mono&#x2F;.Net) IDE for Linux and Mac. Monodevelop&#x2F;Xamarin Studio is ok, but I love the power and flexibility of intellij idea.",2014-09-08 16:37:34,8285710
1115,"Lol, I didn&#x27;t do much thinking into which device to start with 
I&#x27;ll take a look into Xamarin, I actually never heard of it before. Thanks for your advice!",2014-09-09 05:09:00,8288836
1116,"All this craze of Xamarin, I really need to check it out haha",2014-09-09 05:10:32,8288843
1117,"C# is in front of all three in mobile space (it compiles to native of course).<p>C# is the only language that is both modern and spans all major mobile platforms.<p><a href=""http://en.wikipedia.org/wiki/Xamarin"" rel=""nofollow"">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Xamarin</a>",2014-09-10 12:57:24,8296311
1118,"Sure. But Xamarin is hardly open-source, and what OP was looking for was a open-sourced tool-chain &amp; stack for mobile development.",2014-09-10 13:28:42,8296423
1119,"You can&#x27;t even build Xamarin&#x27;s sample project without demoing a commercial license, because the sample project is falls outside the app size restriction.",2014-09-10 14:21:36,8296645
1120,They have a big problem on their hands with a severely outdated Mono and C#. I wonder how much Xamarin wants to charge them for the upgrade.,2014-09-11 08:24:21,8301460
1121,"SEEKING FREELANCER - Remote C#&#x2F;.NET developer with minimum of 5 years experience<p>- Strong  understanding of networking, routing, firewalls, inter-process communication, threads<p>- Experience with XAML and Windows Presentation Foundation (WPF)<p>- Experience with Objective-C&#x2F;Cocoa preferable<p>- Mac development experience with Xamarin.Mac or Xcode and Cocoa (and Objective-C and C to a lesser extent) highly desirable<p>- Understanding of the netsh advfirewall (Windows) and pfctl (Mac) commands for manipulating firewall rules desirable<p>- Understanding DHCP, DNS leaks, and DNS resolver configuration on Windows (IP Helper API) and Mac (scutil) desirable<p>If you&#x27;re interested please contact me at my email address listed in my profile.",2014-09-12 15:12:09,8308423
1122,"That would mean 2 things: 
1 - They stop supporting everything except Windows and XBox
2 - They need to buy Xamarin too in order to keep supporting all platforms.<p>#stopspeculation :)",2014-09-15 13:19:35,8318601
1123,Does anyone have experience with Xamarin AND Qt as well? I am curious how do they compare for cross-platform mobile app development.,2014-09-16 14:51:11,8324750
1124,"I don&#x27;t have direct experience with either Qt on mobile platforms or Xamarin, so I can&#x27;t provide exactly what you asked for. But I can provide a considered opinion.<p>I strongly recommend Xamarin over Qt, because even if you use Xamarin.Forms, you&#x27;ll be using the actual native UI on each platform, not a mere approximation. So your app will be more true to the native look and feel of each platform. Moreover, it will be accessible to users with disabilities, especially blind users, as long as you don&#x27;t implement any custom widgets of your own. (If you do need to implement custom widgets, you&#x27;ll need to implement each platform&#x27;s accessibility APIs as well.) True, these users are a minority, but if you can make your app work for them without considerable extra effort on your part just by building on the right foundation, then that&#x27;s a win-win situation.<p>Qt may offer the promise of &quot;write once, run anywhere,&quot; but IMO, that should be more like, &quot;write once, be inferior everywhere.&quot;",2014-09-16 16:46:58,8325431
1125,"We tried to recruit an android developer in London, UK.<p>Absolutely no problem finding candidates but finding one that had done more than &#x27;Android Programming for dummies&#x27; type stuff is painful. The majority of people have written a TODO list app and nothing else, not even any other programming of any sort and expect 60-70k. It does make me worry that comp sci education will end up being pushed down this route as it fulfills the UK government&#x27;s sudden focus on &#x27;programming&#x27;.<p>Also, having done a bit of Android programming, around the TODO type app level, it&#x27;s a horrible tool chain. Even people we already have don&#x27;t want to be paid to take training to do it.<p>Consequentially we contracted our Android front end out to an Indian company in the end who did a decent job for the money. No complaints.<p>Next iteration is Xamarin.",2014-09-17 07:40:30,8328937
1126,"We just released a new desktop version of &quot;PCBWeb Designer&quot;<p><a href=""http://www.pcbweb.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.pcbweb.com</a><p>This is a huge improvement of our original tool that relied on silverlight.<p>The project is a WPF application written in c# on .net - so right now it&#x27;s windows only.  We are exploring options to port to other platforms using Xamarin.<p>The tool is 100% free, with no limits on size or parts and includes full gerber output.",2014-09-17 19:41:02,8331964
1127,"I know then from the time they used to collaborate with Embarcadero. Although I left Turbo Pascal&#x2F;Delphi when Windows 3.x was still actual, I kept on following Borland.<p>What I am doing are very basic hobby projects, when private life allows for, which is seldom the case nowadays. You can check some of them with my nick at GitHub.<p>If I would be doing a commercial app, I would be buying either Qt or Xamarin, mainly because they are better known and using Pascal like languages (except maybe Ada) is no longer relevant on my CV.",2014-09-18 17:05:37,8336317
1128,"Can confirm that the actual package successfully installs into a Profile78 Portable Class Library. So whilst the marketing heavily mentions Windows Phone, in theory this library will also work on Xamarin (iOS&#x2F;Android, etc) and also within standard .NET applications (ASP.NET&#x2F;Console&#x2F;etc).<p>nb: haven&#x27;t actually tested past installation at this stage.<p>edit: nope :(",2014-09-19 09:18:38,8339623
1129,"C# is a great language and .NET is probably the most advanced VM on earth. Visual Studio is the most polished IDE. It&#x27;s just a shame that Microsoft had to enforce windows-only so dogmatically, which is the only reason mono and Xamarin exist in the first place. So the real thing that needs to happen is MSFT needs to make tools for .NET and work to make .NET run on *nix.",2014-09-22 03:23:05,8349084
1130,"As someone who spent a lot of time in the .NET world, can someone with more experience using Mono&#x2F;Xamarin tell me what the main goal is with using this rather than switching to a more *nix centric ecosystem? Is it mainly popular with those who want to develop cross-platform desktop apps?<p>From what I can tell it isn&#x27;t that great for the end user either. I recall once trying to install a mono based tool on OSX. It was... unpleasant and I ended up simply choosing not to use it.",2014-09-22 03:30:26,8349100
1131,"The author&#x27;s complaints about Xamarin might be true, but it is also likely that Xamarin is less broken than any other cross-platform solution. If a client <i>insisted</i> on one code-base for iOS and Android I would choose Xamarin.<p>Doing what Xamarin does is VERY hard and Xamarin hasn&#x27;t had big-time funding until recently. And they can&#x27;t stop and just fix bugs, like the article author would like. Xamarin is on the treadmill and has to keep up with two platforms that are in competition with each other. The only good news in that is that they will probably converge in terms of capabilities. But, damn, I wouldn&#x27;t want that job.<p>3rd party dev tools are a thankless and usually VC-less pursuit. The investors are probably hoping for an exit in the form of Satya Nadella taking C# and VS cross-platform and using it for Microsoft&#x27;s own apps.",2014-09-22 03:51:54,8349144
1132,"I worked for Novell&#x2F;Xamarin for almost 7 years and this was a large part of why I eventually parted ways with them.  I spent a couple of years on Windows Forms, a couple years on Mono Tools for Visual Studio, and a couple of years on Mono for Android.  In all that time I never really felt proud of something we released.  I always felt more like I was apologizing for our releases than proudly showing them off.<p>Having said that, I gave Mono for Android a try as a hobby again this year and it was light years better than when I left.  (Congrats guys!)  However there were definitely still bugs that were mildly annoying as a hobbyist that I can see would be infuriating if I had to rely on it for my job.",2014-09-22 04:22:06,8349223
1133,"Part of the reason to use Xamarin is in order to take advantage of C# and F#. Using JavaScript throws away or inhibits a lot of useful stuff like static type checking, automatic completion and refactoring, and code browsing. Besides, theyre invested now; switching to another language may be too costly at this point.",2014-09-22 04:23:48,8349228
1134,Xamarin is hardly a monopoly in any market. What am I missing?,2014-09-22 04:39:29,8349264
1135,"I tried Titanium. Its horribly slow. You can&#x27;t really build native UI&#x27;s unless you mimic them. Using Javascript is super simple but you trade off in power, big time.<p>General rule of thumb; if you&#x27;re building &quot;content&quot; apps you can get away with Titanium. If you&#x27;re trying to build awesome experiences you&#x27;d have to go native and Xamarin is currently the best cross-platform suite out there.",2014-09-22 04:53:55,8349302
1136,"To provide a (small) counterpoint I&#x27;ve shipped code targeting standard mono for OS X, Windows, Linux, and MS&#x27;s .Net compiler&#x2F;runtime as source and distributable DLLs and NancyFX based websites and haven&#x27;t run into any major road blocks aside from minor Xamarin Studio&#x2F;Visual Studio project file hiccups. Xamarin&#x27;s .Net runtime&#x2F;BCL compatibility list has been spot on for my usage.<p>I can definitely see how chasing Apple, Microsoft, and Google&#x27;s yearly mobile API revisions can be a task. I don&#x27;t think that necessarily justifies throwing the entire project out (maybe just some careful evaluation of their mobile oriented offerings). It&#x27;s akin to throwing all of Java out due to your displeasure with Android development (of which I have a long list of grievances).",2014-09-22 04:58:22,8349317
1137,"Besides JVM tuning hell? Tooling. Eclipse is a disaster ( out of the box). Intellij IDEA isn&#x27;t much better, although it is better than anything Xamarin produces by a mile. As far as Java vs C#; the gap is definitely closing with anonymous functions in J8. But C# has had lamdbas and LINQ for a while, and I don&#x27;t see anything close to LINQ in java.<p>Overall I like Java quite a bit, it&#x27;s the first thing I reached for when I migrated away from .NET development, but Eclipse&#x2F;Java dev <i>still</i> doesn&#x27;t feel as snappy on my Macbook Air with 4Gs of ram as dev with VSExpress 2005 was on my old Dell. Le Sigh.",2014-09-22 05:19:58,8349366
1138,"&gt; If a client insisted on one code-base for iOS and Android I would choose Xamarin.<p>Have you considered Ruby? With Ruboto for Android and RubyMotion for iOS, I&#x27;d think you could get a pretty good single-codebase solution. I ask because as a Ruby dev who may one day branch out, I&#x27;d like to know what I&#x27;d be getting myself into, and it sounds like you might have gone down that road.",2014-09-22 05:32:43,8349402
1139,"I might get some flak for this, because while I respect the hell out of Miguel we&#x27;ve never seen eye to eye when we&#x27;ve talked (he&#x27;s called me a troll twice, I&#x27;m very proud of that), I think that&#x27;s a huge cop-out. I chafe real hard when Miguel says &quot;file a bug and we&#x27;ll look at it&quot;, because...Xamarin&#x27;s taking money. When you&#x27;re taking money, it&#x27;s no longer &quot;we the community,&quot; it&#x27;s &quot;you the profit-seeking organization.&quot; It&#x27;s their problem, not my problem. Xamarin (and Novell before them) have not done a good job of managing a Mono community, even aside from hiring a big chunk of the community and wondering where the community up and went. They&#x27;ve burned the community at times (and don&#x27;t get me wrong, I understand why that happens, but it does still happen) and they&#x27;re clearly spending most of their effort on their commercial stuff. Which is <i>cool</i>, but you lose a lot of the &quot;please file a bug&quot; pull.<p>Expecting people to go sign up for your bug tracker and blah blah blah about a bug in your basically-commercial software is such a fundamental failure to understand <i>people</i> that to me it&#x27;s pretty much a statement that no, you don&#x27;t care. If you&#x27;re seriously interested in fixing bugs people kvetch about on Twitter, get your developer relations people (you have developer relations people, right? (if not, why not?)) to send an email and do the legwork around a bug.<p>And frankly, I feel like &quot;file a bug with an exception trace&quot; is a method of symptomatic treatment rather than the fairly core auditing and testing that most of the Xamarin software I run into on a semi-regular basis really needs. From the outside, a lot of it feels <i>rotten</i>. Picking off an exception here or there doesn&#x27;t seem likely to cure the disease, it just lances a boil or two.",2014-09-22 05:47:19,8349423
1140,"What a mindless rant.<p>As an equally (un)valuable counter-anecdote: I spent about 9 months developing a set of apps for Android and iOS with Xamarin and didn&#x27;t encounter many of these problems.<p>We did find one bug in the toolchain. We reported it, Xamarin responded with a workaround in 1 day and a fix in 7.",2014-09-22 05:48:02,8349425
1141,"My experience with Ruboto has not been good. Gave it a try during a sojourn away from Xamarin (which I use for the game I&#x27;m making, but Ruboto was for something else) and its perf was really unfortunate on a Nexus 4, not much better on a Nexus 5. You&#x27;ll end up writing anything nontrivial in Java anyway, making a lot of it moot.",2014-09-22 06:01:43,8349457
1142,That is my approach.<p>Xamarin requires anyway an UI implementation per device.<p>The time spent fighting integration bugs can be used in productive coding instead.,2014-09-22 06:14:43,8349484
1143,"Google Cache version: <a href=""http://webcache.googleusercontent.com/search?q=cache:https://gist.github.com/sadxamarinuser/2717d68996daea0e2f17"" rel=""nofollow"">http:&#x2F;&#x2F;webcache.googleusercontent.com&#x2F;search?q=cache:https:&#x2F;...</a>",2014-09-22 07:11:38,8349580
1144,"&gt; If a client insisted on one code-base for iOS and Android I would choose Xamarin.<p>Except this is not possible, as you have to recode the UI for each device anyway.<p>So just go C++, or any other language with compilers that can target C, and do as little as possible in the UI part.<p>Companies like Dropbox are following this approach.",2014-09-22 07:21:49,8349600
1145,"&gt; Well, its more of a write once, publish everywhere solution from what I understand-it allows .Net devs to develop in C# for Android&#x2F;iOS.<p>Except they don&#x27;t offer a multi-platform UI toolkit. Xamarin.Forms is quite recent and the amount of bugs shows it still has lot to improve.",2014-09-22 11:34:45,8350112
1146,"Since the original file seems to be missing now, here&#x27;s the full text for reference<p>I just stumbled upon this <a href=""https://gist.github.com/anonymous/38850edf6b9105ee1f8a"" rel=""nofollow"">https:&#x2F;&#x2F;gist.github.com&#x2F;anonymous&#x2F;38850edf6b9105ee1f8a</a> and decided to write one too. I don&#x27;t have affiliation with the OP, but I like his idea and really understand his points.<p>I used Xamarin for the past year or something, not givin real date to keep this anonymous so they dont block my account ;) All the information here is subjective, I&#x27;m just expressing my rage in a very emotional way, take it with a grain of salt. Xamarin, if you&#x27;re reading this, PLEASE TAKE SOMETHING POSITIVE FROM THIS AND GO FIX SOME BUGS.<p>TL;DR: I love C# more than any other language, but Xamarin is HORRIBLE. I wish it and mono were never invented. It&#x27;s a disgrace, completely broken and buggy and just the most broken thing in the entire universe, but I still use it.<p>Why? Because I can write for 2 platforms as if it was one. haha, not really ... but because I work on small apps, I don&#x27;t have to write all the business crap twice. That is good about Xamarin, that is the only thing. They can actually compile plain C# ... hooray. If only the rest of the crap expensive broken Xamarin crap library actually worked as advertised.<p>I&#x27;m sorry for being so dramatic, but really if something costs a thousand dollars a year per platform, you kind of expect the damn company to put some love into the thing. You would expect bugs to get fixed, and for things to work. But no, that is not the case.<p>Look at Xamarin Forms. Oh a shiney new thing that builds real cross platform UI, so nice. EXCEPT THAT THERE ARE MILLION BUGS IN IT. Fundamental bugs, crashes, memory leaks and other memory issues, broken resource handling ... just serious things that normal company would never release to public, but Xamarin debugs on paying customers, on customers who pay thousands of dollars.<p>If you don&#x27;t believe me, go to <a href=""https://bugzilla.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;</a> and look at the bugs, or look at mono release notes. Just look at the list of shiny features of Mono (<a href=""http://www.mono-project.com/docs/"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;docs&#x2F;</a>). Well half of that crap is either broken, or was never implemented, or just doesn&#x27;t work as documented. Everything is just a lie that should make it look good. Xamarin does thousand things, they release new iOS SDK the same day Apple releases it ... wow ... if only they waited a year and then released a working version instead. They make thousand cool features, but they&#x27;re all broken.<p>All developers make mistakes, we all create bugs ... but software that costs a thousand dollars should work. It shouldn&#x27;t leak memory like a total noob, it shouldn&#x27;t crash the compiler when you compile, and it should work the same way when you compile once and when you compile twice, really the compiler is sometimes just so broken.<p>PLEASE STOP ADDING NEW THINGS, STOP MAKING INTERFACE BUILDERS AND SHIT THAT WILL NEVER WORK, AND JUST FIX SOME BUGS. I want to say something positive, but really I just want to scream and cry and I don&#x27;t know what to say.<p>I wish I could use something else, I wish I could go back to doing things native, but the things I work on are too invested in Xamarin that there is no way back ... I guess I&#x27;ll just have to run away.<p>Oh btw, in case you&#x27;re writing something important, like something working with money, or human lives, or just moving around pictures of cats, pick some other technology, maybe go with native C++ if you want to share your biz logic. Maybe write it as a native things, just please, be careful. There are dragons here.<p>A closing thought. Xamarin is trying to do something amazing. Xamarin.Forms is an amazing technology and makes me really happy at times ... but then I try to do something special and find 50000 completely stupid bugs on each platform, and I start raging again.<p>Please Xamarin, I&#x27;m begging you, allocate more humans to fix the bugs, stability is important. And if you manage to accidentaly fix something, please don&#x27;t break it. I&#x27;m always shitting my pants whenever there&#x27;s a new update, because almost always things get broken.<p>P.S. I&#x27;m writing this anonymous because I&#x27;m trying to say what is really in my heart. I wouldn&#x27;t be able to do this in any ot her way, because if certain people found out, I could lose my job, and I value it too much. But still I think this is the right thing to do. I&#x27;m not trying to put a bad light on Xamarin, I just want to express my feelings.",2014-09-22 11:47:53,8350143
1147,"In principle, Xamarin Forms should enable many common UI elements, like list views, to be coded cross-platform. In practice, I wonder if that holds up well w.r.t. hooking the list views up to the model behind them. But, nonetheless, Xamamrin supports both cross-platform and native UI elements, which seems like a practical approach.<p>All that said, I would normally advise a client not only to have native code, but also large amounts of native design for their main platform targets. Lots of Android apps suffer from port-itis. Transliterating an iOS implementation inevitably makes for a lackluster Android app that underutilizes Android modularity features among other things Android does well.",2014-09-22 13:35:44,8350469
1148,"RemObjects Elements (<a href=""http://www.remobjects.com/elements"" rel=""nofollow"">http:&#x2F;&#x2F;www.remobjects.com&#x2F;elements</a>) looks interesting, especially the C# flavor. With that, you can write in C#, then compile to .NET IL, JVM bytecode (and from there to Dex bytecode for Android), and x86&#x2F;ARM native code targeting the ObjC runtime for Mac and iOS. The RemObjects C# FAQ (<a href=""http://www.remobjects.com/elements/hydrogene/faq/"" rel=""nofollow"">http:&#x2F;&#x2F;www.remobjects.com&#x2F;elements&#x2F;hydrogene&#x2F;faq&#x2F;</a>) includes a comparison with Xamarin.",2014-09-22 15:30:57,8350949
1149,"Ditto. I really can&#x27;t think of anything better to say:
Working with Xamarin tools is infuriating. You come to expect them to apologize for the level of unreliabity, instead, not long ago, I got an angry reply that I should be careful when reporting bugs and that I&#x27;m insulting them. Never did, but I might start.",2014-09-22 18:19:56,8351734
1150,"This is the bug report you provided:<p><pre><code>    Nice updates to Xamarin Studio. Too bad they can&#x27;t fix that pesky &quot;indenting pukes on itself&quot; or &quot;lines disappearing in the editor&quot;.
</code></pre>
And all I did was ask you for information about this, purely because I had not experienced it myself:<p><pre><code>     @edropple bug report please
</code></pre>
But for the record, you do not need to sign up for our bug tracking system.   You can email your concerns, complains to support@xamarin.com who will be happy to shepherd your problem through our developers.<p>As for filing the bug with the exception: I am merely trying to prioritize someone with a bug right then.   We do get crash reports with the exceptions, and we go through those and fix those.<p>The only reason to ask for the exception is to provide you with better support and address your fix faster.",2014-09-22 18:53:51,8351920
1151,Just use Xamarin.,2014-09-27 16:19:50,8377399
1152,"Yes. Java can be compiled to native machine code via GCJ, and can expose a normal C++ Api.<p>Whether you&#x27;d want to do this or not is another story. C# and Xamarin would be a far better choice for a one-size-fits-all cross platform codebase.",2014-09-28 12:42:05,8379584
1153,What about Xamarin?,2014-09-30 20:12:23,8390854
1154,"We have a .Net wrapper internally and were really looking forward to getting back to work on it. No commitments on the order but a few of us who really like it to be the next platform we target (including Xamarin, Unity) now that Android is out :)",2014-09-30 20:20:11,8390903
1155,"Absolutely. Were good friends with Unity, know lots of people at Microsoft and have a ton of respect for what Xamarin is doing, so wed love to support the whole .Net ecosystem soon. Were a small team with limited resources so we have to prioritize this vs. sync vs. core work vs. improving iOS &amp; Android but well try to all of these things as quickly as possible. Thanks for being a user and thanks for the kind words :)",2014-09-30 20:36:01,8391001
1156,"I&#x27;ve been enjoying RubyMotion since its inception, so I&#x27;m always surprised by how many people <i>haven&#x27;t</i> tried it.  It&#x27;s been a huge boon to writing apps.<p>I cut my teeth on app builder&#x2F;interface builder about 10 years ago, back in college, and I have never learned to love the GUI approach to building UI (nor do I care for the XML&#x2F;XAML approach of android&#x2F;xamarin - just code, thank you).<p>Since then I learned python, ruby, and don&#x27;t feel any desire to go back to strongly typed languages.  Anyway, I hope more and more people get fed up with Swift and join us in the RubyMotion camp.  It&#x27;s a ton &#x27;o&#x27; fun. ;-)",2014-09-30 22:59:30,8391903
1157,"KickBack Rewards Systems, Remote (Idaho)<p><pre><code>  KickBack Rewards Systems
  http:&#x2F;&#x2F;www.kickbacksystems.com
  http:&#x2F;&#x2F;careers.kickbacksystems.com

</code></pre>
KickBack Rewards Systems is a privately held company founded in 1999 that specializes in customer specific marketing and payments for over 1000 US clients. Our clients include a half-dozen Fortune 50 companies, one of them is an anchor partner in our national coalition loyalty program. As the CTO and Director of Software Development I need some help! You will be joining a medium sized team of 13 developers who all commit to their projects as a labor of love and their lives work. If you are interested in any of these positions my contact information is located under my profile.<p>-<p>Front-end engineer<p>Our front-end tools are all built in AngularJS with a half dozen other JavaScript libraries like D3. We have some interesting UI&#x2F;UX challenges in graphing metrics and representing data that our current front-end team describe as nothing less than &quot;the most exciting and challenging work they&#x27;ve had for awhile.&quot; You&#x27;re supported by an incredible UX team to perform the heavy lifting as far as design and deciding which A&#x2F;B testing should occur.<p>-<p>Mobile Developer<p>KickBack uses Xamarin (C#) to build a native and compiled mobile application for iOS and Android. We have an amazing contractor building our app who is acting as the lead, architect and senior engineer. You&#x27;ll be working with the best. We&#x27;re looking to add a little redundancy and augment the team with additional resources if we can.<p>-<p>Security engineer<p>Last but not least, I am looking for an Information Systems Security expert. KRS works in a live transaction processing environment and identifying fraud, patterns and preventing information breaches and transaction fraud is second nature to the right candidate. I&#x27;m looking for that type-a engineer who cannot sleep if he or she believes an attack vector exist. He or she has an extreme sense of responsibility and can execute on delivering best-practice prevention methods. This role is both advisory (&quot;Team, implement this best practice&quot;) and execution (&quot;Team, I implemented this best practice..&quot;) We&#x27;re lean and mean so you should have no problem at all hacking on Ruby one day to deploy a new &#x27;hids&#x27; through Chef or drafting a Cisco IOS access-list the next.<p>-<p>To apply:
Email me, my contact information is located under my profile, or, visit <a href=""http://careers.kickbacksystems.com"" rel=""nofollow"">http:&#x2F;&#x2F;careers.kickbacksystems.com</a>",2014-10-01 15:15:42,8395067
1158,"SEEKING FREELANCER - Remote C# .NET developer<p>- Strong understanding of networking, routing, firewalls, inter-process communication, threads<p>- Experience with XAML and Windows Presentation Foundation (WPF)<p>- Experience with Objective-C&#x2F;Cocoa preferable<p>- Mac development experience with Xamarin.Mac or Xcode and Cocoa (and Objective-C and C to a lesser extent) highly desirable<p>- Understanding of the netsh advfirewall (Windows) and pfctl (Mac) commands for manipulating firewall rules desirable<p>- Understanding DHCP, DNS leaks, and DNS resolver configuration on Windows (IP Helper API) and Mac (scutil) desirable<p>If you&#x27;re interested please contact me at my email address listed in my profile.",2014-10-02 06:00:52,8399586
1159,"This is pretty rad. I had hopes for Kopilua and Aluminum Lua, but neither panned out. If I go back to Unity, I&#x27;m gonna use this. Thanks for open-sourcing it!<p>For now, I actually use CSharpCodeProvider and compile C# as &quot;scripts&quot; during game start (and cache it for future use), searching across attributes to find the right item. When deploying to platforms that don&#x27;t have CSharpCodeProvider (Xamarin.iOS, for example), I can precompile the scripts, pack the assemblies, and the fallback is trivial.",2014-10-02 15:36:28,8401144
1160,"AluminumLua isn&#x27;t nearly complete and isn&#x27;t a pure interpreter. It can&#x27;t run on Xamarin.iOS, for example.",2014-10-02 15:38:51,8401154
1161,"This is why the so called &quot;open web&quot; that locks you to a few legacy languages must be fought with. Transpilation is not an answer. Luckily mobile is thriving, no problems using F# with Xamarin as a first-class citizen",2014-10-04 11:18:38,8409255
1162,"Thanks for taking the time to write up such a detailed comment. I was working on one of my own as I have had nothing but a great experience with Websharper and was disappointed to see the tool be somewhat dismissed by (to me) unfounded and unproven technical and license concerns.<p>I&#x27;m using the tool to develop the web front end for a MVP idea. Combined with Xamarin it means I can use F# across my entire application stack. This means reusing the same types, domain models, and so on. Plus you get all the goodies of Async, computation expressions and strong typing on the web client.<p>I went straight to the new UI.Next reactive framework and have been loving the experience to build a SPA. Imagine Om&#x2F;React but strongly typed with monadic combinators to compose reactive views.<p>I guess this is a long way of saying &#x27;second&#x27; :)",2014-10-05 01:41:45,8411185
1163,How does this compare to Xamarin?,2014-10-06 13:30:08,8415719
1164,This would be awesome. Right now I&#x27;m experimenting using raw HTTP requests and Newtonsoft.Json as the JSON [de]serializer. I presume that you will make your C# SDK a portable class library so we can use it in iOS and Android apps as well via Xamarin?,2014-10-09 05:48:02,8430991
1165,"Unfortunately it is part of their push to lock down the web. Lock it down to legacy languages - JavaScript and HTML. Transpilation is of course not an answer, because it is not nearly same development experience. I hope mainstream platform providers and democratic solution providers such as Xamarin will keep on their good work in letting us use the languages we love, be it Scala, F#, C# on any other as beautiful.",2014-10-09 17:52:39,8433988
1166,"It&#x27;s an interesting story but it&#x27;s told as a &quot;person A did this, Person B did that, and Person C had this idea, etc.&quot;  Maybe it&#x27;s a consequence how my brain works but any time I read that type of recap, I forget everyone&#x27;s name and the other trivia 5 minutes after I&#x27;m done reading it.<p>When revisiting technology history, what tends to stick in my mind is the context and industry forces prevalent at the time and the story doesn&#x27;t have that.<p>So my recollection of context in 1990 would include...<p>1st: The prevailing method of writing Windows programs in 1990 (the Windows v3.0 &amp; v3.1 era) was the raw Win32 API.  That meant the &#x27;C&#x27; Language WndProc(), giant switch case statements to handle WM_PAINT messages.  Basically, all the stuff taught in the thick Charles Petzold book.[1]  This was very tedious and complex type of programming.  It was not friendly to corporate aka &quot;enterprise apps&quot; aka LOB &quot;line of business&quot; type of programming.  (Java would arrive on the scene 5 years later but I didn&#x27;t see a lot of corporate adoption until v1.3 which was year 2000.)<p>2nd: You had a large base of old-style DOS text mode developers for line-of-business apps using programming languages such as dBASE III, Clipper, FoxPro, and other 4GL  tools, etc.  The typical skillset of those programmers did not include the C Language.<p>In 1990, Windows 3.0 was becoming popular as a platform for corporate desktops and businesses wanted to write apps for it.<p>Visual Basic v1.0 hit that perfect sweet spot for a bunch of refugees from the DOS text mode 4GL languages to write Windows programs.  They didn&#x27;t have to learn the low-level C language or mess around for months with the Petzold book.  Visual Basic had this ingenious abstraction called &quot;forms&quot; that hid the WndProc() monster and its messy switch case statements.  It was a huge transformation.  It was phenomenal how VB &quot;democratized&quot; the programming of Windows apps. A bunch of ISVs sprung up that built their business around Visual Basic.<p>The recent parallels to VB as an &quot;inviting tool for newcomers&quot; might be PHP replacing a lot of CGI+PERL and maybe JQuery eliminating a lot of low-level Javascript getelementbyid().  Today, when I look at the iOS and Android landscape, I still haven&#x27;t seen anything (Titanium? Xamarin?) that grabs mindshare the way VB did back in 1990.<p>[1]<a href=""http://www.amazon.com/Programming-Windows-3-1-Charles-Petzold/dp/1556153953"" rel=""nofollow"">http:&#x2F;&#x2F;www.amazon.com&#x2F;Programming-Windows-3-1-Charles-Petzol...</a>",2014-10-10 19:34:52,8439611
1167,"After 4 years of no action, I picked it up and got things moving again. Now we have a small coalition of contributors and we&#x27;re making progress. For example, Pash is now part of a NuGet solution in MonoDevelop&#x2F;XamarinStudio, like PowerShell does for VisualStudio.",2014-10-10 21:04:31,8440025
1168,"The biggest shift I&#x27;ve noticed in Microsoft in recent years is its support and push for open source, cross platform  components and projects. It seems that there may be a paradigm shift towards selling tools and an integrated platform while providing more choice and making inroads into the open source comminities.<p>This is exciting for me because I absolutely love .net and friends, but I&#x27;m also a Linux engineer and lean heavily toward open source and cross platform technologies. In recent years I have noted that with the existence of mono and mono develop(xamarin) C#&#x2F;F# is right on the verge of being an excellent choice for open source tools and projects. I&#x27;ve been lamenting the fact that Microsoft&#x27;s early platform lock in approach has prevented .net from being a serious java alternative(or the alternative it deserves to be).  Its nature stiffling the open source ecosysytem  .<p>The outlook has been getting rosier over the past 2 years though.  Now we have OWIN, ASP.NET vNext, MVC6, entity framework 7, F#, and a strange officially unofficial interest in mono.  Projects on github!  These are welcome steps in an attempt to boost relevancy IMHO.",2014-10-11 18:06:47,8442886
1169,"Yeah, the coldest summer I ever spent in Seattle was hauling an iPad around meetings at Redmond. One L69 had this very pointed way of staring at the tablet, then at the big red clock, then back again. Keep in mind, I was part of a team coming in as a prospective <i>customer</i>. Just very weird.<p>I still have hopes for Nadella -- maybe just because I&#x27;m an old Sun warhorse -- but it&#x27;s going to require a big rethink of MSFT, which right now is basically just a cash pile in search of a market. Changing the burn rate is just playing at the margins (layoffs are not a strategy), and if there&#x27;s a big plan underlying the Mojang acquisition it&#x27;s incomprehensible to me on both strategic and financial levels. Likewise, mass-producing Perceptive Pixel displays, while undoubtedly cool, is both fiendishly difficult (PP was basically a garage manufactory, so this is a software company figuring out how to scale up a product that has never been mass-produced) and not something that can push market dominance. Buying Nokia kept MSFT in the mobile space at a very high price, but really only purchased time and space, not a turnkey strategy.<p>Having said all that, it seems to me that there are two companies on the auction block right now that could give Redmond the germ of a strategy. Both Xamarin and Unity would fit very comfortably in what is arguably MSFT&#x27;s wheelhouse -- software development tools -- while giving the company a way to seamlessly increase their mobile app ecosystem.",2014-10-11 18:40:49,8443032
1170,I wonder if they will also buy Xamarin and Unity3d to become the best cross-platform development solution.,2014-10-12 11:48:36,8445030
1171,"I am pretty sure the Forms in this case refers to Xamarin.Forms developed in the last year.<p><a href=""http://developer.xamarin.com/guides/cross-platform/xamarin-forms/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;xamarin-f...</a>",2014-10-13 13:19:23,8448578
1172,"See also <a href=""http://blog.xamarin.com/xamarin-acquires-petzold/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-acquires-petzold&#x2F;</a>",2014-10-13 13:40:50,8448646
1173,"Yes, this would be referring to Xamarin.Forms. It&#x27;s a slick concept and I&#x27;ve been coding in it a bit but still should be considered &#x27;beta&#x27; in a lot of regards at this point.",2014-10-13 14:14:06,8448767
1174,"I wouldn&#x27;t mind jumping into Xamarin.Forms dev, but is it still a subscription based system? Like, the free version only allows you to create really small programs?",2014-10-13 14:52:57,8448921
1175,"I wish Xamarin had different way of monetizing... This 90s style shareware is a real deal-breaker (aka PowerBuilder, Clarion, Delphi).<p>Hint: Charge for IDE, make raw SDK&#x2F;compiler available for free.",2014-10-13 14:53:05,8448922
1176,"That&#x27;s my understanding. You should also be aware that the licensing is per-platform. Also, since Xamarin.Forms is a layer of abstraction on top of Xamarin, I don&#x27;t think a ton of people are using Xamarin.Forms for game development, if that matters. I think there are several mobile game devs using Xamarin and Unity, though.",2014-10-13 15:03:16,8448953
1177,"I&#x27;ve been converting a couple of stupid little apps into Xamarin.IOS and Xamarin.Android, which has been a fun exercise. The tools are pretty good, and the community is just large enough to find answers to common problems.",2014-10-13 15:18:10,8449015
1178,I attended Xamarin&#x27;s Evolve conference last week - there were 1200+ attendees. I think they are definitely a growing community.,2014-10-13 16:09:48,8449275
1179,"Does this include salaried positions? Right now the rate I&#x27;m earning is about $41&#x2F;hr($328&#x2F;day) in the northeast US at a small company. A few years ago I was getting $50&#x2F;hr on a consulting gig, but that required a 4 hour commute(2hrs each way to NYC).<p>I&#x27;m primarily a C# developer, but I have experience in C++, Java, SQL, and a little bit of webdev(HTML&#x2F;JS). I&#x27;ve worked on a few mobile apps in iOS and Android(the latter with Xamarin). I&#x27;m been programming for about 15 years, and I&#x27;ll be coming up on 10 years of those which have been for professional companies.<p>I swear, reading some of these responses makes me feel very underpaid.",2014-10-15 14:37:37,8458619
1180,"My guess is most companies will skip Win8 like they skipped Vista. Windows 10 looks to be what enterprise will rally around.<p>But for fat applications, what&#x27;s your alternative? Java is, at best, parity with something like WinRT but can&#x27;t leverage the benefits that MS can bring to users with its native platform (assuming a big, MS-centric enterprise). WPF, as we&#x27;ve already said, isn&#x27;t going to get any more of the pie. Let&#x27;s not kid ourselves about Winforms or platforms that haven&#x27;t even embraced data binding.<p>In the meantime, you can&#x27;t cross off Xamarin as a means to bring these WinRT applications to even more device types.",2014-10-15 20:49:12,8461612
1181,Make it work with Xamarin (Windows).,2014-10-21 16:55:22,8488291
1182,Just having the simulator isn&#x27;t enough for us Xamarin developers.  One big issue with Xamarin is that you need a mac (with xcode installed) on the network in order to do builds.  If you could solve that issue along with the having the simulator online then you have my money.,2014-10-21 20:11:18,8489614
1183,"Hi JayBazuzi, Do it support remoting?<p>1. My case is to copy and run .exe file on remote Windows machine . I am on Linux machine and run under mono (using Xamarin studio)<p>2. Also I can&#x27;t find it in Nuget? <a href=""http://screencast.com/t/okHowbROL5wx"" rel=""nofollow"">http:&#x2F;&#x2F;screencast.com&#x2F;t&#x2F;okHowbROL5wx</a>",2014-10-22 09:21:15,8491990
1184,"Hi, I&#x27;m New to hacker news, but I also built an android app on the side and have 20ish downloads. I built it all myself and it cost only a couple hundred dollars. However I can&#x27;t get users to stay. Most of the 20ish users installed it and then didn&#x27;t play. So my question is what is your plan to get users to download and keep them interested? My app took about 4 months and I build it using Xamarin.Android. I don&#x27;t want to break any forum rules by adding a link to my app, but I would be interested in getting some direction for marketing and feedback.",2014-10-22 14:47:51,8492933
1185,"To me this article suggests that the market is really looking for a viable cross-platform development environment. Clearly Xamarin isn&#x27;t hitting ask the right notes or it would be exploding. I suspect that something like Meteor on mobile might just be what explodes. In fact Meteor on mobile could be even bigger than Meteor in the web space. Imagine how happy employers would be to simplify, and rather than hiring separate highly specialized developers, simply hire those with HTML, CSS, JavaScript, and Meteor skill sets. And theoretically they&#x27;d need less developers because the same code base would run on both iOS and Android. Personally I&#x27;d lay money this is where we&#x27;ll see the market move in the next five years. Sure, graphics intensive games and such will continue to be native-only, but there&#x27;s a huge swath of applications which could run exceptionally well on a platform like Meteor on mobile.",2014-10-23 03:20:22,8496567
1186,"Nice! Xamarin Studio (commercial cross-platform [including mobile] C#) recently released support for what they&#x27;re calling &#x27;Sketches&#x27;.<p><a href=""http://developer.xamarin.com/guides/cross-platform/sketches/introduction/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;sketches&#x2F;...</a>",2014-10-23 17:52:52,8499621
1187,The unoffical reason is Xamarin wants too much money.,2014-10-23 20:25:01,8500545
1188,"Hopefully, Xamarin will add Visual Studio support in the Indie  dev plan at some point. Currently, if you want to support iOS, Android and use Visual Studio you need to pay $1798 per year which is a bit more for a one man shop.",2014-10-23 20:26:03,8500549
1189,Now that they&#x27;ve added a profiler as another differentiator the chances of that happening may have improved slightly. They do have &#x27;call us&#x27; deals for small&#x2F;new businesses.<p>I&#x27;m wondering if you would mind sharing what features you miss the most when you are away from Visual Studio? I&#x27;ve not tried it but I&#x27;d guess a lot of the editing is possible even if you do wind up stuck using Xamarin Studio for building and debugging.,2014-10-23 20:29:41,8500577
1190,I&#x27;ve never played enough with Xamarin Studio and only tested Xamarin Business with Visual Studio (I&#x27;ve used a 30 days trial).,2014-10-23 20:39:29,8500610
1191,"Thanks for sharing your experience.<p>Xamarin Studio is definitely rough around the edges but for the most part it seems to get the job done. For example, I&#x27;ve had issues where the update dialog steals the modal focus from the source control dialog(s) and that&#x27;s basically the end of all interaction with the app until I restarted it.",2014-10-23 20:44:57,8500632
1192,"&gt; However, for usual business with short time to market, taking into consideration &quot;time spent on feature&quot; X &quot;hourly rate&quot; per developer time, the prices are quite cheap.<p>I fully agree, for a business that say makes 100k per year, paying about 2k for a Xamarin Business license is affordable.<p>An interesting pricing strategy would be:<p>* Free - for hobbyists, give them complete features and make the resulting executable expire in a few days. This will let them try and play with the tool. After they are comfortable with using C# and Xamarin, they will chose a paid license if they want to make money from their work.<p>* Indie - same as above for small business (less than 100k per year).<p>* Pro - same as above plus (paid) support.",2014-10-23 21:05:14,8500756
1193,"When unity got their mono license xamarin wasn&#x27;t yet a business, hence the license was most likely zero.",2014-10-23 21:21:03,8500827
1194,"For a larger corporate, ~$1,800 is very reasonable.<p>Xamarin have a tough line to walk - larger companies will happily pay that price, while still being reasonable for indie developers.<p>Xamarin support is excellent - their forums, twitter etc.  I haven&#x27;t worked with a vendor before that has been that helpful.  Xamarin need to cover their costs.<p>I&#x27;ve been using Xamarin Studio for a while now for both iOS &amp; Android and its fine.",2014-10-23 22:17:48,8501055
1195,&gt;  No one has ever been able to point me to an official explanation for why theirs is so far behind.<p>They don&#x27;t want to pay Xamarin.  Mono commercial licensing sucks...,2014-10-24 04:11:51,8502112
1196,You haven&#x27;t seen Xamarin licensing prices...,2014-10-24 04:19:59,8502133
1197,"Its essentially branded monodevelop with bundled addins(or is mono develop now unbranded xamarin?).  In any case, it has improved dramatically over the past couple years.  I write services&#x2F;daemons in it and find the C# functionality to be fantastic now.  F# is coming along too.",2014-10-24 05:05:41,8502220
1198,"All true, but you&#x27;re forgetting that Mono can AOT compile C# to native code using LLVM. That&#x27;s how Xamarin.iOS works. So il2cpp doesn&#x27;t really bring anything new to the table.",2014-10-24 08:59:57,8502766
1199,I wonder if Xamarin are considering acquiring Untity 3D?,2014-10-24 09:52:23,8502886
1200,"It would have been zero to Xamarin, but doubt it was free.<p>I imagine they bought a perpetual license to distribute sans-GPL the full code of a specific version of mono from Novell.<p>This thread has a bunch of speculation and a few comments from unity developers: <a href=""http://forum.unity3d.com/threads/new-version-of-mono-with-unity-4-3-any-additional-details-on-that.197948/"" rel=""nofollow"">http:&#x2F;&#x2F;forum.unity3d.com&#x2F;threads&#x2F;new-version-of-mono-with-un...</a>",2014-10-24 10:44:28,8503009
1201,"Mono is open source and free software. Because of the &quot;single static binary&quot; policy (no dynamic linking) of app stores you have to obtain a proprietary license from Xamarin.<p> The C# compiler is dual-licensed under the MIT&#x2F;X11 license and the GNU General Public License (GPL).<p> The tools are released under the terms of the GNU General Public License (GPL).<p> The runtime libraries are under the GNU Library GPL 2.0 (LGPL 2.0).<p> The class libraries are released under the terms of the MIT X11 license.<p>and:<p><i>When do I need to obtain a license from Xamarin to the Mono Runtime?</i><p>We only require licensing for uses of Mono and Moonlight on embedded systems, or systems where you are unable to fulfill the obligations of the GNU LGPL.<p>source: <a href=""http://www.mono-project.com/docs/faq/licensing/"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;docs&#x2F;faq&#x2F;licensing&#x2F;</a>",2014-10-24 10:49:27,8503023
1202,"It&#x27;s not just mono they need, it&#x27;s the IDE. The default IDE that comes with Unity is MonoDevelop. If they upgraded the runtime, they&#x27;d have to pay for Xamarin&#x27;s IDE. I wonder if embedding the java runtime would have been cheaper in the long run.",2014-10-24 11:25:52,8503113
1203,"From <a href=""http://mono-ue.github.io/about.html"" rel=""nofollow"">http:&#x2F;&#x2F;mono-ue.github.io&#x2F;about.html</a><p>&gt; <i>To redistribute code written with Mono for Unreal Engine, you must have a commercial license to the Mono runtime. These licenses are available from Xamarin for Mac, Android and iOS online, and you can request Windows licenses through support.</i><p>So, if I want to use this commercially on Windows I will have to buy a license for the Mono runtime ?<p>Judging by the price for the Mac license it should be around $300 per year, while the Unreal license itself is about $240 per year.<p>Now, if I want to use the same code on iOS, Android, Windows, Mac I will pay to Xamarin about $1200 per year.",2014-10-24 14:50:05,8503935
1204,"&gt;We only require licensing for uses of Mono and Moonlight on embedded systems, or systems where you are unable to fulfill the obligations of the GNU LGPL.<p>In other words, you have to pay a license fee for shipping the Mono runtime in a proprietary game, which is what Unity does.<p>So Unity has negotiated a license deal with Xamarin for the Mono runtime version they use, and if they want to use a newer version they will have to pay more, which they aren&#x27;t doing.<p>Instead Unity has developed il2cpp which means that they no longer have to ship the mono runtime with each game and therefore no longer have to pay the license fee for shipping mono.<p>Atleast that&#x27;s what I&#x27;ve gathered.",2014-10-24 16:03:57,8504282
1205,"Our IDE is free for anyone to use, whether you are using our iOS, Android or Mac products or not. It&#x27;s also open source (except for the addins that work with our iOS, Android and Mac products).<p>There are a lot of Unity customers on our forums using Xamarin Studio already.",2014-10-24 17:23:44,8504751
1206,"Unity has negotiated a license with Novell. Now they would have to do it again with Xamarin for the newer version of Mono. But we don&#x27;t know if Unity was really nice to the Mono guys when Novell pushed out what would quickly become Xamarin. 
As always, if it were only money things would be simpler. But if there is some beef things will drag.<p>Plus, Unity has forked Mono and they contribute to their own internal version. At the same time they are working hard on their own proprietary il2cpp (to export to C++).
The writing is clear: they will drag things as long as possible with using their old version of Mono until they are able to switch to il2cpp.<p>My personal opinion is that Xamarin guys are better at Mono and that UE4 coupled w. Mono&#x2F;C# might put quite a bit of pressure on Unity.",2014-10-24 18:20:09,8505072
1207,"&gt; It was not written from scratch 3 times.<p>No, but did it also use <i>java translation</i>? That would involve writing wrappers for many of the native libraries. They would also have to do View&#x2F;Controllers in objective-c (or some equivalent translator). And finally, they would have to special-case operating systems everywhere. This framework would not at all suffice to do multi-platform development; xamarin, robovm, cordova, and titanium all get much closer to this goal.",2014-10-24 20:11:38,8505698
1208,"&gt;Unity has negotiated a license with Novell. Now they would have to do it again with Xamarin for the newer version of Mono.<p>Ah, so the deal was before Xamarin bought the rights to Mono from Attachmate&#x2F;Novell, I didn&#x27;t know that.<p>&gt;At the same time they are working hard on their own proprietary il2cpp (to export to C++). The writing is clear: they will drag things as long as possible with using their old version of Mono until they are able to switch to il2cpp.<p>From what I understood they would still ship Mono as part of Unity (as in development framework), however what they want to avoid is the license costs that comes with shipping the Mono runtime with each Unity game, hence il2cpp, but perhaps I&#x27;m mistaken here ?",2014-10-25 11:03:06,8507831
1209,Xamarin (if that&#x27;s what you meant) is proprietary and quite pricey at that ;),2014-10-26 21:49:22,8512613
1210,"Well, Java caught up somewhat with version 8: with lambdas and Streams to provide LINQ-like functionality - which, however, isn&#x27;t equally good imho, and not extendable because it&#x27;s not based on extension methods. And unfortunately I have no access to these goodies anyway, as an Android dev :&#x2F;<p>Ah, and then there&#x27;s still the inferior, type erasure based generics. There is nothing on par with C#&#x27;s <i>awesome</i> async-await. There&#x27;s no yield return semantics (when used properly, you can create very clean and robust code thanks to it). You&#x27;ve got to deal with the infamous checked exceptions (I think it&#x27;s the consensus these days that this wasn&#x27;t such a good design choice after all). No single-root type system (so you&#x27;ve got Integers and ints, and the latter aren&#x27;t objects) etc. And there&#x27;s more, even little things like var keyword or partial classes that don&#x27;t exist in Java (like many language features, partial classes can be used for evil, but it&#x27;s very helpful for dealing with autogenerated code). Operator overloading. Nasty and weird syntax for annotations (in compare to C#&#x27;s attributes).<p>Some of these can be a matter of taste for sure and I&#x27;m not interested in language flamewars :) I write both Java and C# for living, just personally I prefer the latter.<p>It would be real big if Microsoft purchased Xamarin and made it free (or much cheaper). They&#x27;ve really gained momentum in recent time and it feels like they are getting recognition from MS now.",2014-10-27 01:24:11,8513308
1211,"The Mono team ported Android to C#, and got some significant performance wins. <a href=""http://blog.xamarin.com/android-in-c-sharp/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;</a><p>One wonders how much better the world would be if Google had hired some first employees that preferred expressive languages.",2014-10-27 16:15:17,8516374
1212,I&#x27;m surprised Microsoft hasn&#x27;t bought Xamarin yet. Mono being a first-class citizen (with an appropriate license) would do wonders to attract Java and non-MS developers to .Net - myself included.,2014-10-27 18:49:18,8517340
1213,"At Tachyus (<a href=""http://tachyus.com"" rel=""nofollow"">http:&#x2F;&#x2F;tachyus.com</a>) we have made a huge bet on F#, and it has paid off in spades. The back end of our SaaS product is 99%+ F#, and so far we have had a great experience using Azure for hosting. Our iOS apps are also built using 99%+ F# (using Xamarin, on Mono rather than .Net).  The language allows us to write highly expressive code, and fewer lines of code overall.<p>Using a Microsoft language has given us huge productivity benefits (most notably Visual Studio and Azure support). There is a fantastic F# community (<a href=""http://fsharp.org"" rel=""nofollow"">http:&#x2F;&#x2F;fsharp.org</a>) which is untethered to Microsoft, and it&#x27;s exciting to see the language grow as an open-source and cross-platform tool.",2014-11-02 04:40:52,8545650
1214,"The project I work on isn&#x27;t a startup per se but it&#x27;s not completely dissimilar. We use:<p>* ASP.NET for web with SQL Server + EF for the database and data access<p>* Xamarin for mobile and OData for data access (back to our ASP.NET sites)<p>The CLR is great because it&#x27;s always been fast enough for our applications and every so often you get something for nothing. For example, CLR 4.5 brought better GC and RyuJIT is bringing better code generation. NET Native might give us even better performance.<p>LINQ is amazing if you know your IQueryables from your IEnumerables and the difference between an Expression&lt;Func&lt;T, bool&gt;&gt; and a Func&lt;T, bool&gt;.<p>Hosted in a private datacentre, not using Azure but we&#x27;ve got our eye on it (provisioning resources in the Azure Portal seems to get easier and easier than doing it ourselves).<p>New Relic for monitoring the web sites.<p>My biggest gripe (and it&#x27;s not that big) is that within the Microsoft ecosystem&#x2F;community everything works great but once you go outside it things are less well supported. Some less-popular-but-wow-that&#x27;s-useful Javascript libraries don&#x27;t come as NuGet packages. New Relic&#x27;s .NET monitoring seems good but second fiddle to their other stuff.<p>After that I&#x27;d say Xamarin is letting the team down. Every second or so release of theirs fixes two bugs but adds another one.<p>Keeping an eye on Application Insights. It looks like it integrates nicely with Visual Studio Online, and VSO&#x2F;TFS actually looks quite nice <i>in parts</i> (e.g. Bamboo for CI is largely geared towards Java apps not .NET but TFS&#x27; Release Management looks promising). I have my eye on VSO&#x2F;TFS too but right now it looks like pros do not outweight the cons vs. our Atlassian applications.<p>If you&#x27;ve got enough processing power and memory and a fast SSD to run Visual Studio + ReSharper it&#x27;s coding heaven.",2014-11-02 07:33:30,8545956
1215,"SEEKING WORK - REMOTE - Freelance Android and iOS, Portland Oregon<p>Over 20 years industry experience from design, development, architecture, QA and product support. Front-end and back-end development. Java, C#, Objective-C, Xamarin, PHP, MySQL, C&#x2F;C++<p>Portfolio:<p>Garage 529 Android - J Allard&#x27;s company (xbox 360) Anti bike theft app.<p>Nike + Running - Nike&#x27;s premier running application. <a href=""https://play.google.com/store/apps/details?id=com.nike.plusg.."" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.nike.plusg...</a>.<p>Nike + Vertical -- Mobile&#x2F;Google Glass prototype for hands-free help with rock-climbing.<p>Economist Pocket World in Figures iOS App  <a href=""https://itunes.apple.com/gb/app/the-economist-world-in-figur.."" rel=""nofollow"">https:&#x2F;&#x2F;itunes.apple.com&#x2F;gb&#x2F;app&#x2F;the-economist-world-in-figur...</a>.<p>Caller Dashboard  (Android Tablet, Android Phone, Ultrabook) link: <a href=""http://www.thugdesign.com/projects"" rel=""nofollow"">http:&#x2F;&#x2F;www.thugdesign.com&#x2F;projects</a><p>Vapp (Veteran&#x27;s Application) Android  <a href=""https://play.google.com/store/apps/details?id=com.omf.vapp"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.omf.vapp</a><p>Ease into 5K Android  <a href=""https://play.google.com/store/apps/details?id=com.runhelper..."" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a>.<p>Bridge to 10K Android  <a href=""https://play.google.com/store/apps/details?id=com.runhelper..."" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a>.<p>Ease into 10K Android  <a href=""https://play.google.com/store/apps/details?id=com.runhelper..."" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a>.<p>Walk There iOS App  Live walking tour application. Article: <a href=""http://blog.oregonlive.com/my-portland/2011/09/metro_and_kai.."" rel=""nofollow"">http:&#x2F;&#x2F;blog.oregonlive.com&#x2F;my-portland&#x2F;2011&#x2F;09&#x2F;metro_and_kai...</a>.<p>Fridge Art iOS  Social picture sharing app using refrigerator metaphor. Unpublished<p>Life Sampler Android  Student data collection application.",2014-11-02 15:43:24,8546859
1216,Xamarin is selling licenses to proprietary gamedevs for quite a while now. That may put a dent in their business.,2014-11-03 15:26:55,8551205
1217,"Much to the derision many of the developers I know, I still say that C# is the best language I&#x27;ve ever worked in. But the .NET platform is one of the worst I&#x27;ve ever worked in. So opening up C# to more platforms sounds very, very good to my ears.<p>I only wish Xamarin&#x27;s products didn&#x27;t cost so much. With Swift on the scene I really can&#x27;t justify spending money to write my side projects in C# instead of in the environment Apple provides. Or Java for Android, which let&#x27;s face it, is already similar to C# anyway.",2014-11-03 15:35:58,8551265
1218,"Unless of course, you want your side projects to work on non-Apple platforms. Aside from mobile stuff (and who really cares about that ;), the remainder of the Xamarin&#x2F;Mono toolset is feature complete and almost entirely open source.",2014-11-03 15:41:03,8551297
1219,"Xamarin&#x27;s value proposition is developing for multiple platforms at once (or at least, as a current Xamarin user, sharing as much as possible between platforms). Swift still offers nothing for that scenario so I don&#x27;t really understand the comparison.<p>Obviously if you are only going to ever develop for iOS then going with Swift could make sense but then it seems that Xamarin would&#x27;ve never really have been an option anyhow, irrelevant of cost.",2014-11-03 15:44:22,8551327
1220,"I hope that Microsoft buys Xamarin (I know, I&#x27;m evil) and makes it free, or very reasonably priced.",2014-11-03 15:46:24,8551339
1221,"Last time I tried Xamarin (and I&#x27;ll admit it&#x27;s been a while) cross-platform was surprisingly difficult. A project had to be either iOS or Android - and that included projects that had no UI code in them. So the concept was there, but the execution wasn&#x27;t yet.<p>Of course, this may have changed.",2014-11-03 15:46:48,8551341
1222,"I bet Microsoft would like to buy Xamarin too, but worry that might strain Xamarin&#x27;s relationship with Apple and&#x2F;or Google. This could be a &quot;if it aint broke, don&#x27;t fix it&quot; scenario.",2014-11-03 15:51:56,8551371
1223,"If by some miracle Visual Studio ever ran on non-Windows platforms, Microsoft would then be free to kill off Xamarin Studio.<p>And as long as we&#x27;re being evil, I wouldn&#x27;t mind seeing Microsoft buy up Light Table (if that&#x27;s even possible) and build some of its features into Visual Studio. Namely inline eval and live code modification.",2014-11-03 15:53:31,8551375
1224,"Portable Class Libraries help here. They aren&#x27;t perfect, and honestly they&#x27;re justly badly reinventing Java&#x27;s loosely coupled jars, but they give you the ability to link stuff together in a little more general of a way.<p>In my current project (a video game), the core library is a PCL - it contains data structures and the interfaces and abstract classes that content (mods as well as the base game) must fulfill. I have a &quot;desktop&quot; library that&#x27;s a normal .NET 4.5 class library that contains stuff like &quot;load your config data from files, include the runtime-compilation mod system&quot;, and I have runner projects--text-mode via curses for now, eventually graphical post-prototype--for MacOS, Windows, and Linux[1]. I use configurations (not platforms, leave everything as AnyCPU unless you want to hate your life) to provide preprocessor flags for #if; my solution has ended up with an ugly number of &quot;Windows-Debug&quot;, &quot;MacOS-Release&quot;, etc., but the differences between XS and VS make it hard to do things &quot;right&quot;.<p>[1] - all source&#x2F;content files added via a single template .csproj, using a Ruby watcher I&#x27;m going to eventually open-source, because using MSBuild correctly to handle this situation breaks in both VS and Xamarin. (That last bit, you may be realizing, is a common theme. .NET has such good stuff, but half of it is broken at any time.)",2014-11-03 15:55:08,8551389
1225,"There is still a degree of that, depending on how you structure the application, and how much of it is reliant on your UI layer vs backend business logic.<p>Xamarin.Forms is their solution - common UI components wrapped in a generic layer.<p>They have a nice way to blend Xamarin.Forms, native UI controls and library projects that is getting much better, but still a bit of a pain.<p>They true value in my eye is that I only have to be proficient in one language, and they have very good documentation.<p>I still need to have a firm understanding of the API&#x27;s for both Android, iOS, and WinPhone if I want to make a non-Xamarin.Forms application, but at least I&#x27;m not mentally shifting between 3 languages.",2014-11-03 15:58:19,8551417
1226,Actually that sounds so reasonable. I have been asking myself why Microsoft hasn&#x27;t bought Xamarin. But Xamarin is actually an amazing Trojan Horse for Microsoft.,2014-11-03 16:29:15,8551630
1227,"At work we use Xamarin for iOS-only projects, as we&#x27;re primarily a C# consultancy. It&#x27;s expensive, but it would be more expensive and difficult to find or train native iOS developers. Or at least, that&#x27;s the impression management is under. The fact that we could port an app to Android somewhat easily when a client requests it is just icing on the cake, since almost all of our mobile projects are iOS only.",2014-11-03 18:50:33,8552634
1228,"Assuming you don&#x27;t <i>need</i> to pass around binary libraries, take a look at shared projects--  added in Visual Studio 2013 and Xamarin Studio 5, IIRC.  Unlike PCL projects, they compile in the context of the projects that reference them, so you have full access to the libraries that are common between each platform, and (if your coding style allows it) full access to platform-dependent APIs as long as they&#x27;re protected by the appropriate #if __IOS__&#x2F;#if __WIN32__&#x2F;etc.<p>Keeping common code in shared projects is like night and day compared to the mess that is keeping common code in a PCL and having to deal with common APIs that aren&#x27;t present (or worse, are incomplete) in your chosen PCL subset.  They really clean things up a lot, even if you&#x27;re treating them like they&#x27;re a PCL and avoiding any platform-dependent code.",2014-11-03 19:49:44,8553010
1229,"The mono compiler (that Xamarin uses, and would presumably be replaced by the Roslyn compiler), is released under GPL and MIT X11 licenses (<a href=""https://github.com/mono/mono/blob/master/LICENSE"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;mono&#x2F;blob&#x2F;master&#x2F;LICENSE</a>)<p>I don&#x27;t think this will have any effect on Xamarin licenses at all.",2014-11-03 20:06:48,8553121
1230,"Interestingly, most of my experience is in c#, but I&#x27;ve now got a side project that requires apps. I wrote them in Android and iOS. I looked at Xamarin as well, but I couldn&#x27;t see the point of learning essentially a new framework. I figure whatever pattern you use (probably MVC) it will be the same on both. And the layout paradigms are different between them, so how is Xamarin going to fix that? My solution was just to use webviews instead of the native layouts (decided after bashing my head against both layout engines).<p>Anyway, my point is once you understand how things are organised, the language shouldn&#x27;t make much of a difference. Especially not between popular, run-of-the-mill languages like c#, java and ObjC. Your devs could probably learn iOS pretty easily.",2014-11-03 21:00:26,8553458
1231,"Project is at <a href=""https://github.com/google/j2objc"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;j2objc</a>. Has anyone used this in production? I&#x27;m normally wary of codegen&#x2F;translation but this sounds like a good way to do Android+iOS without going to something like Xamarin.",2014-11-05 03:02:03,8560330
1232,Nice to see Xamarin buying into the student software model. Will this be available to UK students?,2014-11-05 21:24:24,8564350
1233,Working with Xamarin and Microsoft to boost C# GPU and CPU programming capabilities.,2014-11-06 20:38:22,8569594
1234,"Quick question, where do Mono&#x2F;Xamarin or similar projects stand on this whole API copyright? Aren&#x27;t they essentially writing a library with the same API as the .NET or other single-platform framework? Or am I misunderstanding what they meant with API in this case?",2014-11-08 17:38:19,8577538
1235,"Yes, this case is highly relevant to Mono&#x2F;Xamarin, although in practice I think it would be suicide for Microsoft to start suing people who clone their technology. Note that Miguel de Icaza is a signatory.",2014-11-08 18:12:16,8577653
1236,Miguel&#x2F;Xamarin is a very strong partner of Microsoft as well :),2014-11-08 20:30:14,8578064
1237,"C#&#x2F;F# .NET:<p>- ASP.NET WebAPI : web server<p>- Xamarin : iOS, Android<p>- Azure : cloud<p>- Akka.NET : actor model<p>- XAML&#x2F;WPF : enterprise LOB, Windows Phone",2014-11-09 12:25:59,8579747
1238,"The startup I&#x27;ve been helping out is using the Microsoft stack. Why? The exact reason you stated...when you already know everything there is to know about the .NET world, learning something else is time being spent that could&#x27;ve been used to get to market sooner. They&#x27;ve got 30 years combined experience in .NET, why would they use anything else?<p>They&#x27;re using NancyFX for their application server. MVC 5 for the consumer-facing website. Mobile app is written in C# using Xamarin.<p>We&#x27;re in a smaller city, where everyone seems to use .NET, so finding people OUTSIDE the .NET world is actually a bigger problem where I&#x27;m at.  Silicon Valley is certainly the exact opposite.",2014-11-09 23:20:55,8581269
1239,"Go with what you know - get out there and test&#x2F;validate the concept instead of learning another technology.<p>FYI go check out BizSpark which is a pretty amazing program - 60k&#x2F;yr of hosting credits and whilst you continue to host on Azure there are no licensing costs. Architect your software stack properly using repositories&#x2F;interfaces and develop against these if you are worried about lock-in to Azure - done correctly it will allow you to adopt a hybrid approach of mix and match of offerings between vendors.<p>Some basic considerations:<p>a) Ability to find quality .NET talent in your local area? (It&#x27;s not hard to stand out and attract quality developers in .NET simply by adopting a strong open-source usage&#x2F;contribution policy. Using languages such as F# behind the scenes will make you stick out even more.)<p>b) .NET makes hiring simpler - you&#x27;ll obtain the opportunity to use and reuse the same language&#x2F;code on the server-side as on the client side. Using Xamarin means you don&#x27;t need to hire a Android mobile guy to do the app, then hire a iOS guy to redo the same project in another language. You get product&#x2F;feature release parity for essentially free.<p>c) Are you in this for the long haul or are you aiming for exit? If exit consider the technology stack of potential acquirers.",2014-11-09 23:49:13,8581333
1240,What are you using as the backbone of your Xamarin app? Forms? MvvmCross? ReactiveUI?,2014-11-09 23:54:43,8581347
1241,"&gt;  I bet mobile app development is going to be dominated by JavaScript and HTML.<p>If that is all one knows, sure.<p>Luckily there are other alternatives, Xamarin, Qt, SDL, Cocos2D, Unreal, Unity...",2014-11-12 14:50:56,8595622
1242,"Wow - I have to say I&#x27;m impressed. I wonder how extensive the cross platform support is, and what sort of work has gone into targeting iOS? What does this mean for Xamarin and Mono?",2014-11-12 15:45:54,8595974
1243,"&quot;To further support cross-platform mobile development with .NET, as part of their strategic partnership, Microsoft and Xamarin announced a new streamlined experience for installing Xamarin from Visual Studio, as well as announced the addition of Visual Studio support to its free offering Xamarin Starter Edition  available later in the year.&quot;<p>Well that should make a lot of people around here happy.",2014-11-12 15:45:56,8595975
1244,"I know it&#x27;s silly but I&#x27;m tearing up. I grew upwith .NET but neglected it for years because of moving to OS X, iOS and web dev. I played for some time with Xamarin and I&#x27;m so happy this is where MS is going. &lt;3 Scott &amp; Miguel, I&#x27;m sure they both had <i>a lot</i> to do with it.",2014-11-12 15:49:40,8596015
1245,"&quot;To further support cross-platform mobile development with .NET, as part of their strategic partnership, Microsoft and Xamarin...&quot;<p>I would be pretty shocked if MS just suddenly dropped their won linux&#x2F;mac implementation. Xamarin and the mono team have been working on this for a very long time.  MS is just bringing them further into the &quot;legit&quot; fold",2014-11-12 15:51:07,8596027
1246,"Nope, now I don&#x27;t have an easy thing to complain about in Xamarin threads.<p>Joking aside, there are a lot of surprises coming out of MS, this is all quite nice.",2014-11-12 15:51:19,8596028
1247,"The key points seem to be:<p>&quot;Available Wednesday, Visual Studio Community 2013 is a free, fully featured edition of Visual Studio including full extensibility.&quot;<p>So, it sounds like this will replace the Express edition and let you install extensions like you can in the Pro version.<p>&quot;Visual Studio 2015 and .NET 2015: build for any device -
Built from the ground up with support for iOS, Android and Windows, Visual Studio 2015 Preview makes it easier for developers to build applications and services for any device, on any platform.&quot;<p>It <i>almost</i> sounds like you&#x27;re going to be able to run VS2015 on different platforms, but I doubt it. Maybe you&#x27;ll run the web version of VS2015 to develop from Mac&#x2F;Linux?<p>&quot;To further support cross-platform mobile development with .NET, as part of their strategic partnership, Microsoft and Xamarin announced a new streamlined experience for installing Xamarin from Visual Studio, as well as announced the addition of Visual Studio support to its free offering Xamarin Starter Edition  available later in the year. &quot;<p>This is very interesting - .NET is going fully cross platform but they haven&#x27;t bought Xamarin...are they planning on competing while keeping their frenemies close or something else?",2014-11-12 15:53:35,8596044
1248,What happens to Xamarin business model now?,2014-11-12 15:55:29,8596063
1249,The iOS and Android part don&#x27;t make sense to me. Surely you won&#x27;t be running VS on your iPad? So are they saying it has support for compiling to iOS and Android? Wouldn&#x27;t they need to mention Xamarin in that sentence for it to make sense?,2014-11-12 15:57:36,8596080
1250,One theory I&#x27;ve read is Microsoft wants Xamarin to stay third-party so Microsoft&#x27;s competitors continue working with them.<p>Xamarin is working with a great many companies who would think twice about working with Microsoft directly. This way Microsoft can shove money to Xamarin to forward the ecosystem without scaring anyone.,2014-11-12 16:00:56,8596114
1251,I doubt the idea (at this point) is to &quot;RUN&quot; Visual Studio on iPad&#x2F;Android...<p>My money is on the App Creation naively in VS 2015 - via Xamarin or similar plugins - instead of having to rely on tools like Eclipse or IdeaU.<p>I think I&#x27;d lose my mind if I could develop apps in Visual Studio and C# instead of having to use Java and pay $1000&#x2F;year for Xamarin.,2014-11-12 16:03:51,8596138
1252,"To be fair thats pretty much exactly what xamarin have done for ios, android and mac.",2014-11-12 16:04:47,8596143
1253,Nice theory... but they went the opposite direction with Nokia.<p>I don&#x27;t think they&#x27;d have any issue purchasing Xamarin and importing&#x2F;re-branding.,2014-11-12 16:05:56,8596158
1254,"At the moment .NET is making great inroads into all mobile platforms (mainly due to Xamarin&#x27;s iOS and Android platforms). 
The one area where Microsoft needs to push more i son the server side: to be able to develop ASP.NET apps and push them to Linux servers. You can do it now but not as smooth and stable as it should be. 
When this happens, then the circle is complete: you can write both client and server code in C#&#x2F;F# from within Visual Studio.<p>Quite a powerful combo at that point!",2014-11-12 16:10:52,8596191
1255,"Mono has been doing just fine. Yes, you can&#x27;t rely on WinForms, even though a port exists. You can&#x27;t do COM, that&#x27;s for sure. But that doesn&#x27;t mean that Mono is not valuable for what it is right now.<p>Microsoft doesn&#x27;t need to provide compatibility for the Windows specific bits, as those bits are not part of the Core. And a platform like .NET has enough value in open-sourcing just the Core (i.e. whatever goes in the ECMA standard). For example it&#x27;s a perfectly acceptable strategy to use GTK# on Linux, WinForms on Windows, MonoMac on OS X and Xamarin.Whatever on iOS &#x2F; Android.<p>On System.IO, indeed there are differences between Winsock and Linux&#x27;s epoll or BSD&#x27;s kqueue (i.e. notify on completion versus notify on ready). There are differences between the 2 models, but I don&#x27;t see that as a problem for System.IO and if you think it is a problem I&#x27;d like to read an explanation as to why.<p>Personally I&#x27;m very excited about this announcement. I avoided .NET for years and preferred to settle for the JVM because I do not like building on top of proprietary things. If they are really open-sourcing the .NET runtime, whilst uniting their efforts with Xamarin, that&#x27;s really good news. Now hopefully the ecosystem around .NET will follow, as .NET needs an open-source oriented ecosystem and needs one badly.",2014-11-12 16:15:37,8596234
1256,"They seem to be cooperating with Xamarin, to some extent:<p>&quot;To further support cross-platform mobile development with .NET, as part of their strategic partnership, Microsoft and Xamarin announced a new streamlined experience for installing Xamarin from Visual Studio, as well as announced the addition of Visual Studio support to its free offering Xamarin Starter Edition  available later in the year.&quot;<p><a href=""http://news.microsoft.com/2014/11/12/microsoft-takes-net-open-source-and-cross-platform-adds-new-development-capabilities-with-visual-studio-2015-net-2015-and-visual-studio-online/"" rel=""nofollow"">http:&#x2F;&#x2F;news.microsoft.com&#x2F;2014&#x2F;11&#x2F;12&#x2F;microsoft-takes-net-ope...</a>",2014-11-12 16:18:25,8596255
1257,"Doesn&#x27;t MonoDevelop count then?<p><a href=""http://monodevelop.com/"" rel=""nofollow"">http:&#x2F;&#x2F;monodevelop.com&#x2F;</a><p>Or do you mean an application from Microsoft?  Because I believe Microsoft has actually been using Mono (via Xamarin) to publish applications on iOS.",2014-11-12 16:19:07,8596266
1258,"This is amazing. But I really, really wish Microsoft would buy Xamarin. I know it sounds counter-productive - they&#x27;re doing great work on their own - but the subscription costs associated with Xamarin hold it back. MS would have every motivation to release it for free to try to corner the app development market.",2014-11-12 16:19:40,8596271
1259,It would destroy Xamarin if they made it free to develop C# for iOS&#x2F;Android.,2014-11-12 16:19:52,8596273
1260,Highly depends on what the deal between Xamarin and MS is. For example they could work out a deal with Xamarin where they would provide free access under same terms as Visual Studio community (the &gt;5 people) and Microsoft could pay them more than enough to cover their loss while promoting their development stack.,2014-11-12 16:28:57,8596346
1261,"Let&#x27;s hope that lowers the costs of Xamarin. It&#x27;s a great product, but even Microsoft realizes that, in order to achieve wider adoption, you need something close to the freemium model, like Visual Studio.",2014-11-12 16:37:12,8596402
1262,Nokia was also definitely pre-Nadella. The Xamarin theory supports Nadella&#x27;s whole &quot;cloud and mobile services&quot; schtick.,2014-11-12 16:38:45,8596419
1263,Just wondering what Xamarin&#x27;s plans are in light of Microsofts major .Net announcements today.  Anyone from Xamarin care to comment on all this?,2014-11-12 16:42:57,8596454
1264,Doesn&#x27;t Xamarin have a load of other stuff around testing and the like?<p>It could just mean a move away from Xamarin as a core development tool into producing things which support development on these platforms.,2014-11-12 16:46:23,8596480
1265,"This doesn&#x27;t seem like a mobile play at all, honestly.<p>They&#x27;re opening the core, and large portions of the web server stack. This points to it being a play for web development, not native mobile.<p>There are some additional integrations with Xamarin - but Xamarin isn&#x27;t owned by MS nor is it the key highlight of today&#x27;s announcements.",2014-11-12 16:47:59,8596493
1266,"<a href=""http://blog.xamarin.com/microsoft-and-xamarin-expand-global-partnership/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;microsoft-and-xamarin-expand-global-...</a><p><i>&quot;Today were excited to take the partnership to the next level, by announcing:<p>1. Support for Visual Studio 2015  Today, we released support for the Visual Studio 2015 Preview release, which includes Xamarin templates that make it easier to discover and download Xamarin from within the IDE.<p>2. Free Xamarin Starter Edition for Visual Studio Users  Today, Microsoft announced a new, free edition to Visual StudioVisual Studio Community. Visual Studio Community contains support for extensions, which means it will be Xamarin compatible with from day one. We want to help make Visual Studio Community a tool for anyone to create native apps for iOS and Android, so we are announcing our plans to enable our freely available Xamarin Starter Edition to work with Visual Studio Community. We are also doubling the size limit on apps that can be created with Xamarin Starter Edition, so that you can build even more capable apps for free. This will be available in the coming weeks.<p>3. Special offers for MSDN Subscribers  Weve worked with Microsoft to create a  20% discount for Visual Studio Premium and Ultimate MSDN subscribers to purchase Xamarin Business or Enterprise Editions, or world-class mobile development training with Xamarin University, available up to 60 days after the Visual Studio Purchase.&quot;</i>",2014-11-12 16:49:33,8596507
1267,"If the support for osx and linux depends on xamarin, the future of .NET on those platforms is very dubious.",2014-11-12 16:51:21,8596521
1268,"I&#x27;m not from Xamarin but their latest blog post sounds positive: <a href=""http://blog.xamarin.com/microsoft-and-xamarin-expand-global-partnership/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;microsoft-and-xamarin-expand-global-...</a>",2014-11-12 16:56:12,8596559
1269,I bet you a million dollars he uses Xamarin.Forms ;),2014-11-12 16:56:48,8596566
1270,"<a href=""http://tirania.org/blog/archive/2014/Nov-12.html"" rel=""nofollow"">http:&#x2F;&#x2F;tirania.org&#x2F;blog&#x2F;archive&#x2F;2014&#x2F;Nov-12.html</a> here is what Miguel of Xamarin has to say",2014-11-12 17:00:07,8596589
1271,It&#x27;s called Xamarin.,2014-11-12 17:13:30,8596696
1272,I highly doubt Microsoft will release and support Linux&#x2F;OSX&#x2F;iOS&#x2F;Android API bindings.<p>What will likely happen is Microsoft will :<p>* open source the core libs<p>* open source the JIT<p>* make sure it works on all platforms<p>* open source the ASP.NET and port it to Linux&#x2F;Mac so they can separate Azure from being a Windows only cloud service<p>Xamarin then packages these in to Mono and Xamarin.iOS&#x2F;Android providing a layer on top of MS core stuff. Microsoft will then be able to sell .NET as a truly cross-platform solution and make VS&#x2F;Azure more popular where it&#x27;s probably losing to other OSS ATM.,2014-11-12 17:14:18,8596702
1273,"Not only that, but Xamarin&#x27;s independent existence is like free insurance for companies choosing .NET - even if Microsoft were to drop support (unlikely, but look at Silverlight), Xamarin would continue providing a viable way forward for the language and runtime. Now that MS&#x27;s .NET is open source, Xamarin&#x27;s .NET is like OpenJDK - Xamarin is a governing body and authority for the language&#x2F;API if Microsoft were to drop it. So it&#x27;s good for Microsoft to have Xamarin as an independent entity.",2014-11-12 17:35:14,8596836
1274,"Why would that be the case ? I think Xamarin has done a pretty good job on pushing the boundaries of C# and the framework on Mac and Linux.<p>Mono&#x27;s SIMD is one example: <a href=""http://tirania.org/blog/archive/2008/Nov-03.html"" rel=""nofollow"">http:&#x2F;&#x2F;tirania.org&#x2F;blog&#x2F;archive&#x2F;2008&#x2F;Nov-03.html</a>",2014-11-12 18:03:25,8597042
1275,Really curious if the Community Edition will work with Xamarin.,2014-11-12 18:19:44,8597173
1276,"So the free Xamarin users will get Visual Studio support, but us with Xamarin Indie still have to use Xamarin Studio? I just want to use VS with Xamarin! But I guess that won&#x27;t happen, because that&#x27;s the only worthwhile reason to purchase their Business subscription (and the whole &gt;5 employees clause).",2014-11-12 18:27:21,8597216
1277,"From the article:<p><pre><code>  With Visual Studio 2015 Preview you can target Android and edit-compile-debug regardless
  of your choice of programming models:

  JavaScript (or TypeScript) with Cordova, C++, or C# with Xamarin.</code></pre>",2014-11-12 18:34:48,8597275
1278,"Android and iOS development in VS will be done via Xamarin, Cordova, or C++. That&#x27;s why you don&#x27;t see Maven or Gradle support anywhere, there&#x27;s no Java involved.",2014-11-12 18:47:42,8597364
1279,"This is incredible, perfect for xamarin or phonegag. Cant wait to use it",2014-11-12 18:52:17,8597388
1280,"It depends on your definition of native. Xamarin lets you use all the native Android APIs, but you&#x27;re using them via bindings in C# or F# instead of Java.",2014-11-12 19:17:42,8597531
1281,"i think the potential for F# just got bigger and better with a brighter future!<p>this pretty much highlights the whole movement at Microsoft +Xamarin:
(and directly answers most of the questions in this thread)
Microsoft intends to make Xamarin&#x27;s job a lot easier and realign its developer-oriented strategy in the same direction<p>Scott Hanselman outlines it concisely here (<a href=""http://www.hanselman.com/blog/MicrosoftKilledMyPappy.aspx"" rel=""nofollow"">http:&#x2F;&#x2F;www.hanselman.com&#x2F;blog&#x2F;MicrosoftKilledMyPappy.aspx</a>):<p>Delivering on its promise to support cross-platform development, Microsoft is providing the full .NET server stack in open source, including ASP.NET, the .NET compiler, the .NET Core Runtime, Framework and Libraries, enabling developers to build with .NET across Windows, Mac or Linux. Through this implementation, Microsoft will work closely with the open source community, taking contributions for future improvements to .NET and will work through the .NET Foundation.<p>A strong, open source, cross-platform CLR opens significant new options for building large server-based systems, said Brian McCallister, chief technology officer, Groupon. This significantly expands the choices developers have when finding the right tool to solve their problem. Im very excited to have access to the quality virtual machine and tooling of the CLR without having to completely rework our production infrastructure in order to run it!
____<p>this will be of great interest to those already using the CLR as it gives more incentive to those developers &#x2F; dev shops",2014-11-12 19:17:52,8597534
1282,Xamarin.Forms is not supported on Mac.,2014-11-12 19:18:18,8597540
1283,Xamarin.Mac is all about native Cocoa app development in C#.,2014-11-12 19:19:09,8597546
1284,"I wonder how much effort it would be to support C# as well, without Xamarin. Would they ever do that? Or would they prefer to not hurt Xamarin (or maybe Google&#x2F;Apple) too much by offering their own C# crossplatform development?",2014-11-12 19:27:13,8597587
1285,"Xamarin is IntelliJ, and Mono is OpenJDK",2014-11-12 19:31:22,8597612
1286,"Should work with the free tier of Xamarin. Afaik, you can download a free VS + Free Xamarin and churn out an iOS+Android app using C# immediately.",2014-11-12 19:35:57,8597645
1287,The C++ and Xamarin stuff is native. Take a look at Xamarin.Forms. It looks very nice.,2014-11-12 19:46:35,8597699
1288,"I don&#x27;t see what they would gain from a separate initiative when Xamarin has done all that work. They&#x27;re &quot;partnered&quot;, after all.",2014-11-12 19:47:58,8597710
1289,You can do this few years already with Xamarin. Thousands of developers are doing this today. What this changes is better .Net framework compatibility(less bugs) because Microsoft .Net source code will be reused.,2014-11-12 20:07:57,8597820
1290,"Xamarin currently offers VS integration only for the Business or Enterprise editions, the Free tier has no support for VS. You can however use a trial version of Xamarin (Bussiness or Enterprise) for about 30 days that will let you build iOS and Android apps with some limitations (the built executable has a limited life time, one day I think). After 30 days you can buy a Xamarin license or the tool will revert to the Free Xamarin tier (this one is severely limited - application size, integration with external libraries and so on).<p>According to this video <a href=""http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/040"" rel=""nofollow"">http:&#x2F;&#x2F;channel9.msdn.com&#x2F;Events&#x2F;Visual-Studio&#x2F;Connect-event-...</a> Xamarin (Bussiness or Enterprise) should work just fine with VS Community.",2014-11-12 20:14:20,8597848
1291,"To be fair visual programming is a known territory for designers:<p><a href=""http://blog.interfacevision.com/design/design-visual-progarmming-languages-snapshots/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.interfacevision.com&#x2F;design&#x2F;design-visual-progarm...</a><p>Also Unreal Engine will be fixed soon ;) - Xamarin is working on C# scripting for it.",2014-11-12 20:23:41,8597894
1292,"They plan to change it, from <a href=""http://blog.xamarin.com/microsoft-and-xamarin-expand-global-partnership/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;microsoft-and-xamarin-expand-global-...</a><p><pre><code>  Free Xamarin Starter Edition for Visual Studio Users  
  Today, Microsoft announced a new, free edition to Visual   
  StudioVisual Studio Community. Visual Studio Community 
  contains support for extensions, which means it will be 
  Xamarin compatible with from day one. We want to help make   
  Visual Studio Community a tool for anyone to create native
  apps for iOS and Android, so we are announcing our plans to
  enable our freely available Xamarin Starter Edition to work 
  with Visual Studio Community. We are also doubling the size 
  limit on apps that can be created with Xamarin Starter Edition, 
  so that you can build even more capable apps for free. 
  This will be available in the coming weeks.</code></pre>",2014-11-12 20:50:24,8598053
1293,"Yes ... I&#x27;m in the same boat, however the &#x27;core&#x27; of my app I developed as a PCL, the substantial part of developing for which I spend time in VS and using Resharper. Xamarin Studio is pretty OK, but VS is damn good to develop with.",2014-11-12 21:20:28,8598267
1294,"Yes and no. Xamarin does some binding to the native APIs but you are going to code in C#.  
Even if it is your favorite language in the world, I don&#x27;t think that Xamarin is a good platform to develop non-trivial apps.<p>If you need to develop something relatively simple on multiple platforms, Xamarin is a good way to do it once on iOS &amp; Android.",2014-11-12 21:31:46,8598345
1295,"Thanks, I&#x27;ve seen their blog on other HN thread a few minutes ago. The future looks good if you write pure C# code, but if you want to use something like MonoGame you will still need to buy a Xamarin license.<p>I suppose Xamarin will offer VS support for the Indie license too, doesn&#x27;t make much sense to offer support only for the Starter license. The Indie license allows you to use libraries like MonoGame.",2014-11-12 21:33:37,8598354
1296,"Well, it&#x27;s not a single event thing, but a series of events.<p>Upgrading IExplorer to something that can be called a modern browser and helping to estinguish IExplorer 6 is another event. Replacing Balmer was another event. Partnering with Xamarin (instead of crushing them with patents) was another event. Releasing Office Mobile for Android and iOS was another event. Etc...<p>As to why they are doing this, I don&#x27;t really care as long as they are aligned with my needs. Plus I&#x27;m allowed to change my mind, depending on my mood :-)",2014-11-12 22:23:45,8598668
1297,I would expect that Xamarin&#x27;s role with Mono is analogous to 37signals\Basecamp is to Ruby on Rails. Neither organization makes money developing Mono nor RoR. They make their money supporting and consulting organizations that chose to use the software that they are developing.,2014-11-12 22:40:22,8598747
1298,"It depends on what you&#x27;re using it for.. I use Xamarin Studio(monodevelop) to work on a bunch of stuff.  It works great.  It falls down a bit trying to do ASP.NET stuff, but with the new open source push, ASP.NET vNext etc, this should get much better.",2014-11-13 02:23:59,8599605
1299,"More like Xamarin is IBM. From <a href=""http://openjdk.java.net/faq/"" rel=""nofollow"">http:&#x2F;&#x2F;openjdk.java.net&#x2F;faq&#x2F;</a> ... if you replace these words from that FAQ, it&#x27;s remarkably similar to the current .NET situation (even though Xamarin is much smaller than IBM, the amount of attention each company gives to language &amp; core framework development is probably on a similar scale).<p>&gt; Oracle and IBM announced in October 2010 that we will collaborate in the OpenJDK Community to develop the leading open-source Java SE implementation, and make the OpenJDK Community the primary location for open-source Java SE development. Oracle and IBM will support the OpenJDK development roadmap that was proposed before JavaOne 2010, which accelerates the availability of Java SE across the open-source community.",2014-11-13 02:42:44,8599643
1300,"Awesome! Great to see more examples of F# being used in production. Have you considered submitting a testimonial to <a href=""http://fsharp.org/testimonials/"" rel=""nofollow"">http:&#x2F;&#x2F;fsharp.org&#x2F;testimonials&#x2F;</a> ?<p>You can actually target iOS and Android today with F#, via Xamarin Studio, but today&#x27;s announcements definitely open up even further potential.",2014-11-13 05:05:53,8600021
1301,"I&#x27;ll submit a testimonial - thanks for telling me.<p>Interesting, we haven&#x27;t played around with Xamarin studio and F# yet.",2014-11-13 07:43:23,8600392
1302,"Yeah and it costs one grand a year. Plus it&#x27;s playing constant catch up with Android SDK. I remember moving files manually or my projects wouldn&#x27;t build (when Google made some change in folder structure that Xamarin hadn&#x27;t reacted to yet). Don&#x27;t get me wrong, I think it&#x27;s awesome, it just has some limitations that are beyond Xamarin&#x27;s control. Plus it&#x27;s pricey.",2014-11-13 08:44:37,8600527
1303,Curious: Did you look at other solutions like Xamarin?,2014-11-13 08:59:10,8600578
1304,"Good points. Except:<p>&gt;But where does this leave .NET, visual studio etc? Those are no longer the tools with 
&gt;which megacorps make their intranets, or where Photoshop and Call Of Duty is made<p>.NET was never the tool where Photoshop and Call of Duty was made, but a significant amount of mobile apps and games nowadays are made using Xamarin and Unity, tools that run on top of Mono, a cross-platform implementation of .NET. If anything the Microsoft announcement brings Mono and .NET closer together. And I think you will find that a significant (if not majority) proportion of megacorps do run their intranets on SharePoint. SharePoint is and has been customisable using .NET libraries and tools.",2014-11-13 11:44:33,8601033
1305,"Tachyus uses F# almost exclusively. We have had great success with it. Just released 2.0 of our stack to production. After a week, still no issues. We use it for server-side web development in Azure, iOS app with Xamarin, and Raspberry Pi Linux. Fantastic integration with SQL Server throught the SqlClient Type Provider. It&#x27;s great having one language across platforms.",2014-11-13 16:04:56,8602222
1306,"A WPF like framework for each platform would be very nice. Code the interface three times and share back end code between them.<p>I also like Xamarin.Forms&#x27; way. Describe, in general terms, what you want the interface to look like, and it generates native GUIs for Windows Phone, Android, and iOS that follow each of their different UI conventions (tabs at the top, tabs at the bottom, menu button, etc. depending on the OS).",2014-11-13 18:31:26,8603131
1307,"I&#x27;m assuming you&#x27;re talking about Xamarin? If so, $1000&#x2F;yr is pretty expensive for small teams.",2014-11-13 19:04:42,8603365
1308,Xamarin for iOS compiles to native as far as I am aware.,2014-11-14 19:36:27,8609045
1309,"Xamarin.  
It is a good solution in order to make a small applications (let&#x27;s say a showcase&#x2F;order app for a small restaurant) on iOS and Android at the same time.<p>For more ambitious apps, IMO the overhead will never be worth it.",2014-11-15 11:54:26,8611498
1310,"I personally make decisions based on what the project requires rather than some template.  Most websites for me are informational, so mobile-first works well. Not a whole lot of functionality to test so we can focus on building the website and make it look on any size device.<p>However, apps are a different ball game.  I&#x27;d rather focus on usability, experience, and functionality.  I&#x27;m not going to try and hobble the app by trying to beat a round peg into a triangle, square, whatever shaped hole.  I find that most web applications which have large swathes of functionality benefit from native code, so I usually skip mobile-first design and just do a native app (Xamarin or Titanium works).  Why?  Because I don&#x27;t want to sacrifice usability, experience, and functionality.  Most apps, I&#x27;ve found out, have different experience, usability, and functionality on difference devices.",2014-11-17 16:34:33,8618914
1311,"...or C# via Xamarin on iOS&#x2F;Android&#x2F;WP :). I mean, who need a browser for proper things?",2014-11-18 09:28:48,8623106
1312,"Beautiful. I&#x27;ve been trying to pick up C# simply due to Xamarin, and this definitely looks like it will make me feel more at home. Has anyone had success with 6.0 on Xamarin? (Is it even out yet? I saw announcements, but they looked like previews).",2014-11-19 18:58:58,8631875
1313,"Many C# 6 features work in Xamarin&#x27;s compiler, but aren&#x27;t necessarily understood by the IDE, for example. `using` static classes and the ?. operator both work.",2014-11-19 19:19:15,8632021
1314,Just use F# from Xamarin. It&#x27;s the real deal. C# is just a stop-gap measure to suck in the enterprise devs.,2014-11-20 00:21:24,8633657
1315,"There is essentially no language specific documentation in well made APIs. There is a common type system so there is very little that&#x27;s different. Mainly if you need a semicolon and how you prefer your parentheses.<p>There are some poorly made APIs, like ASP.NET MVC that exploit C#-specific side effects to compensate for C#&#x27;s verbosity. These APIs ignore the common type system and just pass object everywhere, breaking tooling and type safety.<p>But as long as Xamarin didn&#x27;t come up with terrible designs, you&#x27;re all set. And, even if they do rely on something strange, F# is such a better language, that the small setback of dealing with interop (which doesn&#x27;t require learning C#) is totally worth it.",2014-11-20 05:19:05,8634519
1316,"My guess is that they will soon introduce Xamarin into the MSDN subscription plans. Hook developers with the free tools, and then sell the cross-platform, mobile capabilities of Xamarin as an upgrade. There is already a 20% discount for MSDN premium and ultimate subscribers.",2014-11-20 15:47:14,8636252
1317,I wonder why they went to all that effort when they could have just used Xamarin and one of several IL to JS traspilers instead. Probably just a standard case of Not Invented Here syndrome.,2014-11-20 22:34:43,8638610
1318,Sharing code across the client and server is also important. Not just code sharing amongst clients.<p>The JVM is going to be the preferred server target at Google over C# and .NET by a wide wide margin. Which probably rules out Xamarin.<p>Add to that the fact that native Android is already Java (source). And GWT is a mature technology that is Google maintained. Seems like the logical route to take.,2014-11-20 22:42:04,8638651
1319,"GWT has been there for a very long time, and they own android. Based on that, Java will be a non-brainer for their  choice of data model. I didn&#x27;t see to the point to go all the way to Xamarin.",2014-11-20 22:43:17,8638654
1320,This editor addresses my need for something simple but &#x27;programmy&#x27; - I develop Xamarin Mac apps on OSX and have been frustrated not finding anything I like that is between TextEdit and Xamarin Studio in functionality and useability. Awesome!,2014-11-20 23:03:39,8638774
1321,Most Google servers run Java and there are millions of lines of Java code in our repository. GWT has existed long before Xamarin since 2006&#x2F;7. And Java is a first class citizen on Android.,2014-11-21 00:01:22,8638993
1322,"I don&#x27;t think a company like Google will tolerate the hyperbuggy software of xamarin, xamarin just pushes new features with ever fixing anything.",2014-11-21 03:51:30,8639735
1323,"How is that different from Xamarin? Inbox is written in Java and Xamarin apps are written in C# but I think the idea is very similar - cross platform logic, native UI. Why would you prefer the approach Google took but dislike Xamarin&#x27;s approach?",2014-11-21 15:50:10,8641749
1324,Can you provide evidence that Xamarin&#x27;s software is buggy and they&#x27;re not paying attention to bugs? Honest question; I&#x27;m evaluating Xamarin at work.,2014-11-22 00:51:21,8644251
1325,"We used AIR for making graphical user interfaces on embedded devices. From a technical point of view I can only recommend it: AS3 is a good language, Flex and MXML are easy and straightforward to work with and there is good tooling included.<p>However the downside of AIR is really future-proofness: Thanks to bad publicity and the assumptions that all flash can be easily replaced by HTML5 the development of AIR is continuosly phased out. E.g. AIR for Linux (not Android) is already no longer supported. I don&#x27;t know how active the development now is under the Apache umbrella.<p>Alternatives would be:  
- Xamarin (.NET)
- QT (i enjoyed it less then AIR because you have to switch between C++ and Javascript whereas in AIR you can implement your whole app in a single language)
- use one of the HTML5 frameworks in combination with typescript (you will need quite a lot of JS libs to get what AIR brings you straight out of the box -  but on the other hand you are more flexible to choose what suits your needs)",2014-11-23 10:31:37,8648360
1326,"I think one of the most realistic options would be to explore F# on Xamarin, if you are willing to pay the indie subscription fee (for Xamarin, that is).<p>F# is a superset of OCaml (well maybe not very strictly speaking but practically for all intents and purposes). Xamarin is gaining a lot of traction as a platform for writing native apps that deploy to Android and iOS.<p>Personally I have very good experiences with both the language and the platform, I would recommend you check it out.",2014-11-25 14:00:31,8657707
1327,"For me F#&#x27;s syntax is so clean and pleasant to look at, I just love it. But having been in the JVM land for too long, at the beginning I like to get a bit more &#x27;native&#x27; and learn OCaml. Hopefully acquired functional programming knowledge can be transferred to F#+Xamarin app development later.",2014-11-25 15:35:53,8658100
1328,"C#, with Xamarin.",2014-11-30 21:00:55,8678060
1329,"Besides the industries pjmlp mentioned (finance and insurance&#x2F;banking), F# is also being used for data science&#x2F;analytics&#x2F;machine learning, distributed applications (on Azure and AWS) and bioinformatics. I also know there are at least a few companies building mobile apps and games with F# (e.g., in combination with the Xamarin toolchain).",2014-11-30 21:03:27,8678077
1330,"From the JVM side, we have: Scala, Clojure, Groovy, Kotlin, etc thanks to RoboVM.<p>From the CLR side, we have C# and F# thanks to Xamarin.<p>Even the <i>worst</i> language among the six I have listed is still <i>far</i> better than the verbosity of Java.",2014-11-30 21:25:34,8678158
1331,"What he said, but C#.<p>C#&#x27;s one of the most versatile languages which can target most of the popular platforms, e.g: iOS&#x2F;Android (Xamarin), WindowsPhone, Windows, Linux, OSX, Silverlight, PS4, XBox (announced), Unity3D and NaCL.<p>C#&#x2F;.NET&#x27;s biggest weakness of sub-optimal cross-platform support should also be resolved in the near future now that .NET&#x27;s compiler, core runtime and class libraries are OSS and with Microsoft announcing support and plans to release official distributions for Linux and OSX - so .NET will finally have multi-platform support of a single code-base resolving earlier issues or running .NET on OSX&#x2F;Linux due to different impls.",2014-11-30 23:31:21,8678669
1332,"<p><pre><code>  * C# (and&#x2F;or F#) to build iPhone, Android, and Windows Phone apps [1] 
  * F# code that compiles to JavaScript for front-ends [2] 
  * C# (and&#x2F;or F#) code for Windows and *nix clients [3] 
</code></pre>
They are not perfect (nor the tooling are free), but it is possible.<p>[1] - <a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a><p>[2] - <a href=""http://websharper.com/"" rel=""nofollow"">http:&#x2F;&#x2F;websharper.com&#x2F;</a><p>[3] - <a href=""http://www.mono-project.com/"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;</a>",2014-12-01 03:54:56,8679429
1333,Good decision. Single-page-apps should be called &quot;hashtag-hack-pages&quot;. If you want a real app you can always pick a proper mobile framework later on (e.g. Xamarin or something Ruby-based).,2014-12-01 09:26:40,8680140
1334,"I just do Android and WP as hobby.<p>SDL was ok for games, but now with a real app, I tried the Qt way, only to discover there are still lots of issues.<p>So I figured out, better use JNI and C++&#x2F;CX directly and save the pain of figuring out bugs in Qt.<p>In the end, the JNI pain is bigger than figuring out Qt bugs and helping those guys.<p>For small devshops there is a lot of time to be saved by letting third parties like Digia and Xamarin have to go through the pain of writing platform specific wrappers.<p>If I was doing mobile OSs for work, I would gladly pay for them.",2014-12-01 10:47:12,8680350
1335,"SEEKING WORK - REMOTE - Freelance Android and iOS, Portland Oregon<p>Over 20 years industry experience from design, development, architecture, QA and product support. Front-end and back-end development. Java, C#, Objective-C, Xamarin, C&#x2F;C++, Parse.com, UX<p>Portfolio:<p>Garage 529 Android - J Allard&#x27;s company (xbox 360) Anti bike theft app.<p>Nike + Running - Nike&#x27;s premier running application. <a href=""https://play.google.com/store/apps/details?id=com.nike.plusgps&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.nike.plusg...</a><p>Nike + Vertical -- Mobile&#x2F;Google Glass prototype for hands-free help with rock-climbing.<p>Economist Pocket World in Figures iOS App  <a href=""https://itunes.apple.com/us/app/economist-world-in-figures/id438709514?mt=8"" rel=""nofollow"">https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;economist-world-in-figures&#x2F;i...</a><p>Caller Dashboard  (Android Tablet, Android Phone, Ultrabook) link: <a href=""http://www.thugdesign.com/projects"" rel=""nofollow"">http:&#x2F;&#x2F;www.thugdesign.com&#x2F;projects</a><p>Vapp (Veteran&#x27;s Application) Android  <a href=""https://play.google.com/store/apps/details?id=com.omf.vapp"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.omf.vapp</a><p>Ease into 5K Android  <a href=""https://play.google.com/store/apps/details?id=com.runhelper.c25k&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a><p>Bridge to 10K Android  <a href=""https://play.google.com/store/apps/details?id=com.runhelper.b210k&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a><p>Ease into 10K Android  <a href=""https://play.google.com/store/apps/details?id=com.runhelper.ei10k&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a><p>Walk There iOS App  Live walking tour application. Article: <a href=""http://blog.oregonlive.com/my-portland/2011/09/metro_and_kaiser_permanente_launch_free_walk_there_iphone_app.html"" rel=""nofollow"">http:&#x2F;&#x2F;blog.oregonlive.com&#x2F;my-portland&#x2F;2011&#x2F;09&#x2F;metro_and_kai...</a><p>email at csgatekeeper [at] gmail dot com",2014-12-01 19:59:49,8683351
1336,How would this compare to using Xamarin with the .NET framework?,2014-12-03 20:40:19,8696209
1337,"What IDE do you use for developing on that platform? Just any HTML editor, like Aptana or NetBeans? Or is there something dedicated like Xamarin Studio? Is this CLI they provide integrated with anything out of the box? I couldn&#x27;t find that info in tutorials",2014-12-04 10:54:12,8698688
1338,"Have you taken a look at Xamarin?<p>It uses C# and seems to compile to Native, I haven&#x27;t delved too deep into it, but it seems like a solid choice.",2014-12-04 16:10:01,8699924
1339,I agree .. this is basically what Rocket is doing is response to the commercial support of Docker.  I haven&#x27;t seen what tangible value io.js or Rocket are going to add.  It&#x27;s basically &#x27;we aren&#x27;t a corporation&#x27; and that doesn&#x27;t add value by itself.  If they want to look at a good example of a clone that has added value they should look at Mono&#x2F;Xamarin.,2014-12-04 17:08:55,8700271
1340,"c#, Xamarin",2014-12-04 17:46:46,8700503
1341,I suppose the Xamarin guys need to eat but it&#x27;s kind of disappointing they are not directly targeting iOS and Android.,2014-12-04 22:48:09,8702199
1342,"The key paragraph from the post RE:Mono is:<p>&quot;well make .NET Core great for Windows, Linux and Mac OSX. This also enables the Mono community to innovate on top of the leaner .NET Core stack as well as taking it to environments that Microsoft isnt interested in.&quot;<p>Seems like a pretty clear split - MS will cover the server-side + Win UIs, while Xamarin handles the other plats (IOS, Android, PS4 etc).<p>This plays to the strengths of both companies, and I would not be surprised if MS has some security in place - e.g. some kind of first option to buy Xamarin should another suitor come calling.",2014-12-04 23:11:04,8702285
1343,"My understanding is that .NET core will not include tooling. This project&#x27;s focused on delivering a framework only, the Open Source Community (Mono Developers in this case) will take care of the rest.<p>Now, Xamarin has been doing a good job of creating beautiful and powerful tools, so I assume the tooling will be really good. Hopefully one day we will see Visual Studio supported by Microsoft on Linux and Mac.<p>But I also hope other providers, like Jetbrains step up to make .Net amazing on Linux and Mac. So either way this is amazing.",2014-12-04 23:46:38,8702401
1344,A port of Xamarin Forms to Linux would make this possible. I hope someone would pick this up. Over time this could enable a single UI technology to target native UI&#x27;s of all major desktop and mobile platforms.,2014-12-05 00:13:19,8702469
1345,"Xamarin Forms isn&#x27;t supported on any desktop platform. Xwt (<a href=""https://github.com/mono/xwt"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;xwt</a>) is probably a more appropriate choice.",2014-12-05 00:21:14,8702491
1346,I doubt they would want to directly compete with someone who is 100% focused at that market and is already in a partnership with Microsoft. It just doesn&#x27;t make any sense for them.<p>tbh I wouldn&#x27;t be surprised if Microsoft just flat out bought Xamarin eventually.,2014-12-05 00:38:14,8702538
1347,"Yeah, I was hoping they would pick them up sooner rather than later. I really like working with Xamarin, I am able to work in C# and share &gt;75% of my code between iOS and Android but I am hamstrung using it on my own projects and it can be a hard sell to use it on commercial projects.",2014-12-05 01:05:22,8702608
1348,&quot;I suppose the Xamarin guys need to eat but it&#x27;s kind of disappointing they are not directly targeting iOS and Android&quot;.<p>Exactly! Clue #1: full Android emulator&#x2F;debugger  built into VS2015.  Clue #2: Rosylyn and .NET native.  Clue #3: Carving up .NET core into separate chunks for smaller deployments.<p>Maybe Xamarin was just a beta test for the real thing?,2014-12-05 04:41:15,8703036
1349,"Loyalties are cheap on the internet. You can say &quot;no one cares about X&quot;. Just look at all the companies that switch between AWS and Azure these days whenever one or the other has an outage. Microsoft is making aggressive moves now.<p>.NET is a technically superior platform to almost anything else out there. True developers tend to gravitate towards what is the best. To see where .NET is heading you really need to look at Xamarin.<p>You act like you are the only one to have made those original predictions (re: IE declining market share, and iPhone being a big shake up to the status quo of the time). You weren&#x27;t. Nobody else apart from you seems to be acting so blas about predicting the death of .NET. To the contrary, most are thinking on the opposite end of the spectrum. F# is gaining a large amount of traction now (just look at its advance on the TIOBE index). As is Xamarin. As is Azure.<p>Java is dying a slow death at the hands of Oracle. None of the recent &quot;improvements&quot; to its core language were done correctly  . Just look at their type erasure of generics. And their bastardised implementation of lambda expressions. .NET will serve as a natural destination for all those increasingly alienated developers and companies using the Java stack.",2014-12-05 05:44:21,8703139
1350,"Does Scala do something like Xamarin? Single code base =&gt; iPhone, Android, WP, mainstream game consoles, Mac, Linux? It&#x27;s not about just language.",2014-12-05 09:26:41,8703580
1351,"Does anybody know it all? It&#x27;s almost as vast as the Java world. A friend of mine is a C# web dev, they didn&#x27;t know what I was talking about when I did WPF. I used Xamarin, but I don&#x27;t know a hoot about Sharepoint.",2014-12-05 09:32:44,8703595
1352,"Currently if you include xamarin, .net is among the best platforms if you care about cross platform development(with the ability to deploy native apps). And i don&#x27;t see anybody who can replace that in the near term.",2014-12-05 12:13:59,8704098
1353,"I don&#x27;t see why they would, if they wanted to be in the IOS&#x2F;Android developer marketplace they have the clout to enter it without buying Xamarin.",2014-12-05 14:13:46,8704536
1354,"Location: Riga, Latvia
Remote: Yes
Willing to relocate: Yes
Technologies: .NET C#, Xamarin, Javascript (Angular, Node.js etc), HTML&#x2F;CSS (SASS, LESS)
Resume&#x2F;CV: <a href=""http://lv.linkedin.com/in/philous"" rel=""nofollow"">http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous</a>
Email: philgsky &lt;at&gt; outlook &lt;dot&gt; com<p>I&#x27;m a fullstack developer with strong .NET background (over 8 years experience). Also working with front end. Currently writing in Xamarin for iOS and Android.",2014-12-05 16:01:20,8705127
1355,"This is a great resources, thanks for sharing. I usually use Xamarin Studio and Emacs in Linux and Mac. OmniSharp integrates with Emacs, that is pretty cool.",2014-12-05 17:39:54,8705686
1356,Don&#x27;t you have to pay Xamarin to run C# on Android commercially?,2014-12-08 17:28:06,8717628
1357,"Sure, but who cares? Four hundred bucks is nothing if you&#x27;re working commercially.<p>There are way better criticisms of Xamarin than the price.",2014-12-08 17:41:04,8717734
1358,"Android Studio is customized very specifically for Android development, not a general purpose IDE. Even the New Project dialog will not let you continue without selecting the target Android form factor.<p>You&#x27;re being downvoted because your comment reads as being off-topic and&#x2F;or uninformed (especially with the Python mention). If by Visual Studio and C# you were referring to Xamarin or Mono for Android it would have been clearer if you mentioned that. It would be helpful if you also mentioned why you feel Android Studio targets developers who use those technology instead of the larger pool of Android developers in general. I don&#x27;t think there&#x27;s a bias against those technologies here, only against poor comments.",2014-12-08 23:09:55,8719848
1359,"I&#x27;m not too worried about it. After all, MS has released Office on iOS, and partnered with Xamarin for iOS development. They&#x27;d be insane to buy HockeyApp then kill everything it has and replace it with a Windows Phone only solution.<p>It&#x27;s weird, but MS is almost one of the <i>best</i> large companies to do cross-platform dev with these days.",2014-12-11 15:06:53,8735081
1360,"I&#x27;d take a look at Xamarin and&#x2F;or Xamarin Forms. It&#x27;s really good and allows you to build native apps for iOS, Android an Windows Phone with just 1 codebase. It can save tons of money.<p>Xamarin Forms is taking it all a bit further than the other Xamarin offers because Forms even allows you to build 1 UI using generic concepts that will be rendered in the style of the platform that&#x27;s running the code. I have to warn you though: Forms is still pretty new and buggy. The concept is really really good and it does work pretty well, but it&#x27;s just not mature enough for big applications.",2014-12-11 16:25:01,8735595
1361,"It fits nicely within the dev story around getting .net and C# running across platforms along with the Xamarin partnership. With testflight evaporating, this is a logical acquisition. Does it make sense to keep it open to native devs? Sure. They can have ramps placed in front of them for using Azure and various telemetry solutions.",2014-12-11 17:05:33,8735810
1362,"You can hire cheaper JavaScript developers, so hybrid could be interesting in that respect.
Otherwise just go for quality =&gt; native. Also native doesn&#x27;t mean multiple code-bases, if your team is interested in functional programming you can do Xamarin + F#&#x2F;C#.",2014-12-11 17:57:44,8736105
1363,"MS will buy Xamarin next. VS is free now, you will deploy your app to tester with Hockey, test it, monitor it and then offer you Azure Mobile Services",2014-12-11 19:55:36,8736731
1364,MS won&#x27;t buy Xamarin unless someone else is planning to buy it. They probably have some sort of exclusive agreement to give MS priority when buying. It is simply cheaper for MS to let Xamarin run itself than to take it under the wing of MS.,2014-12-12 11:56:42,8739578
1365,"True. Also, Xamarin&#x2F;Mono already gets all kinds of crap from Linux purists and being owned by Microsoft would probably made that worse....",2014-12-12 18:24:55,8741801
1366,"I honestly wish we could get some of HN&#x27;s mobile crowd hyped on Rust. A Rust-y take on Xamarin&#x27;s ideas would be phenomenal, and with resource constrained phones, the performance gain from not having garbage collection or reference counting would be certainly welcome.",2014-12-13 18:30:39,8745869
1367,"Sorry, I missed this response.  If you want to chat about the app I am happy to do so, no charge for that.  My email is in my profile.<p>We don&#x27;t work with Parse, but it seems like a viable solution.  We generally write native apps for each platform without translators, although we have some shared libraries we generally use.  This can be more expensive sometimes, but in the end the reduced number of issues and the app capability is vastly better being native.  We have used xamarin a few times, but honestly we find a lot of times a hybrid application (like LinkedIn or Facebook) works better from our experience -- e.g. Native app with web services and html served from the server.",2014-12-19 18:04:18,8773456
1368,What&#x27;s the difference between this and Xamarin?,2014-12-22 17:46:49,8784092
1369,"This is a more full-stack approach - Qt and Xamarin are geared more towards creating standalone apps. What you get here is the reactive back-end (plus web-site for free). This setup can be used for both data and UI - you could for example publish a new UI (not just content), and all native apps would automatically be updated on the fly.
If you take a look at the video - if you do this with Xamarin (or Qt) you would need to manually connect to a database or poll a RESTful service to see current data.",2014-12-22 17:58:01,8784170
1370,"It&#x27;s worth noting that if you wanted to create this kind of real-time app with a Xamarin frontend, you could do it quite easily with ASP.NET on the backend and SignalR.",2014-12-22 18:25:46,8784310
1371,"That&#x27;s certainly possible for the data part - but a lot harder for UI&#x2F;code. With the method I&#x27;m using, you can actually push code AND UI to the client on the fly. As far as I know, that&#x27;s a lot more difficult with Xamarin.<p>Also, the licensing is a lot more flexible than with Xamarin and Qt does provide support for more platforms.",2014-12-22 18:36:07,8784346
1372,"Yeah, but then it has also around 10K other features, most of which you don&#x27;t need. Most Java developers won&#x27;t be able to become Scala masters by 2018 anyway, if at all.<p>On the other hand C# has even better generics than this proposal, along with await, dynamic, yield. And it&#x27;s now supported by MS and Xamarin on all big platforms.",2014-12-29 22:42:10,8812227
1373,"There are definitely people using F# on Mono in production, but it is the smaller brother still.<p>Having said that, nearly all of the &quot;core&quot; projects are now being CI tested on mono as well as windows, and the fsharpbindings project provides autocompletion for Vim and Emacs (+ powers the MonoDevelop&#x2F;Xamarin Studio F# support as well).<p>I&#x27;m having great fun writing F# code in Linux with Vim - now that .fsx (F# script) files have proper #! support you can just write fsx files with full highlighting, error checking and autocompletion in place and then run them with supervisord.",2014-12-31 16:00:38,8819804
1374,"RateItNow - REMOTE - <a href=""http://rateitnow.com/new/"" rel=""nofollow"">http:&#x2F;&#x2F;rateitnow.com&#x2F;new&#x2F;</a><p>We&#x27;re a small new startup that has successfully raised funding and we&#x27;re looking for a mobile app developer and a back-end engineer. We all work remotely on the team - currently spread out in Australia, Singapore, and Poland. We have close ties to Microsoft (via mgmt) and are leveraging the MS stack heavily on the back-end (ASP.Net, Azure, etc.)<p>We&#x27;re looking for:<p>1) Windows Phone, Android&#x2F;iOS (Xamarin) Developer<p>We are presently working on a Windows Phone application to be deployed in a B2B type environment with consumer-facing iOS, Android, and Windows Phone applications to also be developed. We have standardized on C# and Xamarin for the app development.<p>Ideally you will have a demonstrated experience using .NET&#x2F;C# and Xamarin for mobile app development, but developers with only native iOS and Android development experience will also be considered. Specific experience developing for Windows Phone is nice to have, but not necessary.<p>2) Back-end ASP.Net Engineer<p>You must have a strong demonstrable experience with ASP.NET Web Api, ADO.Net, MS SQL Server and be comfortable with handling devops type work within Azure (deployment, management, scaling). Your role will be to build out a fast, secure back-end and APIs in support of consumer-facing apps &amp; website.<p>For both roles prior experience working remotely is a plus. Above all though, we&#x27;re looking for smart people with a can do attitude.<p>Contact me at neil@rateitnow.com",2015-01-01 15:28:01,8823161
1375,"SEEKING WORK - REMOTE - Freelance Android and iOS, Portland Oregon<p>We have experience with creating MVPs, full apps, enhancements, testing and maintenance&#x2F;bug fixing.<p>About us: We are a small freelance shop, with over 20 years industry experience from design, development, architecture, QA and product support.<p>We have experience with:<p><pre><code>  * App Design&#x2F;User Experience

  * Cross platform

  * Java

  * Objective-C

  * C#&#x2F;Xamarin

  * Parse.com

</code></pre>
Portfolio:<p>Garage 529 Android - Anti bike theft registration app. <a href=""https://play.google.com/store/apps/details?id=com.project529.garage.production&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.project529...</a><p>Nike + Running - Nike&#x27;s premier running application. <a href=""https://play.google.com/store/apps/details?id=com.nike.plusgps&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.nike.plusg...</a><p>Nike + Vertical -- Mobile&#x2F;Google Glass prototype for hands-free help with rock-climbing.<p>Economist Pocket World in Figures iOS App  <a href=""https://itunes.apple.com/us/app/economist-world-in-figures/id438709514?mt=8"" rel=""nofollow"">https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;economist-world-in-figures&#x2F;i...</a><p>Caller Dashboard  (Android Tablet, Android Phone, Ultrabook) link: <a href=""http://www.thugdesign.com/projects"" rel=""nofollow"">http:&#x2F;&#x2F;www.thugdesign.com&#x2F;projects</a><p>Vapp (Veteran&#x27;s Application) Android  <a href=""https://play.google.com/store/apps/details?id=com.omf.vapp"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.omf.vapp</a><p>Ease into 5K Android  <a href=""https://play.google.com/store/apps/details?id=com.runhelper.c25k&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a><p>Bridge to 10K Android  <a href=""https://play.google.com/store/apps/details?id=com.runhelper.b210k&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a><p>Ease into 10K Android  <a href=""https://play.google.com/store/apps/details?id=com.runhelper.ei10k&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a><p>Walk There iOS App  Live walking tour application. Article: <a href=""http://blog.oregonlive.com/my-portland/2011/09/metro_and_kaiser_permanente_launch_free_walk_there_iphone_app.html"" rel=""nofollow"">http:&#x2F;&#x2F;blog.oregonlive.com&#x2F;my-portland&#x2F;2011&#x2F;09&#x2F;metro_and_kai...</a><p>email at curtis [at] saltydogtechnology dot com",2015-01-06 21:36:51,8847295
1376,"pre&#x2F;post conditions can be handled via <a href=""https://github.com/ghuntley/conditions"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;ghuntley&#x2F;conditions</a> or via code contracts. Conditions runs on all platforms (mono&#x2F;windows&#x2F;xamarin mobile) and does runtime inspection vs Code Contracts which unfortunately runs only on Windows but does have the added advantage of being able to specify behaviour on interfaces and validation being performed at compile time. There was a project w&#x2F;GSOC back in 2010 that tried to bring Code Contracts across <a href=""http://monocodecontracts.blogspot.com.au/"" rel=""nofollow"">http:&#x2F;&#x2F;monocodecontracts.blogspot.com.au&#x2F;</a>  which got merged w&#x2F; Mono 3.0 but the corresponding tooling in MonoDevelop is missing so it is useless. See <a href=""http://www.mono-project.com/docs/about-mono/compatibility/"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;docs&#x2F;about-mono&#x2F;compatibility&#x2F;</a> for more information and please bump this  ticket <a href=""https://bugzilla.xamarin.com/show_bug.cgi?id=8400"" rel=""nofollow"">https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=8400</a> in support.",2015-01-11 22:09:05,8871531
1377,"Yeah, unfortunately the discussion was around getting people to program so they had something to show others. Not getting your application out there to as many people as possible. Sounds like a kneejerk defense of your chosen platform than honest contribution to me.<p>Not that you&#x27;ve proven this new point either.
At $99 per student for impact.js just to learn on, I think the only thing undoubted is that you&#x27;re desperately grasping for straws.<p>Paid software compared to Python&#x27;s ecosystem that provides something better for free. Along with more varied libraries, and a better language too. Maybe as a teacher you could buy just one copy and pop the hood and show them that source code on how this is built.. oh wait, <i>it&#x27;s not open source.</i> 
Also the slight snag that impact.js doesn&#x27;t have support for Android. Which happens to be the <i>largest mobile platform in the world.</i> For only $99.99! You may as well have sent me Xamarin to compare with Kivy and tell me how C# was the way to go.<p>Use what you want to teach with. But using these harebrained reasons concocted as to why you&#x27;d want to push something like JS over a PL of Python&#x27;s caliber make no sense at all.",2015-01-21 09:22:49,8922236
1378,"It&#x27;s not just the browser, people often want to create mobile apps today and there is no standard language that works for all platforms (you can try C# with Xamarin but it is not the native choice of all the platforms). And there is not always good, still developed, standardized UI libraries for every language. Many people starting with programming want to see something on the screen and then you need this. And there is usually some people who wan&#x27;t to develop serverside web code which should be supported by the same language.
If Xamarin was open source or free I think it with C# would be a great way to start programming. For now Javascript works.",2015-01-22 09:50:44,8928360
1379,"re: if open source<p>Free for open source () =&gt; <a href=""http://resources.xamarin.com/open-source-contributor.html"" rel=""nofollow"">http:&#x2F;&#x2F;resources.xamarin.com&#x2F;open-source-contributor.html</a><p>re: if free<p>Free for students () =&gt; <a href=""https://xamarin.com/student"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;student</a><p>re: if cheaper<p>So $25&#x2F;month is too much for capability to ship on all three mobile platforms - native development - using a shared codebase written in one of the nicest languages (F#&#x2F;C#) in existence? If you&#x27;re a startup w&#x2F; at least three people in your team just send them a email to work something your in your favour.",2015-01-22 10:03:24,8928388
1380,"Xamarin is a good option. You can also write your logic &amp; rendering code in C++, which you should be able to share across those platforms.",2015-01-26 01:21:35,8945078
1381,"I have implemented application for clients using xamarin and have been pleased.  Portions of the code can truly be written once, compiled once and bundled into iOS or Android, using portable class libraries. Xamarin can call into native code on either platform, as well as has support for opengl.<p>That said, I don&#x27;t think you could write cross platform opengl code unless there was an abstraction. However, there is a framework called monogame, which depending on what you&#x27;re trying to do, may be useful. See <a href=""http://www.monogame.net/showcase/"" rel=""nofollow"">http:&#x2F;&#x2F;www.monogame.net&#x2F;showcase&#x2F;</a><p>I keep a lot of business logic and networking code in shared modules, then have the UI be very thin. These shared pieces can be tested on a desktop system. The biggest negative about Xamarin is it feels like they push some things out the door too soon, without sufficient quality or documentation.<p>If you have any questions, feel free to shoot me an email at curtis [at] saltydogtechnology [dot] com.",2015-01-26 04:40:27,8945547
1382,"Thanks for the response, we&#x27;ll start investigating Xamarin.",2015-01-26 17:13:51,8948140
1383,"You&#x27;re right, my arguments don&#x27;t apply to all kind of businesses. The same is correct for Xamarin for example. But if you take JetBrains  no one cares how WebStorm or ReSharper are built internally, as long as they do the job.",2015-01-27 20:19:11,8955513
1384,since you&#x27;re a .Net developer you should take a look at Xamarin,2015-01-28 13:51:33,8959765
1385,Thanks.<p>Xamarin is way behind ios native dev platform and it have issues.,2015-01-28 16:34:59,8960814
1386,"Does it run using JavaScriptCore? Can we implement something like Hot Module Replacement a la react-hot-loader[1] for it?<p>I dreaded my Xamarin build times..<p>[1]: <a href=""http://gaearon.github.io/react-hot-loader/"" rel=""nofollow"">http:&#x2F;&#x2F;gaearon.github.io&#x2F;react-hot-loader&#x2F;</a>",2015-01-28 19:35:26,8961983
1387,"C# via Mono using Xamarin tooling is realistic.<p><a href=""https://xamarin.com/platform"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;platform</a>",2015-01-28 19:56:28,8962144
1388,"This looks like a good suggestion, but I&#x27;m planning to make parts of this free software and it looks like the Xamarin platform is not.",2015-01-28 20:17:17,8962303
1389,"The Xamarin tooling isn&#x27;t all free, but Miguel de Icaza [1] is a major figure in open source. I&#x27;d be surprised if any Xamarin product necessitates closed source.<p>Even if it did, helping to put food on his table would benefit the open source community. There aren&#x27;t many people about whom that can be said with less doubt.<p><a href=""https://en.m.wikipedia.org/wiki/Miguel_de_Icaza"" rel=""nofollow"">https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Miguel_de_Icaza</a>",2015-01-28 21:29:49,8962661
1390,"The free version of the Xamarin tools seem to have limited app size and doesn&#x27;t include their UI integration (Xamarin.Forms):<p><a href=""https://store.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a>",2015-01-28 21:39:36,8962708
1391,$25 for Indie which includes Xamarin.Forms,2015-01-28 21:45:48,8962745
1392,"Microsoft .NET is MIT:<p><a href=""https://github.com/Microsoft/dotnet/blob/master/LICENSE"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;dotnet&#x2F;blob&#x2F;master&#x2F;LICENSE</a><p>Xamarin&#x2F;Mono is LGPLv2:<p><a href=""http://xamarin.com/licensing"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;licensing</a><p>Purchasing a Xamarin license removes the LGPLv2 restrictions. If you have a established open source project then you can apply for free Xamarin licenses @ <a href=""http://resources.xamarin.com/open-source-contributor.html"" rel=""nofollow"">http:&#x2F;&#x2F;resources.xamarin.com&#x2F;open-source-contributor.html</a>",2015-01-28 21:55:40,8962804
1393,"When you say .NET runs on all operating systems, are you referring to Xamarin? If not, I&#x27;d be very curious what else is out there.",2015-01-29 05:08:22,8964458
1394,"TL;DR to below: focusing on JS instead of Xaml seems like a smarter play for a .NET developer that hasn&#x27;t used Xaml in WPF or SL previously.<p>I put &quot;web oriented .NET developer&quot; in my response for this specific type of question. I kind of defaulted (11 years ago) into ASP classic and ASP.NET as a result of ad hoc consulting&#x2F;support work for MS technologies back in 2000. But despite my affection for C# I abandoned ASP.NET&#x27;s faux desktop event driven emulation for MVC as soon as it was released. Ever since then I felt sort of stuck in between thinking of myself as a Web Developer vs thinking of myself as a .NET Developer.<p>Which brings my long winded response back to your original question about WPF and data binding. WPF and Xaml are pretty foreign to me (I still have no idea about how WPF&#x2F;SL&#x2F;WinRT Xaml differ it all seems like Xaml to me) despite a long history with C#. But I am interested in native app development, so I have been torn on whether to go all in with C# knowing I could take it cross platform with Xamarin but need to reorient myself into the Xaml world or go all in with HTML5 knowing Cordova could be &quot;mostly good enough&quot;.<p>I&#x27;m a Microsoft fan (I actually enjoy my Surface RT and Windows Phone) so WinJS on Windows 8 seemed like a good hedge for not throwing away all my JS knowledge (which is becoming a predominant part of my work with SPAs) but still letting me go fully native. But the overall Windows dev community seems to have spoken, Xaml is it and WinJS is a pariah, MS doesn&#x27;t help much by staying mum on the matter but I think they are trying to shove WinJS into the Cordova camp and double down on Xaml for Win 10 with WinJS eventually fading away.",2015-01-29 05:32:12,8964509
1395,"I&#x27;m referring to Mono; Xamarin = targeting of iOS&#x2F;Android via commercial license.<p>.NET is now licensed under MIT and is being developed out in the open by Microsoft on GitHub.  vNext (5.0) is being concurrently developed&#x2F;tested on linux (mono), osx (mono) and windows. <a href=""https://github.com/aspnet/home"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;aspnet&#x2F;home</a> which also means the platform is being unshackled from IIS via project OWIN (<a href=""http://whereslou.com/2014/06/10/asp-net-vnext-moving-parts-owin/"" rel=""nofollow"">http:&#x2F;&#x2F;whereslou.com&#x2F;2014&#x2F;06&#x2F;10&#x2F;asp-net-vnext-moving-parts-o...</a>) and the SDK is no longer a system wide installation, instead it ships with your application (<a href=""https://github.com/aspnet/XRE"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;aspnet&#x2F;XRE</a>) which enables .NET to be dockerized. Visual Studio is no longer required (it&#x27;s preferred) but there are other options -&gt; <a href=""http://www.omnisharp.net/"" rel=""nofollow"">http:&#x2F;&#x2F;www.omnisharp.net&#x2F;</a><p>Check out <a href=""http://www.hanselman.com/blog/IntroducingASPNETVNext.aspx"" rel=""nofollow"">http:&#x2F;&#x2F;www.hanselman.com&#x2F;blog&#x2F;IntroducingASPNETVNext.aspx</a> for a overview.",2015-01-29 07:43:39,8964845
1396,"Imagine a simple iPhone application which has the following components:<p><pre><code>        &#x2F;&#x2F; a text box in which the user types what they are searching for.
	&#x2F;&#x2F; a submit button on which the user can optionally press to initiate the search.
	&#x2F;&#x2F; a List&lt;T&gt; of search results
	&#x2F;&#x2F; a service that takes the search query and executes the search.
</code></pre>
This is how you can implement the above in a FRP manner:<p><pre><code>        public class SearchViewModel : ISearchViewModel
	{
	    public ReactiveList&lt;SearchResults&gt; SearchResults { get; set; }

	    private string searchQuery;
	    public string SearchQuery {
	        get { return searchQuery; }
	        set { this.RaiseAndSetIfChanged(ref searchQuery, value); }
	 
	    }
	 
	    public ReactiveCommand&lt;List&lt;SearchResults&gt;&gt; Search { get; set; }
	 
	    public ISearchService SearchService { get; set; }
	}


	public SearchViewModel(ISearchService searchService = null) : ReactiveObject, IRoutableViewHost
	{
	    SearchService = searchService ?? Locator.Current.GetService&lt;ISearchService&gt;();
	 
	    &#x2F;&#x2F; Here we&#x27;re describing here, in a *declarative way*, the conditions in
	    &#x2F;&#x2F; which the Search command is enabled.  Now our Command IsEnabled is
	    &#x2F;&#x2F; perfectly efficient, because we&#x27;re only updating the UI in the scenario
	    &#x2F;&#x2F; when it should change.
	    var canSearch = this.WhenAny(x =&gt; x.SearchQuery, x =&gt; !String.IsNullOrWhiteSpace(x.Value));
	 
	    &#x2F;&#x2F; ReactiveCommand has built-in support for background operations and
	    &#x2F;&#x2F; guarantees that this block will only run exactly once at a time, and
	    &#x2F;&#x2F; that the CanExecute will auto-disable and that property IsExecuting will
	    &#x2F;&#x2F; be set according whilst it is running.
	    Search = ReactiveCommand.CreateAsyncTask(canSearch, async _ =&gt; {
	        return await searchService.Search(this.SearchQuery);
	    });
	 
	    &#x2F;&#x2F; ReactiveCommands are themselves IObservables, whose value are the results
	    &#x2F;&#x2F; from the async method, guaranteed to arrive on the UI thread. We&#x27;re going
	    &#x2F;&#x2F; to take the list of search results that the background operation loaded, 
	    &#x2F;&#x2F; and them into our SearchResults.
	    Search.Subscribe(results =&gt; {
	        SearchResults.Clear();
	        SearchResults.AddRange(results);
	    });
	 
	    &#x2F;&#x2F; ThrownExceptions is any exception thrown from the CreateAsyncTask piped
	    &#x2F;&#x2F; to this Observable. Subscribing to this allows you to handle errors on
	    &#x2F;&#x2F; the UI thread. 
	    Search.ThrownExceptions
	        .Subscribe(ex =&gt; {
	            UserError.Throw(&quot;Potential Network Connectivity Error&quot;, ex);
	        });
	 
	    &#x2F;&#x2F; Whenever the Search query changes, we&#x27;re going to wait for one second
	    &#x2F;&#x2F; of &quot;dead airtime&quot;, then automatically invoke the subscribe command.
	    this.WhenAnyValue(x =&gt; x.SearchQuery)
	        .Throttle(TimeSpan.FromSeconds(1), RxApp.MainThreadScheduler)
	        .InvokeCommand(this, x =&gt; x.Search);
	}
</code></pre>
If the above sounds compelling then check out <a href=""http://reactiveui.net/"" rel=""nofollow"">http:&#x2F;&#x2F;reactiveui.net&#x2F;</a> which uses the Reactive Extensions for .NET to create elegant, testable User Interfaces that run on any mobile or desktop platform. Supports Xamarin.iOS, Xamarin.Android, Xamarin.Mac, WPF, Windows Forms, Windows Phone 8, Windows Store apps.<p>If you want to learn more about FRP then I suggest the academic paper &quot;Out of the Tar Pit&quot; by Ben Moseley &amp; Peter Marks @ <a href=""https://raw.githubusercontent.com/papers-we-love/papers-we-love/master/design/out-of-the-tar-pit.pdf"" rel=""nofollow"">https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;papers-we-love&#x2F;papers-we-l...</a> then make your way back to the origin of FRP - <a href=""http://elm-lang.org/learn/What-is-FRP.elm"" rel=""nofollow"">http:&#x2F;&#x2F;elm-lang.org&#x2F;learn&#x2F;What-is-FRP.elm</a><p>As for a good example of a backend designed around Event Streams&#x2F;Reactive Extensions then check out <a href=""https://github.com/AdaptiveConsulting/ReactiveTrader"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;AdaptiveConsulting&#x2F;ReactiveTrader</a>",2015-01-29 20:17:13,8968580
1397,"I have used all three languages professionallyHaskell &amp; some OCaml at Facebook, and some F# at Xamarinand would recommend learning Haskell.<p>Theres a strong community around Haskell, with a decent library ecosystem and high-quality implementations, and learning it will make it easy to pick up F# or OCamlthe reverse is not necessarily true.<p>F# is a decent choice if you want to write functional code in .NET land, but Visual Studio and MonoDevelop support for F# arent as good as for C#.<p>OCaml is a good language, but I would recommend against it. Like F#, it has some syntactic and semantic conveniences that Haskell lacks. However, the community is small, there are relatively few libraries, and the runtime falls down when you need to do anything with large arrays or floating-point math.",2015-01-30 02:57:33,8970246
1398,"React Native is a cool project, but the deafening hype is slightly puzzling.<p>Creating and calling native UI components from JavaScript is nothing special in itself. It&#x27;s obviously possible to do it from JS just as well as from any other language -- you just need to provide the API. There you have two choices: either a bridge that translates the native API directly, or a wrapper class hierarchy.<p>Examples of bridges include Xamarin&#x27;s Mono that lets you build iOS user interfaces in C# code, and RubyMotion that lets you build Mac UIs in Ruby. Because these are bridges, the entire Cocoa API is exposed. The downside is that the bridge does nothing to smooth over platform differences: you can write in C# on all platforms, but you still have to learn Cocoa.<p>A prominent example of a wrapper API is Titanium Appcelerator that lets you build cross-platform mobile apps. Another good example is GTK+ for desktop apps: it&#x27;s smart enough to leverage native Windows components where possible, but the GTK+ API is higher level than that of native Win32.<p>React Native is primarily in the latter category. Based on jordwalke&#x27;s comment in another HN thread, they currently have cross-platform wrappers for View and Image:<p><a href=""https://news.ycombinator.com/item?id=8965044"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=8965044</a><p>But it appears you can also create platform-specific views, and for that they presumably have some kind of bridge. (It could also be that they provide manually written wrappers for platform-specific views, e.g. UIMapView becomes a &lt;Map&gt; and so on.)<p>In sum: React Native doesn&#x27;t magically translate your JS+HTML app into a cross-platform native app. They&#x27;re a long way off from having a full cross-platform API (unless your app is so simple that it can be described in terms of &lt;View&gt; and &lt;Image&gt;). And, like all wrapper APIs, there is a degree of impedance mismatch between the underlying platform implementation and the cross-platform interface on top.<p>There&#x27;s a lot to like about React Native, though. The layout model and binding logic seems cool. The React team&#x27;s accomplishments in the browser environment are impressive. With time, React Native could become for mobile what Qt is on the desktop -- and that&#x27;s high praise in my books.",2015-01-30 08:54:55,8971107
1399,It doesn&#x27;t seem like they&#x27;re trying to help you write a cross platform app that shares the majority of its codebase like Xamarin.  I think they&#x27;re trying to make it so React&#x27;s data flow model is the only one you&#x27;ll need to be good at and it will increase your productivity no matter what platform you&#x27;re working on.,2015-01-30 09:03:22,8971132
1400,"Did you watch the video? They&#x27;re taking a genuinely new approach here. It&#x27;s not &quot;lowest common denominator&quot; like Xamarin, Qt, etc, and it&#x27;s also not a WebView like Atom or Ionic (Cordova).<p>It&#x27;s actual native components, with the intent that you &quot;learn once, write everywhere&quot; rather than try to jam iOS and Android into the same codebase.",2015-01-30 09:43:29,8971234
1401,"To be fair, Xamarin isn&#x27;t &quot;lowest common denominator&quot; either.<p>It&#x27;s all native and even with xplat Xamarin.Forms you can customize code for each platform.",2015-01-30 12:38:09,8971701
1402,"SEEKING WORK - The Netherlands or Remote.<p>I&#x27;m an experienced full-stack software developer, team lead and interim CTO.<p>Keyword soup: C#&#x2F;.NET, JavaScript, TypeScript, ReactJS, Java, Scala, C++ and Python, Elixir (Erlang VM), Xamarin, PhoneGap&#x2F;Cordova.<p><i>As an engineer</i>, I specialize in ReactJS based projects and CQRS backends. I&#x27;ve been the lead engineer and architect for three React-based projects up until now, including <a href=""http://www.izooble.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.izooble.com</a>, if you&#x27;d like a sizeable showcase.<p>React does not dictate your frontend software architecture. Depending on your needs and your team&#x27;s existing skills, very different architectures may be best. I can help you figure this out so that we&#x27;re productive very fast but still produce good and maintainable code from the get-go.<p><i>As a team lead</i>, I specialize in cutting away the nonsense and getting a team highly productive in startup-like environments. I accomplish this with a lightweight, non-religious, and highly reflective agile process, together with a pragmatic focus on internal software quality. This focus ensures that the team is productive today and also next month.<p>Contact info on <a href=""http://superset.eu"" rel=""nofollow"">http:&#x2F;&#x2F;superset.eu</a>.",2015-02-01 16:20:57,8980442
1403,"SEEKING WORK - Remote (PA, USA)<p>Web application developer with 10+ years experience, 5 as a freelancer. I&#x27;ve worked on everything from 911 dispatching systems to custom built CMSs to scheduling applications.<p>I primarly work with Angular.js, Bootstrap, &amp; jQuery on the front end and C# on the backend - Asp.net (Web Forms, MVC, &amp; Web API), LINQ, Entity Framework, &amp; MS Sql Server. I&#x27;ve done iOS development using Monotouch&#x2F;Xamarin for an interal customer &amp; order mangement system used by a salesforce of 500 people. I get up to speed on new tech very quickly and have been known to dabble in python, cobol, perl, and node.js.<p>I can code your brand new project on my own as a full stack developer or agument your existing team. If you are a small business who lacks a full time development staff, I can add new features or do maintenance on your existing applications.<p>contact: ikpcode at gmail",2015-02-01 16:45:30,8980579
1404,"SEEKING WORK - REMOTE - Freelance Android, iOS, C#, .NET, WPF Fairfax, Virginia<p>I have experience with creating MVPs, full apps, enhancements, testing and maintenance&#x2F;bug fixing.<p>About me: I am a single developer, but have the ability to grow the team quickly with people within my network.  I have 12 years experience with programming and can start work today.<p>I have experience with:<p><pre><code>  * App Design&#x2F;User Experience

  * Cross platform

  * Java

  * Objective-C

  * C#&#x2F;Xamarin&#x2F;.NET

  * Android, WP, iOS
</code></pre>
Portfolio:
Roller Derby Nation: Team Management for roller derby <a href=""https://rdnation.com/"" rel=""nofollow"">https:&#x2F;&#x2F;rdnation.com&#x2F;</a><p>Windows Phone App for RDNation: <a href=""http://www.windowsphone.com/en-us/store/app/rdnation/dc5d0302-9d21-4c6d-b9f9-98b555a0e81a"" rel=""nofollow"">http:&#x2F;&#x2F;www.windowsphone.com&#x2F;en-us&#x2F;store&#x2F;app&#x2F;rdnation&#x2F;dc5d030...</a><p>Android Penalty Timer for Roller Derby: <a href=""http://www.windowsphone.com/en-us/store/app/rdnation/dc5d0302-9d21-4c6d-b9f9-98b555a0e81a"" rel=""nofollow"">http:&#x2F;&#x2F;www.windowsphone.com&#x2F;en-us&#x2F;store&#x2F;app&#x2F;rdnation&#x2F;dc5d030...</a><p>Android App for RDNation: <a href=""https://play.google.com/store/apps/details?id=com.RDNation.Droid"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.RDNation.D...</a><p>WPF Scoreboard App for Roller Derby: <a href=""https://rdnation.com/roller-derby-scoreboard"" rel=""nofollow"">https:&#x2F;&#x2F;rdnation.com&#x2F;roller-derby-scoreboard</a><p>Swinton Report: News Aggregation for the US.  <a href=""http://swintonreport.com/"" rel=""nofollow"">http:&#x2F;&#x2F;swintonreport.com&#x2F;</a><p>Lofty List: Lead Generation Service for businesses <a href=""http://loftylist.com/"" rel=""nofollow"">http:&#x2F;&#x2F;loftylist.com&#x2F;</a>",2015-02-01 16:52:02,8980613
1405,"Boston, MA - Xamarin - Full time onsite<p>Founded in May 2011, Xamarin is a fast-growing mobile startup with offices in San Francisco, Boston, London, rhus and Buenos Aires. We have almost 1 million developers and over 14,000 customers using Xamarin because we provide the best platform to create and test fully native mobile apps for iOS, Android, Mac and Windows.<p>Miguel and his talented engineering team in Boston are looking for:
Xamarin Studio Lead Software QA Engineer
<a href=""http://xamarin.com/jobs/oddnZfww"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;oddnZfww</a><p>Complete list of all Xamarin Opportunities (multiple locations):
<a href=""http://xamarin.com/jobs"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs</a><p>Interested to learn more, chat about what it&#x27;s like to work at Xamarin?  Email me:  paula@xamarin.com",2015-02-01 19:16:06,8981228
1406,"Parts of Mono are GPLv2, maybe they want Mono (and thus Xamarin) to have the freedom to use as much of this as possible.",2015-02-03 18:34:06,8992213
1407,Probably the most immediate winner is Unity. They&#x27;ve been stuck on an ancient version of Mono because they did not want to license tech from Xamarin. They can now have MS derived runtimes free.,2015-02-03 19:17:15,8992569
1408,"if you can attach and debug a process through sublime text, then maybe.<p>as it stands there is no real replacement for visual studio (save maybe xamarin studio &#x2F; mono develop)",2015-02-03 19:29:37,8992674
1409,"I agree. Xamarin guys have done a great job at delivering cross platform UI, making C# first class on most platform, but their API&#x27;s still lag behind .Net official framework and are stuck to the .Net 4.0 era.",2015-02-04 06:00:12,8995541
1410,Is Microsoft actually putting resources on a Mono replacement for Linux and Mac? My understanding is it&#x27;s still Mono for non-Windows which has had very limited success. Xamarin is mostly concerned with mobile.,2015-02-04 17:37:09,8998209
1411,"I agree 100%.  This completely defeats the point of web technologies - you must as well write C# and use Xamarin.<p>I don&#x27;t want to learn yet another HTML-type spec plus a CSS fork.  The whole point was to use <i>web</i> technologies: JS + HTML + CSS to develop mobile and web apps that <i>look the same</i>.  WebViews are finally improving to the point where great PhoneGap apps can be written.  Instead of improving PhoneGap and web technologies further we&#x27;ll end up with the equivalent of Python + wxWidgets, and we all know how that turned out for the desktop = the lowest common denominator.  The mismatch between declarative React UI and imperative native components is gonna bite you in the ass sooner or later.  It&#x27;s completely different to HTML which is declarative to begin with.<p>Whats the deal with native looking apps?  Why are devs so desperate to make apps look native?  The great thing about the web is that all web apps look different, they have their own branding and UI flow and there&#x27;s nothing wrong with that.  Look at the best mobile apps: Uber, Airbnb - they dont look native, and they try to look the same on all platforms.  I thought that was the future of the web.  Because if it isn&#x27;t, I might as well learn Swift.",2015-02-04 18:03:20,8998405
1412,"Nice to know about it.<p>Sadly Oracle seems more keen in pushing the brain dead idea of Oracle Mobile Application Framework[0].<p>Regardless of the Google vs Oracle situation on Android, they could provide JIT and AOT compilers for the remaining mobile platforms, instead of leaving it in the hands of third parties.<p>I have turned to Qt&#x2F;C++ and Xamarin for my hobby mobile development as cause of that.<p>[0]<a href=""http://www.oracle.com/technetwork/developer-tools/maf/overview/index.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.oracle.com&#x2F;technetwork&#x2F;developer-tools&#x2F;maf&#x2F;overvi...</a>",2015-02-04 18:18:26,8998526
1413,"I&#x27;m sold on the concept. I especially like the fact that you&#x27;re using ARC on iOS; my intuition is that this would interact better with the platform and native development tools than something like Xamarin which requires GC.<p>Do you have a way of doing local storage, i.e. to the file system or a database, in cross-platform code? Or does that have to be platform-specific? How about making HTTP&#x2F;HTTPS requests?",2015-02-04 19:05:49,8998899
1414,I wonder if they considered Xamarin?,2015-02-04 22:08:17,9000305
1415,"Google doesn&#x27;t write a lot of C# code, but they do write a lot of Java.  This is a case where they looked at Xamarin and said &quot;we want that&quot; and built their own, only for Java.<p>Another big language at Google is C++, which also has a cool cross-platform client story.  Emscripten for web, Android NDK, iOS can use C++ libraries directly.",2015-02-04 22:36:05,9000487
1416,"We&#x27;ve been using a similar approach for libGDX [1] with great success for the past 3 years. HotSpot on Windows&#x2F;Linux&#x2F;Mac OS X, Dalvik on Android, RoboVM [2] on iOS and GWT on the web. We had to add quite a bit of functionality to GWT to make things work, like (very hacky) reflection. You can now share 100% of your code across all these platforms with minor restrictions due to GWT (threads, missing JRE classes&#x2F;packages). Without the web, all platforms work pretty much the same. Many smaller and bigger studios have used this approach quite successfully.<p>I wonder if the Google folks ever looked into RoboVM as a replacement for j2objc. It&#x27;s a full AOT compiler, sharing the class library with Android with access to all iOS APIs (think Xamarin for Java&#x2F;JVM languages). I tested j2objc when itmwas published as a potential way to get our libGDX stuff working on iOS, but it was extremely limited in its capabilities. Kinda reminded me of Oracle&#x27;s terrible ADF.<p>[1] <a href=""http://github.com/libgdx/libgdx"" rel=""nofollow"">http:&#x2F;&#x2F;github.com&#x2F;libgdx&#x2F;libgdx</a>
[2] <a href=""http://www.robovm.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.robovm.com</a>",2015-02-05 00:14:24,9000973
1417,Cross-platform work is pain enough without making it torture with Xamarin.,2015-02-05 02:09:57,9001371
1418,"At least one team at Google has used libGDX (on top of RoboVM): Ingress uses libGDX for their iOS and Android clients.<p>RoboVM is a very cool project.  We ended up on Xamarin for the cross-platform project we were working on here internally, but, had RoboVM been a little more mature when we were evaluating cross-platform projects (this was around April of last year), it would&#x27;ve most likely been our first choice instead (we have a lot more in-house Java expertise than C#).",2015-02-05 07:25:43,9002145
1419,"What about F#&#x2F;C#? <a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>",2015-02-05 10:38:20,9002571
1420,".NET!<p>C# - Project Orleans -&gt; <a href=""http://vimeo.com/113730934"" rel=""nofollow"">http:&#x2F;&#x2F;vimeo.com&#x2F;113730934</a><p>F# - Path to relaxation -&gt; <a href=""https://www.youtube.com/watch?v=s_iMgFAY0lk"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=s_iMgFAY0lk</a><p>Xamarin - iOS&#x2F;Android&#x2F;Windows Phone apps using F#&#x2F;C#  -&gt; <a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>",2015-02-05 10:47:43,9002605
1421,"San Francisco - Full-time @ Xamarin<p>Xamarin San Francisco is looking for a Technical Senior Product Manager for our newest product offering, Xamarin Test Cloud: <a href=""http://xamarin.com/jobs/o4qeZfwr"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;o4qeZfwr</a>.<p>We also have a number of other roles in SF, Boston, and the UK!  For a complete list go to: <a href=""http://xamarin.com/jobs"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs</a>.<p>If you&#x27;re interested in chatting to hear more about us or want to discuss opportunities, please feel free to email me: steph@xamarin.com.",2015-02-05 22:09:25,9006479
1422,"Sounds amazing... What are the challenges, limitations, and tradeoffs for using React Native?  There have been similar initial reviews of  Titanium, Phonegap, and Xamarin, but in my experience they all have serious issues that make native development a better option in most cases.",2015-02-06 16:56:01,9009889
1423,"I like Clojurescript in general, but the code bloat problems and runtime speed problems still exist even with advanced optimizations. The big problem is that you have to use code that is Closure-compatible. If it isn&#x27;t, there are hacks to make it work, but you end up killing the ability to remove dead code. And no matter what, you are going to end up shipping portions of the Clojure code as a runtime within the javascript runtime.<p>I have used cljs for non-mobile web interfaces, but the performance of Om in Phonegap on mobile hardware was terrible enough that I scrapped it for Xamarin.",2015-02-06 17:09:15,9009990
1424,"First, all ClojureScript code is Closure compatible, you don&#x27;t have to worry about that.<p>Secondly, Om in a Webview and Xamarin are not fair comparisons.",2015-02-06 17:17:03,9010048
1425,"Apple needs to buy this company in 3, 2, 1... This is an ideal start to countering the concepts from Xamarin out of the .net camp and I would love to see them build up some form of XAML-like UI tech and tooling for x-plat UI dev so you could push the envelope on code-reuse. That would take a big dump of capital.<p>It would also make for a push in the market for this style of x-plat dev. If you can get to the major and minor platforms with one code-base and a single-stack dev team, oh what a smooth world it could be.<p>Windows 10 on all devices, written in Swift to a universal in visual studio. Wonder if I&#x27;d get to see a macbook running windows with a dev writing swift in VS.",2015-02-09 04:16:26,9019707
1426,"Why not just write your app using F# w&#x2F;Xamarin. Target iOS, Android, Windows Phone using a decent functional language.",2015-02-09 04:39:24,9019758
1427,Used it plenty of times in the past and always been pleased with it&#x27;s ease of use both in server side situations as well as mobile. More recently we&#x27;ve also used it in xamarin.<p>Is it posted here because something new has happened?,2015-02-09 06:34:00,9019955
1428,&gt; without crazy licensing fees as with Mono<p>Are you confusing Mono for Xamarin?,2015-02-10 12:50:54,9026777
1429,"Xamarin For Android and iOS only have &quot;crazy&quot; licensing fees IF you want the professional editions... The Starter edition is free, and their Indie edition is $25 per month: <a href=""https://store.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a>.",2015-02-10 12:52:19,9026786
1430,"Mono is the framework (like .Net) and Xamarin is the tooling (like Visual Studio). Framework is free (essentially) and the tooling is like VS (starter is free, pro is not so free but has more tools)",2015-02-10 12:53:41,9026791
1431,"No - Mono has crazy licensing restrictions and massive licensing costs for statically linking their framework. Xamarin offer a better option, but there is no &quot;free&quot; alternative using C#, nor could you create one with the Mono framework. The CoreCLR does have the possibility to get around this as the code required for creating a solution is not licensed in the same way. Xamarin&#x27;s entire business model revolves around the fact that static linking is not allowed using the Mono Framework as a basis.",2015-02-10 13:02:06,9026823
1432,"I think their business model revolves more around selling their proprietary bridges from Mono to mobile platforms&#x27; native APIs (MonoTouch and MonoDroid, now marketed as Xamarin.iOS and Xamarin.Android).",2015-02-10 13:37:13,9026981
1433,Xamarin Studio is just a rebranded MonoDevelop with a few proprietary Xamarin supplements.,2015-02-10 15:27:02,9027643
1434,"For mobile forms-based applications, Xamarin.Forms looks pretty good: <a href=""http://xamarin.com/forms"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;forms</a><p>For cross-platform desktop applications, I&#x27;ve been keeping an eye on Perspex: <a href=""https://github.com/grokys/Perspex"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;grokys&#x2F;Perspex</a>",2015-02-10 17:38:26,9028600
1435,Mono has a lot of GPL code. Xamarin has a license to impart commercial licenses to their customers. So Xamarin customers are fine. Mono users will have to abide by the GPL&#x27;d bits.<p>Microsoft&#x27;s CoreCLR is MIT licensed. Nice. :-),2015-02-10 18:14:40,9028810
1436,Their enterprise distributions were very much centered around GNOME. Remember that this is when they still had Xamarin.,2015-02-11 06:57:17,9031837
1437,".NET&#x2F;C# implementation as a portable class library for server side and client (xamarin&#x2F;windows phone) @ <a href=""https://github.com/michael-wolfenden/Polly"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;michael-wolfenden&#x2F;Polly</a>",2015-02-14 07:48:00,9049062
1438,"mac:<p>brew install mono<p>run f# console&#x2F;repl:  fsharpi<p>compile files: fsharpc file.fs<p>Not sure about linux, but should be simple as well.<p>And as with Haskell and cabal, you have FAKE ( <a href=""http://fsharp.github.io/FAKE/"" rel=""nofollow"">http:&#x2F;&#x2F;fsharp.github.io&#x2F;FAKE&#x2F;</a> ) which isn&#x27;t exactly the same but similar<p>The main difference between those two answers is that for Haskell, the author pointed to generic Haskell resources while F# pointed to windows ones. I&#x27;ve been developing with F# for a while on the Mac and found no issues whatsoever. There is also MonoDevelop&#x2F;Xamarin if you want a more complete IDE which is better than anything I found for Haskell (but there maybe new stuff I&#x27;m missing, having messed with Haskell in a while) but SublimeText and Vim work fine.",2015-02-14 21:05:27,9050787
1439,"Some additional GUI toolkits with which 7GUIs could be implemented:<p>- UIKit with AutoLayout (iOS, Mac OS)<p>- JS&#x2F;HTML&#x2F;CSS with Flexbox and&#x2F;or React (web)<p>- XAML&#x2F;WPF (Windows 8, Windows Phone, Xamarin.Forms)",2015-02-15 01:43:00,9051494
1440,"So out of all the compile-to-javascript languages out there, elm is easily my favorite, despite not being usable outside the browser. This article is one illustration why it is so attractive: app architecture that is blindingly simple (its all just state machines under the cover, which is exactly what a UI is).<p>Now all we need is an elm that compiles to native code that somehow can do what React Native is doing for the native interface. I would easily pay 3-5x Xamarin&#x27;s prices to be able to do so. Who&#x27;s up for it?",2015-02-17 02:23:44,9060342
1441,"The problem with such a framework is that the native part is completely blackboxed. I would never consider to adopt an hybrid framework that does not provide access to code because of the concern that some corner cases, which I cannot anticipate, could not be covered properly. I wrote a board game application in which I mix 2d graphics with native UI views. In the end I chose C++ for the business logic + 2d part ( with cocos2d-x) and Java or Objective-c for the GUI part. While It has been sometimes awkward ( especially on Android ) I feel to have done the right choice at the time I started. I have been able to reause a lot of code and the tools and languages I have chosen are fully supported. If I had to start again  today I probably would consider Xamarin ( at the time it was too much expensive ) or something like RemObjects Silver.",2015-02-19 08:11:13,9072970
1442,"Perhaps you should also consider using C# (with Xamarin). With C# you will be able to use MonoGame (an implementation of XNA [0]) to create multiplatform games that run on iOS, Android and Windows Phone. You can find some intro tutorials on the internet [1]. Also the game Bastion [2] was written using XNA and ported to Mac OS X, iOS and other platforms with relative ease due to the existence of MonoGame. I think most (if not all) of the Bastion source code is available on-line, so you could use that to gain a better understanding of MonoGame.<p>Language-wise C# is very similar to Swift (at least in my humble opinion).<p>One word of warning though: XNA is officially dead [3], though that doesn&#x27;t necessarily mean that MonoGame is also dying.<p>---<p>[0] <a href=""http://en.wikipedia.org/wiki/Microsoft_XNA"" rel=""nofollow"">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Microsoft_XNA</a><p>[1] <a href=""https://www.youtube.com/playlist?list=PLHJE4y54mpC5hrlDv8yFHPfrSNhqFoA0h&amp;spfreload=10"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLHJE4y54mpC5hrlDv8yFH...</a><p>[2] <a href=""http://www.supergiantgames.com/games/bastion/"" rel=""nofollow"">http:&#x2F;&#x2F;www.supergiantgames.com&#x2F;games&#x2F;bastion&#x2F;</a><p>[3] <a href=""http://www.gamasutra.com/blogs/PedroGuida/20140114/208519/So_XNA_is_dead_now_what.php"" rel=""nofollow"">http:&#x2F;&#x2F;www.gamasutra.com&#x2F;blogs&#x2F;PedroGuida&#x2F;20140114&#x2F;208519&#x2F;So...</a>",2015-02-19 19:56:47,9076538
1443,"I think this discussion will be helpful for many of us:<p>Say you have to build a computationally simple, but highly polished app. Say an app like &quot;The Weather Channel&quot; app. And you want to keep your business logic consistent across platforms (iOS, Android, Web) over the multiple versions of the app. Otherwise, over time, the app starts behaving slightly differently on different platforms.<p>You can either use a cross platform development solution that supports iOS, Android and web. Or, you can use some other method to keep the business layer (which can be shared) separate from the visual layer. How would you go about doing so using today&#x27;s technologies? Would love to hear from those who&#x27;ve tried Xamarin, Unity, PhoneGap, React Native, Ruby Motion, etc.<p>Bonus question: How would you go about prototyping and designing such an app for the 10+ very different screen sizes?",2015-02-20 06:53:56,9079304
1444,"I use Xamarin for personal projects, and it&#x27;s been working quite well so far. They&#x27;re pretty good about exposing native UIs so you get native looking applications instead of the ugly (in my opinion) PhoneGap like apps. Plus, C# feels like it was made for mobile apps. However, there are downsides...trying to do anything that leverages many sensors on the device gets tricky, and they&#x27;re isn&#x27;t as much support available on StackOverflow and whatnot. I think it is the best cross platform app solution out now though.",2015-02-20 15:10:00,9080691
1445,Xamarin Studio.,2015-02-23 14:51:31,9094537
1446,"This looks great. I always enjoyed Visual Studio  but Monodevelop&#x2F;Xamarin Studio always feels a bit rickety to me. The key for me is refactoring and code intelligence which is briefly mentioned on the homepage, but can you shed any light on your plans in this area?<p>Also, a minor thing - what&#x27;s the typeface in the &quot;PROPORTIONAL FONTS&quot; screenshot?",2015-02-23 14:57:13,9094573
1447,Personally I&#x27;m not too fond of Xamarin Studio. I really hope Scrawl will be a good alternative for writing C#.,2015-02-23 16:10:34,9095026
1448,"Xamarin supports C# for Unreal with Mono:<p><a href=""http://mono-ue.github.io/"" rel=""nofollow"">http:&#x2F;&#x2F;mono-ue.github.io&#x2F;</a>",2015-02-24 22:58:57,9104150
1449,"&gt; I liked some of the generics handling better, it can be less verbose it seems.<p>It pays off in spades in a lot of situations, but the biggest I&#x27;ve noticed is Android development.  Hitting a network from a button press in Xamarin is as simple as:<p><pre><code>    button.OnClick += async
    {
       var data = HitTheNetworkForSomeData();
      
       &#x2F;&#x2F; Note that since this is still async,
       &#x2F;&#x2F; you may want to set a global or have a
       &#x2F;&#x2F; different approach to handling data than
       &#x2F;&#x2F; &quot;standard&quot; Android development.
       DoSomethingWithTheData(data);
    }
</code></pre>
In native Android, it usually looked like this:<p><pre><code>    button.SetOnClickListener(new OnClickListener() {
       new HitTheNetworkTask(this, this).execute()
    });

    @Override
    public void onNetworkTaskDataRecieved(String data) {
       doSomething(data);
    }

    public class HitTheNetworkTask extends AsyncTask&lt;Void, Void, String&gt; {
       Context mContext;
       NetworkDataTaskCallbacks mCallbacks;

       public HitTheNetworkTask(Context context, NetworkDataTaskCallbacks callbacks) {
          mContext = context;
          mCallBacks = callbacks;
       }

       @Override
       public String doInBackGround(Void... voids){ &#x2F;&#x2F; I&#x27;m not pulling your leg here
          return doTheNetworkTask();
       }

       @Override
       public void onPostExecute(String data) {
          callbacks.onNetworkTaskDataRecieved(data);
       }
    }
</code></pre>
It&#x27;s downright frustrating having to use Java once you&#x27;re used to C# and .NET.",2015-02-26 18:14:05,9114078
1450,"Any reasons I should switch to Java or other technologies?<p>What I get with the (much hated) Microsoft stack:<p>- C# with LINQ and async await<p>- Roslyn compiler as a service which speeds up development<p>- mature .NET framework<p>- more and more open source and cross platform parts and 
smaller independent libs<p>- typescript<p>- Xamarin cross platform tools<p>I also use python and used Java in the past. I don&#x27;t see any reason why Java should be better?",2015-02-26 23:38:45,9116323
1451,"Check out <a href=""https://github.com/paulcbetts/refit"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;paulcbetts&#x2F;refit</a> &amp;&amp; <a href=""https://github.com/akavache/Akavache"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;akavache&#x2F;Akavache</a> &amp;&amp; <a href=""https://github.com/michael-wolfenden/Polly"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;michael-wolfenden&#x2F;Polly</a><p>Then check out <a href=""http://arteksoftware.com/resilient-network-services-with-xamarin/"" rel=""nofollow"">http:&#x2F;&#x2F;arteksoftware.com&#x2F;resilient-network-services-with-xam...</a> for the pattern&#x2F;inspiration how to glue them together to obtain a x-platform resilient, performant and data caching network stack. Write once, enjoy on every platform.",2015-02-27 04:08:09,9117109
1452,"They are trying to get you to use Xamarin. See here: <a href=""https://twitter.com/masters3d/status/571785335702626304"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;masters3d&#x2F;status&#x2F;571785335702626304</a>",2015-02-28 23:37:30,9125471
1453,"Speaking as someone who loves C# and has tried Xamarin ... it ain&#x27;t ready for iOS yet.  A significant amount of iOS development is done in the Designer and Storyboard, and Xamarin falls well short.  The addition of needing to use a mac as a buildhost just makes it inconvenient.<p>I definitely see it improving in the future (I personally view Xamarin development as a better option for Android than standard Java), but it&#x27;s not something I would recommend for an actual workplace to use.",2015-03-01 01:15:11,9125665
1454,What issues do you have with Xamarin&#x27;s iOS Designer? I actually prefer it to Xcode&#x27;s.,2015-03-01 01:29:38,9125687
1455,"&gt; The addition of needing to use a mac as a buildhost just makes it inconvenient.<p>I agree it&#x27;s an inconvenience but I find after the initial setup it works quite well. My workflow is to have a Mac Mini under my desk, with a USB extension lead taped beside my keyboard. Then I plug my iPhone in and once I push F5 Visual Studio talks to the build host which talks to my iPhone and builds&#x2F;deploys&#x2F;starts debugging and everything &quot;just works&quot;.<p>The biggest impediment to being productive with Xamarin, in my opinion, is that every second release manages to break something.",2015-03-01 01:49:33,9125728
1456,What are your reasons for preferring Xamarin? I&#x27;ve been meaning to try it out but have not gotten around to it,2015-03-01 02:20:34,9125792
1457,"I would suggest that if you are loading up large storyboards in XCode, then you could be putting yourself in a bad position for a couple of reasons in iOS, let alone trying to make it all come back together using Xamarin.<p>Storyboards are a decent solutions for certain problems, but if your app ends up as one monolithic or a group of large storyboards, you are going to be structuring and defining things in ways that will have friction with some of your better practices in your C# code.<p>That&#x27;s not to say Xamarin &quot;should be a cakewalk, you&#x27;re doing it wrong.&quot; I found pain with dealing with the same area you describe -that back and forth with designs built heavily in storyboard. Not to mention, so many helpful posts on dealing with UI features and quirks seem handled or better handled in plain old NIBs + custom code, etc. Drag and drop layouts with D+D segues are nice, but when the client wants things &quot;just so&quot; I&#x27;d end up having to tear things out of the storyboard&#x2F;designer to get all the things moving and performing well.<p>The storyboard failed me with AND without Xamarin.",2015-03-01 02:50:11,9125846
1458,"They want people to develop their apps using C#&#x2F;Xamarin, because that greatly reduces the friction in developing Windows Apps.",2015-03-01 02:56:28,9125870
1459,"I have completely stopped using Storyboards and Xibs in my last few projects, two of which have been quite large. I find the code so much better for it. So I wouldn&#x27;t be put off Xamarin because of a lack of Interface Builder.<p>I am also really loving Swift when you can use it on its own (I.e., without relying on an older Obj-C based library). The strictness of the type system eliminates many runtime bugs.",2015-03-01 07:27:37,9126359
1460,Most customers would want a solution where code can be shared with ios&#x2F;android&#x2F;Mac&#x2F;PC. Xamarin allows that.,2015-03-01 09:31:37,9126528
1461,"I avoid storyboard, and interface builder.
 But my xamarin experience has been pretty impressive. They&#x27;ve mapped the APIs on to c# really well.",2015-03-01 09:33:32,9126530
1462,"I went to an &#x27;Azure Mobile DevCamp&#x27; event for iOS a couple of days ago. It was sponsored by Microsoft but run by someone otherwise unaffiliated who ran a mobile development shop coding in each platform&#x27;s native language.<p>The session was interactive&#x2F;follow along, the instructor led in swift and I decided to try following along using C#&#x2F;Xamarin iOS (disclosure: I use Xamarin.iOS daily and am a big fan of C#). On iOS I had worked for a couple of years in obj-c before moving to Xamarin, but hadn&#x27;t touched swift. Having read comparison articles similar to this, my otherwise uninformed opinion was that swift looked to provided a far more reasonable experience, similar to C# - to the point that I wondered whether it was worth paying the fee for Xamarin to avoid the archaic objective c language. However, there were a few things from the demo that changed my mind (some are apple ecosystem, some are swift):<p>- no first class support for package management, and adding references to to libraries by hand can still be error prone and frustrating. We spent 10 minutes getting the room set up with their cocoapods - lucky me I had NuGet and in a few clicks had the packages installed. 
- no `await`-style capability - it seems small but nested callbacks is not something I want to have to deal with anymore, and it makes certain patterns unwieldy. 
- no LINQ query provider style support - making a call to the azure mobile service with a filter and sort clauses required newing up awkward predicate and sort objects and attaching them to a query before running (which then, again, required a callback!). In C# you could use the same syntax you would use if the collection were local - `await table.Where(i=&gt; i.Name.Contains(&quot;Bob&quot;)).OrderBy(i=&gt; i.LastName).ToListAsync()` - and the clauses would be transparently translated into parameters for the service call. 
- Lots of &quot;crashes&quot; in the IDE while writing swift code, where the compiler would bomb out and syntax highlighting etc. would be disabled while it sorted itself out again.<p>Swift still seems to be a huge improvement over obj-c, and some of these will be improved as time goes by, but fundamental features like await make a big difference, especially working on mobile where you are often waiting on network calls, user activity etc. And that&#x27;s all before you even touch the topic of code sharing.",2015-03-01 09:40:02,9126543
1463,"I am not speaking against it, just how I can see it happening.<p>On my case, enterprise customers actually went with Cordova for mobile multi-platform. On the few projects I took part on.<p>For my hobby projects so far I went with C++, as they tend to be small multimedia stuff and I don&#x27;t feel like paying Xamarin for hobby projects I do with months interval and sometimes are left unfinished when life takes over.<p>So Native UI + C++ (now C++14) suits me better, although the NDK is a big pain to use and quite limited, but at least Windows Phone and iOS are nicer to use.<p>If I had to do it professionally on my own company, maybe Xamarin would be an option, specially since Qt seems to be way behind Xamarin in terms of device support.",2015-03-01 09:54:13,9126563
1464,"SEEKING WORK - The Netherlands or Remote.<p>I&#x27;m an experienced full-stack software developer, team lead and interim CTO. Currently bootstrapping CEO at <a href=""http://klets.co"" rel=""nofollow"">http:&#x2F;&#x2F;klets.co</a>, but I do occasionally have time to help people get their team or their stack up and running. Do get in touch!<p>Keyword soup: C#&#x2F;.NET, JavaScript, TypeScript, ReactJS, Flux, Java, Scala, C++ and Python, Elixir (Erlang VM), Xamarin, PhoneGap&#x2F;Cordova, PostgreSQL, Mono, DDD, Scrum, Kanban, Lean.<p><i>As an engineer</i>, I specialize in ReactJS based projects and CQRS backends. I&#x27;ve been the lead engineer and architect for three React-based projects up until now, including <a href=""http://www.izooble.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.izooble.com</a>, if you&#x27;d like a sizeable showcase.<p>React does not dictate your frontend software architecture. Depending on your needs and your team&#x27;s existing skills, very different architectures may be best. I can help you figure this out so that we&#x27;re productive very fast but still produce good and maintainable code from the get-go.<p><i>As a team lead</i>, I specialize in cutting away the nonsense and getting a team highly productive in startup-like environments. I accomplish this with a lightweight, non-religious, and highly reflective agile process, together with a pragmatic focus on internal software quality. This focus ensures that the team is productive today and also next month.<p>Contact info on <a href=""http://superset.eu"" rel=""nofollow"">http:&#x2F;&#x2F;superset.eu</a>.",2015-03-01 15:31:19,9127365
1465,"&gt; So use a component adapter, like polymer<p>I am yet to be on a project where the customer uses them on their stack.<p>&gt;So, you go build it, get it working at LEAST on Windows, OSX, Linux, Android and iOS<p>Qt, JavaFX, Xamarin Forms, any SDL based GUI",2015-03-02 06:41:33,9130622
1466,Actually Unity will be compiling C# to native code via IL2CPP to avoid paying royalties[0] for more recent Xamarin versions.<p>[0] At least that is how I read the whole situation,2015-03-02 17:39:30,9133132
1467,I wish Xamarin had a similar license...,2015-03-02 19:22:58,9133723
1468,I wish Xamarin had <i>any</i> license accessible to hobbyists.,2015-03-02 22:17:25,9134726
1469,"<i>To redistribute code written with Mono for Unreal Engine, you must have a commercial license to the Mono runtime. These licenses are available from Xamarin for Mac, Android and iOS online, and you can request Windows licenses through support.</i><p><a href=""https://mono-ue.github.io/about.html"" rel=""nofollow"">https:&#x2F;&#x2F;mono-ue.github.io&#x2F;about.html</a><p>If you want to code in C# it is the primary language for Unity, and a commercial third party unsupported add on for UE4.",2015-03-03 00:55:44,9135486
1470,"In case you are not aware, last fall they doubled the free edition size limit and introduced a $25&#x2F;month subscription option (eventually the same price at $300&#x2F;yr).<p><a href=""https://store.xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a><p>Xamarin is free for students.<p><a href=""https://xamarin.com/student"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;student</a>",2015-03-03 16:30:08,9138536
1471,"&gt; Qt, JavaFX, Xamarin Forms, any SDL based GUI<p>I don&#x27;t want to spend money on the side projects I&#x27;m just playing with, but it would be nice to have them cross-platform (including mobile). Do any of those options still apply? IIRC Xamarin is expensive and there&#x27;s no free way to run Java on iOS? All the SDL-based GUIs I&#x27;ve seen have looked awful.<p>Qt would be lovely - what does using it from Android Java look like? I remember messing with the Qt Java bindings a while ago and finding them a bit ropey.",2015-03-03 16:48:35,9138690
1472,"Xamarin, we&#x27;re looking at you... :)",2015-03-03 18:05:14,9139334
1473,"How they measure the size actually?<p>Another important thing - Xamarin.Forms should be in the free edition, if it is aimed for starters.... Big studios or established companies can afford to develop native UIs for each platform separately.",2015-03-03 18:23:47,9139522
1474,Is it Xamarin asking too much or Unity not wanting to pay and leech on what they got from Novel?,2015-03-03 18:25:02,9139529
1475,Can you use Unity to make regular (non-game) apps like you would with Xamarin?,2015-03-03 20:28:21,9140482
1476,Because I would like to do cross platform C# development (using Visual Studio IDE)... but the only option I found so far was Xamarin.  But Xamarin&#x27;s prices are out in the stratosphere somewhere.  If they had a model like Unity it would be way better for us small developers.,2015-03-03 21:48:01,9141013
1477,"Yes, I think Xamarin is asking too much with regard to indie devs. They could come up with better licensing, e.g. pay after you earn $X...",2015-03-04 05:53:07,9142899
1478,"For some platforms, like iOS and Android, you will need a Xamarin license. So MonoGame isn&#x27;t always a free option.",2015-03-04 06:50:38,9143030
1479,"Oh, I see... I was talking about: Unity is free, Unreal is free, now Source engine from Valve.. So we&#x27;re waiting for Xamarin&#x27;s step in similar direction :)",2015-03-04 07:19:13,9143106
1480,"For your networking stack use the following:<p>- <a href=""https://github.com/paulcbetts/refit"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;paulcbetts&#x2F;refit</a><p>- <a href=""https://github.com/akavache/Akavache"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;akavache&#x2F;Akavache</a><p>- <a href=""https://github.com/paulcbetts/Fusillade"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;paulcbetts&#x2F;Fusillade</a><p>- <a href=""https://github.com/michael-wolfenden/Polly"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;michael-wolfenden&#x2F;Polly</a><p>Glue to them together as such <a href=""http://arteksoftware.com/resilient-network-services-with-xamarin/"" rel=""nofollow"">http:&#x2F;&#x2F;arteksoftware.com&#x2F;resilient-network-services-with-xam...</a>",2015-03-10 20:30:35,9180416
1481,"re: MvvmCross &amp;&amp; ReactiveUI<p>MvvmCross = imperative programming, mutable state in your UI &amp; pub&#x2F;sub messaging based API design.<p>ReactiveUI = declarative&#x2F;functional reactive programming, reactive extensions &amp; subscription&#x2F;observable based API design.<p>Considering he is a intern&#x2F;newbie, just getting started and has a deadline of a month I  wouldn&#x27;t suggest these two at all. Both projects have a vibrant community but have not crossed the chasm, samples and documentation needed to onboard absolute newbies is far and few between.<p>If you are targeting only WPF then check out <a href=""https://github.com/Caliburn-Micro/Caliburn.Micro"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Caliburn-Micro&#x2F;Caliburn.Micro</a> instead.<p>re: MahApps.Metro<p>Highly recommended, amazing library.<p>re: Networking Stack
Use:<p>- <a href=""https://github.com/paulcbetts/refit"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;paulcbetts&#x2F;refit</a><p>- <a href=""https://github.com/akavache/Akavache"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;akavache&#x2F;Akavache</a><p>- <a href=""https://github.com/paulcbetts/Fusillade"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;paulcbetts&#x2F;Fusillade</a><p>- <a href=""https://github.com/michael-wolfenden/Polly"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;michael-wolfenden&#x2F;Polly</a><p>Glue to them together as such <a href=""http://arteksoftware.com/resilient-network-services-with-xamarin/"" rel=""nofollow"">http:&#x2F;&#x2F;arteksoftware.com&#x2F;resilient-network-services-with-xam...</a>",2015-03-10 20:38:02,9180456
1482,"I&#x27;m looking into potentially using Haxe as a way to share code between iOS and Android. Unfortunately, it doesn&#x27;t seem like anybody has made a good, open source Objective-C&#x2F;Swift target for it yet. (There is a Swift target here[0] but it hasn&#x27;t been committed to since October 8 and doesn&#x27;t seem production-ready by any means.) I would contribute one myself but I have no experience with OCaml, and don&#x27;t currently have time to learn it.<p>I like the idea of this approach way more than the one that projects like Xamarin take (build a common runtime on top of each platform) because you don&#x27;t incur any runtime overhead, and debugging would (in theory) be much easier because you can just debug the native language instead of needing to understand the extra VM layer on top. As a bonus, with Haxe you can also target the web, which you can&#x27;t do with Xamarin&#x2F;RoboVM&#x2F;RubyMotion&#x2F;etc.<p>Has anyone tried anything like this (not necessarily with Haxe) and had success with it?<p>[0]: <a href=""https://github.com/ralcr/swift-target"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;ralcr&#x2F;swift-target</a><p>Edit: Wording and clarification, added bit about targeting web.",2015-03-13 18:32:42,9198947
1483,"I don&#x27;t think there&#x27;s a drop-in alternative to the Flash API other than OpenFL, but you can achieve the same outcomes in pretty much any language.<p>If you&#x27;re just looking for multi-platform stuff, that&#x27;s almost a minimum requirement now: unity3d, unreal engine, xamarin, javascript etc.",2015-03-13 19:11:35,9199279
1484,"unity&#x2F;unreal engine isn&#x27;t really a fair comparison, you&#x27;re either requiring a web view plugin (unity), or you&#x27;re going with emscripten (unity&#x2F;unreal). I couldn&#x27;t find evidence of solid support for Xamarin there either.<p>Haxe has the ability to integrate much more cleanly across all of these platforms imho.",2015-03-13 20:09:45,9199686
1485,"&gt; Do you expect to encounter any bugs at all - outside your own code - in Java, Objective C etc when you do your native UIs?<p>No, but I&#x27;d wager that I would spend more time re-writing the app for each native language than I would finding the inconsistencies in Haxe. (And either way, each platform has its own nuances that you have to know whether or not you use Haxe.) For the record, you&#x27;d have the same issues with solutions like Xamarin. The whole thing is a trade-off, and I have a (well-supported) hypothesis that the benefits of a (semi-)shared codebase is worth the cost of learning these nuances and inconsistencies.",2015-03-13 20:54:45,9199972
1486,"Yes. That is the rationale, one more component for an open and cross-plat .NET ecosystem. Also, @migueldeicaza asked us for it, so Xamarin&#x2F;Mono could use it. It was these two things, together.",2015-03-18 22:24:16,9229075
1487,"I must say, I&#x27;m very impressed with all of the open source moves that MS has done lately.  I wonder if that will drive more adoption of C# and cause Oracle to open up Java.  I&#x27;m not a fan of C# because it&#x27;s basically only used on windows systems, despite xamarin and et al.",2015-03-19 07:12:54,9230604
1488,"Yeah, especially since you need to pay a regular fee to use Xamarin, and it&#x27;s not libre software either.<p>If a free Xamarin came out I&#x27;d jump on the C# boat in a heartbeat, which I guess is what MS is trying to do with all this open sourcing (free software-ifying?).",2015-03-19 07:28:51,9230649
1489,"&gt; Yeah, especially since you need to pay a regular fee to use Xamarin<p>You can use Monodevelop[1] which is 100% FOSS. AFAIK Xamarin is just Monodevelop with some extra wrappers and custom libraries for cross-platform mobile-development. Feel free to correct me if I&#x27;m wrong.<p>If you&#x27;re just making normal applications, libraries or web-solutions you don&#x27;t need Xamarin.<p>[1] <a href=""http://www.monodevelop.com/"" rel=""nofollow"">http:&#x2F;&#x2F;www.monodevelop.com&#x2F;</a>",2015-03-19 09:25:49,9230895
1490,I have used Xamarin Studio a lot in the past for free.  It&#x27;s the mobile stuff that costs extra.  Now I lean a bit more toward Visual Studio as it is free for my purposes.,2015-03-19 12:27:56,9231384
1491,"Mono today for Linux and Xamarin for Android, iOS, &amp; Mac, and Core .NET <a href=""http://blogs.msdn.com/b/dotnet/archive/2014/11/12/net-core-is-open-source.aspx"" rel=""nofollow"">http:&#x2F;&#x2F;blogs.msdn.com&#x2F;b&#x2F;dotnet&#x2F;archive&#x2F;2014&#x2F;11&#x2F;12&#x2F;net-core-i...</a> will soon be a viable choice on the other platforms, and only get better with time. There are builds of the F# language for all these platforms.",2015-03-20 14:36:34,9237939
1492,"I&#x27;m trying to decide whether I want my future to steer toward mobile or web development. I&#x27;ve completed the Codecademy JS course but feel like I need to do certain parts of it to really cement my knowledge of it. I&#x27;m also trying to build some basic apps in Xamarin.iOS since C# is my bread and butter. I feel like I might struggle with this for some time :&#x2F;<p>Outside of development, I&#x27;m studying Farsi, getting back into running, and hopefully renew my private pilot currency. Oh, and Arduino :)",2015-03-25 16:30:50,9264031
1493,Fills the same niche as Cordova&#x2F;PhoneGap or Xamarin. It&#x27;s kinda the best of both. Intuitive dev process for web developers not needing to learn new paradigms. Fully native compilation for better performance than WebViews.,2015-03-26 19:34:18,9272473
1494,"Cool to see this. By my count we now have, in no particular order:<p>- React Native from Facebook (<a href=""https://github.com/facebook/react-native"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;react-native</a>)<p>- Appcelerator&#x27;s Titanium and Alloy Frameworks (<a href=""http://appcelerator.com"" rel=""nofollow"">http:&#x2F;&#x2F;appcelerator.com</a>)<p>- Telerik&#x27;s Native Script (<a href=""http://telerik.com/nativescript"" rel=""nofollow"">http:&#x2F;&#x2F;telerik.com&#x2F;nativescript</a>)<p>- Xamarin (<a href=""http://xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com</a>)<p>As I understand it, all three of these frameworks have a JS (or C#) runtime that is compiled along with the app. This JS runtime is what drives the app and uses the native features of each platform (iOS &#x2F; Android).<p>I&#x27;ve been building on Appcelerator for the last 4 months on some basic apps, and it works pretty well.<p>I look forward to trying out some toy apps on the other platforms.",2015-03-26 19:53:52,9272600
1495,<i>React Native is the most promising cross-platform UI toolkit I&#x27;ve thus far encountered.</i><p>I guess a lot depends on what is meant by <i>encountered</i> but Xamarin would probably be a much more full featured cross platform UI toolkit than anything else out currently.,2015-03-26 21:10:12,9273154
1496,"Um, Xamarin?",2015-03-26 23:20:32,9273816
1497,"Time for the now, almost weekly, shoutout for <a href=""http://reactiveui.net"" rel=""nofollow"">http:&#x2F;&#x2F;reactiveui.net</a> which is a functional reactive programming framework that uses the Reactive Extensions for .NET to create elegant, testable User Interfaces that run on any mobile or desktop platform.<p>Supports Xamarin.iOS, Xamarin.Android, Xamarin.Mac, WPF, Windows Forms, Windows Phone 8 and Windows Store apps. Check out  &quot;Writing Mobile Apps the Github Way by Paul Betts&quot; @ <a href=""https://www.youtube.com/watch?v=voa44OHBKME"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=voa44OHBKME</a><p>It is the framework that powers GitHub for Windows and various other undisclosed projects ;-)",2015-03-27 10:21:07,9275440
1498,"Yes.. as far as I can tell most of this bindings are covered by native extension of 3rd parties. Not always free (but not that expensive), so u have to buy an extension for a quality FacebookSDK integration for example. Still far cheaper than for example Xamarin.<p>But considering that you do not necessarily have any costs in developing Air (you get the compiler, and also good editors, for free) it is not that bad at all.<p>I also do not write native extensions myself, but at least you know there is the option in case u need to access some native library. But yes, in that case it is not really &quot;write it once&quot; anymore.",2015-03-27 11:41:52,9275674
1499,"Merge - Xamarin are getting out of the language game and instead focusing purely on mobile. As much as possible the new MIT licensed .NET will replace pretty much all of Mono that isn&#x27;t Mobile (iOS&#x2F;Android&#x2F;Mac) related.<p><a href=""https://twitter.com/migueldeicaza/status/581068613542649856"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;migueldeicaza&#x2F;status&#x2F;581068613542649856</a><p><a href=""https://trello.com/b/vRPTMfdz/net-framework-integration-into-mono"" rel=""nofollow"">https:&#x2F;&#x2F;trello.com&#x2F;b&#x2F;vRPTMfdz&#x2F;net-framework-integration-into...</a>",2015-03-28 05:09:34,9280582
1500,"For me QML&#x2F;C++ (or other C++ UIs) and Xamarin make much more sense for native mobile coders.<p>- Better native integration<p>- Integration with the SDK tooling<p>- Support of all three major mobile platforms<p>- Performance<p>As soon as I saw what React Native offers, it was meh for me.",2015-03-30 13:26:14,9289285
1501,"I wish Qt Widgets (C++, not QML) was more mobile friendly... Xamarin will be good when it finally becomes free (acquired by MS?), or at least gains more indie-friendly license.<p>API-wise, MoSync really stands out. Unfortunately, it is dead now. Same goes for Adobe Flex&#x2F;AIR.",2015-03-30 14:48:36,9289850
1502,"Xamarin prices are quite good when one takes into account developer salaries and saved time.<p>Personally, I would also like more Qt Widgets love, but only due to binary size.",2015-03-30 15:16:09,9290057
1503,"Was forced to use Xamarin Forms in a project recently. It is less than a year old, and not suited to what we need. But somehow the idea was it will save time.<p>It was a world of pain.",2015-03-31 05:06:39,9294484
1504,"San Francisco | Boston | Xamarin - Full time<p>#TheXamarinStory
We created Xamarin because we knew there had to be a better way to build mobile apps. Were developers, so we know what developers want: a modern programming language, powerful tools, an efficient and delightful workflow and the power to create the best user experiences. We are on a mission to make it fast, easy and fun to build great mobile apps.<p>#Boston | Xamarin Studio Lead Software QA Engineer  
Prior experience developing or enhancing an automated UI testing framework for a desktop application.
Solid background in C# as a developer or tester.
Previous experience using Xamarin Studio preferred.
Demonstrated ability to lead a small (4-6 person) team of QA testers. More details here: <a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;obsI0fw5"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;obsI0fw5</a><p>#SanFrancisco | Senior Software Engineer, Xamarin Test Cloud
Prior experience building mobile apps on iOS and&#x2F;or Android
Experience with Ruby, Java, Objective-C and C# a plus
Experience with mobile testing
Strong debugging&#x2F;analytics skills
More details here: <a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;oW8i0fw6"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;oW8i0fw6</a><p>Curious about other openings posted here: <a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;jobs"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;jobs</a> ? Send an email to me paula@xamarin.com with your questions - we love to hear from you!",2015-04-01 14:06:11,9303611
1505,"Location: Philadelphia; Detroit (soon)<p>Remote: Yes, likely mandatory<p>Willing to relocate: No<p>Technologies:<p>Professionally: C#, Xamarin&#x2F;Xamarin Forms (iOS&#x2F;Android), Ruby, Ruby on Rails, JavaScript, Scala<p>Hobby&#x2F;Exposure: Go, Erlang&#x2F;Elixir, C, Rust, Java<p>Resume: Please email me for my resume.<p>Email: orteipid@icloud.com<p>About: I&#x27;m a developer presently living in Philadelphia but relocating to Detroit in the near future. I&#x27;m currently happy with where I am and what I&#x27;m doing but always open to a change if the role and offer are right. I presently work on mobile application development using Xamarin and C#, with a background in developing web applications using Ruby&#x2F;Rails and Scala&#x2F;Scalatra. In future roles I would prefer to stick to application development or the backend, but I&#x27;m also interested in learning more about large datasets as well as machine learning, both of which I have not been involved with.<p>A flexible schedule is very desirable. I am okay working with teams based both in the US as well as overseas. I have a year&#x27;s worth of experience working remotely, and given my present situation in life this would more than likely be mandatory, with periodic travel to the main office certainly being possible. Please email me if you would like to speak further.",2015-04-01 14:34:44,9303880
1506,"Toronto, Canada - Archon Systems - C# Developer (Mobile &#x2F; Xamarin) - Full Time<p>We&#x27;re a profitable Toronto startup looking for an intermediate C# developer with a passion for mobile.  You will be the primary developer working on new mobile apps, writing C# code that works on both Android and iOS using Xamarin.<p>Our company is tight-knit and full of smart people.  We build software to help small businesses and we care a lot about both our customers and employees.  Most of the time we work in the office Mondays and Wednesdays, then work from home the other days.  More about that here:  <a href=""http:&#x2F;&#x2F;www.archonsystems.com&#x2F;devblog&#x2F;2013&#x2F;09&#x2F;19&#x2F;open-offices-private-offices-heres-a-third-option&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.archonsystems.com&#x2F;devblog&#x2F;2013&#x2F;09&#x2F;19&#x2F;open-offices...</a><p>Full job description here:  <a href=""http:&#x2F;&#x2F;www.archonsystems.com&#x2F;career.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.archonsystems.com&#x2F;career.html</a>",2015-04-01 15:02:09,9304163
1507,"System Engineer - Boston - Fulltime<p>Systems Engineering Intern - San Francisco - INTERN<p>Xamarin IT is looking for an FTE systems engineer in Boston, and an intern in SF to come in and help build out our internal infrastructure. These are both hands on roles helping to build our internal infrastructure, improve monitoring tooling, and help drive automation and standardization.<p>if you&#x27;re interested please email me at Nick.IT at xamarin dot com",2015-04-01 16:00:14,9304589
1508,"One clarification here. Drifty&#x2F;Ionic is not native...it&#x27;s &quot;hybrid&quot;, which means it simply wrapping AngularJS into a native container.<p>React Native actually compiles Obj-C (much like Xamarin) which is what makes it fairly revolutionary. In other words, it would be very difficult to tell the difference between someone writing native Obj-C with someone compiling it from React Native. Drifty&#x2F;Ionic is simply doing transitions, taps, using the JS engine of the phone.",2015-04-01 18:47:00,9305870
1509,"SEEKING WORK - The Netherlands or Remote.<p>I&#x27;m an experienced full-stack developer, team lead and interim CTO. Currently bootstrapping co-founder at <a href=""http:&#x2F;&#x2F;klets.co"" rel=""nofollow"">http:&#x2F;&#x2F;klets.co</a>, but I do occasionally have time to help people get their team or their stack up and running. Do get in touch!<p>Keyword soup: C#&#x2F;.NET, JavaScript, TypeScript, ReactJS, Flux, Java, Scala, C++ and Python, Elixir (Erlang VM), Xamarin, PhoneGap&#x2F;Cordova, PostgreSQL, Mono, DDD, Scrum, Kanban, Lean.<p>As an engineer, I specialize in ReactJS based projects and CQRS backends. I&#x27;ve been the lead engineer and architect for three React-based projects up until now, including <a href=""http:&#x2F;&#x2F;www.izooble.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.izooble.com</a>, if you&#x27;d like a sizeable showcase.<p>Making a decent React architecture really pays of when done right. I can help you make sense of the many Flux flavors and the other equally good options.<p>As a team lead, I specialize in cutting away the nonsense and getting a team highly productive in startup-like environments. I accomplish this with a lightweight, non-religious, and highly reflective agile process, together with a pragmatic focus on internal software quality. This focus ensures that the team is productive today and also next month.<p>Contact info on <a href=""http:&#x2F;&#x2F;superset.eu"" rel=""nofollow"">http:&#x2F;&#x2F;superset.eu</a>, chat with me on <a href=""https:&#x2F;&#x2F;klets.co&#x2F;superset"" rel=""nofollow"">https:&#x2F;&#x2F;klets.co&#x2F;superset</a>.",2015-04-01 19:13:56,9306073
1510,"It can build for Android (aka you can make Android apps with it); it does not have a version running on Android. And yes, I use tablets and phones to code on, but nothing production yet. Cannot say it&#x27;s that much less productive than on desktop though for what I do.<p>Edit: is iOS&#x2F;Android building Xamarin or?<p>Edit2: Yep , this is Xamarin.",2015-04-02 15:54:08,9311474
1511,XamarinStudio has gotten a lot nicer the past two-three years. That might be worth a go. I&#x27;ve also had varying success running VisualStudio well in VirtualBox.,2015-04-02 16:50:09,9311852
1512,"SEEKING WORK - REMOTE - Freelance Android and iOS, Portland Oregon<p>We have experience with creating MVPs, full apps, enhancements, testing and maintenance&#x2F;bug fixing.<p>About us: A small freelance shop, with over 20 years industry experience from design, development, architecture, QA and product support.<p>We have experience with:<p><pre><code>  * App Design&#x2F;User Experience

  * MVP

  * Cross platform applications

  * Java

  * Objective-C

  * C#&#x2F;Xamarin

  * Baas&#x27;s such as Parse.com, Kinvey or PubNub
</code></pre>
Portfolio:<p>Garage 529 Android - Project 529 Anti bike theft app. <a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.project529.garage.production&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.project529...</a><p>Nike + Running - Nike&#x27;s premier running application. <a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.nike.plusgps&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.nike.plusg...</a><p>Nike + Vertical -- Mobile&#x2F;Google Glass prototype for hands-free help with rock-climbing.<p>Economist Pocket World in Figures iOS App  <a href=""https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;economist-world-in-figures&#x2F;id438709514?mt=8"" rel=""nofollow"">https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;economist-world-in-figures&#x2F;i...</a><p>Caller Dashboard  (Android Tablet, Android Phone, Ultrabook) link: <a href=""http:&#x2F;&#x2F;www.thugdesign.com&#x2F;projects"" rel=""nofollow"">http:&#x2F;&#x2F;www.thugdesign.com&#x2F;projects</a><p>Ease into 5K Android  <a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper.c25k&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a><p>Bridge to 10K Android  <a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper.b210k&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a><p>Ease into 10K Android  <a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper.ei10k&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a><p>Walk There iOS App  Live walking tour application. Article: <a href=""http:&#x2F;&#x2F;blog.oregonlive.com&#x2F;my-portland&#x2F;2011&#x2F;09&#x2F;metro_and_kai.."" rel=""nofollow"">http:&#x2F;&#x2F;blog.oregonlive.com&#x2F;my-portland&#x2F;2011&#x2F;09&#x2F;metro_and_kai...</a>.<p>email at curtis [at] saltydogtechnology dot com",2015-04-02 19:37:45,9312684
1513,"It depends on what one&#x27;s definition of &quot;is&quot; is. From the top of the link:<p><pre><code>  An Open Source reimplementation of Windows 
  PowerShell, for Mono.
</code></pre>
Mono is not *nix and PowerShell provides direct access to [nearly?] the entire Windows OS.<p>More from the project page:<p><pre><code>  Status

  Alpha. This project is useful in certain constrained 
  applications, e.g. the NuGet Console in Xamarin Studio.</code></pre>",2015-04-03 13:46:46,9315816
1514,Xamarin says &#x27;sup?&#x27;.,2015-04-03 14:43:12,9316121
1515,"Location: Riga, Latvia<p>Remote: Yes<p>Willing to relocate: Yes<p>Technologies: .NET C#, Xamarin, Javascript (Angular, Node.js etc), HTML&#x2F;CSS (SASS, LESS)<p>Resume&#x2F;CV: <a href=""http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous"" rel=""nofollow"">http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous</a><p>Email: philgsky &lt;at&gt; outlook &lt;dot&gt; com<p>I&#x27;m a fullstack developer with strong .NET background (over 8 years experience). Also working with front end. Currently writing in Xamarin for iOS and Android.",2015-04-03 22:30:19,9318983
1516,"And with this release we see the beginning of the convergence of the Mono and Microsoft codebases. I&#x27;m glad Mono will be more reliable as a result, there have always been persistent reliability and compatibility issues that the Mono team hasn&#x27;t been able to really fix.<p>It&#x27;s also a little sad, in a way. It relegates Xamarin to maintainers of a distribution for another operating system. At the end of the day, C# and .NET are now officially first class citizens on Linux. Speaking as someone that actually ran Mono in production for around a year before realizing it was a ridiculous waste of time and money and switching to Windows Server 2012 after finding and filling dozens of untrackable deployment and stability issues in ASP.NET under Mono, I&#x27;m definitely not ready to switch back anytime soon, but Mono is definitely foreseeably a real option.",2015-04-04 15:06:01,9321007
1517,"The Mono team did an amazing job, and they actually had a lot of support deep within Microsoft all along. But yeah, I think it&#x27;s okay to say &quot;it never really worked.&quot;<p>(And there&#x27;s nothing wrong with being a port factory that deals with obscure path issues all day. That&#x27;s why they give you a paycheck...)<p>Still, Xamarin is doing a LOT more than just Mono, much of it extraordinary.<p>Also delivering something that actually works is an ego boost. Probably attracts the &quot;right&quot; kind of employee for the task, too.",2015-04-04 15:38:12,9321101
1518,"Having been building a decent size app (tens of thousands of lines) in Xamarin this really reflects our experience. One particular point is that the memory management is fairly complex under the covers with bridged objects and multiple memory management mechanisms working in parallel, this occasionally rears its head.<p>Another important point is they do provide a single automation test framework that targets both platforms.<p>If I was starting the app again I&#x27;d be very conflicted whether to use Xamarin vs native, though ReactNative looks very interesting too and doesn&#x27;t have the complexity of running the full .net stack.",2015-04-04 16:21:58,9321226
1519,"Great article, we have a similar story but only used Xamarin for 1 iOS app. If I had option to go back I would not chose Xa marin, we would have used native. Main reason being that we now need to add 3 SDKs to our app and none of them are supported in Xamarin, it seems it will be cheaper and more predictable to rewrite to native than implementing SDKs. Porting libraries to Xamarin is possible in theory but in practice major effort and hard to do without access to library  code.",2015-04-04 17:18:54,9321421
1520,"I use Unity3D to develop for multiple platforms and can&#x27;t recommend it enough -- it is a 3D game engine so it may be too heavy for some applications, but it can do anything you want it to. Everything is written in C#&#x2F;.net on your end, Unity cross-compiles to other platforms.<p>Unfortunately, the built-in IDE for Unity is MonoDevelop, which has all the problems Xamarin does, You don&#x27;t have to use Mono though, you can use any editor.",2015-04-04 17:22:38,9321429
1521,"I have more than a year of experience building applications for Android, iOS and Windows with Xamarin. Overall, I much prefer my experience with Xamarin than the alternatives. Keep in mind that I did have prior experience with C#, .NET, and Visual Studio.<p>As far as &quot;recommendations on developing for multiple mobile platforms&quot;, I&#x27;d be happy to answer slightly more specific questions.<p>&gt; As far as I understand it, if you are big and have the resources, your best bet is still to develop separate native apps for each platform.<p>If you have different teams for each platform, it makes sense to go native and duplicate the effort. As soon as you want to share code or resources (including employees) between more than one platform, Xamarin starts making sense. If you have a small mobile development team (1-2 people), you&#x27;ll probably need to either pick a single platform, or go with Xamarin. If you plan to have a Windows app, Xamarin makes sense. If the business is already using Microsoft technologies (Windows, .NET, C#, Visual Studio, TFS, or even Typescript), then Xamarin makes a lot of sense.<p>However, Xamarin is not a silver bullet. It does comes with some trade-offs (in addition to those mentionned in the article).<p>- You still need a Mac (either as your main machine, or on the network).<p>- Compile time is a bit slower.<p>- You don&#x27;t get access to the latest Android SDK on day one (you do with iOS, though).<p>- You can&#x27;t use any existing iOS&#x2F;Android libraries out of the box. Someone (which could be you) need to manually &quot;bind&quot; the Java&#x2F;Objective-C library interface to C# first.<p>- Application startup time might be a bit longer on iOS.",2015-04-04 17:24:27,9321441
1522,"I think this is the key to making a great cross-platform solution. Pretty much any mobile app that&#x27;s not a toy relies on native 3rd party sdks, be it ad providers or fancy Ui compinents. Whatever platform first solves the issue of making integration of pods on iOs or AARs on Android a smooth process, will win.<p>I don&#x27;t see any options that come close to solving this. Xamarin is not native to either iOS or Android. RoboVM (the one i work on) can cheat, as we only need to solve it for iOS, Android comes for free. React Native has no clear path for accessing 3rd party libs at all yet. Whatever they can come up with will be further complicated by the fact that the JS engine is single threaded.",2015-04-04 17:31:38,9321462
1523,"&gt; It&#x27;s also a little sad, in a way. It relegates Xamarin to maintainers of a distribution for another operating system.<p>I&#x27;m not sure I understand what you mean here. As I understand things, Mono is still keeping its runtime - JIT, garbage collector (the release notes here mention optimizations to SGen), etc. That means Mono isn&#x27;t nor is it planning to be &quot;just&quot; a distro for Microsoft&#x27;s .NET. (But it is using more and more Microsoft library and compiler code.)",2015-04-04 17:37:18,9321492
1524,"Judging by the docs [1], RubyMotion does indeed not seem to use a GC on iOS but instead relies on ref counting, reusing auto-release pools. That means cyclic refs are an issue. You have to explicitely use weak references throughout your code.<p>They are not on Android, where RubyMotion uses the Dalivk&#x2F;ART GC.<p>So, your cross-platform Ruby code has to deal with two different types of memory management systems. I&#x27;m not sure this qualifies as a better option to what Xamarin provides.<p>[1] <a href=""http:&#x2F;&#x2F;www.rubymotion.com&#x2F;developers&#x2F;guides&#x2F;manuals&#x2F;cocoa&#x2F;runtime&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.rubymotion.com&#x2F;developers&#x2F;guides&#x2F;manuals&#x2F;cocoa&#x2F;ru...</a>",2015-04-04 17:43:12,9321517
1525,"First, the code Microsoft released does not build and run on all platforms. They promised Linux support, and are working on it now in the open, but it&#x27;s not there yet. So Mono can&#x27;t just adopt the Microsoft .NET VM without losing features.<p>Second, Microsoft is open-sourcing their whole VM - JIT, GC, as well as compiler and libraries. Compiler and library code is already being utilized by Mono, and more all the time. However, Mono doesn&#x27;t even have plans to replace their JIT or GC with .NET&#x27;s, as far as I know (and the Trello board linked to in the article seems consistent with that).<p>Could Mono do that (once Microsoft&#x27;s builds on Linux and other platforms Mono needs)? Yes in theory, but it would mean abandoning all the massive amount of work they put into their VM over many years. I don&#x27;t know whether it would be rational or not to do so.<p>Licensing isn&#x27;t a problem for Mono to use Microsoft code. However, Mono&#x27;s runtime is LGPL licensed, and this has been a source of revenue for them (people pay Xamarin for licenses for platforms like consoles where LGPL is a problem). So to replace the Mono VM with Microsoft&#x27;s could be a step back there.",2015-04-04 17:43:23,9321519
1526,"I work in enterprise world, as such, my mobile development experience is mostly on side projects, across all the three major platforms.<p>Did a project at work with Cordova, it works, but it is only usable for CRUD type of applications.<p>As for hobby projects, a few multimedia ones with SDL, which was ok since nothing more was being used besides OpenGL and touch input.<p>Tried to use Qt&#x2F;C++, only to discover it kind of works, but even with all these years of talking about mobile support, Qt is pretty raw. Lots of native API wrapping is required or only available in the commercial version.<p>Xamarin is quite appealing, and even with the usual HN complaints about their prices, they are actually not much different from other commercial solutions for the mobile market.<p>Personally, I am using C++ for portable logic, together with the native UIs in Java, C#, C++&#x2F;CX. However due to the pain it is to use the NDK, specially now that Google dropped the ball, I am thinking about focusing on just one platform.<p>If I would be doing this at work, maybe Xamarin would be the solution to go.",2015-04-04 17:58:47,9321580
1527,"My experience with Xamarin:<p>I&#x27;ve been working for half a year with Xamarin Forms. I Think using Xamarin is the way to go, there is no need to re-code something for 3 different platforms when you can just have a shared codebase. Tools like Cordova and Phonegap don&#x27;t work. They produce a very crappy experience that doesn&#x27;t use the native OS functions, doesn&#x27;t look and feel native, feels slow and has many bugs (for example they can&#x27;t use the hardware back button).<p>So Xamarin can create real native apps, which is a HUGE advantage over Cordova&#x2F;Phonegap&#x2F;others, but there are also serious downsides:<p>1) It&#x27;s BUGGY. Many components have bugs, and the code often behaves in very very weird ways (I had exceptions not being caught by catch blocks for example), many debugger functions don&#x27;t work properly with mono (like locals) and very, very often exceptions are thrown without ANY indication what caused them or where they occurred exactly.<p>2) You a limited in the features you can use because it&#x27;s a wrapper (as mentioned in OPs post).<p>3) Documentation sucks and is very limited. It&#x27;s getting better (mostly because of StackOverflow), but it&#x27;s still not sufficient.<p>4) It has XAML which is very nice combined with MVVM, but the XAML implementation sucks. It doesn&#x27;t have intellisense and it&#x27;s just generally very awkward.<p>I don&#x27;t think the &#x27;big cost&#x27; is a valid argument against Xamarin. If you can develop 1 app for $40k where you would normally have to develop 2 or 3 apps for $30k each, that&#x27;s a BIG win and Xamarin&#x27;s costs are negligible.",2015-04-04 18:19:21,9321657
1528,"We tried mostly anything (and not only tried; we used for production work because clients wanted us to) and, outside native, Xamarin really is the best thing we worked with so far. For it&#x27;s downsides, the upsides are too good to not take advantage off. Some cons I recognize but the case everyone keeps mentioning that you get into issue when you really want to do complex native platform stuff with animations etc I haven&#x27;t encountered. Nor is integrating SDK&#x27;s an issue. It&#x27;s just something you plan in your project; it&#x27;s a one-off. We integrated very large SDKs for hardware products and the hardware vendors, when something goes wrong, always blame the wrapper and it has 0 times been the wrapper; most of the times a bug or undocumented feature by the SDK creator. The wrapper is so thin and the mapping is so clear that it&#x27;s actually never an issue.",2015-04-04 18:31:24,9321690
1529,"My experience with third party libraries has been quite different, for the most part.<p>I&#x27;ve often been surprised at how easy it is to create bindings to libraries written in Obj-C even if no one else has before. Usually it requires extracting the compiled library from the framework, and then translating each declaration from the library&#x27;s header into the C# binding definition. In many cases it&#x27;s a couple of hours work (or less).<p>That said, libraries that are provided as source files, with the instructions &quot;just copy them into your project,&quot; can be incredibly frustrating. Our designer would love to use github.com&#x2F;MengTo&#x2F;Spring but I have yet to find a way to use it in Xamarin easily.",2015-04-04 18:31:28,9321691
1530,Do you think the commercial version of Qt would have covered what you needed? I would also be interested I&#x27;d anyone else here is in a position to compare  Xamarin and Qt. It&#x27;s very hard to compare the two from the outside. Thanks.,2015-04-04 18:37:16,9321709
1531,"Hi there, I&#x27;m the CEO of Xamarin. I&#x27;m really sorry to hear that you had issues with consuming third-party libraries. This is actually something we&#x27;ve been recently very focused on improving.<p>First of all, in December we released a new tool called Objective Sharpie that can automatically bind Objective-C libraries into C#:<p><a href=""http:&#x2F;&#x2F;forums.xamarin.com&#x2F;categories&#x2F;ObjectiveSharpie"" rel=""nofollow"">http:&#x2F;&#x2F;forums.xamarin.com&#x2F;categories&#x2F;ObjectiveSharpie</a><p>If you&#x27;re skilled enough to build the Objective-C library, then you&#x27;ll be able to use Objective Sharpie to create a C# binding. We also have docs on doing this for Java on developer.xamarin.com.<p>Some of our customers don&#x27;t have the time or skill to do this themselves, and so we&#x27;ve recently created a bindings team that wraps third-party native libraries for our customers. Many of these end up published on <a href=""http:&#x2F;&#x2F;components.xamarin.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;components.xamarin.com&#x2F;</a> (there are over 300 components now). But some of them we can&#x27;t immediately publish because we need to get permission from the original library author to redistribute their library. This is especially true for commercial SDKs. But if you contact us directly, we might be able to give you something.<p>We also do custom bindings through our support team. This is something that unfortunately we haven&#x27;t made very obvious. But you can just email support@xamarin.com and we can create a binding for you.<p>Like I said, this is an area we&#x27;re pretty focused on. If you have any feedback, please feel free to let me know directly: nat@xamarin.com.",2015-04-04 18:58:45,9321791
1532,"Can anyone comment on Xamarin learning curve? If I have experience in both iOS and c#, how much time does it take to get up to speed with Xamarin?",2015-04-04 19:02:44,9321813
1533,"We launched an online training program called Xamarin University, and so we have a fair amount of data on how long it takes people to get to the point where they are proficient enough to write a production app. As you might expect it&#x27;s highly varied. But the median is about 45 days to pass our certification.",2015-04-04 19:09:19,9321833
1534,"No it would not.<p>On my case, I wanted to make use of the native file pickers, which only became available in Qt 5.4 via QML (not C++)[0] for Android, with iOS and WP8 support still coming.<p>Granted, on Android&#x27;s case the pickers are only available as of version 4.4, but they are available and it is also possible to use intents for lower versions and vender specific pickers.<p>On my specific case, I came to the conclusion that writing my own JNI layer would be less trouble than debugging Qt. However note that for me this is just hobby development, whenever I feel like coding for it.<p>Compared to Xamarin, The Qt Company seems to still be searching on what platform integration to sell to companies and how.<p>[0] <a href=""http:&#x2F;&#x2F;blog.qt.io&#x2F;blog&#x2F;2014&#x2F;12&#x2F;10&#x2F;qt-5-4-released&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;blog.qt.io&#x2F;blog&#x2F;2014&#x2F;12&#x2F;10&#x2F;qt-5-4-released&#x2F;</a>",2015-04-04 19:18:04,9321856
1535,"This draft looks great. We&#x27;ve been running Mono since December 2013 for a fairly big data processing framework - 2014 saw us move it into production. We&#x27;ve had our fair share of really horrible performance issues, runtime issues and the rest. 4.0 has some stuff in that fixes many of those nasty issues!<p>Awesome work by team Xamarin + Contributors.",2015-04-04 19:18:15,9321858
1536,"Hey there, I am James Montemagno a developer evangelist at Xamarin. I have been developing native apps with Xamarin for nearly 4 years now across iOS, Android, and of course Windows (I was a customer for 2 years before joining Xamarin). I just wanted to clarify a bit about Xamarin and Xamarin.Forms. It is important to know that Xamarin.Forms is a cross platform UI layer that sits on top of the core Xamarin platform. Using native Xamarin you are still sharing your backend C#&#x2F;.NET code and then building out native user interfaces for each platform.<p>The Xamarin.Forms library adds an abstraction over common controls available on iOS, Android, and Windows Phone. Xamarin.Forms is extremely extensible, but it is not for every app, especially if you need a lot of custom UI or API access. For data entry, proofs-of-concept, or other simple apps it is great and we have a guide to help you select: <a href=""http:&#x2F;&#x2F;cdn1.xamarin.com&#x2F;Architecture%20Selector.pdf"" rel=""nofollow"">http:&#x2F;&#x2F;cdn1.xamarin.com&#x2F;Architecture%20Selector.pdf</a>. The nice thing here is that either approach can use a shared-code backend.<p>I think I can address some of your concerns below:<p>1.) I would love to know which components you were having issues with and I can work with the team. There are a lot of settings in Visual Studio and Xamarin Studio as far as when to break on exceptions so I would love to help out here.<p>2.) If you are exclusive to using Xamarin.Forms then yes you will have a limited set of controls, since Xamarin.Forms is a subset of common controls. It is extensible via CustomRenderers, but that require some work and if you need a lot of them then it might be worth looking into the native approach without Xamarin.Forms as this approach will automatically give you access to every control on each platform you are creating.<p>3.) We are always looking to expand our documentation across all of our products and highly recommend checking out our updated developer portal: <a href=""http:&#x2F;&#x2F;developer.xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com</a> there is a plethora of Xamarin.Forms related documentation as well as <a href=""http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;xamarin-forms&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;xamarin-f...</a> It is pretty extensive, but if there is something missing please please please let us know and we will work with the documentation team to add it. In addition to this documentation we do have a book that has been written by Charles Petzold on Xamarin.Forms that is freely available: <a href=""http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;xamarin-forms&#x2F;creating-mobile-apps-xamarin-forms&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;xamarin-f...</a><p>4.) For XAML intellisense it is built right into Xamarin Studio, for Visual Studio there is an extension that you can install: <a href=""http:&#x2F;&#x2F;www.cazzulino.com&#x2F;mobileessentials.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.cazzulino.com&#x2F;mobileessentials.html</a>  This will be integrated automatically in the future. I apologize that this is tricky to find.<p>Hopefully this helps out a bit with some of the issues that you have run into, but again please please feel free to email me with any questions, encounter any problems please reach out to us so we know and can fix them. You have my direct line: james@xamarin.com.",2015-04-04 19:31:53,9321894
1537,"Xamarin and Qt are very different.<p>Xamarin provides a managed runtime environment (Mono) and a way to call native iOS and Android APIs from that environment. Xamarin Forms builds on top of those things to provide a cross-platform UI toolkit that uses the native controls on each platform.<p>Qt is a cross-platform GUI toolkit that draws its own controls using each platform&#x27;s low-level graphics facilities. As such, the controls in a Qt-based application aren&#x27;t fully native to each platform. Qt tries to mimic the native controls, but the emulation isn&#x27;t completely faithful. A particular problem is accessibility for users with disabilities, e.g. blind users who need to use a screen reader. Last time I checked (several months ago), Qt didn&#x27;t implement the accessibility APIs for iOS or Android at all.<p>Because of the non-native nature of Qt, I would strongly recommend avoiding it in favor of something like Xamarin or RubyMotion.",2015-04-04 19:36:10,9321913
1538,It will be interesting to see if anyone releases an open-source port of the MS runtime to ARM... Xamarin could wind up left with only their proprietary cross-platform UI toolkit!,2015-04-04 19:36:48,9321914
1539,"&gt;Unfortunately, the built-in IDE for Unity is MonoDevelop, which has all the problems Xamarin does, You don&#x27;t have to use Mono though, you can use any editor.<p>In fact, Visual Studio has first-class support for Unity now, since MS bought the company that made UnityVS and released it as a free VS extension.<p>I really don&#x27;t think I could recommend using Unity for a non-game app, though, at least in most cases. It would be a subpar experience for both the developer and the user.",2015-04-04 19:38:31,9321916
1540,"I&#x27;ve been using Xamarin forms a lot now.
They are miles from being as good as native development.
Soooo many bugs in xamarin itself.
When using Xamarin forms, you will not provide as good of product as you would native.
There are also very little controls.
Xaml works, but is really slow. And the layout is SOOO inefficient !
But the problem is even greater, you can&#x27;t merge Android and iOS layout passes.
On one platform, measuring is really fast and the other really slow ...
Xamarin forms can&#x27;t compensate and give native performance to this.
They don&#x27;t even have listview recycling ...
One developer even said &quot;RelativeLayout is probably best for you here and can do this&quot; to the question what the fastest layout is.
For Android, this is the WORST layout possible.<p>Anyway, you will spend a LOT of time fixing Xamarin bugs and developer their controls.<p>However, I LOVED .net functions, especially LINQ !<p>Anyway, development was really slow and performance is no were near to native.<p>So if you want to deliver a simple app to a client and be cross platform, then sure. But don&#x27;t try to maintain that app, you will regret it.<p>I&#x27;m afraid the whole Xamarin thing won&#x27;t solve &quot;cross-platform&quot; which isn&#x27;t a real problem but sure.
Its just another horse that Microsoft is betting on.<p>Oh and for the people that will have to do it anyway.
Use Resharper ! Xaml IntelliSense !!! It will help you a lot.<p>I&#x27;m sorry I&#x27;m so negative, but it was genuinely the worst development I had.",2015-04-04 19:59:18,9321985
1541,"Whilst it may require more work than Xamarin Forms, MvvmCross is a way of creating cross-platform applications using Xamarin without any of the issues you&#x27;ve documented above.",2015-04-04 20:20:02,9322059
1542,"I have used Cocos2d for clients and Monogame and Unity as well and the combination as well. I was talking about Xamarin here as app building tool, not for games. I do like Cocos2d.<p>Cocos2d is nice to work with as well as with Unity; we had most issues with Monogame (and that uses Xamarin) but once we got over those issues I believe we would be effective equally with Cocos2d &amp; Monogame and slightly more so with Unity (because of the community mostly).",2015-04-04 20:34:46,9322102
1543,"I built the same app using Android and iOS, but considered Xamarin at one point. I&#x27;m still considering it.<p>When I was deciding, I had a look at the Xamarin docs, and it seemed to reference the underlying native idioms quite often. I figured that I&#x27;d end up spending the same amount of time learning Xamarin as iOS, so what&#x27;s the point?<p>In the end, I found the backend logic was pretty easy to write in Android or iOS. They&#x27;re both OO languages, and once you&#x27;ve figured out the model it&#x27;s not going to be hard to port. After all the phones all have similar hardware, and there&#x27;s got to be some way to do the same thing.<p>The problem is the UI. I found it was a massive pain to learn two ways to lay out stuff. Android seems to encourage you to layout things in group containers (horizontal&#x2F;vertical) that have an internal logic of their own. iOS seems to have a thing for constraints. Neither is very obvious, and they are not that easy to port from one to the other. They also each have somewhat different aesthetics (this friggin changes every time there&#x27;s an update), which means you need slightly different designs (no hardware back button? no built in check box?). After grappling with this for ages, I ended up doing webviews with responsive pages. Makes the thing look like a web page, but a simple one that works like an app and can also be tested on a desktop browser.",2015-04-04 21:27:34,9322266
1544,Is it possible to do logic code in Xamarin and develop UI natively for each platform?,2015-04-04 21:31:01,9322277
1545,"Its hardly more performant. But here is some more info: <a href=""https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=NYtB6mlu7vA&amp;t=1m41s"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=NYtB6mlu7vA&amp;t=1m41s</a>
Yes, the documentation is far from good.
But the larger problem I find is that the 2 platforms are made from opposites points, and I don&#x27;t see Xamarin glueing it together as magic.
But you are right, the layouts and measurements even differ per api level as they get optimisations and are really complex. It would be awesome if Xamarin could combine both platforms native performs, but I don&#x27;t see that happening :(",2015-04-04 21:44:17,9322318
1546,If one is not burdened with knowing anything yet is it feasible to start and stay with C#&#x2F;Xamarin alone or must one also master the other environments to fill gaps?,2015-04-04 21:59:24,9322359
1547,"&gt; I&#x27;m afraid the whole Xamarin thing won&#x27;t solve &quot;cross-platform&quot; which isn&#x27;t a real problem but sure. Its just another horse that Microsoft is betting on.<p>Why do you say &quot;cross-platform&quot; isn&#x27;t a real problem? It sure seems to me like mobile app developers need a way to share large chunks of their code, and possibly even some UI code, between platforms while still delivering native apps.",2015-04-04 22:04:11,9322375
1548,No.<p>Xamarin stuff obeys others: Apple says no dev w&#x2F;o Apple hardware,2015-04-04 22:10:34,9322391
1549,"That&#x27;s actually the way Xamarin works the best - you usually don&#x27;t develop UI natively, but use Xamarin&#x27;s wrappers for native UI elements for each platform separately. They&#x27;re not all that compatible when it comes to UI and UX anyway.",2015-04-04 22:10:48,9322393
1550,it would be nice if xamarin implemented it.,2015-04-04 22:17:43,9322418
1551,ObjectiveSharpie is awesome! No problems so far.<p>But when are you gonna let us use Xamarin Studio on Linux?,2015-04-04 22:22:37,9322429
1552,"I have been starting to learn how to write mobile applications with  Xamarin to contribute to a friend&#x27;s project and had not heard of Xamarin University until I saw this comment.  Now that I have looked at it, I&#x27;m a little confused.  I can understand charging for 1-on-1 help, interactive classes, and certification exams, but why wouldn&#x27;t &quot;recorded class videos, class labs and materials&quot; be free?  Don&#x27;t you <i>want</i> it to be easy for people to use your software so that people <i>will?</i>  Charging $1995&#x2F;year for learning materials seems pretty steep.<p>The learning investment is what makes me most hesitant to use Xamarin.  It was supposed to be less of a learning investment because we all have C#&#x2F;.NET experience, but now I&#x27;m not so sure.  It now seems like we&#x27;re going to have to dive deep into learning iOS and Android specific UI concepts anyway, and on top of that learn Xamarin concepts and quirks, and if we want to continue using Visual Studio when the trial is up we&#x27;ll have to pay $1000&#x2F;year.  Maybe we&#x27;re just not the target market.",2015-04-04 22:59:04,9322514
1553,I&#x27;m sure they&#x27;ll tell you that you can do this using Xamarin.Forms but we quickly realized that it is only useful for very basic UI.  Anything of more than trivial complexity is going to require that you learn the platform specific frameworks and idioms (on top of learning Xamarin).  At this point I have no idea if Xamarin is going to save time or cost time over going native.  My guess is that it will depend on how much domain logic you can share between platforms.,2015-04-04 23:03:46,9322523
1554,"I have been developing cross-platform mobile apps for the past five years, initially on Phonegap and for the last three years, on Titanium (Appcelerator).<p>If I was starting from scratch today, I&#x27;d take a good look at Titanium, React, Xamarin and Ruby Motion (in that order). In general, I think cross platform will save you time and money if you do it properly.<p>Titanium has been a timesaver for me. My current backend (stocklight.com) is written in Rails. For iOS and Android clients, Titanium gives me about 90% code reuse on the front-end.<p>ie. It allows you to implement cross platform GUI&#x27;s using the same view code and you just make platform specific adjustments (eg. Action Bar versus NavigationWindow) where neccessary.<p>There&#x27;s no way I would have had time to develop both backend and android&#x2F;iOS by myself if I had to write everything natively.<p>Having a single model&#x2F;controller layer with Titanium has been good also but I recently made the effort to upgrade this part of the project to use Alloy and that has felt very Rails-ish which has been a big improvement.<p>This week, Appcelerator have announced their new pricing structure ($39 per month) and are pushing a new service called Arrow for managing your back end. Personally, I don&#x27;t think i&#x27;ll be using Arrow (Rails seems like a better choice) but it will be great to get LiveView &#x27;instant updates&#x27; with their new SDK.<p>Also, re. speeding up Android development, you should definitely check out Genymotion.",2015-04-04 23:15:46,9322548
1555,"Hey, I&#x27;m the CEO of Xamarin. I&#x27;m really sorry that you had a bad experience with Xamarin.Forms.<p>Did you try doing native development with Xamarin? I do want to be clear that Xamarin.Forms is not Xamarin. It&#x27;s a library that we built to help people quickly write very simple, data-entry style apps. That&#x27;s why it&#x27;s called &quot;Forms.&quot; It&#x27;s not intended to be highly performant or to replicate all the per-platform APIs in Xamarin.iOS and Xamarin.Android. For that, you should use the native APIs. We have a little more information about that here:<p><a href=""http:&#x2F;&#x2F;cdn1.xamarin.com&#x2F;Architecture%20Selector.pdf"" rel=""nofollow"">http:&#x2F;&#x2F;cdn1.xamarin.com&#x2F;Architecture%20Selector.pdf</a><p>And the &quot;What Xamarin approach is right for you?&quot; section on the Xamarin.Forms page:<p><a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;forms"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;forms</a><p>Before release, we had internally called Xamarin.Forms &quot;duplo,&quot; to emphasize that it was for childishly-simple apps and screens, but we couldn&#x27;t use that (trademarked) name for the release, unfortunately.<p>That said, of course we still want to address all the issues that you found with Forms. Would you mind dropping me an email - nat@xamarin.com?",2015-04-05 00:41:13,9322702
1556,"Right now we have a huge amount of content available on <a href=""http:&#x2F;&#x2F;developer.xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com</a><p>This includes hundreds of samples:
<a href=""http:&#x2F;&#x2F;developer.xamarin.com&#x2F;samples-all&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;samples-all&#x2F;</a><p>And lots of detailed guides:
<a href=""http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;</a><p>And dozens of videos too:
<a href=""http:&#x2F;&#x2F;developer.xamarin.com&#x2F;videos&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;videos&#x2F;</a><p>As for Xamarin University, the vast majority of that experience is live, interactive learning with a teacher. That&#x27;s why it costs money. The recorded versions of those interactive classes aren&#x27;t that useful on their own. But, we&#x27;re working on developing some good standalone e-learning content and when we do it will be widely available.",2015-04-05 00:48:26,9322713
1557,"The approach with Xamarin is that you are able to build out a shared C#&#x2F;.NET business logic layer. All of your platform independent code such as Models, ViewModels, Database code, Restful Service calls, etc. You get to use the power of C# and .NET to build this out. Then you build out user interfaces for iOS, Android, and Windows and tie this logic all together. Xamarin apps are native so you follow the same paradigms for building the UIs out such as Android XML and iOS Storyboard or XIB files, but you can build these out in the Xamarin Designers for both iOS and Android inside of Visual Studio or Xamarin Studio.<p>On the code behind side of iOS&#x2F;Android (UIViewController or Activity) you write all of this in C# with C# features like LINQ, events, delegates, etc. and you have access to 100% of the iOS and Android APIs of the platform as well.<p>Now we do have the Xamarin.Forms library which adds on top of this to build on a shared UI layer for iOS, Android, and Windows Phone as well. However it is not for every app and we have guidance at www.xamarin.com&#x2F;forms. Hopefully this is a nice overview of the platform.",2015-04-05 00:50:16,9322715
1558,"Hey, Xamarin CEO here, thanks for your feedback. A couple comments&#x2F;questions on the issues you raised.<p>1) We aren&#x27;t aware of any debugger issues like this. Is it possible you were debugging optimized code which had the local variables optimized away? Similarly, when an uncaught exception is thrown, it comes with a stack trace with line numbers. Were you not getting these?<p>2) Xamarin does map the entire set of iOS and Android APIs into C#, so yes it is a &quot;wrapper,&quot; but you should NOT be limited in what native features you can use. We literally cover almost 100% of the entire set of native APIs. What limitations were you running into?<p>3) We have a ton of docs at <a href=""http:&#x2F;&#x2F;developer.xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com</a> including nearly 300 sample apps and a lot of very detailed guides: <a href=""http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;</a> Which part of the docs did you find inadequate?<p>4) We do include XAML intellisense in Xamarin Studio. To get it in Visual Studio you have to install an extension: <a href=""http:&#x2F;&#x2F;www.cazzulino.com&#x2F;mobileessentials.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.cazzulino.com&#x2F;mobileessentials.html</a> This will be included by default in a future version of Xamarin.<p>I&#x27;m sorry about the trouble you had, and I&#x27;d like to get to the bottom of those issues. Please feel free to contact me at nat@xamarin.com.",2015-04-05 01:39:00,9322803
1559,"Runtime is already open and runs on Linux, one just has to cross compile it, optimize for mobile and do the bindings and such that Xamarin already does. That&#x27;s still quite a bit of legwork since Xamarin has been doing it for some years now. Not saying someone couldn&#x27;t do it, but it would take a good amount of time to be on the level Xamarin is in stability and performance.<p>I pay for Xamarin personally and think it&#x27;s well worth it if doing cross-platform compared to the alternatives out there. I&#x27;d continue to do so until there&#x27;s a very stable open sourced alternative. However, I think Xamarin knows such a possibility could happen and that&#x27;s why they primarily target enterprise and not individual developers.<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;coreclr"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;coreclr</a>",2015-04-05 01:42:31,9322820
1560,"<a href=""http:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;comment&#x2F;30355"" rel=""nofollow"">http:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;comment&#x2F;30355</a><p>This to me sums up my experience with Xamarin. It has A LOT of potential, and I did generally enjoy working with it. However, the amount of small issues I dealt with that were never solved (and still haven&#x27;t been solved 2 years later) are what drove me away. That and the cost...",2015-04-05 03:53:11,9323070
1561,MvvmCross is pretty legit. I felt that it really made Xamarin worthwhile. I found it quite a bit easier to keep the platform specific code to a minimum and when I needed to write it it was abstracted out as much as possible.,2015-04-05 03:56:49,9323076
1562,"Some people are never going to get over the past...guessing if the poster is American, they must not trust the British either for burning down the White House 200 years ago. I lived through the late 90s and 00s Microsoft era and know as well any developer the shenanigans that went on for better or worse. I always had a fondness for C# over Java for its willingness to innovate while Java stagnated, but never wanted to commit myself to being stuck only in the Windows ecosystem.<p>That said, I am excited to see the direction Microsoft is heading. It enthused me enough to start using Xamarin when I want to build cross platform for personal projects and to recently switch my day job to a company that uses .net for most of the their software. Not overly fond of cmd.exe and powershell on Windows still, but for most things, there&#x27;s always Cygwin and it too has come a long way. Main issue is Powershell inherited all of cmd.exe&#x27;s bad user interaction design (tab completion, select&#x2F;copy&#x2F;paste, buffer, history up&#x2F;down scrolling) when compared to a typical *nix terminal.",2015-04-05 04:12:53,9323099
1563,"I using xamarin in last 16 months<p>From my experience, xamarin take wrong UI improvement strategy<p>Dont get me wrong, this is a good product, i love it, but just going to wrong direction<p>This is the big 2 mistakes:<p>1. You change the API class and method name to .net version<p>For first time user, this is good approach, but i must rename every sample snippet code from stackoverflow<p>You should save the resource for renaming API to something else more valueble ( hint : fixbug )<p>Are you rename the API because of patent and legal issue?<p>2. Xamarin form<p>This is the worst strategy.<p>Maybe this is good for B2B<p>And maybe B2B is good money<p>But for me, indie programmer, B2C product, i dont need xamarin form<p>I need best approach to use UI library<p>Stop xamarin form, there is other way to get 90 percent shared library<p>Support more on MVVM cross<p>Duplicate total of the xamarin component store<p>Improvement object sharpie to support UIKit.h<p>Object sharpie not working if using UI library<p>Android binding still design for eclipse project, not android studio<p>I&#x27;m wasting 1 week to bind 
ListViewAnimation android, and still not working<p>My point is, it really hard to bind UI library on xamarin<p>Conclusion,<p>Please please turn around and go back to your real core value.<p>We like native, improve native, do not recreate the UI component<p>You know what happend when you try recreate UI?<p>Go check java se and Qt",2015-04-05 04:22:08,9323106
1564,"&gt; but 1000$ developer&#x2F;year is not exactly cheap.<p>That is incredibly cheap. It&#x27;s the sort of cheap that&#x27;s so cheap you wonder what the catch is.<p>Assuming a perfectly spherical developer, you&#x27;re at $100,000&#x2F;year. You&#x27;re using Xamarin because it makes that developer more efficient because (1) you&#x27;ve determined C# is an easier language to maintain and&#x2F;or (2) cross compatibility is worth something. If this developer is just 1% more efficient, you&#x27;ve paid for your Xamarin license. If he&#x27;s not 1% more efficient, why are you even using Xamarin in the first place?",2015-04-05 04:24:24,9323110
1565,"Has anyone had the opportunity to compare Xamarin with Corona SDK?<p>Corona SDK is free and builds to Android&#x2F;Windows&#x2F;iOS with cross-platform wrappers available for what Corona has chosen to wrap, which can be different for each platform.<p>You don&#x27;t get access to native UI elements. Instead, Corona offers OpenGL-based replacements (which may or may not be sufficient). You can also pay for Corona Enterprise and write your own platform-specific wrappers around native objects.",2015-04-05 04:34:26,9323124
1566,"Hi james,<p>I&#x27;m following your blog.<p>In last month, you try to prove UI xamarin form capable do all layout<p>Here is the idea, if you dont mind, would you convert ListViewAnimation android to xamarin component<p>(Warning: this is not a light library)<p>At the moment, there is no listview xamarin component support drag and drop swap row.<p>Need that to move and reorder and row sequence<p>I&#x27;m sure every project need powerfull listview<p>Love your work
Thx",2015-04-05 04:38:30,9323132
1567,"Er, that&#x27;s on top of your Windows license, your Visual Studio license, your Apple Developer License, your Apple Macbook because you can only compile and deploy to the app store with a Macbook... oh and Xamarin university if you want to become certified... <i>and</i> if I understand the terms correctly, it&#x27;s not $1000 per developer, it&#x27;s $1000 per developer per platform, so if you want iOS <i>and</i> Android, it&#x27;s $2000 per developer on top of all that previous licensing. So to say it&#x27;s incredibly cheap at $1000 isn&#x27;t the whole story.",2015-04-05 04:42:39,9323138
1568,"Macincloud is enough.<p>If you dont have mac, and belive in xamarin,<p>My sugestion is try build on android first,<p>If have good respond from customer, then buy mac and porting to iOS<p>Porting xamarin android to iOS is very easy if you have mvvm knowledge",2015-04-05 04:46:24,9323144
1569,"For Android this could be possible.<p>For iOS I think you would have to figure out how to hook up MS runtime to a LLVM AOT compiler and then do all the work Mono team did to make sure libraries compile&#x2F;work without JIT.<p>I really hope Xamarin guys follow Microsoft lead and make entry level version of their product free. It&#x27;s <i>not</i> just about the ~25$ per month, it&#x27;s about community as well - say some guy X is maintaining .NET library Y. I write up a port&#x2F;pull for Xamarin - X goes &quot;sweet but I can&#x27;t test that since I don&#x27;t own Xamarin and I can&#x27;t even include it in my test suite to not break it further&quot;. Now I have to maintain a branch of Y for Xamarin and most other people are likely not going to find it or willing to use it.<p>I don&#x27;t know which % of their profit comes from the indie licensing but if it&#x27;s not significant as I suspect I would hope that they see this - it will help both their adoption and the OSS community build tools for their product.",2015-04-05 04:56:14,9323166
1570,"I&#x27;ve been using Kivy. But decided if I did native, I&#x27;d only support iOS. Mostly because I don&#x27;t want to go down the rabbit hole of having to support some random Android device.<p>So I&#x27;m looking at learning more about Swift and that ecosystem someday. I don&#x27;t know C# but I certainly see Xamarin as an upgraded version of Kivy.. obviously going from a free platform to a paid one. It&#x27;s something I&#x27;ve keeping my eye on for quite some time.<p>If I ever find Kivy and the native iOS development combo to not meet my needs, Xamarin is the next stop for me.",2015-04-05 05:21:34,9323207
1571,"I came from a pure C# background about a year ago and I found I was able to get up to be productive within a month and feel comfortable within about 3. The major sticking points for me have been understanding the iOS and Android development process and their respective APIs. I think if you&#x27;ve previously developed iOS applications and understand the view&#x2F;viewcontroller and application lifecycle, the learning curve won&#x27;t be huge. Xamarin does a great job of making you feel like you&#x27;re developing natively in c#, but, as someone entirely new to iOS development, the native APIs just feel odd.",2015-04-05 09:02:09,9323548
1572,"Absolutely check out Genymotion, it blows both the native android and Xamarin emulator out of the water. Xamarin studio sees it as a native device and any issues we&#x27;ve had with it have been minor annoyances rather than major blockers. Deployment time from the IDE is also pretty nippy.",2015-04-05 09:05:11,9323556
1573,"Hi, I am not affiliated with Xamarin but I have been using Xamarin in production for the last two years on many applications and could not imagine doing native development in any other way.<p>Two weeks ago a enterprise company that previously was &quot;iPhone&#x2F;iPad only&quot; from the top-down by a board level mandate has started seriously considering moving over to Android for purely handset cost reasons. I knew this would eventually happen and deliberately designed&#x2F;developed the application using the Xamarin platform as a way to reduce risk&#x2F;hedge bets.<p>If the application was not developed using Xamarin then the enterprise company would be facing a complete rewrite of the application in another language whereby the engineering costs to achieve this outcome would outweigh the savings and re-implementing the functionality would introduce substantial product quality&#x2F;project risks.<p>Now &quot;all that is required&quot; is to start work on a Android user experience, implement it and then sew it up against the core library. It also means that developers can concurrently patch bugs + ship features to both platforms during the migration phase.<p>Anyway there seems to be a quite of bit of confusion that Xamarin.Forms == Xamarin and this is not the case.<p>Xamarin.Forms is a package that runs on top of the Xamarin platform that provides a DSL to rapidly create CRUD enterprise applications that spits out the equivalent native user interface implementation depending on which platform you run on. It is extendable and becoming highly customizable. Can&#x27;t wait until they drop the &quot;sealed&quot; modifiers - hint, hint, nudge, nudge @natfriedman!<p>Xamarin itself is a way to use either F# or C# on Android and iOS. All of the native platform specific API&#x27;s you&#x27;re used are available to you to use in any way you see fit. Admitely the there has been some minor naming changes to be in accordance with the <a href=""http:&#x2F;&#x2F;www.amazon.com&#x2F;Framework-Design-Guidelines-Conventions-Libraries&#x2F;dp&#x2F;0321545613"" rel=""nofollow"">http:&#x2F;&#x2F;www.amazon.com&#x2F;Framework-Design-Guidelines-Convention...</a> but if your coming from a .NET background then it makes complete sense.<p>That said if you&#x27;re coming directly from .NET, thinking that you can ship iOS or Android without learning the domain knowledge of each platform then you&#x27;re in for a royally rude awakening. Xamarin does not abstract away the differences between the platforms - ie. push notifications, application suspension or any of that jazz.<p>With the correct software architecture you can write your business logic, data transport, caching and persistence layer once and  share it between every non-web platform in existence - Android, iOS, Windows Phone and desktop applications on Linux, Mac &amp; Windows&#x2F;WPF&#x2F;Store.<p>Step one in decent architecture is to divide your application up into a Core library and use interfaces to bait and switch in a different concrete implementation depending on what platform is running your application.  For more info see: <a href=""http:&#x2F;&#x2F;log.paulbetts.org&#x2F;the-bait-and-switch-pcl-trick&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;log.paulbetts.org&#x2F;the-bait-and-switch-pcl-trick&#x2F;</a><p>Step two is to use a solid MVVM framework such as <a href=""http:&#x2F;&#x2F;reactiveui.net"" rel=""nofollow"">http:&#x2F;&#x2F;reactiveui.net</a> which is a functional reactive programming framework that uses the Reactive Extensions for .NET to create elegant, testable User Interfaces that run on any mobile or desktop platform. Supports Xamarin.iOS, Xamarin.Android, Xamarin.Mac, WPF, Windows Forms, Windows Phone 8 and Windows Store apps. It is the framework that powers GitHub for Windows and various other undisclosed projects ;-)<p>Step three is to architect your network services and data persistence exactly as detailed here: <a href=""http:&#x2F;&#x2F;arteksoftware.com&#x2F;resilient-network-services-with-xamarin&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;arteksoftware.com&#x2F;resilient-network-services-with-xam...</a><p>For more information on the above see <a href=""https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=voa44OHBKME"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=voa44OHBKME</a> - &quot;Writing Mobile Apps the Github Way by Paul Betts&quot;<p>(disclaimer: contributor to the ReactiveUI project ;-)",2015-04-05 09:42:31,9323593
1574,"I&#x27;ve been on projects with both:   For business like apps, Xamarin (Forms in my case) is miles ahead.     Although Xamarin.Forms isn&#x27;t really stable (We experienced quite a lot of regressions with each new version)   neither is Corona.<p>Corona is nice if you have a lot of custom graphics, but if you are going for pretty standard user interaction, you will spend a lot of time recreating what exists on other platforms.<p>For both Xamarin.Forms and Corona you will run into the limitations, but with Forms it is much easier to adjust those with native code.<p>I think the main issue with Corona is that they are more focussed on the game case (for which it works)<p>Finally, I really started to appreciate C# after doing Lua, PHP and JavaScript for years.  Especially on a complex app, the static typing really helps making changes to code you did not write yourself.",2015-04-05 10:59:45,9323692
1575,"What would be the point of developing with the Xamarin Platform on Linux? You&#x27;d only be able to target Android, not iOS, Mac, or Windows. In that case, one might as well not use Xamarin at all.<p>To target the full range of mobile devices, one has to have Windows, a Mac, or both anyway. So there doesn&#x27;t seem to be much advantage to supporting development on Linux.",2015-04-05 14:16:26,9324074
1576,"Excellent write up, cleared things up for me. Xamarin guys should just take it and put on their website.",2015-04-05 15:05:54,9324206
1577,"I literally saved two businesses as favors to friends. One by replacing a Mono app on Mac with Windows running in a VM. The second by doing the two hours of config work they were afraid of to host on Windows Server instead of a Linux box. (At the same damn price!)<p>Xamarin did an immense amount of work pushing that boulder up a hill. Glad you got results, but frankly it did a lot of damage to a lot of people. I say this as a Microsoft fanboy and someone who deployed sites you&#x27;ve heard of on Mono + Postgres + CentOS.<p>In the last year or two many .NET vendors went from &quot;yes, it works on Mono!&quot; to &quot;it should work but no support.&quot; This indicates the formal death of the ecosystem to anyone but apologist hobbyists and thankfully we&#x27;ve gotten to a better place now.",2015-04-05 15:12:45,9324235
1578,"I&#x27;m not sure what your point is here. Talented programmers have been releasing stuff that works great on shitty platforms forever. If the money is there, you work around the nonsense, warts and all.<p>It doesn&#x27;t mean DirectX 6.1 is a great 3D game platform, nor AmigaDOS an awesome place to make a video editor, nor Mono under Unity the bees knees for an iOS game.<p>It feels like we&#x27;re debating whether the Mono bullshit was waist deep or merely knee deep. Which doesn&#x27;t matter because Xamarin and Microsoft just pulled out a giant firehose and washed everything clean.",2015-04-05 23:07:38,9325645
1579,"If the goal of the Mono project were to provide a cross-platform scripting language for games then, with obvious caveats about all the well-known problems, sure, &quot;that worked.&quot;<p>But the goals and history of the project were clear. Meanwhile if you tried to run a desktop app on Mac or a server app on Linux, it was a total fucking debacle.<p>Xamarin punted desktop, then they punted server, and they landed on mobile. And even then they couldn&#x27;t keep up or keep compatible.<p>&quot;It worked&quot; much the same way &quot;the Space Shuttle worked.&quot; Awesome effort, cool project, didn&#x27;t meet spec, didn&#x27;t meet goals, and it had one nine of uptime before it repeatedly crashed.<p>I remain grateful for the work they did. But I&#x27;m glad things are moving forward sensibly now. Because unlike WINE, they really never got close.",2015-04-06 03:29:17,9326323
1580,"hi miguel,<p>thx for responding my comment. after read your explanation, i agree with your argument about xamarin form. it just need more feature and more sample. Xamarin sample layout is not esthetic. You should look at telerik example. And last one, when feature listview drag and drop swap row available on android ?<p>thx",2015-04-08 21:32:18,9344148
1581,"Choosing to build Android (mobile in general) apps using a Hybrid framework such as Cordova, Ionic, Xamarin may help you learn the intricate details of the mobile development life cycle. No matter the framework chosen, you will spend a considerable amount of time figuring out setup, time developing, and time resolving issues with the problems you encounter.<p>With that being said, and as @Envec83 said, why go through so much trouble when you&#x27;d spend the same amount of effort going Native? Look at the job market; yes, you&#x27;ll find some jobs asking for such hybrid frameworks. However, most will want hands on native development with exposure to hybrid frameworks such as those mentioned above.<p>In my opinion, you being a first year CS student, and with the likeliness that you&#x27;ll learn Java along the way, it&#x27;s a great start to go about learning to build Android mobile apps the native way.",2015-04-09 08:08:24,9346259
1582,"<i>&gt; NLog for logging. It&#x27;s fantastic.</i><p>I use NLog, but I access it through the Common.Logging facade. This is helpful when I need to bolt my code into an environment where NLog kind of sucks, like Xamarin.Android.",2015-04-10 14:58:26,9354748
1583,"I figured as much. Unfortunately there&#x27;s no Emit for AOT where you could do something like: <a href=""https:&#x2F;&#x2F;github.com&#x2F;jonwagner&#x2F;Insight.Database&#x2F;blob&#x2F;master&#x2F;Insight.Database&#x2F;CodeGenerator&#x2F;InterfaceGenerator.cs"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;jonwagner&#x2F;Insight.Database&#x2F;blob&#x2F;master&#x2F;In...</a><p>On the other hand, I wonder if it wouldn&#x27;t be easier to ship a T4 template? I know for sure that would integrate with VS (both the IDE and build process) without any issues, not sure about Xamarin Studio...",2015-04-11 11:12:51,9359104
1584,"Yes, it&#x27;s very much underestimated. The OS itself is very good. Very good usability, very secure and has some awesome features (can&#x27;t live without the live tiles!). The hardware is really good as well.<p>In my opinion it&#x27;s crazy that most developers still skip the platform. There&#x27;s really no excuse not to make your app cross platform nowadays, Xamarin has a really good offering for example. At least in Europe WP has a market share of 10% where iOS has 18%, so they&#x27;re not that far off! In the US the difference is bigger though, but the world is larger than the US.",2015-04-13 00:12:16,9365250
1585,Would love a C# implementation that I could use in Xamarin!,2015-04-13 16:46:02,9368719
1586,"This is somewhat similar to IL2CPP from Unity[1] with AOT is currently what is used on iOS and WebGL builds.  It is still buggy and has been in development for a few years or over a year, but it does essentially the same thing, take IL and port it to C++ per platform  with AOT compiling. They largely did this to go around Mono licensing from Xamarin and the export is now C++ so there can be no platform limitations or it is minimal that C++ tech would be blocked by Apple for any reason for instance like they did with JIT and Flash etc.<p>Maybe when this has AOT it can also be useable in the same way Unity IL2CPP and Xamarin Mono are used.<p>[1] <a href=""http:&#x2F;&#x2F;blogs.unity3d.com&#x2F;2014&#x2F;05&#x2F;20&#x2F;the-future-of-scripting-in-unity&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;blogs.unity3d.com&#x2F;2014&#x2F;05&#x2F;20&#x2F;the-future-of-scripting-...</a>",2015-04-14 03:16:57,9371933
1587,"Templates for F# projects, by the F# community, for use in Visual Studio, Xamarin Studio and other editors <a href=""https:&#x2F;&#x2F;github.com&#x2F;fsprojects&#x2F;FSharpCommunityTemplates"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fsprojects&#x2F;FSharpCommunityTemplates</a> also go to <a href=""http:&#x2F;&#x2F;fsharp.org&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;fsharp.org&#x2F;</a> or ask a question on S.O. or Twitter with tag #fsharp.<p>And then there is also WebSharper <a href=""http:&#x2F;&#x2F;websharper.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;websharper.com&#x2F;</a>",2015-04-14 15:30:54,9374985
1588,"Is there any support for type providers or code completion for F# in LinqPad?  I was (mistakenly) under the impression that F# wasn&#x27;t supported, so spent most of my time inside of VS and Xamarin Studio for the goodness of type provider intellisense.",2015-04-14 19:01:05,9376515
1589,"OS: Windows 8.1<p>Hardware: Dell XPS 15 (2014), custom build desktop.<p>Toolchain: C#&#x2F;Xamarin&#x2F;ASP MVC w&#x2F; VS2013, Git for SCM",2015-04-19 15:06:56,9403402
1590,"If you are interested in general front-end development as your title suggests:<p><a href=""http:&#x2F;&#x2F;www.qtcentre.org&#x2F;forum.php"" rel=""nofollow"">http:&#x2F;&#x2F;www.qtcentre.org&#x2F;forum.php</a><p><a href=""https:&#x2F;&#x2F;forums.xamarin.com&#x2F;categories&#x2F;xamarin-forms"" rel=""nofollow"">https:&#x2F;&#x2F;forums.xamarin.com&#x2F;categories&#x2F;xamarin-forms</a><p><a href=""https:&#x2F;&#x2F;social.msdn.microsoft.com&#x2F;Forums&#x2F;vstudio&#x2F;en-US&#x2F;home?forum=wpf"" rel=""nofollow"">https:&#x2F;&#x2F;social.msdn.microsoft.com&#x2F;Forums&#x2F;vstudio&#x2F;en-US&#x2F;home?...</a>",2015-04-23 08:18:49,9425476
1591,"Mono = LGPL and CoreCLR&#x2F;.NET = MIT<p>Mono (aka Xamarin) are getting out of the compiler&#x2F;language reverse engineering game and focusing 100% on mobile. They no longer need to clean room the MSFT implementation because the MSR license as a purple-pill. Now that Microsoft has relicensed under MIT developers are arriving in droves.<p>Advantages? .NET everywhere, SINGLE reference implementation&#x2F;specification means no more bugs.<p>edit: You can see the transformation of Xamarin -&gt; Mobile and replacing internal components from CoreCLR over at <a href=""https:&#x2F;&#x2F;trello.com&#x2F;b&#x2F;vRPTMfdz&#x2F;net-framework-integration-into-mono"" rel=""nofollow"">https:&#x2F;&#x2F;trello.com&#x2F;b&#x2F;vRPTMfdz&#x2F;net-framework-integration-into...</a>",2015-04-24 05:44:00,9431625
1592,"A community is rapidly building around CoreCLR, and there are several companies that have a huge interest in running .Net languages on platforms other than windows (Xamarin, and Unity come to mind).",2015-04-24 06:22:45,9431712
1593,"My guess is that they want to sell two things: Azure and Windows Phone via Xamarin.<p>Say open-sourcing .NET convinces a team or a startup to write their new app in C#. When it comes time to deploy to production, maybe they&#x27;ll use Azure. VS has some Azure integrations to make it easy.<p>Now the team needs to write a mobile app. They have the option of using C# with Xamarin. Conveniently, you write Windows Phone apps in C# too, so maybe the team decides to target all three platforms instead of just the major two since they can get so much code reuse. A phone platform is really about the amount and quality of applications.<p>Sun was never able to monetize Java very well, but MS is in a little different circumstance since it has a cloud service and a mobile OS and hardware.",2015-04-24 07:07:08,9431812
1594,"Monodevelop&#x2F;Xamarin Studio does indeed have a long way to go. Do you know about the open source project OmniSharp? <a href=""http:&#x2F;&#x2F;www.omnisharp.net&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.omnisharp.net&#x2F;</a> which provides xplat development toolchain. .NET in Sublime Text&#x2F;Emacs&#x2F;VIM yep. It was created and maintained by both employees of MSFT and the OSS community.",2015-04-24 10:04:00,9432270
1595,"So it looks like this targets Windows and Android only (maybe iOS via Xamarin...?)<p>For an alternative the Poco C++ libraries[1] work on Android, iOS and Windows out of the box. Probably not as full featured and you obviously can&#x27;t use existing Visual C++ code..., but its Open Source and mostly just works.<p>[1] <a href=""http:&#x2F;&#x2F;pocoproject.org&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;pocoproject.org&#x2F;</a>",2015-04-24 15:39:56,9434065
1596,They&#x27;d be competing with Xamarin if they did that.,2015-04-24 16:47:59,9434462
1597,"Because C++ is faster and can be compiled to machine code and, at least for now, you will need a 3rd party solution like Xamarin in order to compile and run C# on other platforms.",2015-04-24 16:55:39,9434527
1598,"I think this is Xamarin, it&#x27;s mentioned once on the page:<p>&gt; ...or use these C++ libraries to build complete Xamarin Android Native or Java Native Interface applications.<p>It&#x27;s a little unclear though",2015-04-24 16:56:59,9434535
1599,It is no Xamarin here! What they say is that you can use these C++ libraries from Xamarin or directly from Java (with JNI).,2015-04-24 17:00:23,9434554
1600,"Dont, please dont. Save people resource to focus on visual studio windows. Maybe the better solution is use different approach, send minor team to assist xamarin fixing xamarin studio fixbug",2015-04-24 23:21:44,9436497
1601,"F# is a real breath of fresh air in comparison to something like Scala.  It&#x27;s direct ML heritage really shows, also just diving in with an IDE (like Xamarin, or I suppose Visual Studio) is super easy.<p>I see it as the future of pop-functional programming.  For example look at the way it handles type inference w&#x2F; JSON parsing.  Compare that to what you have to do to parse JSON in Scala.  It&#x27;s subtle, but a major usability win.",2015-04-29 17:33:27,9460035
1602,"This move is so smart.  Windows, which is app deficient, is now super easy to build to.  I wonder how this will affect the Xamarin ecosystem.",2015-04-29 17:36:24,9460060
1603,"This is a brilliant move to make Windows 10 much more relevant.  I really like some of my Android apps, but I want a Windows phone.  Hopefully this will encourage apps like Automatic to move to Windows phone.<p>I also wonder if this will affect Xamarin in a negative way.",2015-04-29 17:41:38,9460115
1604,Single modern language is still a strong selling point for Xamarin.,2015-04-29 17:57:27,9460274
1605,"Who else experienced a secret guilt about thinking &quot;oh good, I&#x27;m going to try this out, and I hope it works well&quot;?<p>If it helps with Unity C# development on a Mac, I will be very happy. Please be better than MonoDevelop!<p>Note: I installed the latest version of Mono and now Intellisense is working with my Unity project!<p>I voted for this:<p><a href=""http:&#x2F;&#x2F;visualstudio.uservoice.com&#x2F;forums&#x2F;293070-visual-studio-code&#x2F;suggestions&#x2F;7752702-unity-integration"" rel=""nofollow"">http:&#x2F;&#x2F;visualstudio.uservoice.com&#x2F;forums&#x2F;293070-visual-studi...</a><p>&gt;Unity Integration<p>&gt;Visual Studio for Mac is a breath of fresh air for those of us who use Unity on a daily basis. Please oh please get it tightly integrated, similar to UnityVS for Windows.<p>&gt;The day I can dump MonoDevelop and Xamarin for good would be better than my last 10 birthday presents combined - and they were pretty sweet!",2015-04-29 18:15:21,9460453
1606,I think the point of this is to port existing apps. Microsoft has a lot of different technologies (like .NET with Xamarin) to build multiplatform apps going forward. But this helps Microsoft catch up to Android and iOS in terms of app availability now.,2015-04-29 18:18:49,9460489
1607,"If I build a native Android app using Xamarin and then take that code and compile it using Visual Studio to then run on Windows 10 will the Windows ecosystem collapse into itself like what happened to Ron Silver in TimeCop when JCVD pushed his present self into his future self?[1]<p>[1] <a href=""https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=D01mdGW9-Zg"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=D01mdGW9-Zg</a>",2015-04-29 19:27:02,9461045
1608,"In order to stay relevant, Microsoft attempts to supplant Xamarin&#x27;s stakehold in the Linux&#x2F;iPhone market, by directly eating their lunch.<p>This is the same thing Microsoft did to IBM. Microsoft will do it to any &quot;partner&quot; they feel they can cannibalize. The Halloween Documents are not only relevant, but canon with this move.",2015-04-29 22:04:12,9462144
1609,"Well technically Xamarin are eating Microsoft&#x27;s lunch right about now - <a href=""https:&#x2F;&#x2F;trello.com&#x2F;b&#x2F;vRPTMfdz&#x2F;net-framework-integration-into-mono"" rel=""nofollow"">https:&#x2F;&#x2F;trello.com&#x2F;b&#x2F;vRPTMfdz&#x2F;net-framework-integration-into...</a>",2015-04-29 22:22:26,9462235
1610,No need to wait - xplat F# is available right now via MonoDevelop&#x2F;Xamarin Studio. You can use it to develop iOS&#x2F;Android&#x2F;Desktop&#x2F;Web applications.,2015-04-29 23:42:54,9462574
1611,"From my experience thus far the .NET community is not friendly to open-source. Yes, open-source projects do exist, but those are few and far between, being either ports from the Java world, or throwaways that failed as commercial projects. There are also instances of bait and switch, as in projects starting as open-source being closed later (e.g. ServiceStack). Also compare RoboVM.com with Xamarin.com. If you&#x27;ll dig into the details, you&#x27;ll see similarities (like comparable pricing), with one important difference ... RoboVM is open-source and you only need a subscription for extra goodies. Same thing with IntelliJ IDEA versus Visual Studio. I find this difference to be the essence of the .NET ecosystem versus the others.<p>You mentioned NuGet, which is like `gem`. Well, the build tools in .NET land suck really badly. You&#x27;ve got MSBuild, which is like Ant or Make and that&#x27;s what everybody uses, because development in .NET-land is Visual Studio driven. What you don&#x27;t have for example is something like Maven (or SBT, or Lein). There&#x27;s been nothing like it in .NET land. The ASP.NET developers have been building an alternative, in the form of dnvm &#x2F; dnx &#x2F; dnu, but it&#x27;s just getting started, being a work in progress and feeling hack-ish and incomplete. Fingers crossed.<p>Anyway, in spite of the fact that there are companies that have built their own build tools because the current status quo sucks so badly (and I know more than one), the .NET community is filled with closed-minded folks that will never admit that their tooling sucks and I&#x27;m even including Visual Studio itself in this mix, since an IDE that needs extra investments into ReSharper is not that good in my opinion.<p>And then there&#x27;s Mono, the current cross-platform implementation and the answer to folks that want to develop and deploy on Linux, OS X, Android or iOS. Except that Mono is and has historically been full of bugs. Like if you want to do server side development and deploy on Mono, just forget about it. And these days Xamarin is focusing only on mobile development and the community is dead.<p>&gt; <i>Would, say, a Ruby or node.js-oriented web developer find the F#&#x2F;.NET community lacking, incomplete, unfriendly, uncool? Is there even a community to speak of?</i><p>The answer in my opinion is yes. This may change, given recent efforts by Microsoft, however evolution will be slow because the whole ecosystem has to change, not just Microsoft.",2015-04-30 23:43:59,9468329
1612,"I&#x27;ve been writing most of my utility code in F# for the past few months, is there anything that you guys DON&#x27;T like about it? I&#x27;m really enjoying how terse it is in comparison to C# and haven&#x27;t really run into anything that&#x27;s bothered me, besides Xamarin Studio being bloated.",2015-05-01 00:19:25,9468526
1613,"<i>&gt; Not everyone is ... working on mobile apps</i><p><a href=""http:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-passes-1-million-developer-milestone&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-passes-1-million-developer-m...</a>",2015-05-01 11:41:42,9470673
1614,"New Orleans, LA. Mid City.<p>Dynamic Health IT provides healthcare interoperability and certification solutions. Our focus is on turnkey HL7 solutions and ONC-certified bolt-on software for Meaningful Use, Clinical Quality Measures and Patient Portal.<p>We currently have two listing. One is for a .Net developer. The other is more specific for a mobile apps developer working in Xamarin.<p><a href=""http:&#x2F;&#x2F;neworleans.craigslist.org&#x2F;sof&#x2F;4972874193.html"" rel=""nofollow"">http:&#x2F;&#x2F;neworleans.craigslist.org&#x2F;sof&#x2F;4972874193.html</a><p><a href=""http:&#x2F;&#x2F;neworleans.craigslist.org&#x2F;sof&#x2F;4992315043.html"" rel=""nofollow"">http:&#x2F;&#x2F;neworleans.craigslist.org&#x2F;sof&#x2F;4992315043.html</a><p>Excellent compensation. Flexible hours, good benefits, casual friendly work environment. Great location on street car line in Mid-City New Orleans. Interns considered.",2015-05-01 14:52:53,9471742
1615,"I&#x27;m still wondering whether MS will encroach on Xamarin territory, especially if it&#x27;s free.",2015-05-01 16:36:28,9472674
1616,"SEEKING WORK - The Netherlands or Remote.<p>I&#x27;m an experienced team lead, interim CTO, and full-stack developer. Currently bootstrapping co-founder at <a href=""http:&#x2F;&#x2F;klets.co"" rel=""nofollow"">http:&#x2F;&#x2F;klets.co</a>, but I do occasionally have time to help people get their team produce better software faster. Do get in touch!<p>I specialize in cutting away the nonsense and getting a team highly productive in startup-like environments. I accomplish this with a lightweight, non-religious, and highly reflective agile process, together with a pragmatic focus on internal software quality. This focus ensures that the team is productive today <i>and</i> the coming months and years.<p>I&#x27;m a passionate programmer and I use my engineering experience to coach team members in modern development practices, coding styles and architecture concepts. My goal is to make your team work so well that soon my help is not needed anymore.<p>Keyword soup: Scrum, Kanban, Lean, C#&#x2F;.NET, JavaScript, ES6, TypeScript, ReactJS, Flux, Java, Scala, C++, Python, Elixir, Xamarin, PhoneGap&#x2F;Cordova, PostgreSQL, DDD.<p>Chat with me on <a href=""https:&#x2F;&#x2F;klets.com&#x2F;egbert"" rel=""nofollow"">https:&#x2F;&#x2F;klets.com&#x2F;egbert</a>.",2015-05-01 18:30:00,9473546
1617,"Pangea | Chicago, IL | Full Time | Web (React.js), Android (Java), iOS (Objective-C&#x2F;Swift), DevOps (AWS&#x2F;Chef or similar), Backend (.NET&#x2F;C#)<p>Pangea is an emerging payments company that is developing an innovative value transfer system that leverages retail, mobile and web connectivity to address the high costs and lack of transparency in the money remittance space. We aim to empower the 2.5 billion global underbanked community that have limited access to basic financial services. Pangea is 1 of 8 companies selected for the inaugural class of the Impact Engine, a venture accelerator led by Chuck Templeton, the founder of OpenTable (NASDAQ: OPEN) with guidance from world-class mentors and entrepreneurs. We&#x27;re located at 1871, the entrepreneurial center at the Merchandise Mart.<p>Full job descriptions:<p>- Lead Mobile Engineer (<a href=""https:&#x2F;&#x2F;gopangea.com&#x2F;jobs&#x2F;lead-mobile-engineer.html"" rel=""nofollow"">https:&#x2F;&#x2F;gopangea.com&#x2F;jobs&#x2F;lead-mobile-engineer.html</a>)<p>- DevOps (<a href=""https:&#x2F;&#x2F;gopangea.com&#x2F;jobs&#x2F;devops-engineer.html"" rel=""nofollow"">https:&#x2F;&#x2F;gopangea.com&#x2F;jobs&#x2F;devops-engineer.html</a>)<p>- Android (<a href=""https:&#x2F;&#x2F;gopangea.com&#x2F;jobs&#x2F;android-developer.html"" rel=""nofollow"">https:&#x2F;&#x2F;gopangea.com&#x2F;jobs&#x2F;android-developer.html</a>)<p>- Backend&#x2F;Full stack (<a href=""https:&#x2F;&#x2F;gopangea.com&#x2F;jobs&#x2F;full-stack-software-engineer.html"" rel=""nofollow"">https:&#x2F;&#x2F;gopangea.com&#x2F;jobs&#x2F;full-stack-software-engineer.html</a>)<p>Currently, our backend is mostly .NET (C#) running on Amazon Web Services (using ElastiCache with Redis, RDS with MySQL). We use git (on Bitbucket), Chef, TeamCity, JIRA, and Slack. The keyword here is currently. We believe in using the right tool for the job. Your input will help shape the future of our tooling and the business.<p>Developers get fully loaded Retina Macbook Pros, dual monitors and your choice of keyboard and mouse. We run Parallels for .NET&#x2F;C# work and hope to move to VSCode or Xamarin for backend development when the time is right.",2015-05-01 21:37:46,9474688
1618,"We&#x27;re a pretty small software consulting agency, so we&#x27;re looking for engineers that are capable of learning new technologies and adopting to best-practices in those technologies.<p>Ideally, we&#x27;re looking for people that:<p>* bring expertise in at least one framework that we&#x27;re likely to use[1], and<p>* love to start projects in a software stack that they haven&#x27;t used before.<p>[1] Rails, django, iOS, Android, Xamarin, WPF, visual design skills",2015-05-02 00:44:09,9475386
1619,"This is a significantly more compelling use for Dart than anything else I&#x27;ve seen.<p>Dart team; stop screwing around and pay attention to this! Dart has failed as a browser script language, but its a good language in itself.<p>A cross platform language for building high performance apps, with a good package management solution and tooling... Thats a compelling use case. Something like a cross platform Swift...<p>Add some compiles to native binaries (or some kind of runtime bundling like xamarin do) and you&#x27;d have a pretty interesting piece of tech there.<p>(&#x27;lets focus on our to javascript compiler for the dart compiled from typescript because the dart runtime is never going into Chrome or any other browser&#x27; is not. Stop running down that ridiculous road already)",2015-05-02 09:39:54,9476481
1620,"Beer&#x2F;Wine Industry | Philadelphia, PA &#x2F; Burlington, VT<p>Vermont Information Processing is seeking more devs to help us continue to lead the way in business solutions for beverage suppliers, distributors and retailers. We work with the largest brewers to the latest craft sensations.<p>Positions available:<p>- Java web services dev for our growing service-oriented architecture<p>- Xamarin .NET&#x2F;C# dev for cross-platform mobile apps<p>- Full stack dev (PHP, JS) for our middleware and everything around it<p>VIP is an Employee Owned Company (ESOP) with a long, successful and profitable history. So the phrase &quot;act like an owner&quot; is actually reality here.<p>The Philly branch office is located just north of the border in Trevose.<p>Contact michael (at) vtinfo.com",2015-05-02 15:30:02,9477407
1621,"A completely different suggestion: Neither - learn C# and use Xamarin. Lower learning curve than both Swift and Objective-C, you can port your apps to other platforms more easily, and your new skill will be applicable across paradigms beyond iOS development.",2015-05-03 19:16:54,9482599
1622,"1) Your app is now tied for life to a third-party vendor.
2) There&#x27;s is a steep yearly licensing fee. (starting at 300 USD PER developer, PER platform).
3) Xamarin Forms is notoriously buggy if you&#x27;re looking to also use it for cross-platform UI code.
4) It&#x27;s debatable how much easier C# is to learn than Swift.",2015-05-03 19:37:53,9482679
1623,I wouldn&#x27;t advice Xamarin to someone who wants to learn to write apps for iOS.<p>Xamarin in great but it makes most sense to use in a professional environment where a single app needs to be target at multiple platforms. Usually developers using Xamarin already have a great understanding of iOS and Android (and Windows?) before they start using Xamarin.<p>I think for someone new to developing apps it would be too much of an abstraction.,2015-05-03 20:35:17,9482906
1624,"So, I&#x27;ve actually been working for the past while on a project to allow building more native apps on Android using Python. It is built on the Kivy tools, but I have had to make some changes to python-for-android specifically because it&#x27;s not as seperated from Kivy as the developers think. I&#x27;ve also had to make a small change to PyJNIus, as it has a dependency on SDL when on Android.<p>The reason I chose to work on this is while you can already create an application using Kivy, it sort of exists in its own world compared to standard Android apps. Because you don&#x27;t have separate activities, you can&#x27;t really do stuff like have one of them be launched to handle a specific file or URL (disclaimer: what I&#x27;m building can&#x27;t either yet). There&#x27;s also the same issues you get with mobile apps that are web apps in an APK, where someone has attempted to reimplement native UI widgets and there&#x27;s certain behaviours that are not quite right or missing, or you can&#x27;t use them yet because they haven&#x27;t been replicated in your environment yet.<p>So basically what I&#x27;m doing is the Python equivalent of Xamarin.Android (<a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;Android&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;Android&#x2F;</a> ) built on some of the Kivy tools. The idea is that you&#x27;d have the bulk of your logic in cross platform Python and a thin UI layer for any platforms you had. And in the future if someone made a similar thing for iOS, you could build a layer overlying the two of them and get actually native behaviour on both.<p>Overall I&#x27;ve gotten it to the stage where you can create activities, access some standard UI elements and launch third-party apps via Python code, but like I said, it&#x27;s still at a pretty early stage.<p>I&#x27;d intended to open source it when it got to a more usable state, as it&#x27;s pretty much in proof of concept state atm. (bugs ahoy, tests and docs are very lacking, feature coverage is low, setup is a PITA, and the API is too close to the Java API to make for nice Python). These are problems I believe are fixable. If you want to see the current state of it though, it&#x27;s on <a href=""https:&#x2F;&#x2F;bitbucket.org&#x2F;tonyfinn&#x2F;pydroid"" rel=""nofollow"">https:&#x2F;&#x2F;bitbucket.org&#x2F;tonyfinn&#x2F;pydroid</a> , but it&#x27;s a bit off how far I&#x27;d like to be before sharing it.",2015-05-03 21:37:38,9483174
1625,"Location: Riga, Latvia<p>Remote: Yes<p>Willing to relocate: Discussable<p>Technologies: .NET C#, Xamarin, Javascript (Angular, Node.js etc), HTML&#x2F;CSS (SASS, LESS)<p>Resume&#x2F;CV: <a href=""http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous"" rel=""nofollow"">http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous</a><p>Email: philgsky &lt;at&gt; outlook &lt;dot&gt; com<p>I&#x27;m a fullstack developer with strong .NET background (over 8 years experience). Also working with front end. Currently working with Xamarin for iOS, Android and Windows store apps. Fell free to contact me :)",2015-05-08 13:00:46,9511357
1626,"I have spent the majority of my career so far building large scale enterprise Data Warehouse and Business Intelligence solutions on the Microsoft SQL Server stack.<p>In my spare time I have managed to learn some Python which I have used for small pet projects. (I also managed to find time to do a Python Programmer certification through the O&#x27;Reilly School of Technology)<p>I want to break out of the pure Data Warehouse and Business Intelligence space but keep finding myself jumping between different programming languages. I have actively tried to avoid C# as I feel that I do not want to tie my skill set completely to Microsoft technology.<p>I like Python a lot but truly dislike the fact that I cannot &quot;compile&quot; projects into executable solutions for Windows at times. Similarly it cant be effectively used for mobile app development. (C# with Xamarin seems to make sense here.) However Python does seem to play really well with a lot of the different Cloud platforms out there, especially Google&#x27;s Cloud Platform.<p>Java would be another candidate but to be honest I would rather settle on C# instead of Java. The C# tooling feels much better than the Java tooling plus I find it really difficult to get excited about coding in Java after using Python.<p>Is there any one language that would provide me the best of all worlds, allowing me to build applications across Windows, Linux, and Mobile and tie in well with the cloud services from Google, Microsoft and Amazon? I truly feel like a dog chasing cars when it comes to programming.",2015-05-08 15:16:14,9512133
1627,"Looks really promising, thanks for the hint. It&#x27;s on my to-evaluate list along with:
<a href=""http:&#x2F;&#x2F;robobinding.github.io&#x2F;RoboBinding&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;robobinding.github.io&#x2F;RoboBinding&#x2F;</a><p>Also, if you&#x27;re open to Xamarin, there&#x27;s a great library there called MvvmCross that gives you in-AXML databinding and a general feel similar to Angular.",2015-05-10 15:37:36,9520203
1628,"Great game!  How did you do the cross platform?  Xamarin, native or something else??",2015-05-14 03:37:19,9543313
1629,"You realize this is officially abandoned right?<p><a href=""https:&#x2F;&#x2F;forums.unrealengine.com&#x2F;showthread.php?54595-I-want-Feedback-from-Epic-about-Mono-for-Unreal-Engine&amp;highlight=xamarin"" rel=""nofollow"">https:&#x2F;&#x2F;forums.unrealengine.com&#x2F;showthread.php?54595-I-want-...</a><p>&amp;tldr; Epic saw the Unity thing and went &#x27;nope; not unless you make it free forever&#x27;.<p>(Also, don&#x27;t bother. It doesn&#x27;t work with the most recent version of the engine either)",2015-05-14 11:54:50,9544531
1630,"Devils in the details huh? <a href=""https:&#x2F;&#x2F;store.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a><p>Doesn&#x27;t look free to me.<p>(and I&#x27;m not being narky. <i>This</i> is the point I&#x27;m making; it&#x27;s only superficially free. Then you have to say, ship a game, and woa~ wait, it has to be GPL now if you bundle the runtime, or you have to pay a licensing fee?)",2015-05-14 12:50:51,9544791
1631,"<i>Licensing
How much does this cost?<p>To redistribute code written with Mono for Unreal Engine, you must have a commercial license to the Mono runtime.<p>These licenses are included in Xamarin&#x27;s commercial products for targeting Mac, Android and iOS.<p>Xamarin product pricing starts at $0 for Starter Edition and adds Visual Studio support at $999 per developer, per platform.<p>In addition, you still need to comply to your license agreement with EpicGames for Unreal Engine.</i>",2015-05-14 12:53:13,9544802
1632,"Don&#x27;t confuse Mono and Xamarin, they&#x27;re two separate things.",2015-05-14 13:01:04,9544845
1633,"Sorry for wasting everybody&#x27;s time. I didn&#x27;t know this isn&#x27;t a real thing anymore. :-(<p>I was digging through Reddit and saw some interesting comment by Miguel de Icaza. It was regarding his blog post <a href=""http:&#x2F;&#x2F;tirania.org&#x2F;blog&#x2F;archive&#x2F;2014&#x2F;Oct-23.html"" rel=""nofollow"">http:&#x2F;&#x2F;tirania.org&#x2F;blog&#x2F;archive&#x2F;2014&#x2F;Oct-23.html</a> (Mono for Unreal Engine).<p>There was no update to the situation in this blog post. No information on the site I posted here. Really bad communication from Miguel and Xamarin. :-(<p>I have only followed one tutorial for Unity3D and have never tried Unreal Engine. I&#x27;m just interested in the topic because it&#x27;s different from my day job and I&#x27;d like to try something new. Posted the link here to provoke some discussion about it.<p>(The 1980s were so much easier. Not many choices on the C64.)",2015-05-14 13:02:39,9544854
1634,"&quot;<i>When do I need to obtain a license from Xamarin to the Mono Runtime?</i>
We only require licensing for uses of Mono and Moonlight on embedded systems, or systems where you are unable to fulfill the obligations of the GNU LGPL.<p>For example, if you manufacture a device where the end user is not able to do an upgrade of the Mono virtual machine or the Moonlight runtime from the source code, you will need a commercial license of Mono and Moonlight.<p>Or if you ship an application that requires to statically link the Mono runtime and you are not able to provide the object code to relink Mono, you must obtain a commercial license from Xamarin.&quot;<p>You can bundle as much as you want, as long as you adhere to the rules.",2015-05-14 13:21:06,9544982
1635,"I don&#x27;t even know what point you&#x27;re making.<p>&#x27;as long as you adhere to the rules.&#x27;<p>Yes, by &#x27;obtain a commercial license from Xamarin&#x27;, they mean, &#x27;pay a license fee&#x27;.<p>Like say, if you ship a mobile game. The only reason Unity gets away with it is because they have a <i>licensing deal</i> that permits them to ship mono.<p>If <i>you</i> want to write a mobile game, you pay for it.<p>That&#x27;s not freedom.",2015-05-14 15:15:11,9545621
1636,There&#x27;s nothing stopping you from porting the code to a Xamarin Studio add-in.,2015-05-14 22:06:18,9547854
1637,"I&#x27;m having a hard time parsing this comment in light of Apple and Google, which essentially do the same thing. The article mentions the extensions are similar to Chrome, so it&#x27;s possible that someone will build a translation layer that will take underlying code and build the application specific bindings.<p>Thanks to Xamarin, you can build an application for any platform using C#, and even more, .NET is running pretty much everywhere now. So, I&#x27;m confused as to what technology you are referring to?",2015-05-18 15:44:17,9565071
1638,"So, because Apple and (to a much lesser extent) Google lock down their platforms, I should be OK when Microsoft tries to do it too?<p>I don&#x27;t use iOS for the same reason that I won&#x27;t use any of Microsoft&#x27;s newly walled-in tech and I don&#x27;t use certain Google products for the same reason.<p>&gt; what technology you are referring to?<p>I&#x27;m referring to Metro&#x2F;Modern&#x2F;Windows Store&#x2F;Universal apps and Edge.<p>- On Windows if I want to distribute a Metro&#x2F;Modern app, I have to go through Microsoft&#x27;s store. At least Android allows non-Google app stores and side-loading with the flick of a switch.<p>- Metro&#x2F;Modern apps are not allowed talk to desktop apps. Even Chrome extensions and apps aren&#x27;t as locked down as Metro.<p>- It looks like they&#x27;re considering applying the same restrictions to Edge. Edge apps might only be able to talk to Windows Store apps.<p>None of this is OK with me. I never wanted Microsoft to do anything like Apple because I honestly don&#x27;t like the way they do anything.<p>&gt; .NET is running pretty much everywhere now...<p><i>Xamarin isn&#x27;t Microsoft and this is not relevant to my point but here is what I think about Xamarin.</i><p>Not yet. Not really. Relatively nobody is using Xamarin tools because they are too expensive compared to the free or low cost tools that are available for building straight iOS and Android apps (or even cross platform ones with Javascript).",2015-05-18 16:12:56,9565220
1639,"I don&#x27;t use Xamarin myself, but I don&#x27;t think it&#x27;s very accurate to say nobody is using their tools: <a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;customers"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;customers</a><p>If you spend any time at all talking with .NET developers (of which there are millions), many are very excited about Xamarin and being able to use their existing knowledge to build native cross-platform apps.",2015-05-18 16:28:49,9565308
1640,"The screw-up is that they introduced many variations of XAML, each one incompatible with the one that came before. Vista brought WPF, then came Silverlight to &#x27;counter&#x27; Flash, then came Windows Phone 7 Silverlight, then Windows 8 came with WinRT, while Windows Phone 8 had yet another dialect not compatible with Windows 8. And now Windows 8.1 and Windows 10 are trying to bring it together again. Add some rebranding efforts to this, and you have what we have now: XAML is a very good idea, but the implementation of it is a royal mess. As long as they keep changing it all the time, developers will keep getting burned and turned off.<p>An interesting angle to this story is the recent introduction of Xamarin Forms, which is also a form of XAML, even more universal in that it targets iOS, Android and Windows.",2015-05-24 11:38:53,9595958
1641,"Do note that XAML is merely a way of describing nested objects in XML. It&#x27;s just a markup language and it never was incompatible to itself. Heck, if you wanted to, you could use XAML to describe Swing GUIs for Java; you just need a parser that turns the markup into objects.<p>The implementations of the objects <i>referenced</i> by XAML may differ and have incompatibilities, but that&#x27;s not a XAML problem. Xamarin.Forms uses completely different ones, for example, while still keeping the same markup.",2015-05-24 11:56:42,9595980
1642,"What&#x27;s appalling is how many of the mobile app-related comments here are about cross-platform panaceas.<p>Just don&#x27;t. Well, OK, if you have an enterprise shop full of C# coders, you should evaluate Xamarin.<p>But unless that&#x27;s your story, and unless your tool is as well-engineered and well-funded as Xamarin, trying to get one code-base across Android and iOS is going end in pain and regret.<p>It&#x27;s back to a future of multiple platforms with fairly strong differentiation in features and toolchains. Deal with it.",2015-05-26 13:59:18,9604858
1643,"I was recently applying for work after graduation. One entry level position and a small company (with a vague job posting) wanted me to complete a pretty extensive problem which would involve access to their code base and take &quot;5 to 10 hours.&quot; I also would need to use a Mac and Objective C, even though these were not on my resume or the job posting. (I work in a .NET shop and had mentioned using Xamarin for Android development, and they were mainly doing iOS and OS X work, but extending into being cross platform).<p>I asked if they had a problem I could do that would be on more familiar tooling, noting that even if I could borrow an OS X machine, it would take me a while to get familiar enough to complete the task they sent me. I also expressed concern at the length. I ended up declining to participate and they moved on.<p>(Note: I have never used OS X besides briefly using someone else&#x27;s computer. Everything I have used has been Windows and Linux, with a couple of weekends of trying some BSD-based distros thrown in.",2015-05-27 15:23:35,9612006
1644,tldr; asking for a port of a C# app to windows phone and android gets you a lot of xamarin developers,2015-05-27 22:05:27,9614701
1645,"Senior Mobile Developer, Senior Javascript Developer:  Remote and&#x2F;or Logan, Utah<p>___Senior Mobile Developer___
We need brilliant people who love using cutting edge technologies to create engaging mobile applications on Android and&#x2F;or iOS, using Java and&#x2F;or ObjC, using Xamarin!<p>Preferred Qualifications: - Experience developing Android and&#x2F;or iOS applications - Experience with git - Experience with Agile Methodologies - Degree in Computer Science or related discipline - Passionate about mobile technologies and coding the <i>right</i> way - Experience with Xamarin and C#<p>To Apply:  <a href=""http:&#x2F;&#x2F;goo.gl&#x2F;3Rf9uS"" rel=""nofollow"">http:&#x2F;&#x2F;goo.gl&#x2F;3Rf9uS</a><p>___Senior Javascript Developer___
We are looking for full-stack developers who are interested in using cutting edge web technologies. The core of our web application is built on NodeJS and MongoDB.
You will be helping to improve and maintain a data-driven fitness platform that connects millions of devices and consumers.<p>Prefered Qualifications: You enjoy JavaScript, and are aware of its advantages and flaws. - You value open source. - You consider yourself a full-stack developer. - You are comfortable with *nix command line tools and processes.<p>Experience in these technologies would be considered a plus: NodeJS, MongoDB, Redis, Git, React, SASS<p>To apply: <a href=""http:&#x2F;&#x2F;goo.gl&#x2F;M8aKw9"" rel=""nofollow"">http:&#x2F;&#x2F;goo.gl&#x2F;M8aKw9</a>",2015-06-01 05:44:28,9636958
1646,"Atlanta, GA - CallRail - On-Site - www.callrail.com<p>We build call tracking analytics software for small and medium sized businesses and the digital marketing agencies that serve them. The company is profitable, with a paying customer base of 18,000 companies, and recently raised a small series A round. The current product team consists of 8 people, all Atlanta-based. We&#x27;re looking to add two or three more to help us build out the platform faster. Current tech stack is Ruby, Rails, AngularJS, Postgres, and Redis.<p>Senior Software Engineer - Looking for full-stack engineers who can help us expand the platform. Upcoming projects include refactoring key components into services, building out automated call scoring using machine classifiers, deeper integrations with other services, and improving our analytics tools.<p>Senior Mobile Engineer - We have aspirations of building native mobile applications, but nobody to do it. Looking for someone with experience building apps from the ground up, part of which will be scoping what features the app should include. No strong opinions on pure native vs hybrid vs Cordova vs Xamarin, but regardless there will eventually be some WebRTC components. Prefer to start with iOS, as that&#x27;s where most of our customers are.<p>More at <a href=""https:&#x2F;&#x2F;www.callrail.com&#x2F;careers"" rel=""nofollow"">https:&#x2F;&#x2F;www.callrail.com&#x2F;careers</a>, or email me directly.",2015-06-01 13:41:49,9638437
1647,"iFit | Senior Mobile Developer, Senior Javascript Developer | Logan, UT | Onsite; [Remote] | Full-Time<p>Senior Mobile Developer, Senior Javascript Developer: Remote and&#x2F;or Logan, Utah<p>___Senior Mobile Developer___ We need brilliant people who love using cutting edge technologies to create engaging mobile applications on Android and&#x2F;or iOS, using Java and&#x2F;or ObjC, using Xamarin!<p>Preferred Qualifications: - Experience developing Android and&#x2F;or iOS applications - Experience with git - Experience with Agile Methodologies - Degree in Computer Science or related discipline - Passionate about mobile technologies and coding the right way - Experience with Xamarin and C#<p>To Apply: <a href=""http:&#x2F;&#x2F;goo.gl&#x2F;3Rf9uS"" rel=""nofollow"">http:&#x2F;&#x2F;goo.gl&#x2F;3Rf9uS</a><p>___Senior Javascript Developer___ We are looking for full-stack developers who are interested in using cutting edge web technologies. The core of our web application is built on NodeJS and MongoDB. You will be helping to improve and maintain a data-driven fitness platform that connects millions of devices and consumers.<p>Prefered Qualifications: You enjoy JavaScript, and are aware of its advantages and flaws. - You value open source. - You consider yourself a full-stack developer. - You are comfortable with *nix command line tools and processes.<p>Experience in these technologies would be considered a plus: NodeJS, MongoDB, Redis, Git, React, SASS<p>To apply: <a href=""http:&#x2F;&#x2F;goo.gl&#x2F;M8aKw9"" rel=""nofollow"">http:&#x2F;&#x2F;goo.gl&#x2F;M8aKw9</a>",2015-06-01 15:27:09,9639323
1648,"Atlanta, GA - CallRail - On-site - <a href=""http:&#x2F;&#x2F;www.callrail.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.callrail.com</a><p>We build call tracking analytics software for small and medium sized businesses and the digital marketing agencies that serve them. The company is profitable, with a paying customer base of 18,000 companies, and recently raised a small series A round. The current product team consists of 8 people, all Atlanta-based. We&#x27;re looking to add two or three more to help us build out the platform faster. Current tech stack is Ruby, Rails, AngularJS, Postgres, and Redis.<p>Senior Software Engineer - Looking for full-stack engineers who can help us expand the platform. Upcoming projects include refactoring key components into services, building out automated call scoring using machine classifiers, deeper integrations with other services, and improving our analytics tools.<p>Senior Mobile Engineer - We have aspirations of building native mobile applications, but nobody to do it. Looking for someone with experience building apps from the ground up, part of which will be scoping what features the app should include. No strong opinions on pure native vs hybrid vs Cordova vs Xamarin, but regardless there will eventually be some WebRTC components. Prefer to start with iOS, as that&#x27;s where most of our customers are.<p>More at <a href=""http:&#x2F;&#x2F;www.callrail.com&#x2F;careers"" rel=""nofollow"">http:&#x2F;&#x2F;www.callrail.com&#x2F;careers</a>, or email me directly.",2015-06-01 15:39:52,9639457
1649,"SEEKING WORK - REMOTE - Portland Oregon<p>Experienced industry &quot;Salty Dogs&quot;! Kick-ass app development, lightening fast MVPs, cunning enhancements - other people&#x27;s code doesn&#x27;t scare us, QA - difficult bugs amuse us. Love to work with startups, consult on features, mitigating risk, lowering long-term cost. Multi-platform solutions -- don&#x27;t build it twice.<p>We eat: iOS, Android, Xamarin, Parse.com, Sqlite, REST, NDK, C&#x2F;C++, C#, Java, Obj-C<p>Battlefield:<p>Kickback Points iPhone and iPad <a href=""https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;kickback-points&#x2F;id528848853?mt=8"" rel=""nofollow"">https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;kickback-points&#x2F;id528848853?...</a><p>Garage 529 Android - Project 529 Anti bike theft app. <a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.project529.garage.production&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.project529...</a><p>Nike + Running - Nike&#x27;s premier running application. <a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.nike.plusgps&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.nike.plusg...</a><p>Economist Pocket World in Figures iOS App  <a href=""https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;economist-world-in-figures&#x2F;id438709514?mt=8"" rel=""nofollow"">https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;economist-world-in-figures&#x2F;i...</a><p>Caller Dashboard  (Android Tablet, Android Phone, Ultrabook) link: <a href=""http:&#x2F;&#x2F;www.thugdesign.com&#x2F;projects"" rel=""nofollow"">http:&#x2F;&#x2F;www.thugdesign.com&#x2F;projects</a><p>Ease into 5K Android  <a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper.c25k&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a><p>Bridge to 10K Android  <a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper.b210k&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a><p>Ease into 10K Android  <a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper.ei10k&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a><p>email at curtis [at] saltydogtechnology [dot] com   -- right now! ;-)",2015-06-01 17:10:33,9640303
1650,"Fairfax, VA
Remote: YES
Willing to Relocate: NO
Tech: Android, iOS, C#, .NET, WPF, Java, API and webservices
Resume: <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;pub&#x2F;scott-pio&#x2F;2&#x2F;595&#x2F;4a"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;pub&#x2F;scott-pio&#x2F;2&#x2F;595&#x2F;4a</a>
Email: pio.scott with gmail<p>I have experience with creating MVPs, CRMs, full apps, enhancements, testing and maintenance&#x2F;bug fixing.<p>About me: I am a single developer, but have the ability to grow the team quickly with people within my network. I have 12 years experience with programming and can start work today.<p>I have experience with:
  * App Design&#x2F;User Experience
  * Cross platform
  * Java
  * Objective-C
  * C#&#x2F;Xamarin&#x2F;.NET
  * Angular, Knockout, Jquery
  * Android, WP, iOS",2015-06-01 18:22:20,9640908
1651,"Location: Atlanta<p>Remote: Yes, currently working fully remote for 3 years<p>Willing to relocate: No<p>Technologies: UI&#x2F;UX design development (WPF, C#, Xamarin, HTML&#x2F;CSS etc.)<p>Experience: Specializing in UI&#x2F;UX design architecture and development for 12+ years.<p>Resume:<a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;georgephillip"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;georgephillip</a><p>Email: gphillip (at) dualhat (dot) com",2015-06-01 22:45:23,9642740
1652,I build apps with it; Haxe =&gt; C# on Xamarin...<p>Edit: Example of hackery I didn&#x27;t release because it&#x27;s hackery. But it&#x27;s stable and it works. I would like to find the time to clean it and release it.,2015-06-03 21:19:29,9655944
1653,"Location: Riga, Latvia<p>Remote: Yes<p>Willing to relocate: Discussable<p>Technologies: .NET C#, Xamarin, Javascript (Angular, Node.js etc), HTML&#x2F;CSS (SASS, LESS)<p>Resume&#x2F;CV: <a href=""http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous"" rel=""nofollow"">http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous</a><p>Email: philgsky &lt;at&gt; outlook &lt;dot&gt; com<p>I&#x27;m a fullstack developer with strong .NET background (over 8 years experience) and front end experience.  
Currently focusing on developing for mobile phones and tablets. Providing full package services from application design creation to  development for all platforms (iOS, Android, Windows). Looking for remote projects.",2015-06-05 14:33:51,9665737
1654,"SEEKING WORK - Remote or Argentina<p>I&#x27;m specialized in native (Objective-C &#x2F; Swift) and Xamarin iOS and OS X applications. I also have a lot of experience doing web sites and web services in various languages and frameworks so I often find myself working on the full stack.<p>I&#x27;m available up to 40 hours per week starting July. I have been working remotely in mostly Agile environments in the past three years and my preference is to be able to work remotely for at least half of the time. I&#x27;m fluent in English and Dutch but I speak Spanish and German as well.<p>The last year I have been working on the 2.0 version of the AXS App:<p><a href=""https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;axs&#x2F;id679805463?mt=8"" rel=""nofollow"">https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;axs&#x2F;id679805463?mt=8</a><p>I also released Ovo Timer:<p><a href=""https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;ovo-timer&#x2F;id925582403?mt=8"" rel=""nofollow"">https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;ovo-timer&#x2F;id925582403?mt=8</a><p>If you are interested shoot me a line at lucas.van.dongen@gmail.com or add me on Skype at lucas.van.dongen@outlook.com.",2015-06-05 19:08:07,9667413
1655,"Apple: was afraid to loose developers to Xamarin (once it becomes more stable). Failed to deliver a fast language, failed to deliver an open-source language in 2014 (!).<p>Google: starts using &#x2F; creates a new language every few years - C++, Python, Java, Dart, Go. Failed to stick to the vision of native Dart support inside of Chrome, Angular team deflected to TypeScript as a better alternative, Go - quite limited, e.g. no generics - nowadays(!), useful if you cannot use other options due to &quot;religious&quot; views or the situation.",2015-06-08 08:29:21,9677855
1656,"I think this is where companies like Xamarin and JetBrains can pick up the slack as they have with the Microsoft stack. As long as it&#x27;s (legitimately) opened-sourced, of course.",2015-06-08 22:49:48,9683019
1657,Xamarin and Jetbrains live in the enterprise market. It&#x27;s hard to see Swift quickly gaining traction in that space.,2015-06-08 22:58:32,9683053
1658,"This is great!<p>I bet:
* Swift will get ported to Android.
* Swift will compete with Mono.
* Xamarin will add Swift support to Mono.",2015-06-08 23:25:45,9683148
1659,"I just said iOS as an example. I didn&#x27;t mean to make it appear I was stacking the deck, you could use Xamarin and target all platforms if you wanted. That&#x27;s still easier than supporting all browsers over time. All browsers over time with a complex app like Gmail? Forget it.<p>But the issue I was trying to convey is that you&#x27;re an edge case and in an increasingly marginal pool as time goes on. Most people aren&#x27;t sitting at the computer all day, and even if they do (we&#x27;ll say so for sake of argument), they stay off personal email at work (a good idea). And they use their phone yet still.
That&#x27;s what I do. I&#x27;m at a desk all day as well, and never login to personal stuff on my work network&#x2F;machine. That&#x27;s where iOS gets its use.",2015-06-11 06:41:58,9698013
1660,Cool! It makes me change my opinion on the whole Unity vs Xamarin.,2015-06-13 08:03:11,9710283
1661,"No - I&#x27;ve never worked with Xamarin (although I&#x27;ll be looking at it in the coming days &#x2F; weeks for a personal project - it looks quite sweet now). But I&#x27;ve got loads of experience with both .NET and Objective-C &#x2F; Cocoa.<p>Most of my experience has been on the .NET platform and primarily on the backend &#x2F; distributed systems side of things.<p>However, between 2010 and 2013, I was co-founder and CTO of a tech startup where our main product was a fairly sophisticated native iOS app. Being a bootstrapped startup, I had to do all the tech work myself. So I got a lot of experience with Objective-C &#x2F; Cocoa that way. On the back of that, I got a contract to develop a native iPad app for the BBC, providing me with some additional experience building an app for an external client.<p>When I landed on the job market in January last year, I was therefore happy to take either an iOS contract or a .NET one.<p>I ended up taking a .NET contract. And to be completely honest, large-scale software systems &#x2F; distributed systems is really where my heart lies. So I&#x27;m now pitching myself as a .NET developer only as this is the type of role I&#x27;m most keen on.<p>I&#x27;d actually be really happy to take on a role that uses another stack as well. But as a contractor, it&#x27;s not really realistic to expect a client to pay you to learn a new language &#x2F; stack :)",2015-06-16 17:09:25,9727288
1662,"If user experience is your advantage, then you should go native. Some product like xamarin or nativescript able to provide standard native experience with little effort. You can call it write once read anywhere. But if you want big customize UI just like snapchat or instagram, i think there isn&#x27;t any shortcut.",2015-06-17 18:05:58,9733976
1663,"&gt;pseudo-freemium open source release is still better than nothing<p>No - it&#x27;s much better than copyleft - the only point he has is the lack of patent grants - which is achievable without copyleft (like Apache license).<p>Apache gives you the code and the ability to integrate the code in to your product where the copyleft part might not fit.<p>Open source isn&#x27;t some ideological dogma for me or these companies - it&#x27;s a tool to lower the cost of maintenance&#x2F;support (eg. community is very good at maintaining ports for niche use cases you don&#x27;t have the resources to support), gain exposure and provide better tools for developers (it&#x27;s much easier to work with tools that you have source access to).<p>If you see open source as that then (A)GPL becomes a niche license that&#x27;s useful for stuff like giving people free access but knowing that copyleft will unacceptable for most commercial applications so they will need to license a custom version (eg. this is the business model of companies like Qt, Xamarin, etc.)",2015-06-18 10:17:21,9737672
1664,"This is a hand-made port of BeanIO from Java to .NET which was changed in the following aspects:<p>* Support of .NET generics<p>* Availability as PCL (.NET 4.5, Win8, Win Phone 8.1, Xamarin.iOS&#x2F;Android)<p>* Scheme handlers to support loading of mappings from any place<p>* Available as NuGet package<p>All original unit tests were ported (over 300) and should therefore mostly behave in the same way as the original BeanIO project.",2015-06-20 16:42:26,9750376
1665,"xamarin is what you are looking for. I can&#x27;t believe this answer hasn&#x27;t been posted. xamarin is supported by microsoft and targets both ios, andriod and windows.",2015-06-23 02:14:00,9762281
1666,"Don&#x27;t get me wrong, I love Xamarin, but this:<p>&gt; We could then build thin, platform native UIs (also written in C#) over the top of our business logic..<p>&quot;thin, platform native UIs&quot;? From my experience this is a complete fallacy. I obviously can&#x27;t rule out all situations but my experience is that 15%-20% of the code is shared and 80%-85% of the code is platform UI specific.<p>However, having said that, if you want to develop a single app for iOS, Android and Windows Phone, as far as I&#x27;m concerned, there is no better alternative than Xamarin.",2015-06-26 22:35:00,9788153
1667,"With .NET Core, is there any reason to not just drop IL2CPP completely?<p>(The whole thing only existed in the first place because they are stuck on a completely outdated Mono version, due to Xamarin changing the license of newer Mono versions trying to extract money from Unity.)",2015-06-28 15:38:04,9793882
1668,"Can we kill off the Mono libel already?<p>Mono changed the license <i>so that it could be used in Unity to begin with</i>.  Mono was available under a copyleft license.  To everyone.  Including Unity.  Unity couldn&#x27;t&#x2F;wouldn&#x27;t accept it under those terms, so folks at now-Xamarin said, &quot;We&#x27;ll offer it to you under a commercial license if you won&#x27;t take the copyleft offering.&quot;  That&#x27;s standard fare.  Unity said, &quot;Okay, deal.&quot;  Mono continued to improve over the years.  Unity was interested in those improvements.  Mono said, &quot;Okay.  You can get those under a commercial license, too.&quot;  Unity balked.<p>So what we&#x27;re really talking about is that Unity wants the improvements that have been made to Mono, but doesn&#x27;t want to pay for them.<p>Get this: They&#x27;re still free at any point to accept Mono under the copyleft license that&#x27;s available to <i>literally everyone</i>, but they won&#x27;t accept it under any terms other than their own.  That&#x27;s it.",2015-06-28 16:01:14,9793964
1669,"That seems like a very unfair description of the situation.<p>Do you know the specific licensing terms that Xamarin offered to Unity? Probably none of us here do. Given that, why would you assume Unity was the unreasonable party, and not Xamarin?<p>Regarding the copyleft license, while it is an option for everyone in general, it isn&#x27;t an option for Unity, which needs to ship on platforms that do not allow such licenses (iOS, game consoles). Products like Unity will always need a commercial license as long as such platforms exist.",2015-06-28 16:13:35,9793999
1670,"&gt; Given that, why would you assume Unity was the unreasonable party, and not Xamarin?<p>I don&#x27;t know what this means.  What we know of the situation is that Unity doesn&#x27;t want to pay a commercial license for Mono.  This is even the way that pro-Unity&#x2F;anti-Mono folks frame the situation.  What do you have in mind here?<p>&gt; Regarding the copyleft license, while it is an option for everyone in general, it isn&#x27;t an option for Unity<p>That&#x27;s all well and good, but it doesn&#x27;t have much to with any obligations Mono has.  Those are completely synthetic restrictions that the platform vendors are placing on the people targeting them.  How does Mono get the blame for Apple and Nintendo&#x27;s choices here?  Why do Apple and Nintendo get treated as bedrock?  Even so, that&#x27;s bedrock that Unity knows they&#x27;re working with.  It&#x27;s their choice to target those platforms.<p>EDIT:<p>&gt;  That seems like a very unfair description of the situation.<p>Unfair.  Every reference to the Unity&#x2F;Mono relationhip I&#x27;ve ever come across has been from someone who heard Unity&#x27;s creative retelling of the conflict and parroted it exactly, down to overtly identifying Mono as the bad guy.",2015-06-28 16:24:09,9794033
1671,"It means: Xamarin offered a commercial license to Unity for $X under Y terms. We don&#x27;t know what X and Y are, since this was not a public negotiation. X and Y could be reasonable, or they could be totally unacceptable. They could be offered in good faith, or they could not.<p>We just don&#x27;t know the answer, and you&#x27;re assuming the party offering X and Y is reasonable. But it might not be. We don&#x27;t know.<p>edit to your edit: if you heard people on the internet being wrong in some way, that doesn&#x27;t justify you being wrong in the opposite way.",2015-06-28 16:28:52,9794052
1672,"You said<p>&gt; So what we&#x27;re really talking about is that Unity wants the improvements that have been made to Mono, but doesn&#x27;t want to pay for them.<p>which paints Unity as the bad guy, when for all we know, it might not be. Perhaps Unity is totally OK with paying for a license, but the Xamarin terms would have bankrupted it.<p>But thank you for clarifying what you meant. I agree there is no point in saying either party is the bad guy, since there is not enough public information to know.",2015-06-28 17:07:07,9794180
1673,"The only thing I&#x27;m saying are very negative things towards people who read (or heard the story of) Unity&#x27;s PR-level attempt to make it sound like the people behind Mono are jerks, and then bought in to it full force and now repeat the line at every opportune moment (and then some inopportune ones, too, like the comment I replied to).<p>What we also don&#x27;t know are the terms for the first negotiation.  It&#x27;s as possible that Mono made one offer and Unity countered with an insultingly lower one, then Mono accepted due to being a poor position to negotiate something &quot;reasonable&quot;, but are no longer in a position to have to accept whatever is offered, now that Xamarin is off and running.<p>We don&#x27;t know.  Hypotheses non fingo.",2015-06-28 18:07:54,9794388
1674,"I suspect what we will see happen is the District Court will rule that it was fair use, it will go to the Federal Circuit again and then the Federal Circuit will overturn the fair use claim. As the Federal Circuit is incredibly pro-IP, I suspect they will be unpersuaded by any claim otherwise.<p>At that point, if SCOTUS does not take up an appeal, the computer science world will have a big problem. If APIs are copyrighted and reimplementing libraries violates copyright, then:<p>What of all the projects that have implemented LIBC, and used glibc&#x27;s API and headers? e.g.: Is musl now GPL?<p>What of any OS or project that has implemented a POSIX layer? (Is this the decision SCO needed to finally sue someone for Linux finally violating SCO&#x27;s copyright?)<p>What of any project that implements x-plat APIs? As another comment pointed out, Microsoft&#x27;s Project Islandwood re-implements iOS APIs. But Xamarin, Cordova and other projects all ingest APIs and reconfigure them to make them accessible on multiple platforms. Are they contaminated by copyright now?<p>If the Federal Circuit decision stands, software might have finally encountered the lump it can&#x27;t digest as it eats the world.",2015-06-29 14:09:04,9798137
1675,"&gt; Microsoft&#x27;s Project Islandwood re-implements iOS APIs. But Xamarin, Cordova and other projects all ingest APIs and reconfigure them to make them accessible on multiple platforms. Are they contaminated by copyright now?<p>Which is funny, because Microsoft played a big role in helping Oracle win this one:<p><a href=""http:&#x2F;&#x2F;arstechnica.com&#x2F;tech-policy&#x2F;2013&#x2F;02&#x2F;microsoft-foresees-chaos-if-google-v-oracle-result-stands&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;arstechnica.com&#x2F;tech-policy&#x2F;2013&#x2F;02&#x2F;microsoft-foresee...</a>",2015-06-29 14:49:07,9798404
1676,"Qt is wonderful. However they abandoned the Indie licensing. Now it&#x27;s more expensive for developers, compared to the monthly price of Xamarin, for example.",2015-07-01 15:30:30,9812486
1677,"sorry for double submit, link changed after 1 hour deadline.<p>Correct link:
http:&#x2F;&#x2F;www.whitneyland.com&#x2F;2015&#x2F;07&#x2F;xamarin-review-2015.html",2015-07-01 15:54:55,9812751
1678,"KickBack Rewards Systems, Remote<p><pre><code>  KickBack Rewards Systems
  http:&#x2F;&#x2F;www.kickbacksystems.com
  http:&#x2F;&#x2F;careers.kickbacksystems.com

</code></pre>
KickBack Rewards Systems is a privately held company founded in 1999 that specializes in customer specific marketing and payments for over 1000 US clients. Our clients include a half-dozen Fortune 50 companies, one of them is an anchor partner in our national coalition loyalty program. As the CTO and Director of Software Development I need some help! You will be joining a medium sized team of 13 developers who all commit to their projects as a labor of love and their lives work. If you are interested in any of these positions my contact information is located under my profile.<p>-<p>Test automation lead<p>We are seeking a Test Automation Lead to join our Software Quality Assurance (SQA) team. Candidate must have a background in test automation and experience with web application front-end and back-end scripting. Candidates with previous experience on Agile teams will be well suited for this position. We are looking for a mid-level tester with leadership and management skill-sets. This is a full-time staff position located either in Twin Falls, ID or remote. If remote, candidate must be willing to work around regular MDT office hours. This is a full-time staff position. KRS will not consider outsourced or software development contracts.<p>-<p>Lead Senior Software Engineer<p>We are seeking a Senior full-stack Developer with leadership experience to act as our technical team lead for a newly formed features team. Were looking for someone with a strong computer-science background who has deep JavaScript experience who can help the team develop better applications. The correct person must be a polyglot and should feel comfortable reviewing JavaScript, PHP, Python and have a willingness to learn C# (Xamarin) for mobile projects. Candidates with previous experience on Agile teams will be well suited for this position. The expectation is that this person would focus on front-end development and interface very closely with the back-end team, but all of our leads are competent full-stack developers and very ops savvy. Furthermore everyone is empowered to explore and implement new ideas and improvements. This is a full-time staff position located either in Twin Falls, ID or remote. If remote, candidate must be willing to work around regular MDT office hours. This is a full-time staff position. KRS will not consider outsourced or software development contracts.<p>-<p>DevOps Engineer<p>We are hiring for our DevOps Engineering team. KickBack is looking for a technical leader with proficiencies in modern DevOps tooling, network administration and, Linux server administration. This is a full-time staff position. KRS will not consider outsourced or software development contracts.<p>To apply: Email me, my contact information is located under my profile, or, visit <a href=""http:&#x2F;&#x2F;careers.kickbacksystems.com"" rel=""nofollow"">http:&#x2F;&#x2F;careers.kickbacksystems.com</a>",2015-07-01 16:03:47,9812840
1679,"iFit | Senior Mobile Developer, Senior Javascript Developer | Logan, UT | Onsite; [Remote US Only] | Full-Time<p>___Senior Mobile Developer___ We need brilliant people who love using cutting edge technologies to create engaging mobile applications on Android and&#x2F;or iOS, using Java and&#x2F;or ObjC, using Xamarin!<p>Preferred Qualifications: - Experience developing Android and&#x2F;or iOS applications - Experience with git - Experience with Agile Methodologies - Degree in Computer Science or related discipline - Passionate about mobile technologies and coding the right way - Experience with Xamarin and C#<p>To apply: <a href=""http:&#x2F;&#x2F;goo.gl&#x2F;9lx1Pi"" rel=""nofollow"">http:&#x2F;&#x2F;goo.gl&#x2F;9lx1Pi</a><p>___Senior Javascript Developer___ We are looking for full-stack developers who are interested in using cutting edge web technologies. The core of our web application is built on NodeJS and MongoDB. You will be helping to improve and maintain a data-driven fitness platform that connects millions of devices and consumers.<p>Prefered Qualifications: You enjoy JavaScript, and are aware of its advantages and flaws. - You value open source. - You consider yourself a full-stack developer. - You are comfortable with *nix command line tools and processes.<p>Experience in these technologies would be considered a plus: NodeJS, MongoDB, Redis, Git, React, SASS<p>To apply: <a href=""http:&#x2F;&#x2F;goo.gl&#x2F;Mo68eU"" rel=""nofollow"">http:&#x2F;&#x2F;goo.gl&#x2F;Mo68eU</a><p>___Other Positions___<p>UX Designer - <a href=""http:&#x2F;&#x2F;goo.gl&#x2F;qvPqQJ"" rel=""nofollow"">http:&#x2F;&#x2F;goo.gl&#x2F;qvPqQJ</a><p>Marketing Design Lead - <a href=""http:&#x2F;&#x2F;goo.gl&#x2F;jQLR91"" rel=""nofollow"">http:&#x2F;&#x2F;goo.gl&#x2F;jQLR91</a><p>Product Web Design Lead - <a href=""http:&#x2F;&#x2F;goo.gl&#x2F;zBH0sh"" rel=""nofollow"">http:&#x2F;&#x2F;goo.gl&#x2F;zBH0sh</a>",2015-07-01 16:34:11,9813125
1680,"GoFormz | San Diego, CA - ONSITE | Senior Full-Stack Engineers (.Net &amp; JS)<p>GoFormz is looking for great developers to add to a rapidly-growing engineering team.  Our goal is to help individuals and businesses replace paper forms with web and mobile-based digital forms, and then to provide ubiquitous access to the collected data.<p>We do everything from JavaScript&#x2F;HTML5 web apps to mobile app development with Xamarin to solving complex database&#x2F;platform architecture problems.  We are looking for someone who can get the job done and fit in well with our team.  We have a place for you whether you are low on experience but high on potential, or are an experienced pro who still gets excited about building cool new products.<p>Email us at jobs@goformz.com if you are interested.",2015-07-01 16:44:18,9813206
1681,"SEEKING FREELANCER - currently Seattle but likely moving to Portland in the future, and remote work is definitely possible.<p>I&#x27;m currently working on the side on a project, but planning to go full time on it within 6 months or so. My partner and I are working on a fairly ambitious MVP, some of which involves native front end development in which I&#x27;m inexperienced. I can do the work, but my iteration time is pretty suboptimal. Since we&#x27;ve got a few soft-committed potential customers, we&#x27;re looking to outsource some of the front end work to speed it all up.<p>I&#x27;m looking for someone with substantial experience with the Xamarin platform AND&#x2F;OR (preferably AND) Windows Universal development. I value people who know how to keep a code base small and share as much as possible across platforms. If you happen to know F# very well, then that is a huge plus, although not required (I would much rather work with F# than C#, but I realize the infrastructure is pretty immature to rely on).<p>Known knowns about our architecture: Postgres database and Play Framework in Scala for a service backend (including both REST and web sockets) hosted on AWS.<p>Pretty sure about our architecture, and what we need help with: a fairly complex Windows Universal pure touch app with some limited (likely USB-based) hardware interaction, communicating with the web service. Smaller and much simpler Xamarin mobile apps (iOS and Android definitely, WinPhone too but a lower priority) also communicating with the web service.<p>About me: I come from a very non-traditional development background...educated in Supply Chain Management and learning code to be able to do my very analytics-oriented job better. I started with R (and still use it extensively), have worked with Ruby, Python, and Clojure, but have slowly adapted to and now overwhelmingly prefer strongly typed ML-descendent languages such as Scala, F#, Rust, and OCaml. I&#x27;m a huge proponent of making invalid states unrepresentable through the type system. The majority of my experience is in more data oriented systems with lots of pipeline-type architectures, including lots of simulations. I have lots of experience with tasks that you would expect from someone that has Operations Research or Data Scientist in their titles. I don&#x27;t have much experience with REST-based systems, but I have found it pretty damn easy to learn over the last year in my free time. I don&#x27;t have much experience with front end design, but haven&#x27;t had much trouble picking up React.js. I have, however, been slow to pick up native front end design.<p>I&#x27;m open to cofounder proposals, but realize that if that happens it will likely be after some amount of freelance work, both for your sake and ours.<p>My email address is in my profile, but will likely remove it within a week or two for spam reasons (I really wish HN would let us delete old posts!).",2015-07-01 17:00:24,9813360
1682,"You can actually do that with a lot of languages now.  C# with xamarin, java&#x2F;clojure with robovm, java with j2objc, etc.<p>I was tempted with robovm, but found the 30s minimum build &amp; run cycle for trivial code changes too slow for me.<p>And the performance is pretty good for these guys, they&#x27;re all as fast as objective-c:<p><a href=""https:&#x2F;&#x2F;medium.com&#x2F;@harrycheung&#x2F;mobile-app-performance-redux-e512be94f976"" rel=""nofollow"">https:&#x2F;&#x2F;medium.com&#x2F;@harrycheung&#x2F;mobile-app-performance-redux...</a><p>At my last job we did the C++ cross platform layer, and it was very painful.  C++ is slow to compile and can create bloated binaries.  There can be something said for the freedom of having separate platform teams with just a server api.",2015-07-02 00:11:50,9816136
1683,"I wouldn&#x27;t say &#x27;double&#x27; the engineers.  In my last company&#x27;s case, you still need to write the iOS and Android &quot;UI&quot; part, and waiting for the C++ engineers to finally make this relatively simple thing could take longer than it should.  Sometimes it was just faster for the two UI engineers to implement it in the UI than it was for the two C++ engineers to make it themselves.<p>Then the UI engineers often had to create wrappers for the C++ objects (in the iOS Objective-C++ case at least), because  ObjC objects only take NSString, while the C++ types only give C++ strings and other such glue things.<p>Then lazy engineers &#x2F; deadlines would move business logic into the UI layer wrappers, because development speed wise it was much easier to work with there than to put inside the C++ layer.<p>Cross platform makes it&#x27;s own work.  But this was with a &#x27;homegrown&#x27; C++ solution, so maybe something made by a third party like xamarin might be a very different experience.",2015-07-02 16:57:34,9820115
1684,"Freelance Remote C# Xamarin Forms &#x2F; Android Mobile Developer (Work from Home in US)<p>We are looking for someone to join our team to help further develop a complex Xamarin.Forms app we created for iPhone and iPad. We are currently extending to Android phone and tablet and would like someone who has extensive experience with Android and Xamarin.Forms to assist with that and then work with the team on a selection of features queued up in our backlog.<p>Video or Audio streaming experience on Android is a plus. Experience integrating with Twitter is also beneficial.<p>More Information and Apply Here: <a href=""http:&#x2F;&#x2F;smrtr.io&#x2F;Pe-8PQ"" rel=""nofollow"">http:&#x2F;&#x2F;smrtr.io&#x2F;Pe-8PQ</a>",2015-07-02 21:24:23,9821754
1685,"&gt; Actually, I always find it a bit surprising Cordova doesn&#x27;t have more competition.<p>You mean Xamarin, Qt?",2015-07-06 13:27:55,9838913
1686,"You can get the same with Xamarin, Qt and similar tools that offer a better native integration than a web view.<p>Even if I have to code native like widgets in QML, it is surely way better than hacking around the DOM.",2015-07-06 13:28:54,9838918
1687,"I do the same approach for my mobile OS hobby coding, between Android and WP.<p>I guess C++ scares the web devs to go native and prefer to stay in their little sandbox.<p>Also tried to play around with Qt, but got disappointed that their story is more about bringing C++ apps into mobile not much the license, than a full cross-platform support like Xamarin. Even the new 5.5. still requires a lot of manually wrapping code across all mobile OSes.<p>However if I would be doing this commercially, Xamarin might be the way to go, as I wouldn&#x27;t be willing to write glue code all the time.",2015-07-06 13:35:38,9838962
1688,Can anyone using Xamarin chime in as to whether the situation there is better?,2015-07-06 14:09:10,9839156
1689,"Well you are getting native app with xamarin, so it must be better.",2015-07-06 15:43:28,9839897
1690,"Xamarin and Titanium compile to native code and use native components, so they wouldn&#x27;t have the same problems as a JavaScript and HTML solution like Cordova does. Particularly re performance since they don&#x27;t run in the web view widgets like Cordova.",2015-07-06 16:02:37,9840067
1691,"Location: Atlanta<p>Remote: Yes, currently working fully remote for 3 years<p>Willing to relocate: No, but willing to come onsite if in the area.<p>Technologies: UI&#x2F;UX design development (WPF, C#, Xamarin, HTML&#x2F;CSS etc.)<p>Experience: Specializing in UI&#x2F;UX design architecture and development for 12+ years.<p>Resume:<a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;georgephillip"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;georgephillip</a><p>Email: gphillip (at) dualhat (dot) com",2015-07-06 19:25:47,9841567
1692,"The downside of xamarin is slightly unstable tooling, the occasional regression, and headaches associated with using native oss libs, though it is very much possible. And of course price.<p>On the other hand, native-equivalent performance is no joke and c#&#x2F;f# are great languages. Xamarin comes with some very sophisticated stuff like databinding, and high-level concurrency like rx, async&#x2F;await, and akka.net which can really be a boon for performance, especially compared with js&#x27;s comparatively meager concurrency options.",2015-07-06 21:40:34,9842363
1693,"I hope that Microsoft will someday buy Xamarin and give it with Visual Studio Community Edition. This way anyone will be able to publish for Windows Phone, Android and iOS from Visual Studio.<p>Personally I like my Lumia phone with Windows 8.1 and I look forward to check how Windows 10 will run on this device.",2015-07-08 13:40:51,9851419
1694,"I hope not, I&#x27;d much rather see developers like Xamarin remain independent of the likes of Microsoft, Google or Apple.",2015-07-08 14:02:11,9851548
1695,"MS should push Visual Studio Code, as that&#x27;s properly multi-platform, and forget Xamarin. Now that the .NET CoreCLR is open source.<p>Monodevelop is an awful piece of software.",2015-07-08 14:18:25,9851641
1696,"You do not need to use Monodevelop, even on Windows or Mac to write Xamarin apps. Monodevelop is just the most obvious as it&#x27;s packaged. And agreed, Monodevelop is not very good.",2015-07-08 14:29:18,9851715
1697,"Xamarin Studio is better than MonoDevelop and (at least this is what they claim) free to use for Desktop (Window and Mac) applications <a href=""http:&#x2F;&#x2F;www.monodevelop.com&#x2F;download&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.monodevelop.com&#x2F;download&#x2F;</a>  :<p><i>For Mac and Windows, you can download Xamarin Studio which is a bundle of MonoDevelop along with Xamarin iOS&#x2F;Android plugins and branding. Note that a Xamarin license is only required if you develop iOS&#x2F;Android projects, all other project types are free without restrictions.</i>",2015-07-08 15:30:48,9852196
1698,Why not?<p>Unity3d has been using Xamarin&#x27;s .Net to build for Android and iOS (and many other platforms) for years now.,2015-07-08 19:31:19,9854071
1699,The most interesting thing about this doesn&#x27;t seem to be their cloud support. It&#x27;s the inclusion of Xamarin in Oracle sales pitches delivered by their well connected sales force to corporate clients. Seems like a smart way to ease yourself into the corporate world.,2015-07-08 20:46:50,9854471
1700,"I do like C# and I wanted to like Xamarin.  But as someone who write mobile apps for fun, $600 per year for a dual-platform &quot;indie&quot; license is just too much.  And I believe the pricing is also the reason the open source community around Xamarin is small. There are a few projects on github, but not much activity.<p>I doubt any of this will improve with a Oracle partnership.",2015-07-08 20:49:33,9854483
1701,&gt; Seems like a smart way to ease yourself into the corporate world.<p>Not really easing though; the majority of sales for Xamarin is in the enterprise space.,2015-07-08 20:53:35,9854500
1702,"Exactly, Xamarin&#x27;s value proposition is enterprise and medium-large software vendors already on the .NET stack that don&#x27;t want to have to learn Java and Obj-C and have two codebases.",2015-07-08 21:00:29,9854540
1703,"&gt; &quot;If you look on Google Trends for Xamarin, it&#x27;s the No. 1 mobile platform now in terms of mindshare.&quot;<p>First of all, Google Trends isn&#x27;t necessarily the best way to determine that. But second, it doesn&#x27;t seem to be true? Unless &quot;mobile platform&quot; means something surprising?<p>edit: Maybe it&#x27;s just an inaccurate quote? This other quote and text also look puzzling:<p>&gt; &quot;Every company today is building an average 30-40 mobile apps used by employees, customers, business partners,&quot; Friedman says. That stat comes from the company that uses his service<p>30-40 new apps for each company..? And which is the &quot;company&quot; referred to in the last sentence, as the source for that puzzling stat?",2015-07-08 21:00:35,9854541
1704,"Agree, Microsoft would be a much better option, at least from my point of view.  I understand that Xamarin mostly target enterprise devs, but I believe their ecosystem would benefit from a more active community.  I&#x27;m also sure Microsoft&#x27;s mobile app store would benefit from it.",2015-07-08 21:10:52,9854611
1705,"How exactly does Xamarin compare to native development (Java&#x2F;{Objective C, Swift})?",2015-07-08 22:01:40,9854894
1706,"Comments like this have been made on the Xamarin forums a number of time - that it&#x27;s too expensive for &#x27;hobby&#x27; developers. I&#x27;ll make the same comment here as I made there, that as a Xamarin Mac (Indie) developer I&#x27;m happy they are NOT aiming their product at hobby &#x2F; fun developers. A hobby is something you do optionally, if you have the funds or time. If you can&#x27;t afford it, or can&#x27;t monetise it - which I think is still an option for &#x27;hobby&#x27; developers - then you can&#x27;t do it. It&#x27;s the same if the hobby is skydiving, parachuting etc.<p>As regards lack of open source material, it&#x27;s not important to me however as Xamarin is C# based then any OS project that utilises C# potentially can be used within the Xamarin ecosystem.<p>There is a significant &#x27;use-case&#x27; outside of the Hacker News &#x2F; open source community that Xamarin addresses. Just because it doesn&#x27;t fall within the parameters set down by (I am guessing) the majority of posters here, it doesn&#x27;t mean that it isn&#x27;t a good or useful product.",2015-07-08 22:35:31,9855065
1707,"Because you can&#x27;t use .NET CoreCLR as it is on Android. You will need to modify it in order to be able to compile it for Android. Here is a discussion about an attempt to modify .NET CoreCLR in order to be able to compile it for Android <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;coreclr&#x2F;issues&#x2F;1097"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;coreclr&#x2F;issues&#x2F;1097</a><p>On iOS the situation is even worse you will need to have an AOT compiler for C# in order to be able to ship iOS apps in the Apple Store.<p>You are making a confusion here. Unity doesn&#x27;t use Xamarin at all, they have an old license (like really old, since before Xamarin even existed) for Mono for iOS and Android.",2015-07-08 22:53:55,9855143
1708,"You write C# code that gets compiled down to native code. Xamarin provides C# bindings for the platform&#x27;s APIs. You can, therefore, do anything in C# that you would do in the platform&#x27;s normal language.<p>This is appealing to those who prefer C#, and to those that want to share business logic between their iOS, Android, and WP apps, but want to write that logic in a higher-level language than C++.<p>Disclaimer: I work for Xamarin. Just saw your question was unanswered and thought I&#x27;d explain the basics.",2015-07-08 23:19:30,9855272
1709,"Application for Open Source Project Subscription
 - <a href=""http:&#x2F;&#x2F;resources.xamarin.com&#x2F;open-source-contributor.html"" rel=""nofollow"">http:&#x2F;&#x2F;resources.xamarin.com&#x2F;open-source-contributor.html</a>",2015-07-08 23:48:46,9855373
1710,"If you prefer C# over Java, well, it is better. Learning both a new platform and a new language (especially Objective-C in the days Swift didn&#x27;t exists) is a daunting task and Xamarin can ease the pain here.
Also it is great to be able to maintain a single code base for the data model layer (including persistance), network access etc.
And you can also use platform specific native APIs in C#.<p>The not-so-smooth part is the UI. You have two choices here: using the Xamarin Forms library which is a toolkit that maps high level UI component to natives ones, with the drawbacks of less customization.
Or to use the native UI tool (XCode designer for iOS, Visual Studio for WP; Xamarin Studio comes with a designer for Android) to create it. But in this case, you can&#x27;t use data binding, which makes WP(F) developper very sad :(<p>As a hobbyist mobile student developer, I wouldn&#x27;t have enough time to develop a multiplatform mobile apps without it. (note: they offer free Indie plan to student who ask for it).",2015-07-08 23:58:57,9855417
1711,Xamarin just announced a partnership with Oracle (for an end-to-end mobile (cloud) platform). Seems like a well calculated strategy to keep the power balance in check.,2015-07-09 01:21:46,9855692
1712,"One thing to take into account is that the more people who use your product, the more likely they&#x27;ll push it where someone else can foot the bill. If someone learns Java or ObjC&#x2F;Swift, because they can&#x27;t afford to use Xamarin that means that individual will be less likely to recommend it at companies they work at. If it followed more of a Unity model it could cause a cycle where people start pushing out more things to support Xamarin, which causes more people to pick it up, which causes more people to recommend its use. It is why so many startups focus on user acquisition to create this gigantic tipping point.",2015-07-09 04:17:34,9856115
1713,"The primary reason to use an alternative is iOS support.<p><a href=""https:&#x2F;&#x2F;appthwack.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;appthwack.com&#x2F;</a><p><a href=""http:&#x2F;&#x2F;keynote.com&#x2F;solutions&#x2F;testing&#x2F;mobile-testing"" rel=""nofollow"">http:&#x2F;&#x2F;keynote.com&#x2F;solutions&#x2F;testing&#x2F;mobile-testing</a><p><a href=""http:&#x2F;&#x2F;mobileportland.com&#x2F;device-lab"" rel=""nofollow"">http:&#x2F;&#x2F;mobileportland.com&#x2F;device-lab</a><p><a href=""http:&#x2F;&#x2F;perfectomobile.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;perfectomobile.com&#x2F;</a><p><a href=""http:&#x2F;&#x2F;testdroid.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;testdroid.com&#x2F;</a><p><a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;test-cloud"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;test-cloud</a><p>etc.",2015-07-09 15:45:30,9858539
1714,"Xamarin offers a free starter edition[1] and you can request free full licenses for use with Open Source projects[2].<p>Getting started on your own project or doing an Open Source project that relies on Xamarin&#x27;s tools is perfectly possible. In fact we use such free licenses to produce OS X and iOS versions of the Tomboy note taking app[3].<p>[1] <a href=""https:&#x2F;&#x2F;store.xamarin.com"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com</a>
[2] <a href=""http:&#x2F;&#x2F;resources.xamarin.com&#x2F;open-source-contributor.html"" rel=""nofollow"">http:&#x2F;&#x2F;resources.xamarin.com&#x2F;open-source-contributor.html</a>
[3] <a href=""https:&#x2F;&#x2F;github.com&#x2F;tomboy-notes"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;tomboy-notes</a>",2015-07-09 15:56:30,9858642
1715,"On a brief look, it appears that all of these choices (Including Amazon&#x27;s new one) only support Android devices and not iOS?<p>I believe Xamarin Test Cloud includes iOS, although I&#x27;m not certain if it integrates outside of the Xamarin framework.
<a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;test-cloud"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;test-cloud</a><p>Seems like a gap they should all be trying to fill.",2015-07-09 16:00:59,9858688
1716,Xamarin Test Cloud is not limited to Xamarin apps for either platform.<p>Disclaimer: I work at Xamarin.,2015-07-09 16:09:08,9858757
1717,"I agree with you on the dev tools.<p>That&#x27;s why I would like Xamarin Forms to improve, it uses the same XAML&#x2F;MVVM&#x2F;C# setup that Windows Phone does, and is a joy to work with. It&#x27;s just very limited at the moment.",2015-07-11 13:30:52,9869692
1718,"With cross development frameworks like Xamarin, Ionic, PhoneGap&#x2F;Cordova and React Native around, is it still worth learning native Android development?",2015-07-12 15:32:33,9873763
1719,"I&#x27;ll be more moderate than I thought I&#x27;d ever be and say it depends on your needs for the app you are building. Also depends on your definition of Native.<p>First Native can mean a lot of things in Android Land. For instance you mention Xamarin and React Native. Both of those are generating actual native binaries (googles byte code version of Java byte code) or rather React Native for android will when it&#x27;s actually a thing, it&#x27;s not released yet but should be somewhat soon. They are both a way of writing Native code in another language (C#, Js) rather like Scalriod let&#x27;s you write a native Android App in Scala. The are a fundamentally different approach than Ionic or PhoneGap which are HTML5&#x2F;JS&#x2F;CSS based webapps that are packaged to be app-like. Also in android development Native is sometimes used to refer to C++ ndk development. Go is also being used sometimes (go 1.5 needed to support it) for native (meaning cpu native binary instead of byte code) code.<p>If you plan on being a Mobile developer as your day job than I say absolutely. If I&#x27;m hiring a dedicated Android dev, I&#x27;d expect that they are an expert in Android Java. Bonus points for knowing C++ ndk or Go ndk development because then I&#x27;m not really restricted as to what I could ask them to do on the platform. Some things like converting video in real time or intense calculations will absolutely require ndk level of performance.<p>If your app is mostly using a rest api or collecting form data, then ndk is way overkill. Rather it&#x27;s a native experience depends on your goal. If you want the latest in Android API&#x27;s or features or you want the smoothest most native feeling app, then Java is really the only choice. If you are more concerned about sharing code with and iOS project then Xamarin or soon React Native are the best choices. Lastly if all you really care about is having an &quot;app&quot; for a SaaS or other webapp then PhoneGap or Ionic would be a valid choice. For me I&#x27;d never use them but I&#x27;d rather have a great app or no app at all. I would consider Xamarin or React Native though, I think the user experience is close enough to a standard sdk app on both platforms that if you aren&#x27;t a mobile game or mobile app based startup that it is probably good enough. Games are exception in that, there are a ton of cross platform options that are awesome. Unreal, Unity, Cocos, even phonegap or ionic packaging up a html5 game engine like phaser are all very good choices.",2015-07-12 17:09:08,9874099
1720,"Nobody knows where the mobile ecosystem will be in 5 years, but right now native is the way to go for &#x27;ambitious&#x27; apps.  
Not only do all the major mobile teams I know write their app in Native Obj-c&#x2F;Java, but also those that tried to use cross development platforms sooner or later decided that it was not worth it and restarted from scratch with native technology.<p>Maybe we will have some day a cross platform toolkit without any serious downside, but right now native is still the way to go.<p>If you are building a small app with limited resources, something like Xamarin might be a good compromise.",2015-07-13 11:26:55,9877421
1721,"Yes, direct GL access with a thin app delegate is the most common way C++ game engines like Unreal Engine, Crytek, and Marmalade are packaged for iOS and Android. There&#x27;s no reason you couldn&#x27;t do that in Go too, except for the lack of other libraries like scripting, mesh, etc.<p>I&#x27;m not talking just a simple GUI abstraction wrapper, which has earned a deservedly bad reputation. The more full-fledged UI models have gotten much nicer, like in React Native or Xamarin.",2015-07-13 18:37:22,9880055
1722,"My question is which shift do you follow then, the app bubble is there and it&#x27;s about to burst. Web is trying to build once deploy everywhere. It may not be ideal, but xamarin and other technologies don&#x27;t offer an easier solution.<p>I do agree that browsers should be reviewed and revised and trimmed down to the essentials with added functionality through encapsulated plugins or so, the browser tries to solve too much imho",2015-07-20 11:08:59,9915203
1723,With xamarin you can.,2015-07-20 14:44:21,9916364
1724,"I believe that&#x27;s referring to Xamarin and Cordova, which are now built into VS2015. Xamarin still requires a Xamarin subscription to compile and deploy the apps, though.<p>On the other hand, they might also be talking about the new Universal Windows Platform bridges [1], which let you port your Android, iOS, Win32 and Web apps to native Windows apps.<p>[1]: <a href=""https:&#x2F;&#x2F;dev.windows.com&#x2F;en-us&#x2F;uwp-bridges"" rel=""nofollow"">https:&#x2F;&#x2F;dev.windows.com&#x2F;en-us&#x2F;uwp-bridges</a>",2015-07-20 14:47:24,9916382
1725,"I worked with .NET for years and never made a desktop app. C# is a great language to work in when making backend services for websites, IMO (even though there&#x27;s a whole load of crap that comes along with the framework).<p>These days I&#x27;ve moved on, but .NET is far from a desktop-only thing. Particularly when you can make iOS apps with Xamarin, etc.",2015-07-21 16:05:03,9923222
1726,".NET team member here ... We like to think of .NET Native as a native tool-chain for .NET Core. I say &quot;a&quot; because the Xamarin and Unity (IL2CPP) tool-chains are equally applicable (and we&#x27;ve talked to them about it).<p>The core framework libraries (CoreFX) - <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;corefx"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;corefx</a> - are used for all .NET Core scenarios, including .NET Native (UWP). This means that your code does the same thing in all of these different environments, since it&#x27;s using the same underlying framework libraries. Separately, the Mono project is taking a lot of the same code, which means that the base framework for Xamarin apps are becoming more compatible with CoreFX, too. Yeahh! We hope to make this more formal in the future. We talk to @migueldeicaza about this frequently.<p>Today, .NET Native and .NET Core use two different runtimes, MRT and CoreCLR, respectively. MRT expands to the extremely creative &quot;managed runtime&quot;. Colloquially, we call it &quot;Mr. T&quot;. Earlier in the project, everyone working on .NET Native had posters of Mr. T (yes, that one) on our doors. Mohawks were entirely optional on the parts of team members.<p>MRT was built for static ahead-of-time (AOT) compilation. It is the child of the Redhawk project (<a href=""http:&#x2F;&#x2F;www.zdnet.com&#x2F;article&#x2F;microsoft-codename-redhawk-lives-in-windows-8&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.zdnet.com&#x2F;article&#x2F;microsoft-codename-redhawk-live...</a>). Redhawk was built to be a .NET-esque (using C# + extensions) systems programming environment. MRT was built to have many of the same benefits, but be compatible with .NET (not just &quot;esque&quot;) and support nothing less, nothing more than C#.<p>CoreCLR is a child of the .NET Framework CLR. CLR (and by extention, CoreCLR) was built for dynamic execution, with a JIT. It supports AOT compilation in the pre-jit&#x2F;NGEN sense.<p>The GC is the primary shared component between the two (MRT, CLR&#x2F;CoreCLR) runtimes.<p>We plan to bring static compilation to more scenarios, however, we strongly believe that both JIT and (real) AOT are legitimate and compelling technologies and experiences and both are on our long-term roadmap. We&#x27;d like to leave the compilation choice&#x2F;appraoch up to our users&#x2F;customers. Novel idea, eh?<p>We have a lot of fun runtime and compiler tech on the team. It&#x27;s a fun place to work. Much of it is now open source, meaning that we get to work on this fun tech in the open. This is our latest compiler announcement: <a href=""http:&#x2F;&#x2F;blogs.msdn.com&#x2F;b&#x2F;dotnet&#x2F;archive&#x2F;2015&#x2F;07&#x2F;20&#x2F;announcing-net-framework-4-6.aspx#ryujit"" rel=""nofollow"">http:&#x2F;&#x2F;blogs.msdn.com&#x2F;b&#x2F;dotnet&#x2F;archive&#x2F;2015&#x2F;07&#x2F;20&#x2F;announcing...</a>.",2015-07-21 16:45:48,9923611
1727,"I run a growing company with an office full of software professionals in the EU (Portugal). We create custom software for clients using (any combination of) Django&#x2F;Python, HTML5 (diverse frameworks), Java (diverse frameworks) &amp; Xamarin.<p>Most threads about work &#x2F; projects here are for individuals looking for gigs or jobs; I hardly ever see anything for companies or teams. We are working with US companies already and I am flying over in august to meet up with some of them; I was wondering if anyone here would be interested in our services in the US&#x2F;EU.<p>Or more generally; is there any board&#x2F;thread&#x2F;etc for (small) companies regularly looking for projects&#x2F;team hires instead of individuals looking for jobs? If nothing like that exist maybe this could be a start as i&#x27;m sure more people are looking for that here.",2015-07-26 09:29:07,9950608
1728,"&gt;there&#x27;s almost no native-feeling cross-platform UI library for native apps at the moment<p>Xamarin.Forms is the closest I can think of. Qt too, kind of.<p>&gt;The browser is basically what the JVM tried to be, a write once work anywhere solution that is pretty well sandboxed. It&#x27;s miles better than pretty much every other cross-platform piece of tooling in existence.<p>It&#x27;s true, the browser succeeded as a working everywhere JVM equivalent.<p>It also succeeded at reimplementing half of your OS features, being another massive source of security issues, being inefficient with resources (chrome memory usage lol), having piss poor perfomance and locking everything to Javascript. Compiling to Javascript is not a solution. A proper bytecode is. Which we may have with WebAssembly as soon as it&#x27;s implemented and the standard respected by browser builders (which will probably be around 2040). Until Google decides to add a new WA feature that&#x27;s incompatible with other browsers because that&#x27;s what Google does. Let&#x27;s not get started on the fact that HTML is a terrible language for UIs and that any Javascript based solution is not a solution at all (i.e. React is still crap, as is Meteor and javascript.framework.of.the.day.js).<p>The web as an application delivery medium is a failed experiment, patched up on all sides and held together with 40MB of polyfills on every page.<p>&gt; if Google, Apple, and MSFT decided to jointly ban all native apps and only have a web browser on their smartphones, we would have a much better compatability situation, since so much functionality has been standardised on that end, and _actually respected_.<p>1. We&#x27;ve been hoping to get at least TWO browser vendors to fully collaborate for the last 20 years and it has not happened. It won&#x27;t happen.<p>2. Performance will still be crap.<p>3. I&#x27;d rather not get locked to Google&#x27;s piss poor record of updating the stock Android browser. In fact, I&#x27;d rather not get locked to Google&#x27;s piss poor software at all, thank you very much. The same argument applies to Apple and Microsoft. Safari is awful, and so is IE&#x2F;Edge.",2015-07-28 15:41:47,9962326
1729,"Just a quick note after losing a lot of time today with this.  VirtualBox (all versions) are having issues starting develop environments under Windows 10 RTM and this is affecting a lot of people who are upgrading to Windows 10.<p>List of relevant VirtualBox dependent projects affected:
- vagrant
- boot2docker
- docker machine
- xamarin android player
- probably more...<p>Details:
- https:&#x2F;&#x2F;www.virtualbox.org&#x2F;ticket&#x2F;14040#comment:25
- https:&#x2F;&#x2F;github.com&#x2F;boot2docker&#x2F;boot2docker&#x2F;issues&#x2F;1015
- https:&#x2F;&#x2F;github.com&#x2F;mitchellh&#x2F;vagrant&#x2F;issues&#x2F;6059",2015-07-31 01:08:27,9979357
1730,"What you want exists, and it&#x27;s called Xamarin.",2015-08-01 22:28:57,9988956
1731,"True, but it means taking the rest of Xamarin, too. While Xamarin is brilliant, and by far the best cross-platform SDK I&#x27;ve seen for any set of targets, it&#x27;s still riskier than native platform development for most developers. I&#x27;d use it for a client who has a C#-oriented in-house team and the ability and resources to commit to overcoming the vicissitudes of cross-platform development, but I wouldn&#x27;t just to get LINQ.",2015-08-02 21:07:03,9992484
1732,"Top of Mind : REMOTE OKAY 
Positions:
Frontend Angular engineer
Xamarin Mobile developer
Backend C# engineer<p>We&#x27;re looking to ramp up our team of .net and javascript engineers for building out the next version of our CRM platform. Work on exciting latest and greatest technologies with a team of 10 other awesome developers!<p>Email me directly if you&#x27;re interested at ktavera@topofmind DOT com",2015-08-03 16:02:13,9997054
1733,"<p><pre><code>  Location: San Francisco &#x2F; SF Peninsula
  Remote: Yes
  Willing to relocate: Will consider, depending on the opportunity
  Technologies: Python, C# (Xamarin, Visual Studio), Java (Android, ADT, Android Studio, Eclipse), AutoHotkey, C++, C, VB, and the usual suite of word processing, presentation, spreadsheet software.
  Rsum&#x2F;CV: 
    https:&#x2F;&#x2F;linkedin.com&#x2F;in&#x2F;proericchan
    https:&#x2F;&#x2F;gitlab.com&#x2F;xgenericx&#x2F;Resume&#x2F;blob&#x2F;master&#x2F;Resume_Eric_Chan_Aug2015.pdf
  Email: xgenericx@gmail.com
</code></pre>
Robotics Software Applications Engineer with 4+ years in Semiconductor and Industrial Automation. I pride myself in my ability to see sources of workflow inefficiency, and act on my observations to improve myself and others.<p>Currently I operate in a role I consider to be 60% technical, and 40% people. Written specifications and requirements are only ever half the story, the other half of project delivery requires continuous communication, swift iteration, and an unwavering patience for finding the truth.<p>I always an make earnest effort to learn and perform to the best of my abilities.",2015-08-03 21:09:10,9999830
1734,You may not have to choose. Xamarin?,2015-08-03 21:54:36,10000169
1735,I believe in Swift. Xamarin would be nice choice as a cross platform with native output. But I guess it has also a learning curve and some disadvantages. It also will ignore my Objective-C know-now. Am I too judgmental about this?,2015-08-03 22:20:31,10000310
1736,"Yes - both are under MIT<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;strongloop&#x2F;loopback-sdk-xamarin"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;strongloop&#x2F;loopback-sdk-xamarin</a>
<a href=""https:&#x2F;&#x2F;github.com&#x2F;strongloop&#x2F;loopback"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;strongloop&#x2F;loopback</a>",2015-08-05 15:44:08,10010585
1737,"You are correct, and if I remember clearly, I think this is how Xamarin does it as well.",2015-08-07 00:49:01,10020388
1738,"Location: Riga, Latvia<p>Remote: Yes<p>Willing to relocate: Discussable<p>Technologies: .NET C#, Xamarin, Javascript (Angular, Node.js etc), HTML&#x2F;CSS (SASS, LESS)<p>Resume&#x2F;CV: <a href=""http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous"" rel=""nofollow"">http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous</a><p>Email: philgsky &lt;at&gt; outlook &lt;dot&gt; com<p>I&#x27;m a fullstack developer with strong .NET background (over 8 years experience) and front end experience.  
Currently developing applications for mobile phones and tablets. Providing full package services from application design creation to  development for all platforms (iOS, Android, Windows). Looking for remote projects.",2015-08-07 14:00:00,10022498
1739,"There are at least two such libraries for C# - XWT [1] and Xamarin [2] which AFAIR is based on XWT.<p>[1] <a href=""https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;xwt"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;xwt</a><p>[2] <a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;platform"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;platform</a>",2015-08-09 21:41:34,10031687
1740,"VS 2015 has Tools for Apache Cordova. That&#x27;s what integrates with the emulator. You can build apps with Ionic and other PhoneGap&#x2F;Cordova frameworks.<p>Of course, one can also use Xamarin. I doubt they&#x27;ll try to compete with the tools for Java.",2015-08-12 03:39:59,10045903
1741,"&gt;Compatibility and wide distribution is as much a technological problem as threading<p>No it isn&#x27;t because their solution isn&#x27;t actually compatible with any other implementation than FF and will only eventually get in to next versions of browsers.<p>The whole problem is much more political (who invents it amd trough what process depends very much on what will be adopted as clearly shown in the past) than technical so I can understand OPs dislike of bad technical solutions for political reasons.<p>&gt;It&#x27;s wrong to belittle browsers for reinventing the easy parts of the problem when they are the best solution we&#x27;ve ever had to the hard part.<p>Arguable, with Windows 10 store and apps integration improvement (no need for full screen apps) I can see &quot;desktop&quot; moving to the similar sandbox model as phones, as far as I&#x27;m aware OSX also has app sand-boxing model.<p>I could see a .NET or JVM based cross platform solution that would require minimal changes for UI across platforms - Xamarin style but more polished&#x2F;OSS. Creating cross platform wrappers for common functionality (eg. OpenGL, File System, etc.) is trivial and already done - no need to wait for standardization body and vendors to implement it by 2020.",2015-08-13 10:37:01,10053218
1742,"&gt; I could see a .NET or JVM based cross platform solution that would require minimal changes for UI across platforms - Xamarin style but more polished&#x2F;OSS.<p>That sounds like a good idea. Unfortunately, it&#x27;s been tried multiple times by the biggest companies on the planet and has always failed.",2015-08-13 16:36:58,10055420
1743,"I would easily pay 3x the Xamarin price for a Xamarin-like platform for Rust. And I&#x27;m pretty sure I&#x27;m not alone.<p>It&#x27;s the perfect language for a mobile platform, and I would love to use the zero-runtime-cost abstractions without resorting to the C++ hand-grenade roulette. The fact that it has an ML heritage, with all the goodies that entails (ADTs, pattern matching, type inference, etc), is even better.",2015-08-14 16:56:52,10061223
1744,"OK, imagine...<p>You run a single command to instantiate a family of cross-platform Cargo projects, one your platform-agnostic backend, and one for each of your target platforms: Linux, Windows, Mac, Android, iOS, of course, but also the entire impending IoT down to the smallest real-time device. Your platform-specific projects come with safe Rust bindings to the system platform (ala Xamarin).<p>Another single command builds and tests this from a single host system on an armada of virtual machines, emulators and cloud systems. Your tests run on a wide variety of standardized machine images, including those used for upstream Rust&#x27;s own integration testing.<p>Another single command packages this for various Linuxes and app stores, deploys to your devices and cloud services.<p>Three commands, total world domination :)",2015-08-14 17:29:28,10061453
1745,"I&#x27;ve used Ionic Framework[0], which is basically Cordova + Angular = Mobile Development.  If you know Angular, it&#x27;s a really good place to start, along with ngCordova[1].<p>If you don&#x27;t know Angular, then straight Cordova isn&#x27;t so bad.  I actually did some Google Glass development that way.  There are Cordova plugins for just about every mobile function you can imagine, with varying degrees of quality.  To learn them, I basically took sample projects and examined them, made a few changes, and checks to see what broke.<p>If you know C#, you can also look at Xamarin[2].  I don&#x27;t have any experience with it, though.<p>Edit: formatting<p>0. <a href=""http:&#x2F;&#x2F;ionicframework.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;ionicframework.com&#x2F;</a><p>1. <a href=""http:&#x2F;&#x2F;ngcordova.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;ngcordova.com&#x2F;</a><p>2. <a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>",2015-08-20 23:55:49,10095286
1746,"why I use Windows 10 on my desktop for daily work:<p>- best hardware support, no driver problems for example with my graphics card or thinkpad dock<p>- updates etc. just work without any configurations or reading manuals<p>- Visual Studio is yet only available to Windows, whereas it evolves to the most compelling cross platform 
development tool (xamarin, universal apps, android and ios support)<p>- productive cortana search<p>- fast, even on old hardware<p>- the desktop is much more faster and fluent than e.g. gnome<p>- I don&#x27;t care sending over metrics to Microsoft, this is needed to make software better<p>- I can see edge evolve<p>I use linux vms on some severs where I need to scale things. But it has only one reason: fast deployment times because of smaller os images.",2015-08-27 08:16:33,10128184
1747,"If you need IIS, I doubt that you can get away without virtualisation.<p>The easiest path is to use something like VMWare Workstation and run Windows as a VM. You can pin Visual Studio to the sidebar, and click to run it like it was made-for-Linux app (i.e. Unity mode).<p>If you just need IIS (and can use MonoDevelop &#x2F; Xamarin Studio) as an IDE (or just VS Code for newer stuff), then you can host IIS in a Windows Server Core in a virtual machine (less hardware requirements compared to the first option).",2015-08-31 20:32:58,10148922
1748,"Location: Dallas, TX<p>Remote: YES<p>Willing to relocate: If it makes sense<p>Technologies: C#, JS, Java, Android, iOS, Xamarin, AngularJS, NodeJS, WebAPI, MVC, ASP.Net, MSMQ, AMQP, Swift, Objective-C, JIRA<p>Resume&#x2F;CV: linkedin.com&#x2F;in&#x2F;mutaaf, <a href=""https:&#x2F;&#x2F;www.dropbox.com&#x2F;s&#x2F;4g55n26luq6t6ow&#x2F;mutaaf_aziz_resume_july.pdf?dl=0"" rel=""nofollow"">https:&#x2F;&#x2F;www.dropbox.com&#x2F;s&#x2F;4g55n26luq6t6ow&#x2F;mutaaf_aziz_resume...</a><p>Email: mutaaf.aziz@gmail.com",2015-09-01 15:57:15,10153275
1749,"==================<p>SEEKING WORK - LONDON &#x2F; REMOTE OK - Full-Time.<p>==================<p>Full-Stack Developer; Specialise in cross-mobile solutions.<p>I am an enthusiastic software engineer with over 5 1&#x2F;2+ years experience working with agile development teams (including management) on both front and back-end systems. Primarily work with C#&#x2F;.NET, but have worked with several other technologies and platforms.<p>Recent large projects involved: Xamarin (inc Forms), AngularJs, ASP.Net 4.5+, iOS (Native Obj-C)<p>Feel free to contact me through any of the following links:<p>Github: <a href=""https:&#x2F;&#x2F;github.com&#x2F;donskifarrell"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;donskifarrell</a><p>Blog (inc AboutMe&#x2F;CV): <a href=""http:&#x2F;&#x2F;donalfarrell.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;donalfarrell.com&#x2F;</a><p>Email: donal@donalfarrell.com<p>Thanks!<p>Donal",2015-09-01 17:26:29,10154141
1750,"Full stack developer, specializing in RESTful APIs and Single Page Applications.<p>Location: Los Angeles, CA<p>Remote: Yes<p>Willing to relocate: Yes (Only to San Francisco, New York, New Orleans, or San Diego).<p>Technologies: Node.js (MEAN), PHP (LAMP).<p>Resume: <a href=""http:&#x2F;&#x2F;malcolmdiggs.com&#x2F;resume.pdf"" rel=""nofollow"">http:&#x2F;&#x2F;malcolmdiggs.com&#x2F;resume.pdf</a><p>Portfolio: <a href=""http:&#x2F;&#x2F;malcolmdiggs.com&#x2F;portfolio"" rel=""nofollow"">http:&#x2F;&#x2F;malcolmdiggs.com&#x2F;portfolio</a><p>Email: malcolmdiggs@gmail.com<p>Keywords: ExpressJs, Restify, Gulp, Grunt, Javascript, jQuery, HTML5, CSS3, Bootstrap, Foundation, MongoDB, MySQL, Redis, TDD&#x2F;BDD, DynamoDB, SCRUM, Laravel, CodeIgniter. LA, Venice, Santa Monica, Culver City, Palms, DTLA, SD, NOLA, AngularJS, EmberJS, ReactJS, DerbyJS, BackboneJS, NPM, PhoneGap, Ionic, Xamarin, Github.",2015-09-02 14:20:40,10159332
1751,"I&#x27;m impressed at what the Mono&#x2F;Xamarin team is able to pull off, but I can&#x27;t help feeling that one day Apple is going to introduce a change (or a new product) that breaks the leaky abstraction in a way that the magic Xamarin elves simply can&#x27;t fix.  I thought watchOS 1 would be the breaking point, and then watchOS 2, but so far they appear to be making those work.  Keep up the good work, I hope to be proven wrong!",2015-09-03 00:06:53,10162698
1752,"I&#x27;m not sure Microsoft came too late to the party. Perhaps MSBuild is a bit crappy (I don&#x27;t know, never used it), but I can imagine Roslyn becoming more useful now on other platforms since it&#x27;s open sourced. It&#x27;ll be great that one can be sure the runtime behaves the same on all platforms Roslyn will run on. And it&#x27;ll also be nice if new runtime features will be available on every platform at (more or less) the same time. I think Roslyn could have a nice future ahead. Personally speaking, I find writing C# is much more enjoyable as writing Java.<p>And who knows, maybe someone will build a decent MSBuild replacement. Or perhaps the Xamarin guys already have a nice alternative.",2015-09-03 19:27:30,10167012
1753,"I&#x27;m writing Mac, Android and iOS apps using Xamarin in C# using a shared PCL that is 99% the same code across all platforms. This might not be all that common, but Xamarin has seemingly been gaining momentum over the last couple of years.",2015-09-03 20:38:12,10167399
1754,"&gt; &quot;And who knows, maybe someone will build a decent MSBuild replacement. Or perhaps the Xamarin guys already have a nice alternative.&quot;<p>You might want to check out FAKE, it essentially lets you write MSBuild configurations using F#:<p><a href=""http:&#x2F;&#x2F;fsharp.github.io&#x2F;FAKE&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;fsharp.github.io&#x2F;FAKE&#x2F;</a><p>This recent announcement means that a multi-platform FAKE in the near future looks like a good bet.",2015-09-03 20:55:11,10167479
1755,"I&#x27;ve been looking at Xamarin now for a while, how do you like it so far? Does it live up to its claims?",2015-09-03 21:01:46,10167510
1756,"I&#x27;ve mostly spent time on the Mac side of things so far, and have helped out a colleague with the mobile stuff. Recently they&#x27;ve added a lot of documentation for the Mac side that covers basically anything you want to know - or at least it covered all the stuff I wanted to know when I first started the Mac app 12 months ago.<p>For mobile, Xamarin Forms can be a little difficult to wotk with, but it&#x27;s getting better all the time. I don&#x27;t really want to bother with learning native development at the moment, and because we have a pile of calculations and logic in our shared PCL Xamarin is working out for us.<p>There is some criticism that the pricing model makes it expensive for people developing at the low end of the mobile market ($1 or $2 apps), however I think that&#x27;s more a failure of that kind of market in general rather than a problem with Xamarin pricing itself.",2015-09-03 22:37:16,10167908
1757,"After reading this: <a href=""https:&#x2F;&#x2F;medium.com&#x2F;@harrycheung&#x2F;mobile-app-performance-redux-e512be94f976"" rel=""nofollow"">https:&#x2F;&#x2F;medium.com&#x2F;@harrycheung&#x2F;mobile-app-performance-redux...</a><p>I found the free packet a little bit to late in the market.<p>Anyone from RubyMotion dev maybe can explain way is so slow, and I should use it instead of robovm, swift, xamarin, etc.",2015-09-04 09:55:22,10169514
1758,"This was inevitable. Businesses want month-to-month licensing and now I expect JetBrains will see solid growth driven by their business customers. I would rather see a cashed-up JetBrains acquire - let&#x27;s say - Xamarin than the opposite outcome, which would be an unmitigated disaster.",2015-09-04 15:00:30,10170895
1759,"Moving to a subscription model for 1 thing is okay, perhaps 2, or even 3. But with <i>every</i> company gradually moving to subscription models, it is emptying out our wallets every month and removing more and more of our income to maintain the status quo.<p>From my own perspective, and I know this doesn&#x27;t apply to all, but I cannot imagine I&#x27;m the only person with this viewpoint:<p>I&#x27;m sick of other developers saying things like: &quot;You know what? For the amount developers earn, $X is a small price to pay.&quot; You&#x27;re right, $X for a single piece of software is a small price. But when you add the cost of your MSDN license here, your JetBrains license there, your Xamarin university&#x2F;license, O&#x27;Reilly Safari License, PluralSight license and countless other licenses and software purchases to do our jobs - <i>all</i> of which are gradually moving towards month-by-month subscription models with excessively large combined annual overheads, it cuts more and more into your budget... and not to forget that the income you make doesn&#x27;t <i>just</i> pay for an ever revolving cycle of tools to maintain your competitiveness as these arguments seem to forget [unless you&#x27;re still living in Mom&#x27;s basement and all your income is expendable or can feed the endless software-as-a-service lifestyle]. It&#x27;s also used to ensure that your kids get a good education so they can make their own valuable contributions to society; that you&#x27;re able to live comfortably and not worry about where your next meal is coming from; that your family is safe and secure and well prepared for the unexpected; medical plans; retirement plans; mortgage; vehicle payments; the list goes on... <i>all</i> of which costs money - every month!<p>I&#x27;m growing tired of companies feeling like they can reach into my pocket month after month and take every spare penny for &quot;services rendered.&quot; At what point will people turn around and say &quot;Enough&#x27;s enough! My money is mine!&quot; I&#x27;m happy to buy products when they move me forward, but I hate paying monthly subscriptions on the off chance that you&#x27;re going to continue provide updates that may or may not benefit me in the longer term.<p>As a company providing software, I&#x27;m not purchasing you as a service. I&#x27;m purchasing your product. When I work for a company that pays me every month, I&#x27;m selling myself to them as a service - to do their bidding and write the code they want. If I&#x27;m to pay for you as a service, then the money I&#x27;m paying you had better be providing what <i>I</i> need to do my job more effectively, just like if I pay a cleaner to come clean the house, I&#x27;m not paying for them to develop makeup products that benefit their other clients while I don&#x27;t wear makeup. I want the option of buying the product that <i>does</i> help me do my job more effectively and then I&#x27;ll hold on to the rest of my money and allocate it where that is the case.",2015-09-04 15:28:38,10171067
1760,"Moving to a subscription model for 1 thing is okay, perhaps 2, or even 3. But with every company gradually moving to subscription models, it is emptying out our wallets every month and removing more and more of our income to maintain the status quo.<p>From my own perspective, and I know this doesn&#x27;t apply to all, but I cannot imagine I&#x27;m the only person with this viewpoint, I&#x27;m sick of other developers saying things like: &quot;You know what? For the amount developers earn, $X is a small price to pay.&quot; You&#x27;re right, $X for a single piece of software is a small price. But when you add the cost of your MSDN license here, your JetBrains license there, your Xamarin university&#x2F;license, O&#x27;Reilly Safari License, PluralSight license, Apple Developer License, the Mac required to compile&#x2F;publish for iOS and countless other licenses, software and hardware purchases to do our jobs - all of which are gradually moving towards month-by-month subscription models with excessively large combined annual overheads, it cuts more and more into your budget... and not to forget that the income you make doesn&#x27;t <i>just</i> pay for an ever revolving cycle of tools to maintain your competitiveness as these arguments seem to forget [unless you&#x27;re still living in Mom&#x27;s basement and all your income is expendable or can feed the endless software-as-a-service lifestyle]. It&#x27;s also used to ensure that your kids get a good education so they can make their own valuable contributions to society; that you&#x27;re able to live comfortably and not worry about where your next meal is coming from; that your family is safe and secure and well prepared for the unexpected; medical plans; retirement plans; mortgage; vehicle payments; the list goes on... all of which costs money - <i>every month!</i><p>I&#x27;m growing tired of companies feeling like they can reach into my pocket month after month and take every spare penny for &quot;services rendered.&quot; At what point will people turn around and say &quot;Enough&#x27;s enough! <i>My money is mine!</i>&quot; I&#x27;m happy to buy products when they move me forward, but I hate paying monthly subscriptions on the off chance that you&#x27;re going to provide an update that may [but probably won&#x27;t] benefit me in the longer term.<p>As a company providing software, I&#x27;m not purchasing you as a service. I&#x27;m purchasing your product. When I work for a company that pays me every month, I&#x27;m selling myself to them as a service - to do their bidding and write the code <i>they</i> want. If I&#x27;m to pay for <i>you as a service</i>, then the money I&#x27;m paying you had better be providing what <i>I</i> need to do my job more effectively, just like if I pay a cleaner to come clean the house, I&#x27;m not paying for them to develop makeup products that benefit their other clients while I don&#x27;t wear makeup. I want the option of buying the product that <i>does</i> help me do my job more effectively and then I&#x27;ll hold on to the rest of my money and allocate it where that is the case.",2015-09-04 17:42:59,10171850
1761,"Question for everybody doing some sort of cross platform mobile dev.<p>How common is it to have NO experience with a platform&#x27;s native libraries? In other words you didn&#x27;t go from ObjC or Java to React Native&#x2F;Cordova&#x2F;Xamarin to try and re-use code but because you know JS or C# and weren&#x27;t concerned about learning the native platform.<p>For any that started out with no native platform knowledge did you start to dip into it as you got more experience with the cross platform tool and started bumping up against any potential limitations?<p>I&#x27;ve been flirting with Swift when I have some (rare) downtime, to get a foundation, but maybe that&#x27;s not even necessary anymore given the effort companies like Facebook&#x2F;Xamarin&#x2F;Telerik* are putting into abstracting away the native platforms.<p>[*] I intentionally left Cordova off that list as &quot;native&quot; native and &quot;phonegap&quot; native are two different things.",2015-09-14 18:22:16,10216544
1762,"I got into native development with no experience in the iOS&#x2F;Android APIs, coming from a web dev background. I did know Java and C from working on side projects, and read up on Objective-C before, though. At my previous company, all the developers doing native work had no prior experience w&#x2F; mobile development (i.e. they primarily had backend C# experience)<p>I dabbled w&#x2F; Cordova and friends before, and did some work to wrap webapps in thin native shells earlier on, but there was always a very strict separation between the &quot;sandboxed&quot; webapp and the native code, if any.<p>Webapps can and do work just fine for CRUD applications, but right now, I&#x27;m of the opinion that if you want to really leverage the hardware APIs or the native ecosystem, you&#x27;re better off learning the native platform, because you get no syntax mismatch friction on Stack Overflow etc, compared to Xamarin &#x2F; React Native &#x2F; Ambly &#x2F; whatever<p>Also, this opinion might be unpopular among the js devs who like lightweight text editors (disclaimer: I&#x27;m one), but the heavy IDEs for Java&#x2F;ObjC&#x2F;Swift are actually immensely useful once you get familiar w&#x2F; their features. The static typing provided by those languages helps a lot in large refactors, in API discoverability&#x2F;autocompletion and in reasoning about the codebase in general.",2015-09-14 19:31:14,10216959
1763,"If you stick with the tools which actually don&#x27;t abstract the native platforms (e.g. RoboVM and Xamarin), I think you will learn native development quite easily. I&#x27;ve taken this approach, and I&#x27;ve had no trouble using documentation&#x2F;StackOverflow to write equivalent code in Java&#x2F;C#. Since pretty much all the APIs in these tools are 1-1 with the native APIs, I&#x27;ve also had no trouble going in the reverse direction and writing Swift&#x2F;Objective-C&#x2F;Java. You will still need to learn the languages, but you won&#x27;t need to re-learn the APIs (which is the time consuming part).<p>Personally, I see little to no disadvantage with using these particular types of tools, especially if it means you can use languages like Scala, C#, and F# instead of Objective-C and Java.",2015-09-14 23:44:26,10218191
1764,"I don&#x27;t see how you can make a single cross-platform experience from a single JS &#x2F; JSX file. The sample has two different main.js files, one for each platform:<p><pre><code>     &#x2F;&#x2F; iOS 
     var React = require(&#x27;react-native&#x27;);
     var { TabBarIOS, NavigatorIOS } = React;

     &#x2F;&#x2F; Android

     var React = require(&#x27;react-native&#x27;);
     var { DrawerLayoutAndroid, ProgressBarAndroid } = React;
</code></pre>
How can you determine the platform at runtime and dynamically build the layout for each? I&#x27;m guessing, we&#x27;ll have to expose a native function that returns the active platform, although it seems weird this doesn&#x27;t already exist.<p>I wonder why the team decided not to abstract the functionality a bit, like Xamarin did with Forms, so something as common as tab view could be constructed in a cross-platform manner? I understand the urge to keep the platforms feeling native, but a little abstraction could go a long way.",2015-09-15 02:57:01,10218745
1765,I started serious app dev with Xamarin before I ever touched ObjC. After having implemented a ton of apps I am able to move between Xamarin&#x2F;RoboVM&#x2F;ObjC&#x2F;Swift&#x2F;Java quite easily. I dabbled with Cordova and Titanium before that a bit but that was not a good experience for me.,2015-09-15 12:28:54,10220199
1766,"F# has been working well enough on Mac for many years. Even if You won&#x27;t like Ionide (I hope You will like it ;) ) it&#x27;s worth checking different projects which allow for F# development on Mac - Xamarin Studio has very good F# support, there are also Vim, Emacs, and Sublime Text 3 plugins &#x2F; modes for F# (all 3 for core F# language services features are using same backend as Ionide).<p>Also in context of cross platform development - there exists also F# yeoman generator which provides some nice templates for F# projects outside of VS.",2015-09-19 20:09:15,10245387
1767,"Omnisharp[1] is build on top of Roslyn so as for now it supports only C# &#x2F; VB. As far as I know they are working on adding plugin support for it for non-Roslyn language so maybe in the future we will have F# plugin there ( actually, as far as I know, that&#x27;s MSFT plan for adding F# support in VS Code)<p>F# has had opensourced compiler[2] (written in F#) before it was cool in .Net stack and for most tooling things we are using FSharp.Compiler.Services[3] project - which basically provides all features of F# compiler (and much more) as normal .Net library. Projects like Visual F# Power Tools[4] and Xamarin Studio F# support[5] are using it to provide very interesting F# IDE features.<p>Since Vim, Emacs, Sublime and Atom (even though Ionide is written in F# and compiled to JS we can&#x27;t use all .Net libraries) don&#x27;t have direct access to .Net assemblies, community have created FsAutoComplete[6] project which is just command line wrapper around FSharp.Compiler.Services and works as &quot;standard I&#x2F;O server&quot; where we send requests (for example if user wants completion list) and get appropriate responses.<p>[1] <a href=""http:&#x2F;&#x2F;www.omnisharp.net&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.omnisharp.net&#x2F;</a><p>[2] <a href=""https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;visualfsharp"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;visualfsharp</a><p>[3] <a href=""https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;FSharp.Compiler.Service"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;FSharp.Compiler.Service</a><p>[4] <a href=""https:&#x2F;&#x2F;github.com&#x2F;fsprojects&#x2F;VisualFSharpPowerTools"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fsprojects&#x2F;VisualFSharpPowerTools</a><p>[5] <a href=""https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;xamarin-monodevelop-fsharp-addin"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;xamarin-monodevelop-fsharp-addin</a><p>[6] <a href=""https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;FsAutoComplete"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;FsAutoComplete</a>",2015-09-19 20:32:36,10245464
1768,"i hear the same bullshit since the time when iphone was released ( and without apps support )<p>yet, there isn&#x27;t a single &quot;amazing&quot;  case of webapp.
( the same for xamarin, phonegap, cordova, name_your_cross_app_development_here )<p>i call it laziness to learn how to code native apps.<p>the only cross development that works, is for games ( almost all top 10 mobile games are in unreal or unity ( or cocosx ) )",2015-09-25 00:59:26,10275864
1769,"This is a startup, the application is not open source but everything we use is. We are building on the Microsoft stack, which might make it uninteresting for most of the HN crowd. Our main framework components are Orleans, Nancy, SignalR, Knockout.js and Xamarin. I think one could get the same results using Akka, express, socket.io, flux and React (or Ionic with angular)",2015-09-27 09:01:33,10285916
1770,How come noone mentioned Xamarin? Coming from a C# background it&#x27;s definitely the choice; even coming from a non-Java and non-C# background seems a better choice nowadays.,2015-09-29 11:50:40,10295647
1771,"San Francisco, CA | Full Time Onsite + Remote<p>#TheXamarinStory. We created Xamarin (<a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;</a>) because we knew there had to be a better way to build mobile apps. Were developers, so we know what developers want: a modern programming language, powerful tools, an efficient and delightful workflow and the power to create the best user experiences. We are on a mission to make it fast, easy and fun to build great mobile apps.<p>Systems Engineer (SF Onsite) <a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;ojxx0fw7"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;ojxx0fw7</a> Would you like to be part of the beginnings of Xamarin&#x27;s internal tech ops team? This is the challenge you have been waiting for! You will be heavily involved with both server and identity infrastructure automation, network operations, and infrastructure support and security.<p>Mobile Architect (SF Onsite + Remote)  <a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;ou6n0fwH"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;ou6n0fwH</a> We are looking for Senior Mobile Consultants to join our small Strategic Client Services team across the globe to help our clients realize the most out of their investment in our products (Xamarin Platform, TestCloud, and Insights).  Successful candidates are multidimensional developers and client facing leaders that love to architect, build and optimize exciting mobile apps across every single industry around the world.<p>Junior Mobile Development Trainer (Remote Contract-to-Perm) <a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;oLLxZfwM"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;oLLxZfwM</a> Do you have an ability to teach and inspire others regarding technical concepts and skills? Do you love C# and mobile development? Would you take pride in helping individuals and companies transform themselves and achieve their mobile strategy objectives? Yes to all - send us a note and tell us why - Xamarin University is excited to hear from you!<p>We have more jobs available in Boston, San Francisco and London including a few REMOTE positions! Complete list of all Xamarin opportunities (multiple locations): <a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;jobs"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;jobs</a><p>Interested to learn more, chat about what its like to work at Xamarin? My direct: paula@xamarin.com",2015-10-01 15:19:17,10311738
1772,"Arthrex Inc. | Naples, FL | Fulltime | Remote&#x2F;Onsite<p>Software Developer<p>----------------------------<p>We are looking for developers with either web or mobile experience to join our growing team in southwest Florida. Arthrex is a global medical device company and a leader in new product development and medical education in orthopaedics. As the software development team, we create innovative products to help support the company in education and research opportunities for our customers. Some projects that need immediate assistance include:<p>- Our main company website that serves as an education portal for our customers with tools and resources on our products<p>- A research registry that is being used by surgeons to track their patient&#x27;s progress both pre and post surgery<p>- Several innovative mobile applications that further educate surgeons on best practices and new techniques<p>Some of the technologies&#x2F;patterns we work with:<p>- Ruby&#x2F;Rails, Golang, Objective-C, Xamarin&#x2F;C#<p>- Amazon Web Services<p>- Postgres<p>- Microservices<p>Devops Engineer<p>----------------------------<p>We are looking for an experienced DevOps engineer to join our team and take ownership over of multiple production deployments and supporting services across our deployment such as our centralized logging service, or our Icinga setup.<p>- Experience with AWS services namely VPC &amp; Cloudformation required.<p>- Hands on experience developing, deploying, and maintaining Rails &amp; Go Apps required.<p>- Experience with Puppet is required.<p>Please cleblanc at arthrex.com or dbeard at arthrex.com if you have any questions or interest!<p>Arthrex was voted one for the top 100 places to work in 2015! Read more here: <a href=""http:&#x2F;&#x2F;fortune.com&#x2F;best-companies&#x2F;arthrex-94&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;fortune.com&#x2F;best-companies&#x2F;arthrex-94&#x2F;</a>",2015-10-01 16:50:45,10312558
1773,"SEEKING WORK - Remote<p>Location: Netherlands<p>Technologies: very experienced at .NET, including: C#, ASP.NET, Windows Phone &#x2F; Windows 8, Xamarin, Azure, SQL Server. Also know a good deal about other technologies including: PHP, ColdFusion, Java, Javascript, HTML, etc.<p>Email: leoncullens at gmail dot com<p>LinkedIn: <a href=""https:&#x2F;&#x2F;nl.linkedin.com&#x2F;pub&#x2F;leon-cullens&#x2F;20&#x2F;292&#x2F;518"" rel=""nofollow"">https:&#x2F;&#x2F;nl.linkedin.com&#x2F;pub&#x2F;leon-cullens&#x2F;20&#x2F;292&#x2F;518</a>",2015-10-02 08:46:44,10317382
1774,"Naturally I can&#x27;t answer your question about the specific person the GP was talking about, but FWIW, blind programmers are working productively in all popular languages (and some less popular ones too). Even significant whitespace, as in Python, isn&#x27;t a problem, because the more full-featured screen readers can be configured to announce changes in indentation.<p>Accessibility of development environments and tools is another issue. For example, Xamarin Studio is totally off-limits because it uses GTK, and GTK is inaccessible on Windows and Mac.",2015-10-04 00:18:23,10325922
1775,"&gt;Xamarin Studio is totally off-limits because it uses GTK, and GTK is inaccessible on Windows and Mac.<p>Shit. Is there a bug report for this? (Upstream, with GTK)",2015-10-04 01:56:27,10326090
1776,Grial aims to push Xamarin Forms to the next level in which apps look appealing and UI implementation is a breeze. No more time wasted compiling over and over to see small visual changes.,2015-10-06 14:36:45,10339145
1777,"Hi all, I&#x27;m currently a Junior Software engineering student and I&#x27;m looking to find an internship out of state for this coming summer. I&#x27;m at a point where I want to experience more outside of what my area of Milwaukee, Wi has to offer when it comes to software, business, and also culture and the people that come with it.<p>I&#x27;m looking to learn more about mobile development and I am currently dabbling in Xamarin mobile development. Are their any tips that I should keep in mind when looking for an out of state internship? I find it difficult to find these out of state positions when typically all I can do is apply online and get pooled with many other candidates.<p>Any input from this community would be wonderful.",2015-10-08 16:55:43,10353998
1778,"Do you have some way of sharing non-UI code between native mobile clients, e.g. Xamarin, RoboVM, or something JavaScript-based? React Native would be particularly appropriate here since you&#x27;re using GraphQL and looking at Relay. Rewriting non-UI client code in two or more languages is unacceptable in my view, because it either encourages dumb clients, which is the opposite of what you want if you&#x27;re using GraphQL, or leads to subtle discrepancies between platforms.",2015-10-10 17:55:38,10366277
1779,"This is the core functionality of a product I made for a customer. He has two legacy applications that only support backup using FTP servers, but he wanted to store those backups on Google Drive.<p>The challenging part was the upload to Google Drive while still looking like a normal standard compliant FTP server and running as Windows Service.<p>The core FTP server library is written as PCL. The underlying Google Drive library uses RestSharp.Portable which is also available as PCL and should allow the use in .NET Core, Windows Store, and Xamarin projects.",2015-10-14 01:28:00,10384514
1780,"Wow, going after Xamarin (prioritizing iPhone developers instead of Microsofties) and only asking for donations!<p>This is a great find; thanks for the link.",2015-10-14 16:50:30,10387739
1781,"This is not going after xamarin, it&#x27;s just a toy problem.",2015-10-14 18:59:11,10388618
1782,"I notice that no off-the-shelf web view wrappers (e.g. PhoneGap&#x2F;Cordova) or non-web-view JavaScript frameworks (Titanium, NativeScript) are in this list. Would Xamarin, RoboVM, or RubyMotion be detectable with this method? Or can we safely assume that all of the top 100 apps are native ObjC or Swift?",2015-10-16 17:57:21,10400967
1783,"I don&#x27;t see why Xamarin wouldn&#x27;t be detectable but I don&#x27;t think it would appear as a separate library. Due to the impedance mismatch between C# and ObjC, Xamarin has to generate proxies and wrappers as well as deal with some abstraction leaks.<p>However, iOS (afaik) doesn&#x27;t quite have shared libraries like you would have on a Linux server and there&#x27;s no point in creating a separate ObjC library that would add bloat to each Xamarin binary because the C#-to-ObjC transpiler can selectively generate the wrappers&#x2F;proxies during compilation. Xamarin might not even use a code generator to do that because you can just include all the ObjC code with the transpiler and copy-paste include them into the project at will.",2015-10-16 18:09:07,10401051
1784,"Xamarin on iOS works in a similar way to Unity. They both use the Mono AOT compiler (ahead of time translation) to convert C# to native ARM code. It&#x27;s not a JIT environment, like on Android. Miguel de Icaza is one of the founders of Xamarin and the Mono OSS project.<p>However, Mono isn&#x27;t composed of ObjC classes so it&#x27;s harder to detect just by looking at that list like the author did here. Xamarin does have a few ObjC components (such as XamarinNSThreadObject) since it adds a support library to the environment.<p>We actually match the structure of the code (control flow subgraphs), as well as other items like data references, so we get a more accurate view than you do just looking at class names.<p>You&#x27;re right that each native or ObjC library you use with Xamarin has a plugin that exports a C# interface. It will be interesting to see how this evolves and if Xamarin will come up with a way of auto-generating these interfaces better.",2015-10-16 18:23:02,10401149
1785,"I work on an SDK that&#x27;s used by a lot of companies you&#x27;ve heard of. My experience is that a significant minority of them are using Xamarin&#x2F;Cordova&#x2F;Appcelerator and that we&#x27;re asked if we support them more often now than we were a year ago. (Anecdotal, obviously.)",2015-10-16 21:40:51,10402170
1786,"D has replaced Python for my regular programming.<p>D is the sweet spot for Python programmers to upgrade to without going backwards to Go (Programming language design wise) nor weighed down by all the new (and very good) stuff in Rust.<p>D has everything from a nice IDE(Xamarin Studio), debugger, package management (Dub), statically compiled binaries, pretty decent std lib (not as good as python or Go, but very good nonetheless).<p>I still write Python if it&#x27;s a &quot;script&quot; that has to run on a $work server, where it is safe to assume that Python would be available and sufficient for most tasks.",2015-10-16 23:24:05,10402624
1787,Kudos to the Xamarin management for this strategic move.<p>(CIL BYTECODE &#x2F; JVM BYTECODE) =&gt; LLVM =&gt; NATIVE,2015-10-21 20:52:40,10428609
1788,"How easy would it be for a competitor to use their code? It seems to me to be difficult given Xamarin&#x27;s positive reputation, but are there any legal or technical barriers for a competitor to offer support, patches, etc., and contribute upstream?",2015-10-21 20:57:40,10428634
1789,Interesting business move. Since it appears the plan is to get RoboVM customers to use Xamarin Insights and Xamarin Test Cloud does that mean that Xamarin&#x27;s original product of C#&#x2F;XAML to native iOS and Android dev environment is going to come to be seen as the razor to the services metaphorical blades if you will?,2015-10-21 21:55:40,10429009
1790,&gt;<i>Xanarin is disliked by independent developers for its pricing structure.</i><p>Define &quot;independent developers&quot;. Because a lot of them do use Xamarin.,2015-10-21 22:19:13,10429184
1791,The official RoboVM page doesn&#x27;t mention anymore the free option. They have some open source (at least for now) code on Github and you can fork it if you wish.<p>As the copyright holder RoboVM (or Xamarin) can chose at any time to close source the code and change the license for new versions.,2015-10-21 22:31:32,10429255
1792,"More importantly, they&#x27;ve removed IntelliJ and Eclipse integration from the Solo&#x2F;Indie plan to match Xamarin keeping Visual Studio integration out of their Indie plan.",2015-10-21 22:38:32,10429297
1793,"Xamarin is IMHO the best cross-platform SDK, but I wouldn&#x27;t recommend it, or any cross-platform SDK, to indie devs unless that dev&#x27;s background is in C# and they really really want to keep using C# AND they know what they want a cross-platform SDK for. It&#x27;s best for shops with several C# devs.",2015-10-22 00:16:06,10429731
1794,"badlogic, I can&#x27;t reply to a comment thread going as deep as your last comment. Did Xamarin specifically put in the acquisition that it will remain free for libGDX developers? Because my faith in Xamarin is not high that they won&#x27;t remove free integration with RoboVM, as Xamarin loves charging developers high prices, and thus me developing games using libGDX and RoboVM becomes a risky decision.",2015-10-22 00:57:04,10429866
1795,"Thanks for the great job!<p>Just recently I, by some means of evil hackery, embedded quill in an Xamarin-based iOS app. Quick, painless and gets the job done 100%. (Sidenote: I proxied the Controls to a native component to make it look .. &quot;more native&quot;.) Back to the point: Great component, awesome documentation, highly recommended.",2015-10-25 22:07:03,10448649
1796,"I work for a small map tech company and my job role is basically a graduate C# developer, with some configuration duties also to cater our product to different customers. I didn&#x27;t know C#, only Java, before starting the job so it&#x27;s been nice to learn about concepts like WPF and Linq this past year.<p>I do some freelance work for a small business owner in which I code small Java apps that hook to the eBay and Amazon APIs, for the benefit of his business. It makes me a little money but I&#x27;ve recently asked for a pay rise.<p>Other than that, I want to make my own mobile apps using tools like Xamarin but I haven&#x27;t really built up the confidence in myself to create any of my ideas. They mostly seem like things that have been done before or where I don&#x27;t see that they might get as much use as the idea does in my head.<p>On top of that, I enjoy my free time. I find it very hard to come home and have the energy to code after my 9 to 5 where I&#x27;ve been doing the same thing, staring at a screen, 7 and a half hours. Instead, I try to exercise a fair bit and build hobbies outside of programming.  I&#x27;m a bit of an everythingist, admittedly, though it&#x27;s not a quality I think leads to becoming a master in programming.<p>Has anyone else faced similar problems to me? What is your answer to your own question, OP?",2015-10-27 13:15:25,10457746
1797,"Hi  Tim from Realm here (<a href=""https:&#x2F;&#x2F;realm.io"" rel=""nofollow"">https:&#x2F;&#x2F;realm.io</a>). Were building a mobile database: a replacement for Core Data &amp; SQLite, running directly inside mobile phones, tables &amp; wearables. Hundreds of millions of people rely on Realm, through apps from Pinterest, Google, Amazon, eBay, Intel, Hipmunk, Expensify, GoPro, the BBC, Adidas, IBM, Homeland Security, Walmart and many, many more. Were also the #4 most-starred database on GitHub with &gt;7,000 stars and growing fast.<p>I oversee our Product &amp; Marketing efforts and find myself looking for a new Product Manager to join our team. You must be someone with a background in native mobile development (ideally both Objective-C&#x2F;Swift AND Java). You must have a deep understanding of the technical &amp; business concerns of mobile app developers, and an attention for detail in SDK API design, visual UX, and technical writing.<p>Experience with native development is required, but any additional experience you have with other mobile frameworks (React Native, PhoneGap, Xamarin, Unity, ) will be a big plus.<p>You dont have to have formal experience as a product manager. Well gladly talk to you if you have background as a developer, evangelist, or other role closely related to mobile development and just want to branch out.<p>You can email me directly to apply or if you have any questions: tim@realm.io  If you want to apply, Id love to take a look at your resume (and GitHub account if appropriate).",2015-10-30 05:11:49,10476250
1798,"You&#x27;ve always been able to do this. You could distribute your Xamarin.iOS application as source-only and require users compile it themselves without being in violation of the license, but you still cannot release it on the App Store without a commercial license (since it is impossible without jailbreaking to replace the .so).",2015-10-30 16:40:13,10478862
1799,"Curse, Inc. | Irvine, CA | FULL-TIME, ON-SITE<p>Android Developer, Mobile Backend Developer, Mobile Product Manager, Mobile UX Designer<p>Curse is building the world&#x27;s best communication platform for gamers. Check the current product at <a href=""http:&#x2F;&#x2F;beta.cursevoice.com"" rel=""nofollow"">http:&#x2F;&#x2F;beta.cursevoice.com</a><p>Our mobile apps are built using Xamarin and therefore engineering applicants should have a strong background in mobile development as well as C#.<p>For more details, email me cconover@curse.com<p>Chris, Director of Mobile",2015-11-02 15:49:09,10492442
1800,"SEEKING WORK - Remote (living in The Netherlands)<p>Experienced C# &#x2F; .NET developer. I build complex web applications with ASP.NET, Azure, SQL Server, etc. I also build mobile applications for Windows (Phone) or cross-platform with Xamarin.<p>LinkedIn: <a href=""https:&#x2F;&#x2F;nl.linkedin.com&#x2F;in&#x2F;leoncullens"" rel=""nofollow"">https:&#x2F;&#x2F;nl.linkedin.com&#x2F;in&#x2F;leoncullens</a><p>Email: leoncullens at gmail.com",2015-11-02 17:46:12,10493547
1801,"Xamarin, Inc. | San Francisco, CA | FULL-TIME, ON-SITE, REMOTE<p>Xamarin makes software to help you build &amp; design a mobile app using our cross-platform development software which simplifies mobile application creation.<p>I&#x27;m looking for a full time Customer Success Engineer that is familiar with C# or iOS&#x2F;Android Development. CSEs are responsible for Onboarding, In-depth product knowledge, product feedback to engineering team, and evangelism of new products&#x2F;APIs within accounts. Position description here: <a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;ocwA0fw2"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;ocwA0fw2</a><p>Come join us! It&#x27;s a great team; we like to have fun, and work hard too.",2015-11-02 18:09:16,10493751
1802,"SRXP.com | C# &#x2F; Xamarin | Onsite in Amsterdam | Full Time<p>ABOUT: SRXP offers an efficient and user-friendly solution to digitise expense reporting. The tool consists of a mobile app and online portal and is innovated continuously. We sell to large Dutch and international corporates, such as Bugaboo, Randstad, and CheapTickets.
The team consists now of 15 members and is growing quickly. Our office is situated at Amsterdam Science Park. We offer flat hierarchy, good salary, organised lunches, and a professional and fun team. Successes are celebrated every Friday with some drinks.<p>JOB: We are looking for an experienced C# developer who is eager to start as soon as possible at our company. We have a lot of cool features lined-up that that we want to release quickly so were looking for someone who wants to work at least 32 hours a week. Also our new designer just started, so we are also on the verge of a complete redesign.
We have just started to work with Xamarin to release more quickly across all platforms (Android, iOS, and Windows Phone). Other tools we work with are AWS, Git, Bitbucket, and JIRA.
Our app developers are expected to think proactively about the user-friendliness of the apps as well. Taking initiative to introduce new features is highly appreciated.<p>More info: <a href=""http:&#x2F;&#x2F;www.srxp.com&#x2F;company&#x2F;jobs&#x2F;xamarin-developer&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.srxp.com&#x2F;company&#x2F;jobs&#x2F;xamarin-developer&#x2F;</a>",2015-11-02 18:13:01,10493776
1803,"Digitally Imported <a href=""http:&#x2F;&#x2F;di.fm&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;di.fm&#x2F;</a> -- Senior Native Mobile Developer<p>REMOTE or from our Denver, Colorado office.<p>Digitally Imported is seeking a talented Native Mobile Developer to join our distributed Product Development group. This is a full-time remote (telecommute) development position with a close-knit distributed team. We currently support native apps for iOS, Android, BlackBerry and Windows Phone, using Xamarin in C#.<p>Visit <a href=""http:&#x2F;&#x2F;di.fm&#x2F;jobs"" rel=""nofollow"">http:&#x2F;&#x2F;di.fm&#x2F;jobs</a> for more info or email jobs@di.fm to apply.",2015-11-02 20:40:36,10495047
1804,"Full stack developer, specializing in RESTful APIs and Single Page Applications.<p>Location: New York City, New York<p>Remote: Yes<p>Willing to relocate: Yes<p>Technologies: Node.js (MEAN), PHP (LAMP).<p>Resume: <a href=""http:&#x2F;&#x2F;malcolmdiggs.com&#x2F;resume.pdf"" rel=""nofollow"">http:&#x2F;&#x2F;malcolmdiggs.com&#x2F;resume.pdf</a><p>Portfolio: <a href=""http:&#x2F;&#x2F;malcolmdiggs.com&#x2F;portfolio"" rel=""nofollow"">http:&#x2F;&#x2F;malcolmdiggs.com&#x2F;portfolio</a><p>Github: <a href=""http:&#x2F;&#x2F;github.com&#x2F;malcolmdiggs"" rel=""nofollow"">http:&#x2F;&#x2F;github.com&#x2F;malcolmdiggs</a><p>Email: malcolmdiggs@gmail.com<p>Keywords: ExpressJs, Restify, Gulp, Grunt, Javascript, jQuery, HTML5, CSS3, Bootstrap, Foundation, MongoDB, MySQL, Redis, TDD&#x2F;BDD, DynamoDB, SCRUM, Laravel, CodeIgniter. LA, Venice, Santa Monica, Culver City, Palms, DTLA, SD, NOLA, NYC, Manhattan, Brooklyn, Staten Island, Queens, Bronx, AngularJS, EmberJS, ReactJS, DerbyJS, BackboneJS, NPM, PhoneGap, Ionic, Xamarin, Github, NPM, NPMjs.",2015-11-02 23:10:15,10496061
1805,"So let me get this straight... RoboVM is acquired by Xamarin, the company behind Mono (the open source c# implementation)... and they therefore go closed source?<p>I don&#x27;t get it.",2015-11-03 10:49:08,10498692
1806,"I don&#x27;t think Xamarin open source their Visual Studio integration or their Mac OS Build Host. So this would be following in those footsteps: if you want these features, pay for them.",2015-11-03 10:57:25,10498722
1807,"Xamarin&#x27;s .NET mobile&#x2F;mac offerings are closed source. Mono itself fills the role of the OpenJDK does for Java, but it alone is not suitable for running on mobile. Also, Mono is licensed under the LGPL and Xamarin&#x27;s interpretation of that license precludes using the runtime in a closed-source program without a alternative license from them (which they provide with their paid plans).",2015-11-03 11:00:06,10498729
1808,"Uhm, they only support mono because they simply can&#x27;t close it and have lots of proprietary libraries built around it. Some they developed on their own, some were bought&#x2F;licensed from previous Mono maintainers. Xamarin is not a FOSS company by a long shot.",2015-11-03 11:02:39,10498742
1809,"I don&#x27;t think Xamarin has open sourced anything that they didn&#x27;t have to. All tools developed exclusively by Xamarin are closed source (e.g. Xamarin build host, the Mono packager, Xamarin.Insights, Objective Sharpie, etc...).",2015-11-03 11:10:47,10498767
1810,"RoboVM was basically the competition of Xamarin and Xamarin killed it. RoboVM was cheaper and had a bigger market, since it targeted JVM developers. With RoboVM you aren&#x27;t even tied to Java the language, being entirely possible to use a language like Scala. And contrary to Xamarin, in order to use IntelliJ IDEA or Eclipse, or in other words the state of the art in IDEs, you didn&#x27;t need to pay $999 per year, like you need for using Visual Studio with Xamarin. And RoboVM has been open-source, which brings with it benefits, like trust, trust because should things go wrong, you can always fork it.<p>Well, now is the time for a fork and I hope it will happen.",2015-11-03 11:19:30,10498800
1811,"I&#x27;ve been using libgdx and was meaning to explore the whole iOS&#x2F;RoboVM angle, I finally got around to it this weekend, ironically just in time to catch the kerfuffle around this.<p>Presumably there is an open-source version of RoboVM still around. Perhaps here: <a href=""https:&#x2F;&#x2F;github.com&#x2F;robovm&#x2F;robovm"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;robovm&#x2F;robovm</a> ... though I gather the problem with that is that it does not include any of the latest iOS 9 work, which was done in a closed repository somewhere.<p>Looks like the Libgdx guy (Mario?) fought hard to keep a free version of RobobVM for Libgdx users. Not sure how long that can last; its currently based on self-identifying yourself as a Libgdx user and hence easily abused.<p>The other irony is that Libgdx used to use Xamarin to target iOS, but they switched to RoboVM because it was free&#x2F;open.",2015-11-03 11:20:25,10498804
1812,"&gt; Also, Mono is licensed under the LGPL and Xamarin&#x27;s interpretation of that license precludes using the runtime in a closed-source program without a alternative license from them<p>Citation?  I&#x27;ve never heard anyone interpret the GPL and LGPL as the same.<p>Embedding mono is different than using mono.  <a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;licensing"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;licensing</a>",2015-11-03 12:20:55,10499054
1813,"Mario here, libGDX author and part of the RoboVM team. We switched from Xamarin to RoboVM for libGDX because it worked better for our purposes and was free. It being OSS was a plus, but that wasn&#x27;t really a factor in the decision. We&#x27;ve been happily using Xamarin for a year, even though it was closed. I constantly evaluated other options, including Avian and XMLVM, neither of which came close to either Xamarin or RoboVM in terms of functionality and performance. That is still true today.<p>The free indie licenses for libGDX and PlayN users will last.  It&#x27;s very easy on our end to prevent abuse automatically. We never considered not making it free for indie game devs. From RoboVM&#x27;s standpoint, it makes zero sense to 1) try monetizing a community that can&#x27;t be monetized and 2) alienate the community that helped RoboVM a lot over the past two years. If RoboVM stopped the free indie licenses, it would only hurt RoboVM&#x27;s bottom line.<p>The close sourcing was badly communicated, no question about that. But contrary to popular believe, it was not the longest bait and switch in the history of evil plans (RoboVM&#x27;s been out there for almost 4 years), it was a business decision. A direct competitor exploited the free OSS version, hurting our bottom line.",2015-11-03 12:29:58,10499094
1814,"Xamarin hasn&#x27;t killed anything.<p>The RoboVM developer&#x27;s realized that they couldn&#x27;t count on the FOSS community to pay their bills and accepted the deal proposed by Xamarin.<p>Next time something similar comes out, people should think about paying for support instead of threatening to fork and use for free.<p>If anything, the freetards have killed it.<p>EDIT: Typo someone =&gt; something similar",2015-11-03 12:35:59,10499127
1815,"Mono is different than Xamarin. Xamarin works on and supports Mono, but it&#x27;s not their core product. Their core product is the Xamarin Platform, which is what you&#x27;re talking about.",2015-11-03 13:10:36,10499265
1816,"I&#x27;m about to do a Java to iOS shootout, so this is fairly apposite for me. RoboVM&#x27;s big advantage for us at the moment is that it&#x27;s a commercially-supported product in a space where you are completely at the mercy of your tools; if your use case falls outside Google&#x27;s, then j2objc is a potential cul-de-sac; XMLVM looks interesting but may still be more of an academic project than professional tool, and so on. Ultimately, it makes more sense for Xamarin to give RoboVM more resources and take the codebase internal: the end result is likely to be a better tool and higher revenue.",2015-11-03 13:43:07,10499447
1817,"&gt; I&#x27;m not sure what to think about the competitors-stealing-our-code angle, but the OSS-is-being-used-as-freeware argument is certainly one point in favor of closing&#x2F;controlling their code (as a business).<p>Implicit in this argument is the assumption that Xamarin ever wanted RoboVM to &quot;win&quot; at all.<p>I&#x27;m not saying that they don&#x27;t... just that they subsumed a smaller competitor with an arguably superior product.  Its logical to conclude that there exists a possibility that they simply paid to buy out RoboVM because they thought it would be cheaper than trying to compete head to head (especially, since as your c+p points out, competitors were&#x2F;are using RoboVM code), and if RoboVM returns some of that money then it is just gravy on the biscuit.<p>If that&#x27;s the case then too bad for Xamarin... it is more of a sign of their ineptitude and of their eventual demise... if their leadership choose to use cash to knock out competitors instead of innovation, it will be interesting to see how long they can keep that up.",2015-11-03 14:40:36,10499785
1818,"Apple has a conflict with the LGPL in iOS apps, so Xamarin offers a commercial license. I&#x27;m not sure why this restriction would apply on other platforms though.",2015-11-03 15:58:37,10500370
1819,"I don&#x27;t think shutting down RoboVM to avoid competition is Xamarin&#x27;s goal, after all if RoboVM were to shut down there is no reason to assume that the Java developers that use it would migrate wholesale over to the Xamarin C# development environment.<p>My theory is that Xamarin is starting to care less and less what language is used to build mobile apps (for a while they claimed to care more about C# than Microsoft did); and instead own the products that become a natural pipeline into their service offerings like Test Cloud. Buying RoboVM lets Xamarin build in hooks that will mean staying in Xamarin platform is a natural progression.",2015-11-03 17:41:10,10501126
1820,"Xamarin contributed several projects to the .NET Foundation.  Mono is also permissively licensed, so every contribution Xamarin makes that does up in the open (instead of locked up, which they could do by actually taking advantage of the terms in those permissive licenses) is something &quot;that they didn&#x27;t have to&quot; do.",2015-11-03 23:54:42,10503615
1821,"Worked out well for Xamarin. Also, it seems to me that SUSE is still in good shape, but didn&#x27;t continued to grow like RedHat.",2015-11-04 15:04:25,10507018
1822,"There is some risk that they&#x27;ll take it back closed source since its MIT licensed (with patent grant) and their CLA[1] gives them a broad copyright license. However, I think with such a high-quality implementation being open source would be hard to put back in the bottle, especially since Mono is already integrating much of the code into their runtime[2]. On the other hand, external contributions to the Mono runtime are MIT licensed so that project could jump back to closed source if Xamarin so desires.<p>It&#x27;s important to note that all of this applies to the OpenJDK too[3]. So you are at least no worse off if you make a leap from the JVM.<p>[1]: <a href=""https:&#x2F;&#x2F;cla2.dotnetfoundation.org&#x2F;cladoc&#x2F;net-foundation-contribution-license-agreement.pdf"" rel=""nofollow"">https:&#x2F;&#x2F;cla2.dotnetfoundation.org&#x2F;cladoc&#x2F;net-foundation-cont...</a><p>[2]: <a href=""http:&#x2F;&#x2F;www.mono-project.com&#x2F;docs&#x2F;about-mono&#x2F;dotnet-integration&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;docs&#x2F;about-mono&#x2F;dotnet-integrati...</a><p>[3]: <a href=""http:&#x2F;&#x2F;www.oracle.com&#x2F;technetwork&#x2F;oca-405177.pdf"" rel=""nofollow"">http:&#x2F;&#x2F;www.oracle.com&#x2F;technetwork&#x2F;oca-405177.pdf</a><p>edit: word choice",2015-11-04 16:28:17,10507646
1823,<i>&gt; Worked out well for Xamarin</i><p>Only for them. Novell bet big on pivoting on Linux and then crashed.,2015-11-04 16:40:44,10507728
1824,&gt; So Google is officially making its stand as Dart being the future of Android (the Swift of Android?).<p>Where did you read that? They just provided a way to build Android apps with Dart (like you can with C# via Xamarin and other such frameworks).,2015-11-06 08:47:02,10518422
1825,"Just what I was thinking.<p>What problem is this trying to solve?<p>The big draw of React-native is that I can reuse largely the same core code everywhere, and for the parts I can&#x27;t (mobile UI), I&#x27;m at least working in a language that everyone on my team is familiar with, with the same pattern as elsewhere (react&#x2F;flux).<p>This to me sits in a weird middle ground between RoboVM&#x2F;Xamarin and Cordova, but has the benefits of neither (it uses a language that I&#x27;m not already familiar with, and doesn&#x27;t give me access to native controls).<p>Am I being unfair? (Is there a killer feature here I&#x27;m not seeing, beyond being backed by Google?)",2015-11-06 09:16:47,10518482
1826,"I&#x27;ve only had a short look at this but here are my impressions :<p>It doesn&#x27;t pack a huge VM&#x2F;class library like RoboVM&#x2F;Xamarin and doesn&#x27;t try to gap two VMs&#x2F;GC like Xamarin on Android - instead it uses IPC for talking to system services using it&#x27;s custom service definition language to define the IPC API&#x2F;schema in cross language way.<p>Dynamic language&#x2F;custom VM lets them do a better job at development experience (dynamic code reloading) as opposed to buggy&#x2F;complex one you get from trying to statically compile bytecode or bridging two VMs to share objects.<p>IPC architecture then lets you write performance parts in portable native code (eg. C&#x2F;C++&#x2F;Rust) or system specific language (eg. Java&#x2F;Swift&#x2F;Objective-C) and it should be easier to make cross platform - hiding the dirty FFI crap.<p>Dart is much closer to C# than you think, go look at some examples - it&#x27;s quite a productive language from my experience with it so far.<p>Custom GUI framework means it doesn&#x27;t behave&#x2F;look the same as native framework (just like webview tech) but at the same time it can also mean higher performance (certainly better than WebView), consistent behavior between platforms and versions (faster development), etc.<p>Overall I like it, I can see a GUI framework on same tech built for desktop (custom widgets but same rendering principles) and doing client side development in Dart sounds great - fast prototyping and iteration because of it&#x27;s dynamic nature but the optional type system gives you same guarantees as C#&#x2F;Java type systems.",2015-11-06 09:41:44,10518559
1827,&gt; It doesn&#x27;t pack a huge VM&#x2F;class library like RoboVM&#x2F;Xamarin and doesn&#x27;t try to gap two VMs&#x2F;GC like Xamarin on Android - instead it uses IPC for talking to system services using it&#x27;s custom service definition language to define the IPC API&#x2F;schema in cross language way.<p>A minimal &quot;Hello World&quot; RoboVM app adds 3mb per CPU slice. I&#x27;d assume packaging the Dart VM has a similar footprint.,2015-11-06 10:33:18,10518735
1828,"&gt; Don&#x27;t we have enough cross platform dev kits anyways?<p>Absolutely not. Right now the choices are very, very small for the platforms you&#x27;d actually want to use. React-native, before Flutter, was the only one (that I know of at least) that uses real, native components but uses a different language for orchestrating them.<p>Beyond that everything else is either &quot;shove html in a web view&quot; or the xamarin approach which, and please correct me if I&#x27;m wrong, is closer to the approach of QT in that it renders all its own controls.<p>We need more options in the first camp, the one where real native components are used but can use a common language across the mobile operating systems.<p>I only wish react-native and this supported Windows Phone. It&#x27;s such an awesome OS but no one will ever use it because of the lack of apps :(",2015-11-06 15:30:00,10519911
1829,"&gt; You can write all of your Qt logic in javascript if you want to. ... But the thing is that Qt allows you to write your logic (and your ui) in C++ if you need to.<p>Maybe that sounds appealing to some, but for me is just choosing between two evils. Unsafe dynamic language on one side - kitchen-sink low-level language on the other side.<p>I personally would like something in between, but still cross platform. F# with Xamarin looks most appealing to me, but Xamarin is unfortunately not free, so...",2015-11-06 15:41:25,10519987
1830,"Beyond that everything else is either &quot;shove html in a web view&quot; or the xamarin approach which, and please correct me if I&#x27;m wrong, is closer to the approach of QT in that it renders all its own controls.<p>Xamarin uses native components, in a similar manner to react-native. (Or more accurately, the other way round, Xamarin pre-dating react-native.)<p>I also wish react-native or NativeScript would actually provide&#x2F;finish Windows Mobile&#x2F;UWP support, but I&#x27;m not currently holding my breath. (That said, at least Windows supports JS as a native build stack so maybe you don&#x27;t really need react-native&#x2F;NativeScript to support Windows, you just need some glue scripts...)",2015-11-06 18:02:53,10520848
1831,"QML is slow, you only get the compiler in the commercial version.<p>Still no proper support for mobile platforms. You basically have to write most of the bindings yourself. Specially a pain in Android, given JNI.<p>Only QML widgets get some platform theme support, not the C++ ones, so you need to add the QML engine to the set of libraries to pack.<p>Also you are supposed to code all native UI behaviours yourself, thus having more work than an hybrid development of native mobile OS language (views) + portable C++ libraries (business logic).<p>If you pack Qt libraries with your application it is around 30 MB for the runtime dependencies. You can also scare the user by asking them to download the libraries as separate app instead.<p>I got my demo application using Java + C++ and C++&#x2F;CX + C++ around 5 MB.<p>Finally if you look at the set of exposed platform APIs across all mobile OSes, they are way behind Xamarin and their commercial licenses are much more expensive.",2015-11-06 18:06:25,10520873
1832,"Interesting, thanks for the heads up! I was invited to their original Alpha (before they called it Xamarin) years ago and I could have sworn it did not work like that back then. So I&#x27;m assuming it&#x27;s either changes or I&#x27;m mistaken.",2015-11-06 20:10:23,10521703
1833,"So far as I&#x27;ve followed Xamarin it has always been about native components, but they&#x27;ve not always been great with marketing that. The waters are also muddied a bit in that they have their Xamarin.Forms library now which is an abstraction layer over top of the native components (but at the end of the chain, still defers to the native components to actually do the work). It&#x27;s easy to confuse Xamarin.Forms with a non-native toolkit, but it too is just a wrapper over top native tools.",2015-11-06 21:59:29,10522347
1834,"I use Xamarin Studio (Mono-D) daily for programming in D on a Mac and it is a very capable IDE, at least for what I do.",2015-11-11 09:55:41,10545763
1835,"Apple allows Unity and Unreal Engine, all of which are just as big if not bigger than WebKit. Leaving the realm of games, they also allow Mono&#x2F;Xamarin, which is a similarly enormous framework.<p>The restriction is plainly a business decision, not a technical one.",2015-11-12 17:04:53,10554406
1836,"I think I need to preface this by saying that I sideloaded f.lux using the original technique the moment it came out without hesitation and will not remove it from my phone now that it&#x27;s not kosher.<p>Almost none of this is actually true, just to clarify a few points:<p>- Apps (for the App Store or otherwise) do not have to be written in Objective-C or Swift (see: RubyMotion, Xamarin, PhoneGap&#x2F;Cordova, React Native, J2ObjC, RoboVM, that thing Microsoft is working on, probably others I don&#x27;t know about or have forgotten)<p>- You don&#x27;t have to buy anything to put an app on your personal iOS device, you just download Xcode and work from there (more on this later)<p>I&#x27;ll concede that you can&#x27;t access the hardware directly from iOS, meaning yes, it does have to be accessed through APIs, however allowing direct hardware access is a massive legitimate security risk. However, you absolutely do own the device as it exists as hardware. You don&#x27;t own the software on it, but that&#x27;s the same for every proprietary software product in existence. What you own is a license to run the software for certain purposes. Whether or not this is a bad thing is for you to decide, but this is not a problem unique to iOS. Furthermore, if you write an app using your free copy of Xcode and put it on your iOS device, you absolutely own the copyright for that app.<p>Now, as for what is true in your comment, yes, you do have to pay $99 a year to distribute apps using the App Store. More than anything else, I believe this is why Apple could not allow this to continue. If this became a trend among iOS app developers, it stands to reason that they would lose a lot of money from developers distributing this way instead of using the App Store. Yes, f.lux is free, but they don&#x27;t want a trend starting and even with free apps you can still sell advertisements. Again, I&#x27;m making no judgment on whether or not it&#x27;s morally just for Apple to do this, I&#x27;m just explaining why it happened in more specific terms. Second, doing this completely subverts Apple&#x27;s security features. The ability for users to load arbitrary apps onto their devices was to allow people without $99 to run apps that they made on their own devices.<p>This was a privilege originally only afforded to registered developers, and this was intended to lower the barrier to entry for iOS app development. When it&#x27;s one person writing apps for fun and loading them on their phone to test and show their friends or whatever, the security risk is low. When it&#x27;s groups of programmers telling people to download a precompiled binary that can&#x27;t be inspected to ensure its safety and load it onto their devices, it becomes a massive security risk. (as a free software person, you should know that even for us that chose to load it, we don&#x27;t know what the fuck it contains. f.lux is not open source. for all we know, we just loaded a ton of malware onto our iOS devices.)<p>It should be noted that there are shit tons of open source iOS apps, and <i>so far</i> Apple has not told them to stop providing the source for people to download, compile, and sideload.<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;dkhamsing&#x2F;open-source-ios-apps"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dkhamsing&#x2F;open-source-ios-apps</a><p>There are so many reasons aside from locking down iOS that Apple could have locked this down for. You can&#x27;t read the source, it&#x27;s a proprietary app, it subverts their developer agreement, and it&#x27;s actively encouraging people (176,000 by their count) to load a binary onto their phone the source of which they can&#x27;t read and that by the developer&#x27;s own admission is using undocumented APIs.<p>Now, if Apple said that you were no longer allowed to load apps onto your devices without a developer license period, as used to be the case, then that would be a different story and saddening to boot. However, as it stands, f.lux is the only app I know of that this has happened to and there is ample reason for it having happened.",2015-11-13 03:38:56,10557878
1837,"Yes, the code is MIT licensed. Check it on github: <a href=""https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;referencesource"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;referencesource</a><p>In fact, for the past couple releases mono has replaced a lot of its library code with MS&#x27;s quite successfully.<p>Full disclosure - I run the mono team at Xamarin.",2015-11-13 03:50:24,10557912
1838,"Thanks for your all hard work and sorry for the few times I was part of the anti-Mono crowd in the early days.<p>It is quite a valuable work, and if I would be running a business for mobile dev, Xamarin would be on top list vs C++ (which I use as a hobby currently).",2015-11-13 08:43:31,10558667
1839,"Please do go on, if you will.<p>I&#x27;m primarily a Python guy and with the 2&#x2F;3 split, I&#x27;ve had my eye on .Net Core to migrate my business platform to. Pretty much been looking to dump Python for anything over a line count of 500 and keep it that way.
I&#x27;m open to any speculation as to where it&#x27;s going because I&#x27;m finding the .Net platform to be more attractive than ever. A few years ago it was looking pretty sad but MS really turned it around and I&#x27;m interested in a permanent migration.
I really can&#x27;t find much, that I enjoy using, that approaches Python&#x27;s broad use cases than C# on .Net. With dotNet Native and Xamarin, I&#x27;m very seriously considering the plunge.",2015-11-14 05:52:38,10564653
1840,"I personally find ReactiveUI to be the best MVVM framework for iOS, Android, and Windows. It&#x27;s in C# as opposed to Swift or Java, so you&#x27;ll need Xamarin for this.<p><a href=""http:&#x2F;&#x2F;reactiveui.net&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;reactiveui.net&#x2F;</a>",2015-11-15 16:02:26,10569941
1841,"Xamarin is positioning themselves as more of a cross-platform tools company now, since the definitive &quot;multi-platform .Net RT&quot; will come from Microsoft. It looks like Xamarin&#x27;s business will be to build on top of that.",2015-11-18 16:58:33,10588949
1842,"You would use Mono for mobile apps (i.e. Xamarin&#x27;s bread-and-butter), cross-platform desktop apps, and server apps based on currently released versions of ASP.NET.<p>You would use .NET Core for server apps based on the upcoming version of ASP.NET.<p>In the future, it would nice if an ecosystem builds up for using .NET Core in other contexts.  In particular, I know that not so many people care about desktop GUI development these days... but it would be great if you could combine .NET Core and AOT native compilation.  Be able to write cross-platform desktop apps in type-safe, more-friendly-than-C++ language... and be able to ship them as standalone executables rather than worrying about a Mono or Java runtime being installed.",2015-11-18 17:58:27,10589461
1843,"Xamarin is separate from mono, no?",2015-11-18 18:14:45,10589588
1844,"&quot;Mono is a free and open source project led by Xamarin&quot; <a href=""https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Mono_(software)"" rel=""nofollow"">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Mono_(software)</a><p>But Xamarin have wisely moved into a wider place in the .NET tools ecosystem so that they don&#x27;t <i>only</i> do mono, i.e. so they don&#x27;t live and die with it.<p>Mono has been important and useful. But it may not continue to be that.",2015-11-18 19:16:12,10590003
1845,"Maybe you&#x27;d be interested in mkbundle[1]. A tool mono has for close to a decade that allows you to bundle your app and all its dependencies into a single file.<p>We use it extensively at Xamarin with our platform.<p>[1] <a href=""http:&#x2F;&#x2F;www.mono-project.com&#x2F;archived&#x2F;guiderunning_mono_applications&#x2F;#bundles"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;archived&#x2F;guiderunning_mono_appli...</a>",2015-11-19 03:19:37,10592527
1846,"I&#x27;ve been eagerly keeping a close eye on .Net Core. Congratulations to the teams that have been working on this! It&#x27;s long overdue and I can assure you many others are keenly interested in this.<p>For myself, mainly because as primarily a Python programmer I&#x27;ve been looking for where to move next with the 2&#x2F;3 split. I&#x27;ve migrated completely to PyPy4 (which is Python2.7) rather than port&#x2F;test to CPython3 in the last few years. It was worth the migration and testing that was involved.<p>I&#x27;m waiting to see if PyPy will announce they are the flag bearers for Python2. If so, I&#x27;ll most likely continue using it going forward.<p>On the other hand we use .Net and Python at work so while most people would not agree or find .Net Core to be a bit pointless, for me it means I can move my projects and small business to run on my underpowered VPS, utilizing the same well-supported tech stack that many enterprises use.<p>Keeping my head in C# is a good advantage as I&#x27;m also interested in Xamarin and Unity (both professionally and personally). Of course, I&#x27;m one who does not have any particular grudge against Microsoft. I do prefer POSIX based systems.
For my home business and hobby tech stack I&#x27;m currently looking at 1) PyPy4, 2) .NetCore 3) CPython3. While I&#x27;m currently running everything on PyPy4, there&#x27;s a smaller gap between 1 and 2, and a big liklihood of adoption gap between 2 and 3.",2015-11-19 16:36:50,10595711
1847,"You don&#x27;t have many choices for cross-platform tools. You can either use C++ that is quite hard for a lot of people but I would say most popular and most stable. You can use C# or Java with Xamarin but it is very expensive, unstable and it is kind vendor lock-in. You can also use JavaScript but you will lose a lot of performance that is very important on mobile. There are other options like using Lua, RubyMotion but they suffer same problems as JavaScript<p>Bottom line: There isn&#x27;t convenient, modern, fast, open-source method for cross-platform development.<p>Swift bridges nicely with C and it is built on LLVM so you will be able to use it on Android with Android NDK and bridge it through JNI and Microsoft recently also adopted LLVM so you will be also able to use it there.",2015-11-22 23:35:45,10612002
1848,"Xamarin Studio, Monkey Studio, Atmel Studio, Aptana Studio, Zend Studio...",2015-11-23 18:42:41,10616333
1849,I had never heard of any but the first and Microsoft and Xamarin are so tight I had assumed it was just Visual studio with Xamarin sprinkles on top.,2015-11-23 20:34:32,10617116
1850,"Xamarin Studio is MonoDevelop (<a href=""http:&#x2F;&#x2F;www.monodevelop.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.monodevelop.com&#x2F;</a>)",2015-11-23 21:33:48,10617466
1851,"Visual Studio Online can do hosted builds of iOS apps (XCode and Xamarin). That must be running on OSX. The good thing is you don&#x27;t have to mess with OSX VM&#x27;s or Hackintoshes as it&#x27;s fully managed.
There&#x27;s also sample deployment scripts in github for HockeyApp that can be used in your build processes.",2015-11-27 18:21:18,10638262
1852,"<p><pre><code>  Location: New York, NY
  Remote: Yes
  Willing to relocate: Yes
  Technologies: C#&#x2F;.NET, WPF, ASP.NET Web API, ASP.NET MVC, SQL, HTML, Javascript, Visual Studio, Xamarin, Git, Windows, PowerShell, Linux, Bash, Ruby on Rails, Python, Java, MATLAB, F#, CSS&#x2F;SASS, EmberJS, UWP, Microsoft HPC, Sitecore (certified), Mercurial
  Rsum&#x2F;CV: https:&#x2F;&#x2F;www.dropbox.com&#x2F;s&#x2F;cv4c8owx5meb3ob&#x2F;NelkinsResume2015.pdf?dl=0
  Email: nathaniel.elkins@gmail.com
  LinkedIn: https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;nathanielelkins
</code></pre>
--<p>Hi I&#x27;m Nat!  I&#x27;ve worked as both a frontend and backend engineer, mostly in finance (although I&#x27;ve also done some CMS, web app, and mobile app work).  I primarily use C#&#x2F;.NET in my day job with a bit of MATLAB and Python occasionally.  See my resume for more information on the projects I&#x27;ve tackled.<p>I&#x27;m a passionate, driven software engineer who is always looking to improve and refine my development processes. I recognize that fostering a culture of collaboration, personal responsibility and good judgement is just as important as choosing the right technology stack. I believe the objectives of the business should always be kept in focus.",2015-12-01 23:49:44,10659818
1853,"SEEKING WORK - Remote<p>Location: The Netherlands<p>Skills: C# &#x2F; .NET, ASP.NET, Azure, Xamarin, Windows Phone, Bitcoin &#x2F; Blockchain<p>Linkedin: <a href=""https:&#x2F;&#x2F;nl.linkedin.com&#x2F;in&#x2F;leoncullens"" rel=""nofollow"">https:&#x2F;&#x2F;nl.linkedin.com&#x2F;in&#x2F;leoncullens</a><p>Email: leoncullens@gmail.com<p>=====<p>I&#x27;m very experienced with Microsoft technologies. I build scalable distributed applications for the cloud, cross platform mobile apps and all sorts of applications for Bitcoin.",2015-12-02 15:57:25,10663680
1854,"Curse, Inc. | Irvine, CA | FULL-TIME, ON-SITE<p>Android Developer, Mobile Backend Developer, Mobile Product Manager, Mobile UX Designer<p>Curse is building the world&#x27;s best communication platform for gamers. Check the current product at <a href=""http:&#x2F;&#x2F;beta.cursevoice.com"" rel=""nofollow"">http:&#x2F;&#x2F;beta.cursevoice.com</a><p>Our mobile apps are built using Xamarin and therefore engineering applicants should have a strong background in mobile development as well as C#.<p>For more details, email me cconover@curse.com<p>Chris, Director of Mobile",2015-12-03 00:10:45,10666856
1855,"No, I haven&#x27;t looked into it much. I&#x27;ve been hesitant to commit too much to the CLR family, but maybe with MS&#x27;s new stance on open source, I&#x27;ll give it a second look. I&#x27;m also more interested now in languages that can deploy on mobile, so as alternatives to Julia, I&#x27;m actively looking into Swift, Go, or just plain C++. Xamarin is pretty compelling but I&#x27;m considering options before being locked into a fairly expensive vendor.",2015-12-05 01:33:20,10680391
1856,"Location: Riga, Latvia<p>Remote: Yes<p>Willing to relocate: Discussable<p>Technologies: .NET Stack: C#, WPF, WCF, ASP.NET, ASP.NET MVC, Entity Framework, SQL Server, Windows Workflow Foundation etc; Xamarin, Javascript (Angular), HTML&#x2F;CSS<p>Resume&#x2F;CV: <a href=""http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous"" rel=""nofollow"">http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous</a><p>Email: philgsky &lt;at&gt; outlook &lt;dot&gt; com<p>I&#x27;m a fullstack developer with strong .NET background (over 8 years experience). Also working with front end. Currently developing with Xamarin for iOS, Android and Windows store apps. Fell free to contact me.",2015-12-09 08:08:58,10702517
1857,MS pushes hard on Xamarin. But yeah that scrolling is hell of chunky.,2015-12-09 20:10:49,10706356
1858,"You mention that the client is a really heavyweight app. A quick look at the packages for Windows, iOS, and Android suggests that you&#x27;re using Python, specifically the CPython interpreter. Would you choose something else if you were starting today? In particular, I assume that stuffing Python into the mobile apps was challenging. These days I&#x27;d use .NET&#x2F;Xamarin or the Elements compiler (www.elementscompiler.com) when starting on a new multi-platform client-heavy application like this.",2015-12-14 20:00:32,10733389
1859,"If starting today, I&#x27;d probably try to use Rust.<p>However, using Python actually makes it much lighter weight than it would be running all native code, because Python bytecode is quite compact, and we use small C extensions for things that need to be fast. Being able to link with C code is hugely important for us, and I don&#x27;t know if .NET&#x2F;Xamarin would allow that..?<p>Getting Python to run on a POSIX environment is actually pretty trivial. Windows RT is harder, which is one reason we&#x27;ve never bothered with a Windows RT port. And on iOS you are limited to using a single core under Python, because you aren&#x27;t allowed by the O&#x2F;S to fork.<p>The biggest pain I&#x27;ve had with Python is memory management: it&#x27;s almost impossible not to leak memory in a Python program because the garbage collector is quite primitive and reference counting is just so error prone. For an email app you need to be able to run for days&#x2F;weeks without crashing or blowing up memory usage; you can&#x27;t just restart the process every 3am like you can server-side.<p>That&#x27;s one reason Rust is appealing: memory management is helped by the type system.",2015-12-14 20:28:29,10733574
1860,"I develop for Android using Xamarin&#x2F;C# with Visual Studio. I don&#x27;t have any of the IDE related issues you have, but there are a whole host of problems with Xamarin too, so the grass isn&#x27;t necessarily greener on this side. Plus, Xamarin&#x2F;C# are fairly pricey, even with the student discount I get.<p>I will say that the IDE&#x2F;Environment are first class, however.",2015-12-15 16:11:47,10738555
1861,"Actually this is just applying for a free copy, and you must be an existing ios&#x2F;android&#x2F;steam&#x2F;wii developer with at least one already-published title, and they are manually processing the applications.  Nice initiative but not as nice as it could be.<p><pre><code>    Thank you!

    Your form has been submitted.

    Due to very high interest in this offer, we 
    anticipate completing review of your application 
    within 2-3 business days. If you have any questions, 
    please don&#x27;t hesitate to reach out to us at 
    hello@xamarin.com.

    We cant wait to see what you create!</code></pre>",2015-12-16 13:34:22,10744116
1862,"Swift on Android has been done already, by multiple independent groups:<p><a href=""http:&#x2F;&#x2F;arctouch.com&#x2F;2014&#x2F;10&#x2F;swift-make-android-app&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;arctouch.com&#x2F;2014&#x2F;10&#x2F;swift-make-android-app&#x2F;</a><p><a href=""http:&#x2F;&#x2F;romain.goyet.com&#x2F;articles&#x2F;running_swift_code_on_android&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;romain.goyet.com&#x2F;articles&#x2F;running_swift_code_on_andro...</a><p>It&#x27;s not exactly easy though, and I doubt that a single WORA language will <i>ever</i> become the preferred way to do mobile development.  (It already exists, anyway, in the form of Xamarin.  Neither Xamarin or Java on the desktop became all that popular, though, because the apps you can write with them just aren&#x27;t as good.)  A native platform is a moving target: by the time your cross-platform abstraction layer catches up, new features will have been introduced.<p>It&#x27;s more likely that a single app will become ubiquitous enough that you can count on it being on every platform, and then develop a programmable layer on top (a la the web).  Either that, or everyone will continue developing native clients with a shared data&#x2F;logic layer abstracted behind RPC calls.  That&#x27;s how we used to do networked applications back in the desktop days.",2015-12-21 17:53:49,10772320
1863,"I&#x27;ve found the trickiest parts of cross-platform app development is that some features on a platform just have no analogue on other platforms.  For example, notifications on Android can have BigViews in either text, list, or inbox styles.  They&#x27;re also supposed to collapse, although some apps (I&#x27;m looking at you, Facebook) don&#x27;t bother.  The equivalent on iOS is just badging the icon and showing a short 1-line text string as an alert.  That means that some information which would&#x27;ve gone straight into the notification on Android needs to be shown on app launch in iOS, which often completely changes the data structures you&#x27;d use to represent it.  Oftentimes this can ripple through the app as well, where because you need to launch the app to see it on iOS, you might as well add extra interactivity to this data, but that&#x27;s not allowed by the Android platform as long as you want to keep it in a notification.<p>This doesn&#x27;t matter if all your cross-platform C++ or Xamarin library does is format strings, provide predicates, and clean data - which is probably what it should do.  But it means that the dream of a business logic layer that just hands off objects to the UI to render is just a dream.  You need to hand off wildly different objects for a short notification on Android vs. an inbox-style notification vs. an iOS notification vs. an Intent to start an Activity on Android vs. an options dictionary for application:didFinishLaunchingWithOptions:.",2015-12-21 20:35:04,10773321
1864,"I&#x27;d just like to say that Xamarin&#x27;s shortcomings aren&#x27;t because it doesn&#x27;t match the current platform via its abstraction layer. Xamarin is VERY quick in matching that and releasing updates that provide features. Basically whenever a new iOS point beta gets released, there&#x27;s a Xamarin update same-day or next-day, and the big OS changes are ready quickly too.<p>I think Xamarin&#x27;s shortcomings is its threading&#x2F;memory model shoved into Objective-C&#x27;s threading&#x2F;memory model. That&#x27;s where you have to watch out in terms of gotchas in Objective-C that you just don&#x27;t see in C#.",2015-12-21 21:40:12,10773718
1865,"Hi  Tim from Realm here (<a href=""https:&#x2F;&#x2F;realm.io"" rel=""nofollow"">https:&#x2F;&#x2F;realm.io</a>). Were building a mobile database that runs directly inside mobile phones, tablets &amp; wearables. Hundreds of millions of people rely on Realm every day through apps by Pinterest, Google, Amazon, eBay, Intel, Hipmunk, Expensify, GoPro, the BBC, Adidas, IBM, Homeland Security, Walmart, LINE, Starbucks, Xiaomi, the Washington Post and many, many more. Were also the #4 most-starred database on GitHub with &gt;8,000 stars and growing fast.<p>Were working on a bunch of exciting products and need your help at our HQ in San Francisco. You must have a background in native mobile development (ideally both Objective-C&#x2F;Swift AND Java). You must have a deep understanding of the technical &amp; business concerns of mobile app developers, and an attention for detail in SDK API design, visual UX, and technical writing.<p>Experience with native development is required, but any additional experience you have with other mobile frameworks (React Native, PhoneGap, Xamarin, Unity, ) will be a big plus.<p>You dont have to have formal experience as a product manager. Well gladly talk to you if you have background as a developer, evangelist, or other role closely related to mobile development and just want to branch out.<p>If youd like to apply it will be easier if you do so directly on our Lever  <a href=""https:&#x2F;&#x2F;jobs.lever.co&#x2F;realm&#x2F;b43dfea8-010e-4bcb-a4f1-24eefbd1cc1e&#x2F;apply"" rel=""nofollow"">https:&#x2F;&#x2F;jobs.lever.co&#x2F;realm&#x2F;b43dfea8-010e-4bcb-a4f1-24eefbd1...</a> but if you have any questions, feel free to hit me up directly tim@realm.io!",2015-12-23 00:18:27,10781252
1866,"Hi  Tim from Realm here (<a href=""https:&#x2F;&#x2F;realm.io"" rel=""nofollow"">https:&#x2F;&#x2F;realm.io</a>). Were building a mobile database that runs directly inside mobile phones, tablets &amp; wearables. Hundreds of millions of people rely on Realm every day through apps by Pinterest, Google, Amazon, eBay, Intel, Hipmunk, Expensify, GoPro, the BBC, Adidas, IBM, Homeland Security, Walmart, LINE, Starbucks, Xiaomi, the Washington Post and many, many more. Were also the #4 most-starred database on GitHub with &gt;8,000 stars and growing fast.<p>Were working on a bunch of exciting products and need your help at our HQ in San Francisco. You must have a background in native mobile development (ideally both Objective-C&#x2F;Swift AND Java). You must have a deep understanding of the technical &amp; business concerns of mobile app developers, and an attention for detail in SDK API design, visual UX, and technical writing.<p>The position will include a lot of time focused on the process of building Mobile UIs, and the Developer Tools around that. Wed prefer to work with someone with extensive experience in that field.<p>Experience with native development is required, but any additional experience you have with other mobile frameworks (React Native, PhoneGap, Xamarin, Unity, ) will be a big plus.<p>You dont have to have formal experience as a product manager. Well gladly talk to you if you have background as a developer, evangelist, or other role closely related to mobile development and just want to branch out.<p>If youd like to apply it will be easier if you do so directly on our Lever <a href=""https:&#x2F;&#x2F;jobs.lever.co&#x2F;realm&#x2F;b43dfea8-010e-4bcb-a4f1-24eefbd1cc1e&#x2F;apply"" rel=""nofollow"">https:&#x2F;&#x2F;jobs.lever.co&#x2F;realm&#x2F;b43dfea8-010e-4bcb-a4f1-24eefbd1...</a> but if you have any questions, feel free to hit me up directly tim@realm.io!",2015-12-30 00:19:24,10809990
1867,"SEEKING WORK - remote, living in the Netherlands<p>Expertise: full-stack .NET developer: ASP.NET, Azure, Xamarin, WPF, etc.<p>LinkedIn: <a href=""https:&#x2F;&#x2F;nl.linkedin.com&#x2F;in&#x2F;leoncullens"" rel=""nofollow"">https:&#x2F;&#x2F;nl.linkedin.com&#x2F;in&#x2F;leoncullens</a><p>Email: leoncullens at gmail .com",2016-01-01 23:02:31,10823936
1868,"Happy New Year!!<p>Have you ever had a dream so real you felt awake?  Where you helped decide how to build an awesome product in a sweet location with smart, cool developers?  Take the red pill and come join the Bluebeam engineering team.<p>Bluebeam Softwares awesome engineers develop intuitive applications that revolutionize how people collaborate and share data in real time. As part of the Bluebeam team, you will use your expertise to design and develop customer-centric applications.<p>We are hiring the following for our Pasadena, San Diego and Chicago offices:
-.NET &#x2F; Backend developers
- Frontend developers
- Developers for our Xamarin &#x2F; Mobile and Mac teams
- DevOps
- Engineering Manager (Mobile team)<p>Learn more about these and other opportunities (and our culture) here: <a href=""http:&#x2F;&#x2F;careers.bluebeam.com&#x2F;join&#x2F;engineering"" rel=""nofollow"">http:&#x2F;&#x2F;careers.bluebeam.com&#x2F;join&#x2F;engineering</a>.<p>Apply through the appropriate posting.",2016-01-01 23:09:51,10823975
1869,"Location: The Netherlands<p>Remote: yes<p>Willing to relocate: not right now, but a year from now: yes<p>Technologies: C#, ASP.NET, Azure, Xamarin, distributed systems, Bitcoin<p>Resume: you can email me for my resume. You&#x27;ll find my LinkedIn here: <a href=""https:&#x2F;&#x2F;nl.linkedin.com&#x2F;in&#x2F;leoncullens"" rel=""nofollow"">https:&#x2F;&#x2F;nl.linkedin.com&#x2F;in&#x2F;leoncullens</a><p>Email: leoncullens at gmail .com<p>=====<p>I&#x27;m an experienced full-stack .NET developer from the Netherlands. I&#x27;m looking for a challenging remote job.",2016-01-02 12:57:55,10826060
1870,I find C#&#x2F;.NET and Xamarin to be comparable for developing cross-platform desktop applications. This allows a single codebase that interacts with native libraries and APIs for each major operating system as well as a native looking GUI for each.,2016-01-03 15:03:01,10830785
1871,"Can you name any desktop app written in C#&#x2F;.NET or Xamarin that looks decent, on Linux and&#x2F;or OS X?",2016-01-03 15:50:52,10830971
1872,"Location: Riga, Latvia<p>Remote: Yes<p>Willing to relocate: Discussable<p>Technologies: .NET Stack: C#, WPF, WCF, ASP.NET, ASP.NET MVC, Entity Framework, SQL Server, Windows Workflow Foundation etc; Xamarin, Javascript (Angular), HTML&#x2F;CSS<p>Resume&#x2F;CV: <a href=""http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous"" rel=""nofollow"">http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous</a><p>Email: philgsky &lt;at&gt; outlook &lt;dot&gt; com<p>I&#x27;m a fullstack developer with strong .NET background (over 8 years experience). Also working with front end. Currently developing with Xamarin for iOS, Android and Windows store apps. Fell free to contact me.",2016-01-04 15:14:30,10835965
1873,"For C# (and also to a lesser extent F#) check out the ReactiveUI framework which is a FRP framework for Xamarin (iOS and Android), Universal Windows Platform, Windows Phone 8.x, Windows Forms and Windows Presentation Framework.<p>ReactiveUI is inspired by functional reactive programming and is the father of the ReactiveCocoa (Cocoa&#x2F;Swift) framework. Rather than using mutable variables which are replaced and modified in-place, ReactiveUI offers &quot;event streams&quot;, represented by the IObserver and IObserverable types, that send values over time.<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;reactiveui&#x2F;ReactiveUI"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;reactiveui&#x2F;ReactiveUI</a>
<a href=""http:&#x2F;&#x2F;reactiveui.net&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;reactiveui.net&#x2F;</a>",2016-01-04 20:23:39,10838269
1874,Xamarin.,2016-01-05 20:49:08,10845894
1875,"Xamarin is the company, Mono is the product, right?",2016-01-05 20:54:54,10845938
1876,"Xamarin is the whole mobile environment (including framework), Mono is &quot;just&quot; an open source .NET implementation and a C# compiler.",2016-01-05 21:27:17,10846188
1877,"I&#x27;m wondering why doesn&#x27;t Google ditch Java entirely and create something like XobotOS[1]. I know it wouldn&#x27;t be a popular move but at least the devs will get a decent language to use (C#) and users will have a better performing OS[2]<p>[1]: <a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;XobotOS"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;XobotOS</a>
 [2]: <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;</a>",2016-01-06 09:02:23,10849398
1878,"the comparison between dalvik &amp; xamarin is not that interesting anymore (it was in 2012 though). It would be interesting to remake this bench.<p>Why doesn&#x27;t Google ditch java ?<p>Because such a switch would be very costly and there are many more cost effective ways to improve the platform (like for example databinding).<p>I also doubt that Google would choose a language controlled by Microsoft, they had enough trouble with the java lawsuit..<p><i>if</i> the rumors of the merge of Android &amp; ChromeOS are true, maybe this will be accompanied with with a big framework change ?  
It will depend on how this plan materialize exactly but that would be the right time for that.",2016-01-06 13:43:21,10850411
1879,"Xamarin Starter Edition is free. There are some tough app size restrictions but apparently they want developers to at least be able to kick the tires!<p><a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;starter"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;starter</a>",2016-01-06 17:38:33,10851991
1880,"Well, mono has supported this for a while now. This is what Xamarin.iOS is based on.",2016-01-07 09:12:33,10856899
1881,"Yet Microsoft and NVidia are able to provide a much better experience for NDK users, for a platform they don&#x27;t own.<p>So what are those Google experts doing?<p>I like Java a lot, but C++ is the current kind of portability across mobile OS for native applications, as common language across SDKs.<p>If I would be doing this commercially, I would have gone Xamarin already.",2016-01-08 19:49:01,10867660
1882,"As a Xamarin developer, I&#x27;m really hoping that this plays well with Xamarin and thus liberates me from having to deal with the buggy and invasive Windows 10. I&#x27;d much prefer to be on Mac but once you&#x27;re used to Visual Studio, Xamarin Studio is really a bitter pill to swallow.<p>Can&#x27;t wait!",2016-01-13 12:06:38,10893719
1883,"Mobile work with Xamarin here. Using Xamarin Studio. Still, it&#x27;s nowhere close to the Windows experience with VS and the Xamarin tools there.",2016-01-13 12:50:34,10893892
1884,I can definitely relate to your experience. I&#x27;ve been a C# developer on VS&#x2F;Windows then moved to Xamarin&#x2F;iOS dev on a Mac and it was ok but not terrific.,2016-01-13 13:19:11,10894018
1885,"I use Xamarin for Mac to write tests for a database client API, which I run with Mono for Linux using Jenkins.<p>Not having used Visual Studio enough to compare thoroughly, Xamarin&#x27;s not bad.  I use Eclipse when writing a parallel set of tests for Java, and I generally prefer Xamarin to Eclipse.<p>One minor complaint is that Xamarin quietly increased the system requirements from OS X 10.9 to 10.0, so I&#x27;m stuck with an old version.<p>The idea of using a C# IDE written in Java seems a bit weird, but I might give it a shot.  I&#x27;d also consider hooking up Emacs to OmniSharp.",2016-01-13 13:29:59,10894087
1886,"I think at least some devs use Xamarin on Mac. I used it, but Xamarin Studio kinda sucks for me. Debugging tools seem pretty crappy compared to Xcode. Not sure if it&#x27;s the tool or the language that&#x27;s the problem.",2016-01-13 17:22:13,10895891
1887,What is bad abotu Xamarin Studio?,2016-01-13 18:51:24,10896526
1888,"It&#x27;s gotten better (especially recently), but Xamarin Studio tends to be pretty buggy--  I&#x27;ve seen basic project management tasks (like adding&#x2F;moving files) crash the IDE; I&#x27;ve had syntax highlighting just stop working for files that compile fine; UI editors are slow, don&#x27;t match the feature sets of the equivalent native editors, and occasionally break backwards compatibility with themselves (seriously; had the iOS UI editor wipe out some of its own generated code and break my build a couple weeks ago).  Again, it&#x27;s nowhere near as bad as it was about a year ago, but it&#x27;s still the weak point of Xamarin&#x27;s toolset (which is, otherwise, pretty great, at least for what we&#x27;re doing with it).",2016-01-13 20:14:39,10897130
1889,"IME, Visual Studio crashes are almost always due to misbehaving plugins.  I&#x27;m in it all day every day, and once or twice a week it will develop some quirk that requires a restart to fix, but I can&#x27;t remember the last time it actually crashed.  The only plugins I run are Resharper, Xamarin, and PTVS.",2016-01-20 17:28:24,10939706
1890,"What do you mean by posting that link?<p>&quot;Its important to note that these styles are not claiming to be native, but instead a 100% cross-platform implementation of the Material and Universal design guidelines. For example, the Material style does not adapt to any Sony or Samsung theme on Android. You can run these styles on any platform and they will look more or less identical.&quot;<p>I still have to do style all the standard widgets myself or build them from scratch. I don&#x27;t want them to be more or less identical, they should be what the user has on their handset.<p>For example where is the toast, FAB, file picker, recycler view, notification..?<p>iOS support is still not a thing, apparently from the comments.<p>Also where are the OS bindings for resources, background services, IPC between apps, OS state notifications?<p>Currently on the mobile space, Qt adds little value over using C++ with boost and similar libraries for the portable business logic and using the platform&#x27;s main language for the UI.<p>At least with Xamarin I have a very good coverage for the wrapped APIs and mobile widgets per platform, updated quickly after each new OS release.",2016-01-22 06:21:06,10951105
1891,"These days, there are plenty of other frameworks for writing native iOS apps in languages other than Obj-C&#x2F;Swift (Xamarin&#x2F;Mono, RubyMotion, etc).<p>This wasn&#x27;t always the case, but IIRC the current review rules only forbid having a runtime scripting language that isn&#x27;t JS (since Apple can happily sandbox JS), but anecdotally even that isn&#x27;t a problem these days (e.g. plenty of games use Lua for in-game scripting).",2016-01-24 14:28:25,10962570
1892,If you are coming from .net look into xamarin else XCode is the way to go,2016-01-26 17:48:01,10974685
1893,"Very basic games or for the business logic with the UI done in Java and XAML - C++&#x2F;CX.<p>But if Clojure did support properly Android and CoreCLR,  I would probably use it instead.<p>As things are, I might go Xamarin in the future.",2016-01-27 22:28:01,10984051
1894,"if you want multiplatform support (or just really like c#&#x2F;VS), xamarin can be a good choice for an hobby app.<p>Otherwise, Kotlin borrows many niceties with c# and allows you to directly use the platform APIs.",2016-01-28 13:24:07,10987967
1895,"Another vote for Windows from me.<p>If you are planning on expanding to other platforms (iOS and Android, especially), maybe considering going with a C#&#x2F;Xamarin-based project. It&#x27;ll save you a lot of work by allowing you to re-use the underlying code for your app(s).",2016-01-29 18:27:45,10997272
1896,"Before Sameroom [1], we spent two years building Kato (<a href=""https:&#x2F;&#x2F;kato.im"" rel=""nofollow"">https:&#x2F;&#x2F;kato.im</a>), which became a Slack competitor once Slack launched. We did enjoy a brief pre-Slack honeymoon (at Techstars, no less).<p>For a few reasons, we chose Xamarin to build the Kato mobile apps. The end result was pretty goodgreat, even, considering the ridiculously tight timeline. We had a pretty elaborate common core with all the hard stuff (networking, caching, protocol, presence, etc), and custom UI code for Android and iOS.<p>In the end, since Kato was to be no more, the real benefit was seeing how much sense it makes to use a strongly-typed, object-oriented language for building complex user interfaces.<p>Many years ago, and for many years, we were C#&#x2F;C++ programmers, so it wasn&#x27;t exactly a revelation. But, we&#x27;d been working for quite some time with dynamically-typed Erlang and dynamically-typed Javascript (the Kato UI was built with Knockout.js).<p>Our server code was fairly straightforward and didn&#x27;t change very much, so Erlang was an excellent choice there. With JavaScript, we&#x27;d programmed our way into some serious debt.<p>When deciding on a stack for Sameroom, we embarked on a quest to replicate the Xamarin experience for the web. We eventually narrowed in on Flux, React, and TypeScript.<p>After some experimentation, we got a development workflow working with gulp, shrinkwrap, make, and no particular IDE (we use Atom, Sublime, and Vim).<p>The biggest crutch was lack of JSX support in TypeScript, so splicing together HTML elements was pretty cumbersome. We viewed this as a temporarly incovenience, which was a good decisionTypeScript 1.6 got React&#x2F;JSX in September 2015 [2].<p>We&#x27;re pretty conservative about adding dependencies, but the overwhelming majority of libraries we do use have TS support available from the DefinitelyTyped project [3]. The few libraries that weren&#x27;t supported (Stripe checkout and Intercom, if memory serves), we TypeScriptified ourselves.<p>As a result, working on the Sameroom UI is absolute joy.<p>It&#x27;s a little ironic that, unlike Kato, Sameroom basically doesn&#x27;t need a UI, since it&#x27;s just marketing copy and an administrative dashboard.<p>[1] <a href=""https:&#x2F;&#x2F;sameroom.io&#x2F;blog&#x2F;from-pivot-to-140-paying-customers-in-ten-months&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;sameroom.io&#x2F;blog&#x2F;from-pivot-to-140-paying-customers-...</a><p>[2] <a href=""http:&#x2F;&#x2F;blogs.msdn.com&#x2F;b&#x2F;typescript&#x2F;archive&#x2F;2015&#x2F;09&#x2F;16&#x2F;announcing-typescript-1-6.aspx"" rel=""nofollow"">http:&#x2F;&#x2F;blogs.msdn.com&#x2F;b&#x2F;typescript&#x2F;archive&#x2F;2015&#x2F;09&#x2F;16&#x2F;announ...</a><p>[3] <a href=""https:&#x2F;&#x2F;github.com&#x2F;DefinitelyTyped&#x2F;DefinitelyTyped"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;DefinitelyTyped&#x2F;DefinitelyTyped</a>",2016-01-29 20:22:31,10998193
1897,"Olo | Engineering Manager | Full-Time | NYC<p>At Olo we develop an online food ordering platform used by many of the countrys largest restaurant chains, reaching millions of consumers. We take pride in a neat codebase with automated tests and continuous integration, and encourage new ideas, experimentation, and constant refactoring.<p>Olo is revolutionizing the customer experience at these restaurant chains, and we&#x27;re looking for a talented engineering manager to join our team and help us achieve this vision. As part of the team you will play a significant and visible role in helping us deliver an industry-leading digital ordering capability to our clients.  Youll work with a passionate team dedicated to delivering amazing products using modern tools and technologies such as .NET 4.6, ASP.NET MVC 5, TeamCity, GitHub, Octopus Deploy, Redis, Xamarin, and heavy use of OSS.<p>You will manage one of Olos software engineering teams. Your primary responsibility is to ensure that your team is able to effectively deliver new product value at a steady pace. You will be responsible for hiring talented engineers and providing the needed coaching and guidance to ensure that they excel and grow. You will be a key facilitator in Agile planning, supporting business priorities and advocating engineering priorities. You will oversee a team consisting of both developers and QA engineers and will be responsible for the full software lifecycle of Agile planning through deployment.<p><a href=""http:&#x2F;&#x2F;www.olo.com&#x2F;careers.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.olo.com&#x2F;careers.html</a><p>Were in an exciting growth stage here, having just closed a $40M Series D funding round.<p><i></i>We also have a role open for a full stack .Net Engineer <i></i><p>Please reach out to me directly at   johnball@olo.com.",2016-02-01 15:53:10,11012426
1898,"Off Base Productions - <a href=""http:&#x2F;&#x2F;www.offbaseproductions.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.offbaseproductions.com</a> - San Francisco, ONSITE<p>We are seeking a skilled Xamarin developer to work on mobile apps in the games industry. The applications are for marketing and informational executions in support of industry publishers. This is a contract-to-hire position based in San Francisco with an immediate opening.<p>As the second native developer on the team, you would have a great deal of influence on the direction of these projects and our future work.<p>More information is available at our Xamarin Forums post: <a href=""http:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;60058&#x2F;xamarin-developer-needed-san-francisco-ca"" rel=""nofollow"">http:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;60058&#x2F;xamarin-developer...</a> - Contact cogwheel@offbaseproductions.com if you&#x27;re interested.",2016-02-01 20:45:22,11015262
1899,"Olo| Xamarin Mobile Engineer | NYC Or (Remote within the U.S)<p><i>This is a Full-Time Role<p>Olo reaches millions of consumers by powering mobile and online ordering for many of the countrys largest restaurant chains.  Mobile ordering and payments is an exciting and active industry full of interesting players and yet still a relatively untapped market ripe for disruption.<p>Olo is revolutionizing the customer experience at these restaurant chains, and we&#x27;re looking for talented engineers to join our mobile team and help us achieve this vision. As part of the team you will play a significant and visible role in helping us deliver an exceptional mobile ordering experience to our clients consumers via our native iOS and Android apps, as well as contribute to our ongoing innovation in restaurant operations tools and services.  Youll work with a small and passionate team dedicated to delivering amazing products using modern tools and technologies such as Xamarin, HockeyApp, MVVM, and more.<p>Requirements<p></i> You are excited by the ongoing advances in mobile technology.<p>* You have strong working knowledge of the iOS or Android platforms (bonus points for both).<p>* You have experience working with Xamarin and have built apps that integrate with web services.<p>* While not a designer, you understand the key factors in a quality mobile UI&#x2F;UX design.<p>* You have at least 3 years on-the-job development experience at a senior technical level.<p>* You can demonstrate thorough knowledge of C#, .NET and object oriented design and patterns.<p>* You are adept at writing unit tests and testable code, and working under distributed version control (preferably Git).<p>* You have an innate drive to automate anything that has to be done more than once.<p>* Your English writing and verbal communication skills are strong.<p>Please reach out to me directly at johnball@olo.com",2016-02-01 21:16:54,11015524
1900,"Bluebeam Softwares awesome engineers develop intuitive applications that revolutionize how people collaborate and share data in real time. As part of the Bluebeam team, you will use your expertise to design and develop customer-centric applications.<p>We are hiring for our Pasadena headquarters and branch offices in Chicago and San Diego:<p>Sr. Cloud Web Application Developers<p>Sr. Frontend developers<p>Developers for our Xamarin &#x2F; Mobile and Mac teams<p>DevOps<p>Engineering Manager, Mobile team<p>Learn more about these and other opportunities (and our culture) here: <a href=""http:&#x2F;&#x2F;careers.bluebeam.com&#x2F;join&#x2F;engineering"" rel=""nofollow"">http:&#x2F;&#x2F;careers.bluebeam.com&#x2F;join&#x2F;engineering</a>.<p>Apply through the appropriate posting or email me: laura.marks@bluebeam.com.",2016-02-03 00:37:07,11023912
1901,"As heads up when talking about Unity3D, please be aware of the pre-historic .NET runtime they still are shipping versus what Xamarin and Microsoft deliver.<p>So always take the JIT&#x2F;GC complains in Unity3D context with that caveat in mind.",2016-02-03 14:12:37,11026495
1902,"As far as I can tell web services returning json is the standard way to separate business functionality and UI. also, bootstrap is a pretty common library that allows your webpages to respond to different size browsers pretty easily.  After that you get into choices that are language dependent. Angular JS, knockoutjs, react others are frameworks(using loosely) in the browser. There are a lot of MVC frameworks for the Server including java based ones(groovy&#x2F;grails). Then, for native you need to decide whether you might want a mobile platform that can be used for both iOS and Android. Cordova, Corona, Titanium, Xamarin.",2016-02-03 20:19:31,11029425
1903,"D.<p>* C&#x2F;C++ like familiar syntax.
 * as fast as C++ (faster in some, slower in others)
 * type inference (auto keyword)
 * Garbage collected language by default.
 * Multiple compiler implementation (DMD, GDC, LDC)
 * Debugging symbol support
 * Package management with versioning and pkg repo
 * IDE&#x2F;Editor support - Visual studio&#x2F;xamarin&#x2F;emacs
 * Very easy C FFI
 * compile type function evaluation
 * meta programming
 * The concurrency story is more &quot;mainstream&quot; than Go&#x27;s (no  &quot;goroutine&quot; and other fancy stuff).
 * Multiple new books on the topic<p>D has a lot going for it, except for breathless fans :) (not knocking breathless fans here. D can use some)",2016-02-03 21:43:20,11030003
1904,"Here is a blog post from the creator of this demo:<p><a href=""http:&#x2F;&#x2F;praeclarum.org&#x2F;post&#x2F;132881570743&#x2F;live-coding-with-xamarin-ios"" rel=""nofollow"">http:&#x2F;&#x2F;praeclarum.org&#x2F;post&#x2F;132881570743&#x2F;live-coding-with-xam...</a><p>There is also a demo using F#:<p><a href=""https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bbSawlDetOU"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bbSawlDetOU</a>",2016-02-08 15:27:55,11058592
1905,"Massive library. That was Perl&#x27;s big advantage. Why do more people use Python over Perl? F# isn&#x27;t really cross-platform yet. Swift is 18 months old.  Scala is a bit complicated for many and slow to compile. C# was a Windows only language for a long time, with Xamarin for those who really really need limited cross platform support. OCaml never gained much traction. If Microsoft had used it instead of a slightly different F#...<p>Once again, you&#x27;re doing that dance. Do you think I&#x27;m learning anything here?  Watch out for Go and Swift. These statically typed languages are better for large projects.<p>Please skip the part where you explain Python&#x27;s optional typing.",2016-02-15 13:21:36,11103205
1906,"Sometimes there isn&#x27;t any other choice.<p>For example, in the mobile OS space if you want to write native apps, without rewriting 100% of the application code per platform and avoid toolchain debugging headaches, C and C++ are the only languages available in iOS, Android and WP SDKs.<p>In WP case, there are APIs like DirectX that aren&#x27;t fully exposed via WinRT, so you need to write a C++ wrapper for those type of APIs.<p>There are other options, but they are either commercial (e.g. Xamarin), or require lots of DYI hacking with the SDKs toolchains.<p>So if you want to remain productive and not pay for the commercial solutions, there aren&#x27;t any other alternatives.<p>Which means, even I with my safety rants, end up using them for my mobile OS hobby coding.<p>However if I would be doing this commercially, Xamarin would be my first option.",2016-02-16 15:45:34,11110571
1907,"Easiest way to ease yourself into ASP.NET programming on a Mac is probably to use Xamarin Studio:<p><a href=""http:&#x2F;&#x2F;lastexitcode.com&#x2F;blog&#x2F;2016&#x2F;01&#x2F;01&#x2F;DNXSupportInXamarinStudio&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;lastexitcode.com&#x2F;blog&#x2F;2016&#x2F;01&#x2F;01&#x2F;DNXSupportInXamarinS...</a><p>It&#x27;s free too (use the download link at the end of the page):<p><a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;studio"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;studio</a>",2016-02-18 23:14:38,11130153
1908,"I don&#x27;t know about ASP.NET Core, but I couldn&#x27;t get .NET Core to work on my Mac.  I installed the &quot;official PKG.&quot;  I then ran `dotnet restore` for a project I was trying to run (<a href=""https:&#x2F;&#x2F;github.com&#x2F;atemerev&#x2F;skynet"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;atemerev&#x2F;skynet</a>).  It downloaded a couple hundred packages, then failed with an error like, &quot;there is no run-time assembly compatible with osx.10.9-x64.&quot;  I guess it requires a newer version of OS X, but neglects to check at install time.<p>I continue to use Mono and Xamarin Studio, although I&#x27;m stuck on an old version of Xamarin for now because I&#x27;m using Mavericks.  At some point, I&#x27;d like to try OmniSharp with Emacs.",2016-02-19 14:25:17,11133580
1909,"Yep, my point as well.<p>For example, right now is the only native language available in all mobile SDKs.<p>So unless one wants to add extra layers to their tools for writing portable native code, with the consequent increase in development costs, C++ is the only game in town.<p>For example, Xamarin is great, but now on top of debugging Java, Swift, Objective-C, C#, one also needs to debug their glue code into the platform APIs.<p>I just picked Xamarin as an example of extra layers, I think they are great.",2016-02-22 08:02:30,11149290
1910,I hope this means I can get Xamarin through BizSpark now!,2016-02-24 19:04:07,11169242
1911,Hopefully MS keeps expanding the Xamarin platform instead of mothballing it.,2016-02-24 19:07:58,11169277
1912,I&#x27;m shocked that they have waited this long. They really seemed to ramp up support for Xamarin. Seemed like this was a no brainer.,2016-02-24 19:09:53,11169295
1913,"3 years ago this would be a sad news for Xamarin, today with the new Microsoft I&#x27;m glad to see this. Microsoft will not destroy Xamarin (I hope)",2016-02-24 19:10:06,11169297
1914,"Congrats to Nat and Miguel! This seems to make a ton of sense, and unlike other acquisitions by big corps this seems like a great move for both Xamarin and their customers.",2016-02-24 19:11:05,11169303
1915,"I thought they would have done this 2 years ago. It seems that every Build, Xamarin was there in a big, big way.",2016-02-24 19:11:08,11169306
1916,"Wow! Congratulations Nat Friedman and Miguel de Icaza (of Ximian fame). I remember reading this blogpost like it was yesterday: <a href=""http:&#x2F;&#x2F;nat.org&#x2F;blog&#x2F;2011&#x2F;05&#x2F;xamarin&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;nat.org&#x2F;blog&#x2F;2011&#x2F;05&#x2F;xamarin&#x2F;</a>",2016-02-24 19:11:42,11169313
1917,"As someone who works in .NET ecosystem, this is HUGE.<p>I think there is huge synergy [1] to be exploited by combining Xamarin&#x27;s team with language&#x2F;compiler design&#x2F;visual studio team. I think MS is extremely well positioned to be a leading development platform across desktop&#x2F;web&#x2F;mobile in the <i></i>enterprise space<i></i> with this acquisition.<p>[1] Never thought I would ever use that word in a comment.",2016-02-24 19:12:51,11169324
1918,"This is awesome, fantastic news. Congrats to the Xamarin team, they are awesome people.",2016-02-24 19:15:26,11169350
1919,"This is giant news for the .NET ecosystem. It means that MS is serious about their push into Mobile and Linux, and that .NET developers aren&#x27;t going to have to work with Xamarin&#x27;s ever-so-slightly-behind libraries anymore. It also means that MS now produces an IDE on Linux, which is a crazy change from 10 years ago.",2016-02-24 19:15:29,11169352
1920,"There&#x27;s not enough overlap for MS to want to buy Xamarin to shut it down. This is them putting their money where their mouth is vis-a-vie .NET expansion plans.<p>Hopefully they&#x27;ll keep Monodevelop under development, if they don&#x27;t bring VS to Linux.",2016-02-24 19:17:30,11169371
1921,I&#x27;m honestly amazed that it took this long. I&#x27;ve tried Xamarin before to make iOS apps but couldn&#x27;t justify paying an ongoing subscription for what is basically a hobby project. I&#x27;d love it if MS expanded the &quot;Starter Edition&quot; to allow more fully fledged apps - they could be seriously competitive with Xcode.,2016-02-24 19:17:41,11169376
1922,"Microsoft is only a threat to JetBrains from where I&#x27;m standing and looking, I have a feeling they will fix up Xamarin the way we all hope they will. I really hope there will be a completely free option of Xamarin for Students and maybe even on BizSpark.",2016-02-24 19:17:43,11169378
1923,I imagine .NET devs around the world are rejoicing (myself included). I hope this means access to Xamarin through existing MSDN and BizSpark subscriptions.,2016-02-24 19:17:47,11169379
1924,I wonder what that means for Xamarin.Forms.,2016-02-24 19:19:23,11169393
1925,"Yes indeed, right now Xamarin is very very buggy and also pretty slow. I think the software will get MUCH better if the teams at Microsoft will start working on it.",2016-02-24 19:20:37,11169403
1926,How much? I know it&#x27;s undisclosed but it would be very interesting. Hopefully someone leaks it.<p>The rumor was Miguel told MS to &quot;F*#K Off&quot; when MS presented him with an offer many years ago. This lead to CoreCLR being open sourced and Visual Studio Code being built.<p>I&#x27;d like to know if by undermining parts of Xamarins business they were able to get them at substantial discount - especially with the tech industry downturn. Or if failure in the Windows Phone market has made MS desperate and forced their hand. Given it&#x27;s undisclosed I&#x27;m guessing it&#x27;s the former. I&#x27;d like to know if telling MS to &quot;F#&amp;K Off&quot; was a good strategy :),2016-02-24 19:26:56,11169458
1927,Xamarin bought by Microsoft two days after Skype for Linux can&#x27;t join calls by new clients. Oh yeah. The future is bright. Just not for the Linux desktop pieces of Mono.,2016-02-24 19:28:46,11169476
1928,"Given the existence of the .Net core, I think Microsoft has little plans to look backwards.  I wouldn&#x27;t hold out much hope for Xamarin.Forms.",2016-02-24 19:29:38,11169483
1929,"There is already a free option of Xamarin for students.[1] Earlier there used to be a separate application process but now it is rolled into DreamSpark<p>[1]<a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;student"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;student</a>",2016-02-24 19:30:38,11169493
1930,A friend of mine became extremely good at build systems and hacking them by making Xamarin&#x27;s stuff build. They put so many tricky roadblocks in to prevent easy builds.,2016-02-24 19:32:21,11169506
1931,&gt;<i>The rumor was Miguel told MS to &quot;F&amp;#K Off&quot; when MS presented him with an offer many years ago. This lead to CoreCLR being open sourced and Visual Studio Code being built.</i><p>The rumor sounds bogus. MS has been collaborating with Xamarin (and it&#x27;s previous incarnation) for almost a decade.,2016-02-24 19:33:20,11169514
1932,"&gt; This lead to CoreCLR being open sourced and Visual Studio Code being built.<p>What is it you think those to products are? They aren&#x27;t trying to reproduce anything Xamarin does.<p>CoreCLR is part of Microsoft&#x27;s &quot;cloudy&quot; strategy, they want to be on Linux micro-instances, and on Windows Server Nano. Visual Studio Code is just the absolutely minimum Microsoft has to do to make CoreCLR seem &quot;real&quot; on other platforms (a 101 UI).<p>Honestly the whole .Net open sourcing&#x2F;porting thing is a lot older than this cross-platform interest and while the two are aligned right now I highly doubt that&#x27;s what kicked it off.",2016-02-24 19:34:58,11169534
1933,I hope they do. I&#x27;m pretty sure that pricing is the key factor that is stopping xamarin from being way more popular,2016-02-24 19:36:22,11169549
1934,If MS puts Xamarin licensing under MSDN I&#x27;d be really happy.,2016-02-24 19:36:35,11169550
1935,"There&#x27;s also the &quot;Starter Edition&quot; for everyone else:<p><a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;starter"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;starter</a>",2016-02-24 19:38:30,11169562
1936,"I truly believe that it would&#x27;ve happened sooner, but Microsoft needed to wait until it had built up some degree of confidence among developers that the whole &quot;new Microsoft&quot; thing is for real. If they&#x27;d done it three years ago, everyone would&#x27;ve panicked, assumed that things like e.g. .NET on Linux were dead, and just written off Xamarin&#x27;s offerings immediately. Now I think a lot of people are at least cautiously optimistic that Microsoft&#x27;s cross-platform and OSS intentions are genuine.<p>You can see it right here in this thread: as another commenter said, not that long ago this news would&#x27;ve prompted universal predictions of doom, whereas now people seem thrilled. Timing is everything.",2016-02-24 19:40:01,11169585
1937,Wonder what this means for Xamarin University? Shouldn&#x27;t that be made available for free on Channel9?,2016-02-24 19:46:03,11169632
1938,Wonder what this means for Xamarin University? Shouldn&#x27;t that be made available for free on Channel9?,2016-02-24 19:46:19,11169636
1939,I&#x27;m hoping they open source Xamarin.Forms.  The community has been clamoring for it.  It has so much potential but its so buggy.,2016-02-24 19:46:45,11169638
1940,Rumor is just south of $300 Million. A nice chunk of change...but Xamarin had the gas and customers to head much higher valuations. Congrats to all involved.,2016-02-24 19:49:01,11169654
1941,"So happy for Miguel and Nat. We worked with Xamarin when we ported Infinite flight from Windows Phone to iOS and Android. We wouldn&#x27;t be there if it wasn&#x27;t for them.<p>One thing I&#x27;m really looking forward to is efforts on the QA front. I&#x27;m scared to update every time as things are frequently broken, especially on the iOS side.",2016-02-24 19:50:08,11169658
1942,"Or if they just release the Mono runtime under MIT (Mono requires all VM contributions to be licensed to them under MIT, they then turn around and release it under LGPLv2 and a commercial license - so it&#x27;s legally doable without any effort). Microsoft&#x27;s product strategy is getting .Net everywhere for free, making money on services and tooling - they don&#x27;t need commercial Xamarin around to make their strategy work.",2016-02-24 19:52:20,11169671
1943,How long before Apple kicks them out of the apple store? I thought Apple always had a policy of limited tolerance toward xamarin (after having banned them once). Isn&#x27;t them becoming MSFT a <i>casus belli</i>?,2016-02-24 19:52:22,11169672
1944,"...Xamarin studio isn&#x27;t a competitor to Visual Studio?<p>That&#x27;s all I know that Xamarin makes, so I think this article is going a bit over my head, but it&#x27;ll be a shame if I suddenly need a Microsoft account to use it. I do like diversity in my language tooling.",2016-02-24 19:56:31,11169701
1945,"Definitely Xamarin is geared towards the .NET ecosystem, at least for now. But .NET aside, as a cross-platform &quot;platform&quot;, how does Xamarin compare with React Native? Anybody has experience in both of them?",2016-02-24 20:04:36,11169760
1946,"Xamarin actually works quite well. Microsoft will definitely bring in more quality as they have huge amounts of resources not only in cash but in talented people.<p>This news is important because it solidifies the future of the .Net ecosystem in iOS, OSX, Android, Linux and Windows.<p>The Xamarin team has been doing a great job, but I am pretty sure that with Microsoft backing them they&#x27;ll do a way better job.",2016-02-24 20:04:36,11169761
1947,"Visual Studio doesn&#x27;t run on Mac OS to make iOS apps, VS Code is still only an editor not an IDE. So Xamarin could be very useful for MS.",2016-02-24 20:08:29,11169801
1948,I wonder when&#x2F;if they will announce pricing changes. I would love to use Xamarin but the current licensing fees (2 developers across iOS&#x2F;Mac&#x2F;Android) of $6k&#x2F;year are a total non-starter. If it gets rolled into MSDN or BizSpark I would pretty much jump on it immediately. The current alternative of writing C++ that runs across iOS&#x2F;Mac&#x2F;Android&#x2F;Windows is a massive headache.,2016-02-24 20:13:58,11169862
1949,"Yeah, it doesn&#x27;t have debugging (of C# on Mac and Linux). I think the GP is referring to Xamarin Studio, which is an ok IDE, but pales in comparison to VS.",2016-02-24 20:15:00,11169870
1950,My understanding is that Apple&#x27;s issue was with dynamic runtimes and that Xamarin developed a statically compiled Mono runtime to comply with Apple&#x27;s guidelines. The ground between definitions of &quot;static&#x2F;dynamic&quot; eventually was sorted out.,2016-02-24 20:15:01,11169872
1951,"VS Code was created to do something with the Monaco editor developed in typescript for their cloud offering. Same for CoreCLR, the slow and memory hungry runtime of Xamarin wasn&#x27;t a treat to MS, .Net was approaching irrelevancy without a Linux presence in cloud offerings.",2016-02-24 20:17:08,11169891
1952,"Apple is the market leader, which means they have the most to lose with Xamarin commoditizing the different mobile devices. MS, as the clear loser, has by far the most to gain.<p>Which is why I expect MS to make Xamarin available for free, and push it quite heavily.",2016-02-24 20:18:52,11169901
1953,Whats .net core got to do with xamarin.forms<p>Xamarin.forms has nothing to do with winforms.<p>It&#x27;s a cross platform mobile UI library.,2016-02-24 20:24:32,11169949
1954,You make absolutely no sense.<p>The competition for .Net isn&#x27;t Xamarin. It&#x27;s the Java platform.,2016-02-24 20:35:38,11170029
1955,"&quot;Works quite well&quot; is a phrase I&#x27;ve never used with Xamarin.  I stopped using it about a year ago for two reasons: (1) _every_single_release_ would break my apps and would then require spending inordinate amounts of time trying to get things building again, and (2) I could no longer justify paying for the professional edition just to be able to use Visual Studio on my hobby projects.<p>I am very much hoping that both of these issues are addressed with this acquisition, and like many, I have been holding out for a while now hoping this would happen.<p>EDIT: pjmlp, can&#x27;t reply to your comment directly: You are talking about the Indie edition, with which you cannot use Visual Studio.  Using Visual Studio requires the professional edition, at $999&#x2F;platform&#x2F;year.  Even with the discount they gave me, the thousands of dollars I spent just to do hobby projects was a mistake.",2016-02-24 20:38:40,11170052
1956,"EEE only works if you&#x27;re a monopolist. Microsoft in 2016 is so far from being a monopolist that they can&#x27;t even see monopoly from where they are. Xamarin is just another tool, so it&#x27;s not clear what Microsoft would gain from extinguishing it.",2016-02-24 20:39:08,11170056
1957,"Open sourcing the compiler, CoreCLR, and JIT made Xamarin&#x27;s life easier, not harder.<p>Acquiring Xamarin is just acknowledging that Windows Phone is DOA and their best shot at monetizing the mobile world is providing backend hosting&#x2F;services and developer tools. That&#x27;s not a secret - that&#x27;s their publicly announced strategy.<p>I&#x27;d expect all the Xamarin tools to be built-in to VS going forward. One VS&#x2F;MSDN subscription gets you everything and the tools will make it trivially easy to host on Azure.",2016-02-24 20:42:49,11170084
1958,Zero; it won&#x27;t happen. Apple&#x27;s stance has been stated and unchanging for years now. Statically compiled frameworks like Xamarin are fine. Interpreters are fine if the app ships with the code (no dynamic patching by downloading new code) or if the code is part of a reviewed&#x2F;approved in app purchase. For JavaScript you also have access to the native code JIT too.<p>The only thing you can&#x27;t do is issue new code by bypassing App Review (except web pages &#x2F; web apps) or have your own non-sandboxed JIT.,2016-02-24 20:47:39,11170112
1959,"If Apple actually does it, they won&#x27;t like the results of being under an anti-trust investigation.<p>They could have succeeded against Xamarin, but not Microsoft Legal.",2016-02-24 20:53:19,11170144
1960,"What are they going to extinguish, Linux? By letting people write C# code on Linux? Or are they going to extinguish Java? Or are you saying they&#x27;ll extinguish Xamarin? If that&#x27;s the case, that doesn&#x27;t make since because Xamarin isn&#x27;t a competitor.<p>Microsoft is so far from having the capability of doing any of those things. Any company that has a monopoly starts acting evil, but Microsoft is no longer close to having  monopoly.",2016-02-24 20:55:34,11170156
1961,Scary. Xamarin sells tools to support multi-platform app development.  Microsoft would want that only to the extent that it assisted migration to Microsoft platforms. Not away from them.,2016-02-24 20:56:58,11170167
1962,Do apps written in C# with Xamarin perform better than those written in React Native? What are the differences?,2016-02-24 21:02:49,11170194
1963,"I&#x27;m not debating that Xamarins products are useful to Microsoft, I&#x27;m questioning the assertion that they haven&#x27;t just consumed a competitor.",2016-02-24 21:07:59,11170228
1964,"Considering Microsoft has no Mac IDE, I&#x27;m not sure how Xamarin could be considered a competitor.",2016-02-24 21:11:24,11170252
1965,"Starter edition is pretty much useless.  You may use it to &quot;get a taste&quot; of Xamarin, but you can&#x27;t really make any useful apps with it.",2016-02-24 21:11:42,11170255
1966,"Very HUGE, now microsoft can put ads on xamarin software!",2016-02-24 21:18:28,11170311
1967,"React Native applications will be faster to develop thanks to React being inherently fast to develop. I would expect a React Native app to perform the same or better than Xamarin, due to React Native&#x27;s asynchronous bridge approach. I don&#x27;t have data to back this up, though.",2016-02-24 21:20:52,11170329
1968,"This makes me happy, and hopefully it&#x27;s just available as a base part of Visual Studio &#x2F; part of all MSDN subscriptions. I loved Xamarin in principle before, but the price tag was steep.<p>I inherited a Xamarin app on one project - and while there were certainly some issues here and there, the promise of native cross-platform app development and shared C# libraries is pretty compelling.<p>I said a few years ago that this should happen, so glad to see it actually come to pass! <a href=""http:&#x2F;&#x2F;tmarman.com&#x2F;Blog&#x2F;Post&#x2F;ba9a711f-dcdb-40b5-bca9-ad6eb5b8ad58"" rel=""nofollow"">http:&#x2F;&#x2F;tmarman.com&#x2F;Blog&#x2F;Post&#x2F;ba9a711f-dcdb-40b5-bca9-ad6eb5b...</a>",2016-02-24 21:31:47,11170398
1969,What now for RoboVm I wonder. Given that its Java based and probably overlaps with the main Xamarin product.,2016-02-24 21:33:18,11170407
1970,"I really need Linux to be the first class citizen (yes I see MS has bought Xamarin but still). Also last I looked, F# wasn&#x27;t looking any better than Ocaml on multinode distributed computing (please do correct me if I&#x27;m wrong).",2016-02-24 21:51:25,11170524
1971,Maybe their strategy is to bundle the Bing toolbar with the Xamarin installer.,2016-02-24 21:51:37,11170525
1972,"Xamarin is a C# shop, mono as a platform for F# is independent of this, and if I&#x27;m not mistaken the F# compiler is open source[0] under the Apache 2.0 License. There are a few shops who have praised F# for it&#x27;s multicore capabilities[1], but again I am not a full expert so it may require independent research. MonoDevelop supports F# as well. There are Linux build instructions in the GitHub repository.<p>[0]: <a href=""https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;fsharp"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;fsharp</a>
[1]: <a href=""http:&#x2F;&#x2F;fsharp.org&#x2F;testimonials&#x2F;#grange-insurance-1"" rel=""nofollow"">http:&#x2F;&#x2F;fsharp.org&#x2F;testimonials&#x2F;#grange-insurance-1</a>",2016-02-24 21:58:16,11170565
1973,"Relevant <a href=""http:&#x2F;&#x2F;www.estaun.net&#x2F;blog&#x2F;some-thoughts-after-almost-a-year-of-real-xamarin-use&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.estaun.net&#x2F;blog&#x2F;some-thoughts-after-almost-a-year...</a>",2016-02-24 21:59:16,11170574
1974,"Huh, didn&#x27;t that happen a few months ago? Or what am I confusing this with?<p>I thought this was announced end of last year already, with Xamarin moving there products to Roslyn and Microsoft offering Xamarin&#x27;s products for non-Windows platforms... or did my mind just make that up?",2016-02-24 22:16:24,11170676
1975,Same here. I wouldn&#x27;t be surprised if Xamarin died slowly.,2016-02-24 22:24:19,11170726
1976,"...because Visual Studio is a C#&#x2F;C++ IDE that works on Windows, and Xamarin Studio is also a C#&#x2F;C++ IDE that works on Windows?<p>Xamarin Studio is a swiss army knife. I don&#x27;t know about your use case, but I use it under the name Monodevelop on linux (not really sure what that association is) and as Xamarin studio on windows. For my use case, it&#x27;s a C# and C++ IDE for desktop development, same as visual studio.<p>It&#x27;s certainly not a MacOS only product, it supports all three platforms including windows.",2016-02-24 22:25:46,11170736
1977,"I think if Microsoft want to attract developers to building for Windows (including phones and tablets), then adding first class support in Xamarin and reducing the licensing fees would be a huge win.",2016-02-24 22:32:15,11170778
1978,"That makes no sense. It&#x27;s pretty clear that .NET is Microsoft&#x27;s future, and Xamarin extends the reach of .NET.",2016-02-24 22:49:58,11170890
1979,"Both points are endemic of smaller and newer companies (does xamarin still qualify?), poor legacy and deprecation strategies &#x2F; product roadmap, bad pricing structure. I think Microsoft can aid in both categories.",2016-02-24 22:50:29,11170894
1980,"Xamarin is not about Xamarin Studio. It&#x27;s about the iOS and Android runtimes. Thanks to its ability to take full advantage of AOT compilation, the performance difference is staggering compared to Mono. Also it needs to JIT in less situations, which is a big plus on iOS since JITing is prohibited on that platform &quot;for security reasons&quot;.",2016-02-24 22:57:06,11170928
1981,"This. MS want .Net to run on all platforms. Give developers awesome tooling for free. Let them build. When they deploy, pay for Azure. It has an ongoing usage cost. Xamarin is just part of their tooling.",2016-02-24 23:06:47,11170983
1982,Didn&#x27;t Xamarin compile the C# to native? Isn&#x27;t this an apples to oranges comparison?,2016-02-24 23:12:30,11171008
1983,"I hope this means visual studio integration comes for free. 
As a paid indie developer for xamarin, being vs integration not included in indie license, was the worst thing about xamarin for me.<p>for the issue in uservoice 2700votes ATM:<a href=""https:&#x2F;&#x2F;xamarin.uservoice.com&#x2F;forums&#x2F;234640-xamarin-suggestions&#x2F;suggestions&#x2F;3682605-visual-studio-support-at-the-indie-level"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.uservoice.com&#x2F;forums&#x2F;234640-xamarin-suggesti...</a>",2016-02-24 23:23:44,11171075
1984,"You may be thinking of <a href=""http:&#x2F;&#x2F;tirania.org&#x2F;blog&#x2F;archive&#x2F;2014&#x2F;Apr-09.html"" rel=""nofollow"">http:&#x2F;&#x2F;tirania.org&#x2F;blog&#x2F;archive&#x2F;2014&#x2F;Apr-09.html</a><p>and <a href=""http:&#x2F;&#x2F;www.pcworld.com&#x2F;article&#x2F;2847032&#x2F;xamarin-integrates-with-free-visual-studio-community-to-let-developers-build-android-ios-apps.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.pcworld.com&#x2F;article&#x2F;2847032&#x2F;xamarin-integrates-wi...</a>",2016-02-24 23:24:07,11171078
1985,"Look at Winforms, WPF and Silverlight. They are all .Net and all abandoned. I wouldn&#x27;t bet my long term future on Xamarin.",2016-02-24 23:28:27,11171100
1986,"I always thought Xamarin was a MS product anyways. Which reminds me, i need a new shirt...<p>EDIT: ahh, they don&#x27;t do the free shirt promotion anymore :(",2016-02-24 23:28:33,11171102
1987,"Given that Xamarin bought RoboVM last year and that the project went closed source and raised prices just after that, it&#x27;s fair to assume that RoboVM is dead.<p>Also, I&#x27;m personally not happy about this. I think people on HN should know better. Besides a couple of black swans being the exceptions that confirm the rule, acquisitions is how projects die. This is because acquisitions are either defensive or acquihires. And even when done out of a genuine desire for progress, big companies end up choking these acquisitions to death, after all they weren&#x27;t capable of such progress in-house, with the project members moving on after one or two years when their contract expires.<p>But hey, people were excited about Nokia as well.",2016-02-24 23:35:48,11171137
1988,"Thing is Microsoft is already developing a lot of the stuff that makes Xamarin tick in the open source under liberal licenses - a lot of the legacy Mono tech already got replaced by CoreCLR equivalents, some are in the process or will be in the future. Eg. stuff like LLILC - IL -&gt; LLVM static compiler will make the AoT for iOS story work instead of using mono AoT - but that project is not usable right now.<p>Binding APIs are some work but not impossible for OSS community to replicate if the CoreCLR and friends provided a portable platform with liberal licensing - so even if Xamarin disappeared it could be replicated - but I see no reason for them to shut it down.<p>And the third part of Xamarin is tooling which they can roll up into their own product offering.<p>Basically acquihire is a good scenario in this case because Microsoft is already moving towards these areas, Xamarin brings in talent and a bridge with working tech to provide transition.",2016-02-24 23:49:09,11171212
1989,"There are already a number of platforms to build iOS apps that Apple have done nothing about, Titanium, Cordova, Adobe, Xamarin, Phonegap.",2016-02-24 23:54:23,11171239
1990,"&quot;Anything you can do in Objective-C, Swift, or Java you can do in C# with Xamarin&quot;<p>What about the things that you can do in Objective-C but cant do in Java, or visa versa?  iOS has some iOS specific features that I&#x27;m not sure how Xamarin could possibly map to Java.",2016-02-25 00:41:30,11171528
1991,"Xamarin offers common APIs for platform-specific behaviors when using Xamarin.Forms, otherwise, when targeting Xamarin.iOS or Xamarin.Android, you&#x27;re developing with pure-native APIs. You will need to use the native provider for whatever action you&#x27;re executing. If you&#x27;d like to be able to reuse common concepts cross-platform, then you need to write your own interface and provider model.<p>Xamarin is the equivalent of a thin wrapper&#x2F;intercace over the platform-implementations. Xamarin doesn&#x27;t really &quot;do&quot; much, it just calls the underlying API which maps to the specific behavior. The type and method signatures for Objective-C and Java are very near synonymous in Xamarin&#x2F;C#.",2016-02-25 00:47:48,11171566
1992,"I don&#x27;t, I&#x27;ve written a prototype for my lib a year ago in C# and  probably have that lying around somewhere but since then we&#x27;ve ported it to C++ and done heavy refactoring&#x2F;development - I could probably spend some time and try to get that prototype working on JSIL but I need to see how the xamarin story plays out before I invest significant time into this.<p>IIRC LLILC is ways off from actually being usable as a static compiler and you&#x27;ll still have to figure out how to ship a runtime and do GC in asm.js (realistically can&#x27;t) and not to mention it&#x27;s single threaded so it&#x27;s a question if you can even get CoreCLR to run in such enviroment without heavy modifications.<p>It would be huge if we could just write everything in C# (frontend&#x2F;lib and backend) but I don&#x27;t see this realistically being possible for at least two years given the development pace of webasm.",2016-02-25 00:53:08,11171593
1993,"I actually think this is not going to do much for Microsoft besides bringing some great talent. In general web software development is slowly moving away from .Net to Node. if this is a play for mobile, then it will be more enterprise focused as I don&#x27;t see the regular App Store developers using Xamarin.",2016-02-25 01:30:36,11171746
1994,"Does anyone know if most of Xamarin team located in Boston? The web sites has San Francisco as headquarters, but for some reason I always thought company is mostly in Boston. 
Curios how much this acquisition increases Microsoft&#x27;s dev center in Boston.",2016-02-25 02:35:34,11171990
1995,"Silverlight is abandoned, but Winforms (especially) and WPF are mature products; I use the latter two (as well as Xamarin for Mac) in my consulting business to make good profits each year, and don&#x27;t see anything changing except for better in this respect.",2016-02-25 03:02:40,11172078
1996,"He&#x27;d been pretty buddy-buddy with Microsoft for a while. Microsoft has owned patents on the underlying technology, but as far as I&#x27;m aware they never did anything to indicate that they might sue Ximian or Xamarin. As far as I can tell, the bulk of the concern about Mono stems from FUD-spreading by RMS.",2016-02-25 03:41:55,11172226
1997,"That doesn&#x27;t sound like the relationship Miguel and Nat have cultivated with .net or MS, and they could have continued on saying &quot;No.&quot; Xamarin didn&#x27;t NEED MS beyond what it already provides openly, everywhere (.net market support both technically + marketing)<p>I&#x27;d almost be surprised if there were previous formal offers as I&#x27;m pretty sure the discussions between Miguel and various MS folks, especially Scott Gu, were frank, open, and mostly trusting. You don&#x27;t throw out formal offers if you have Xamarin openly talking through why they don&#x27;t feel the time is right.<p>My take is Miguel and Nat have always been &quot;do right by the technology first.&quot; They danced the line with mono and old MS. They then made a compelling step towards where MS would head a few years prior to MS being able to start showing progress in that direction.",2016-02-25 05:09:18,11172505
1998,"It will be interesting to see what happens to RoboVM which allows you to develop iOS and Android application using Java with shared code base. (Similar to what Xamarin does with C#) With third party JavaFX implementation even shared GUI code is possible with RoboVM.<p>RoboVM was acquired by Xamarin in Oct. 2015 (<a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;pr&#x2F;xamarin-acquires-robovm"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;pr&#x2F;xamarin-acquires-robovm</a>)",2016-02-25 05:33:13,11172578
1999,"Today, a pure coincidence to the announcement that Microsoft acquired Xamarin, my brother and I launched a preview into a project that we&#x27;ve been working on for some time now. This is a Xamarin.Forms UI Inspector called XenForms:<p><a href=""http:&#x2F;&#x2F;www.xenforms.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.xenforms.com&#x2F;</a><p>Also, in the spirit of giving. I have released an open source version of a game in Xamarin.Forms and CocosSharp. It&#x27;s a These Crazy Walls Clone.<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;jonedavis&#x2F;Xamarin.Forms-With-Cocosharp"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;jonedavis&#x2F;Xamarin.Forms-With-Cocosharp</a><p>Hope someone finds it useful!",2016-02-25 07:04:18,11172826
2000,This has been a personal project of mine for the last 8 months. I&#x27;m excited to be at the point when I can start gathering feedback from Xamarin.Forms developers. The video on the site demonstrates several features that allow developers to explore the Xamarin.Forms Framework and their own application&#x27;s while its running.,2016-02-25 07:08:12,11172840
2001,"And in the spirit of giving, here is an open source These Crazy Walls clone written in Xamarin.Forms and CocosSharp:<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;jonedavis&#x2F;Xamarin.Forms-With-Cocosharp"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;jonedavis&#x2F;Xamarin.Forms-With-Cocosharp</a>",2016-02-25 07:14:35,11172860
2002,"I&#x27;d definitely start developing for Windows Phone if they made Xamarin free and cross platform like .net. We&#x27;re missing on a not completely insignificant part of the market that currently isn&#x27;t worth the development and maintenance cost. If we could develop it from Mac and Linux boxes using the same codebase for the logic, we would most likely make the jump.",2016-02-25 07:45:54,11172971
2003,I have tried some React Native demos and they all performed slower than similar Xamarin demos.<p>Better than HTML5 is still not good enough.,2016-02-25 07:51:37,11172990
2004,"Wrong, Xamarin has continuous&#x2F;live coding. If you&#x27;re doing the code -&gt; compile -&gt; deploy -&gt; watch dance then you&#x27;re doing it wrong.<p><a href=""https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=lH90fVkXQx8"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=lH90fVkXQx8</a>",2016-02-25 08:32:43,11173129
2005,"Xamarin has continuous&#x2F;live coding. If you&#x27;re doing the code -&gt; compile -&gt; deploy -&gt; watch dance then you&#x27;re doing it wrong.<p><a href=""https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=lH90fVkXQx8"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=lH90fVkXQx8</a>",2016-02-25 08:34:24,11173133
2006,"Well, there&#x27;s the public known facts and then there&#x27;s a &quot;rumor&quot;. I don&#x27;t know why we&#x27;re even discussing something as unsubstantiated as the latter.<p>Besides, even if the price was public, one could read anything it wants it that. &quot;Oh the number is low because MS undermined them&quot;.<p>From what I&#x27;ve seen, the numbers for those companies like Xamarin are always much much lower that BS inflated unicorns with no actual business models...<p>And there&#x27;s another thing: for what Xamarin offers (which is in the mobile space, with their support for iOS&#x2F;Android APIs etc), the open source CLR and the VS Code, the basis for the rumor, don&#x27;t even figure at all. Nobody that used Xamarin will gonna turn to those products, because they simply don&#x27;t do the same thing at all.",2016-02-25 09:35:09,11173337
2007,With the new MS backing I hope Xamarin adds other languages like TypeScript to their product... This would be awesome.,2016-02-25 09:54:09,11173393
2008,With the new MS backing I hope Xamarin adds other languages like TypeScript to their product... This would be huge.,2016-02-25 09:54:21,11173394
2009,"&gt; ...Xamarin studio isn&#x27;t a competitor to Visual Studio? That&#x27;s all I know that Xamarin makes<p>Last I checked, that was just a forked and rebranded Mono Develop with Xamarin&#x27;s main product line (iOS and Android support for .NET) bundled in.",2016-02-25 10:48:06,11173627
2010,Xamarin is employing for remote positions. How Microsoft will deal with remote workers or international offices? Will they all just become Microsoft employees&#x2F;contractors?,2016-02-25 10:52:50,11173638
2011,"&gt; This lead to CoreCLR being open sourced and Visual Studio Code being built. I&#x27;d like to know if by undermining parts of Xamarins business they were able to get them at substantial discount<p>As a CoreCLR contributor, my impression was always that the mono-team was extremely happy about .NET official going open-source and how that made it possible to align the two code-bases in a much better fashion.<p>I don&#x27;t think I&#x27;ve ever seen CoreCLR portrayed as an effort to &quot;undermine&quot; Xamarin or mono. Rather I&#x27;d take it as an imitation, the ultimate form of complement.<p>Where did you get&#x2F;form that picture?",2016-02-25 10:53:39,11173644
2012,"&gt; they never did anything to indicate that they might sue Ximian or Xamarin.<p>That doesn&#x27;t mean Microsoft would never sue them or their users. If a Fortune 500 company using Mono receives a letter from Microsoft, they&#x27;ll act exactly the same as any Android manufacturer that received similar letters.",2016-02-25 10:57:21,11173659
2013,"Xamarin studio can be run against .net on windows, it&#x27;s not mono specific.",2016-02-25 12:04:13,11173863
2014,But you can build for Windows and Windows Phone right now for free in a better toolset than Xamarin. Visual Studio is much better.,2016-02-25 12:04:48,11173867
2015,"I hope Microsoft focus will be on driving adoption of Xamarin (and therefore C#, .NET, and Visual Studio) rather than generating revenue. Current pricing is prohibitive for small shops and individuals.<p>EDIT: a new era for Developers, Developers, Developers?",2016-02-25 13:20:02,11174164
2016,"I understood that one benefit of Xamarin is to build once and target many platforms.  If you&#x27;re faced with iOS and Android as the top platforms, including Windows for minimal cost without a complete rewrite is quite appealing.",2016-02-25 13:59:28,11174409
2017,"Interesting, in the context of Xamarin acquisition by Microsoft. Swift can very well spoil C#&#x27;s steam.",2016-02-25 14:26:33,11174573
2018,"MS wanted to buy Xamarin way back. Xamarin held back. I remember some comment to this effect from Miguel. Now that .Net Core looks awesome and will work with LLVM backend. Wouldn&#x27;t it just another step for MS to create what Xamarin&#x27;s core product is. I think Xamarin realized this and gave in. their IPO dream shattered.<p><a href=""https:&#x2F;&#x2F;twitter.com&#x2F;migueldeicaza&#x2F;status&#x2F;400665313119055872"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;migueldeicaza&#x2F;status&#x2F;400665313119055872</a>",2016-02-25 14:28:17,11174583
2019,"&gt;there are people out there that think VS is a good IDE
&gt;they don&#x27;t just use vim or emacs
&gt;there are people out there that think Xamarin is a good technology
&gt;there are people out there that want to build mobile apps in a dead Microsoft design pattern (MVVM)
I want off this wild ride.",2016-02-25 14:30:56,11174606
2020,F# is already spoiling Swift&#x27;s feathers. And F# has first class support in Xamarin.,2016-02-25 14:33:03,11174623
2021,"Hold on, are you telling me Xamarin was not a Microsoft product?",2016-02-25 14:38:11,11174656
2022,"What&#x27;s interesting about Xamarin is that they are very local about OSS (Miguel) but what they did was not very &quot;open sourcey&quot; - obtaining a perpetual license for Mono and this way making sure that no one else can put Mono on Android &#x2F; iOS. Ever.<p>And then charging 1000$ annually per developer, per platform.<p>On the other hand they&#x27;ve made something that developers love (from what I&#x27;ve heard, I&#x27;ve never used Xamarin&#x27;s stuff personally) so they deserve the credits.<p>Congrats to the team.",2016-02-25 14:47:12,11174718
2023,"Swift isn&#x27;t a significant improvement over C#. Also, keep in mind that C# benefits from the whole Microsoft ecosystem, which includes Visual Studio.<p>Beyond the language, what&#x27;s even more important is the application model. That&#x27;s where frameworks like React Native have the edge. This might change if Microsoft upgrades Xamarin.Forms into full-blown Universal Windows App support (think WPF on iOS and Android).",2016-02-25 14:49:07,11174732
2024,"As a Xamarin subscriber, I&#x27;m guessing the future success of the merger (and product future) depends on:<p>1) addressing the price-point,
2) core clr integration,
3) retaining the top engineering talent at Xamarin,
4) addressing the iOS designer-specific issues<p>A couple notes:<p>For most LOB apps, I&#x27;m not convinced the code re-use is significant.  The bulk of work is in the interface and navigation which is, necessarily, handled by coding android &#x2F; ios specifics.  Despite noble effort, the iOS design essentially needs to be done in xcode (point 4 above).<p>The build&#x2F;release process is and (presumably) always will be locked behind the gates of technology&#x27;s North Korea (Apple).  They can throw a switch and restrict 3rd party runtimes if and when they choose.<p>For businesses in the 5-100 million range, writing an expense app in 2017, MSDN Xamarin should be a logical choice - but it has to be a platform with the reliability of .NET and a simple cross-platform designer.  For app-centric startups, games, POS systems, etc. - it&#x27;s probably a bad move.<p>For msft devs (and we are aging) it&#x27;s win-win.  The lure of C# gets you into mobile dev, and you <i>will</i> learn iOS and Android in the process.",2016-02-25 14:54:26,11174772
2025,YAAAY Xamarin for free,2016-02-25 14:58:42,11174820
2026,The reasoning is that with Xamarin you&#x27;re still writing imperative code (AFAIK) whereas React is declarative. The result from a perspective of creating UI is that it&#x27;s much faster and easier to create a UI in React. I don&#x27;t think anyone would disagree with me here unless they haven&#x27;t used React.,2016-02-25 15:50:59,11175177
2027,"I would expect this just to be basic Swift support including -perhaps- the Foundation library (String, Array and other &quot;low level&quot; functionality). I don&#x27;t think this Swift port has currently any easy way to create apps with a graphical user interface using some sort of Java bridge. So compared to Xamarin, using Swift for Android apps would be pretty limited.<p>But please correct me if I&#x27;m wrong.",2016-02-25 15:57:39,11175224
2028,"i guess it depends on what one means by headaches.  mono on linux has never been a significant interest for xamarin, and core-clr is nowhere near production ready.<p>maybe if jetbrains&#x27; project rider gains traction and core-clr and&#x2F;or mono-on-linux matures it will be a broadly appealing option.",2016-02-25 15:59:01,11175234
2029,People focus far too much on different languages. The fact that Android and iOS have very different UI libraries is usually a much bigger problem.<p>Xamarin&#x27;s big selling point is a cross platform ui library.,2016-02-25 16:08:01,11175304
2030,C# devs like myself are interested in Xamarin are interested because they don&#x27;t have too learn new language &#x2F; tooling to do mobile dev. Learning Swift isn&#x27;t any more appealing than learning Objective C.,2016-02-25 16:42:04,11175609
2031,".Net Core can compile AOT as well, and Xamarin already does that on iOS with its Mono runtime too.",2016-02-25 17:32:24,11176033
2032,"As a Xamarin subscriber, I&#x27;m guessing the future success of the merger (and product future) depends on:<p>1) addressing the price-point,
2) core clr integration,
3) retaining the top engineering talent at Xamarin,
4) addressing the iOS designer-specific issues<p>A couple notes:<p>For most LOB apps, I&#x27;m not convinced the code re-use is significant.  The bulk of work is in the interface and navigation which is, necessarily, handled by coding android &#x2F; ios specifics.  Despite noble effort, the iOS design essentially needs to be done in xcode (point 4 above).<p>The build&#x2F;release process is and (presumably) always will be locked behind the gates of technology&#x27;s North Korea (Apple).  They can throw a switch and restrict 3rd party runtimes if and when they choose.<p>For businesses in the 5-100 million range, writing an expense app in 2017, MSDN Xamarin should be a logical choice - but it has to be a platform with the reliability of .NET and a simple cross-platform designer.  For app-centric startups, games, POS systems, etc. - it&#x27;s probably a bad move.<p>For msft devs (and we are aging) it&#x27;s win-win.  The lure of C# gets you into mobile dev, and you <i>will</i> learn iOS and Android in the process.",2016-02-25 18:10:39,11176352
2033,"Thank you for the kind words and the perspective.<p>Luckily, we will be joining a new Microsoft (pending regulatory approval), one lead by Satya which has a different vision for the company.   We are excited about what this means for Xamarin&#x27;s products, for our customers, for our users, for our employees, but most of all, we are excited about what we can achieve inside Microsoft for all of Microsoft&#x27;s customers, and the rapidly growing open source community around .NET.<p>Cheers!
Miguel",2016-02-25 18:45:24,11176657
2034,What&#x27;s &quot;possible&quot; and what&#x27;s available and tested in production right now are two very different things. These kinds of ports take at least a year to get over the initial troubles and become usable and then you&#x27;re at least that time away from a decent size of community libraries to spring up for the mentioned platforms.<p>By that time Rust will also mature enough and webasm will land so Rust will probably be a better candidate (since it&#x27;s OSS and developed by a browser company that needs to run on as many platforms as possible they have much better incentives to maintain ports than Apple).<p>Also in that time C++ will probably get modules working on clang and many c++17 features.<p>And you might see Xamarin merge into CoreCLR and rolled up into VS integration.<p>A lot of things are possible - but what&#x27;s available right now is C++ on every platform and not much else.,2016-02-25 19:21:30,11177007
2035,"I think most people don&#x27;t understand Xamarin. Up until pretty recently Xamarin had no cross platform UI components. That is although all logic was shared, views had to be written separately for the different platforms - just like React Native.<p>With Xamarin Forms this has changed - you can add a Xamarin Form component and this will work adapt itself across the different platforms. The key word there is adapt - it is not like an HTML page, a Xamarin form input will look different on Android and iOS by default.<p>So I think your point, while valid, does not apply in any way to Xamarin!",2016-02-25 20:53:21,11177702
2036,"&gt; So I think your point, while valid, does not apply in any way to Xamarin!<p>I&#x27;m afraid GPs point is still valid - UX (the experience) is more than just native&#x2F;native-looking widgets, but how the app conforms to platform conventions. For example, iOS apps typically include(d?) a back button at the top left corner; even if the button is rendered faithfully as an Android widget - that app will feel alien on Android (it was also an easy way to spot lazy iOS &#x27;ports&#x27;). I think edge-swipes are another iOS convention for navigating back&#x2F;forward, which would be foreign on Android, so I fully agree with GPs statement: Each platform requires UI work to make it really fit the platform in question",2016-02-25 22:17:42,11178279
2037,"That was his point though.  You build the UI in Xamarin.Forms and on the iPhone there is a back button in the top left corner, on Android there isn&#x27;t.  Automatically rearranging and conforming to the platform guidelines.",2016-02-25 22:51:10,11178484
2038,"<i>So I think your point, while valid, does not apply in any way to Xamarin!</i><p>I&#x27;ll believe it when I see it. Cross-platform UI libraries like Qt, Gtk, SWT, etc, just never end up choosing quite the right widgets or having exactly the right look-and-feel as natively-designed apps.<p>If cross-platform is a bigger requirement than producing the best-possible UX, then perhaps Xamarin could deliver. I see this being a big deal with enterprise software. But that&#x27;s almost never the case for most consumer-facing software; you&#x27;re always much, much better off building your presentation code in a native UI toolkit.",2016-02-25 23:03:38,11178561
2039,"Yes, the most noticeable differences are implemented. But this is very a superficial look. From the developer&#x27;s page:<p><a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;forms"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;forms</a><p>Xamarin.Forms is best for:
 Apps that require little platform-specific functionality<p>Xamarin.iOS &amp; Xamarin.Android are best for:
 Apps with interactions that require native behavior",2016-02-26 00:29:36,11179018
2040,"Poor title: React Native has about 3 paragraphs out of 13 in the article, which is all about Xamarin&#x27;s acquisition.",2016-02-26 20:13:10,11183878
2041,"What I&#x27;m curious to know is, outside of the arguments about React being the superior pattern for developing UI&#x27;s, how is this fundamentally better than or different from other hybrid libraries like Appcellerator Titanium or Xamarin?<p>In my experience they all fall short when you try to get the last 20% of your app written. Because you&#x27;re not writing in the native language, directly accessing native API&#x27;s, you&#x27;re always going to be limited to the abstractions that the hybrid framework has (or hasn&#x27;t) defined.<p>I much prefer either going full native or full HTML5 because I never hit a wall when I try to do something that hasn&#x27;t been covered well by the hybrid framework yet.",2016-02-26 20:26:11,11183957
2042,"I have really apprehensive and mixed feelings about this... on the one hand part of me feels that it&#x27;s about time, and maybe the right time to bring Xamarin&#x27;s tooling into the fold... their cross platform tooling for VS has been great, and .Net via mono has seen some integration of MS&#x27;s new .Net core codebase where appropriate.<p>The paranoid in me acknowledges that outside of MS Office, they&#x27;ve pretty much never kept a non-windows client project alive for more than two major releases.  I wouldn&#x27;t mind seeing the VS Code codebase become closer to what VS proper could have been, and seeing more cross platform support in that regard.  I do like what they&#x27;ve been working on in Azure services and integration, just hoping the teams don&#x27;t come in just to die in a year or two (Managed JScript, IronRuby, IronPython for starters).<p>I&#x27;m honestly hoping for the best, but that hope is definitely tempered.",2016-02-27 00:26:17,11185386
2043,That&#x27;s no different than appcellerator or xamarin though. And in the case where you <i>are</i> just using embedded webviews you can easily write native code alongside them. Cordova is written in objective-c and is easy to understand.,2016-02-27 02:26:50,11185771
2044,"But there are a few things going on here.<p>1) All of .NET is open sourced under the Apache License (not some weird MS license)<p>2) Xamarin had started taking thousands of lines of code from the open sourced .NET framework and replacing parts of Mono with it (like System.Decimal, etc). So that merge had started happening anyway.<p>3) The &quot;Mono&quot; differentiation was probably going to go away with .NET Core maturing.<p>4) MS needs a quick step up with cross platform toolkits for .NET, and nobody better than Xamarin, who&#x27;s been doing it for a decade.<p>If they abandon Xamarin, you still have an APL&#x27;d .NET framework that&#x27;s fully developed out in the open, and nobody is really left in a lurch. You can fork it.",2016-02-27 02:38:26,11185801
2045,"You&#x27;re right, I was thinking of platforms more like Cordova.<p>I did a little reading and it appears that React Native, Appcelerator, and Xamarin are pretty close to feature parity.",2016-02-27 07:33:58,11186411
2046,"The application layer is decoupled from the rendering layer specifically for reuse across multiple platforms. That means the data layer that handles data fetching and change propagation works everywhere.<p>The view rendering layer is the part that is specific to each platform and the React community provides web components that work natively on each platform making the development process between mobile&#x2F;web more consistent. Mobile provides an escape hatch to write platform specific code in the native language.<p>&quot;As for web&#x2F;ios&#x2F;android&#x2F;desktop - this is a rare bird&quot;<p>Targeting all, will remain very unlikely. Targeting more than one is pretty common. React and Angular2 are pushing hard to enter the mobile development ecosystem. Microsoft has been pushing for Typescript usage on the desktop and just picked up Xamarin so we&#x27;ll likely see desktop or web or mobile hybrid applications at some point in the future.<p>If the barrier-of-entry to support another platform is low enough, it&#x27;ll make sense to do so. In the current ecosystem, supporting even 2 platforms is a massive undertaking.",2016-02-27 07:53:24,11186453
2047,"TL;DR here: <a href=""https:&#x2F;&#x2F;github.com&#x2F;simonebrunozzi&#x2F;MNMN&#x2F;blob&#x2F;master&#x2F;Weekly-Summaries&#x2F;2016-10.md#3-microsoft-acquires-xamarin"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;simonebrunozzi&#x2F;MNMN&#x2F;blob&#x2F;master&#x2F;Weekly-Su...</a>",2016-02-29 05:45:33,11193793
2048,"Interestingly the developers of this platform have chosen to adopt the &quot;write once, run everywhere&quot; mantra. It appears they&#x27;ve also chosen to provide a unified visual framework, which means no native feel.<p>Can someone from the LambdaNative team tell me why it would be advantageous to take this route instead of using something like Cordova&#x2F;React Native&#x2F;Titanium&#x2F;Xamarin?<p>Are there any apps in the app store that are currently built using this technology?",2016-02-29 07:55:08,11194165
2049,"I&#x27;ve dabbled with this JavaScript for native code since 2010-11. Appcelerator Titanium SDK (now Appcelerator), Telerik, RubyMotion, Xamarin and of course PhoneGap (including PhoneGap Build). I&#x27;ve not used Xamarin, but putting it there to give a broader picture.<p>Please don&#x27;t get me wrong, I&#x27;d love to use ECMAScript(, CSS and markup) to do all web, native and server side development. Unfortunately they are marred by poor API support, performance and customization. Last two are extremely critical for non-trivial apps.<p>If you are building run of the mill simple apps like - news feed, photo, video and reading etc. You&#x27;ll be okay with anyone of the above &#x27;web stack&#x27;.<p>Here&#x27;s the litmus test. Ask the Reactive Native team to port their non-trivial paper app or mission critical messenger app or main app to Reactive Native. They are using Reactive Native for a lame duck Groups and some ad manager app.<p>JavaScriptCore is one layer deeper than wrapping a UIWebView, but it&#x27;s several layers from true native.",2016-02-29 17:33:43,11196792
2050,"Are you sure? It always looked like MonoDevelop (before it looked like Xamarin) to me... Guess I thought wrong then, but it&#x27;s interesting both are in C# at least.",2016-03-01 00:57:54,11200074
2051,"----------------------<p>New York, NY | Good Uncle | Full Stack Javascript Engineer | Full Time Onsite<p>Were looking for a full-stack Javascript engineer to help us build out mobile, web, and backend applications in Js. We believe in:<p>* ES6<p>* BDD<p>* Scrum<p>* CI&#x2F;CD<p>* Documenting all the things.<p>* Open-sourcing as much as possible.<p>* Under-promising and over-delivering.<p>As a Js engineer, youll be working up and down the stack. Front-end single-page-applications in Angular, backend microservices in Node.js, and mobile apps using React Native. We need someone who is comfortable in Javascript regardless of the context. Experience in particular frameworks is not required; but a desire to learn quickly on the job is!<p>Here&#x27;s the full job description: <a href=""https:&#x2F;&#x2F;goo.gl&#x2F;DKgM8F"" rel=""nofollow"">https:&#x2F;&#x2F;goo.gl&#x2F;DKgM8F</a><p>Please email me at malcolm@gooduncle.com if you&#x27;re interested.<p>----------------------<p>Keywords: javascript, js, node, node.js, nodejs, gulp, gulpjs, grunt, express, expressjs, restify, hapi, yeoman, angular, angularjs, ember, react, react native, derby, backbone, phonegap, titanium, xamarin, cordova, es6, es2015, html, css, css3, knockout, jquery, mootools, bootstrap, foundation, mongo, mongodb, dynamodb, sqs, ec2, neo4j, rabbitmq, aws, linode, digital ocean, mocha, jasmine, should, promises, let, var, docker, containers, codeship, travis, manhattan, brooklyn, queens, staten, nyc, funded",2016-03-01 15:24:57,11203145
2052,"San Francisco &amp; Copenhagen | Realm (YC S11)<p>Hi  Tim from Realm here (<a href=""https:&#x2F;&#x2F;realm.io"" rel=""nofollow"">https:&#x2F;&#x2F;realm.io</a>). Were currently shipping a mobile database that runs directly inside mobile phones, tablets &amp; wearables. Hundreds of millions of people rely on Realm every day through apps by Google, Amazon, eBay, Intel, Hipmunk, Expensify, GoPro, the BBC, Adidas, IBM, Homeland Security, Walmart, LINE, Starbucks, Xiaomi, the Washington Post and many, many more.<p>We allow people to build faster apps, faster, and do so in a reactive way with live objects, change notifications, unidirectional data flows and much more.<p>Were the 3rd-most starred database on GitHub (<a href=""https:&#x2F;&#x2F;github.com&#x2F;realm"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;realm</a>) and growing fast  we just launched for React Native last week: <a href=""https:&#x2F;&#x2F;realm.io&#x2F;news&#x2F;introducing-realm-react-native&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;realm.io&#x2F;news&#x2F;introducing-realm-react-native&#x2F;</a><p>Were working on some exciting new projects Some keywords: Mobile, C++, iOS, Objective-C, Swift, Android, Java, JS, React Native, C#, .NET, Xamarin, Unity, distributed systems, cloud, devops, infrastructure, test, QA, evangelism, OS X, Product Manager<p>We will consider sponsoring work visas to Denmark for the right candidates.<p>If youd like to apply it will be easier if you do so directly on our Lever where we have specific jobs listed: <a href=""https:&#x2F;&#x2F;jobs.lever.co&#x2F;realm"" rel=""nofollow"">https:&#x2F;&#x2F;jobs.lever.co&#x2F;realm</a><p>(But if you have any questions, Im VP Product at Realm, and always happy to chat: tim@realm.io)",2016-03-01 15:32:32,11203217
2053,"Mobile Developers (Graduate to Senior) | REPL Digital - <a href=""http:&#x2F;&#x2F;www.replgroup.com&#x2F;vacancy&#x2F;#jobs-digital"" rel=""nofollow"">http:&#x2F;&#x2F;www.replgroup.com&#x2F;vacancy&#x2F;#jobs-digital</a> | Birmingham&#x2F;Leeds UK | Full-Time, OnSite<p>We are currently looking for talented and creative mobile app developers to join our growing software team. We are working on a number of high profile projects for some of the world&#x27;s biggest brands, and we need your help to build first class mobile applications using the latest technologies and development best practices.<p>You would be joining the company at an exciting time, as we are currently undergoing rapid expansion and you would have a chance to build your career in one the countrys leading suppliers of retail solutions.<p>Obligatory Skills and Experience<p>* C# Experience
* iOS or Android mobile development experience.
* Experience integrating with web-services
* Experience of agile development methodologies<p>Desirable Skills and Experience<p>* Knowledge of Apple provisioning process.
* Knowledge of Google Play Store.
* Experience developing with Xamarin.
* .NET Web Technologies - MVC, WPF, WCF
* Good knowledge of the Software Development Life-cycle
* Experience working in an Agile software environment.",2016-03-01 15:54:55,11203434
2054,"SiteDocs is hiring junior and senior programmers to join our REMOTE team, working on web and mobile applications for the construction industry. (SiteDocs headquarters are near Vancouver, but our dev team is spread throughout Canada and North America.)<p>We&#x27;re a growing B2B start-up with dozens of employees, thousands of users, and real revenue. Our mobile applications are built with Xamarin, and our web app is built with React, but we don&#x27;t necessarily care if you&#x27;ve worked with either before as long as you&#x27;re a good programmer who&#x27;s interested in (and reasonably good at) learning new things.<p>A job at SiteDocs means:<p>* Being responsible for your own piece of the product. We&#x27;re a relatively small team, and our product is relatively young, so the features and components you build will have a meaningful impact on our users&#x27; experiences.<p>* The opportunity to teach (for senior developers) and to learn (for junior developers). Our company values continuous learning, and as a dev team we are more than happy to hire and train programmers right out of university (or self taught, etc).<p>* Market salary. Honestly, we prefer hiring people in low cost-of-living areas and paying them slightly above-market for their location. But we also have team members who live in Vancouver, so \_()_&#x2F;<p>If you&#x27;d like to talk, please email dave.noel@sitedocs.com with &quot;HN Hiring&quot; in the subject line.",2016-03-01 16:11:30,11203587
2055,"Engineering Manager
Engineering - New York, NY - Full Time<p>At Olo we develop an online food ordering platform used by many of the countrys largest restaurant chains, reaching millions of consumers. We take pride in a neat codebase with automated tests and continuous integration, and encourage new ideas, experimentation, and constant refactoring.<p>Olo is revolutionizing the customer experience at these restaurant chains, and we&#x27;re looking for a talented engineering manager to join our team and help us achieve this vision. As part of the team you will play a significant and visible role in helping us deliver an industry-leading digital ordering capability to our clients.  Youll work with a passionate team dedicated to delivering amazing products using modern tools and technologies such as .NET 4.6, ASP.NET MVC 5, TeamCity, GitHub, Octopus Deploy, Redis, Xamarin, and heavy use of OSS.<p>You will manage one of Olos software engineering teams. Your primary responsibility is to ensure that your team is able to effectively deliver new product value at a steady pace. You will be responsible for hiring talented engineers and providing the needed coaching and guidance to ensure that they excel and grow. You will be a key facilitator in Agile planning, supporting business priorities and advocating engineering priorities. You will oversee a team consisting of both developers and QA engineers and will be responsible for the full software lifecycle of Agile planning through deployment.<p>This is a full-time position based in NYC.<p>Requirements
* 		You have demonstrated mastery of C#, .NET, web application and object-oriented concepts in a development leadership role.
* 		You know good code when you see it.
* 		You understand the value of QA as a fundamental component of producing enterprise-grade commercial software.
* 		You have at least 3 years on-the-job experience managing development teams.
* 		You are comfortable translating business needs into workable plans, and translating business-speak to geek-speak (and vice versa).
* 		You can articulate what it takes to build reliable, robust software systems.
* 		You enjoy the role of coach and facilitator, and are confident in your ability to build and mentor a high performance team.
* 		You have experience developing software iteratively under an Agile process framework.
* 		Experience developing a multi-tenant SaaS platform<p>Please email your resume to johnball@olo.com",2016-03-01 16:18:02,11203644
2056,"Olo -  Software Engineer, Infrastructure Automation
Engineering - New York  - Full Time<p>At Olo we run an online food ordering platform used by many of the countrys largest restaurant chains, reaching millions of consumers.  Olo is revolutionizing the customer experience at these restaurant chains, and we&#x27;re looking for talented engineers to join our team and help us achieve our vision.<p>As part of the Engineering team you will play a significant and visible role in helping us scale one of the most advanced food ordering platforms in the market.  Your penchant for automating tasks enables you to remove friction from our Development and QA teams.  You understand that Getting Things Done extends to the whole team as you look for ways to improve everyones efficiency.  You follow the latest trends in Continuous Integration, Continuous Deployment, and Infrastructure as Code and enjoy introducing new practices and tools that improve everyones daily worklife.<p>You&#x27;ll work with a smart, passionate team dedicated to delivering amazing products using modern tools and technologies such as AWS, .NET 4.6, ASP.NET MVC 5, TeamCity, GitHub, Octopus Deploy, Xamarin, and heavy use of OSS.<p>Responsibilities<p>Automate each stage of the build-test-deploy cycle.
Ensure that the Development environments run smoothly.<p>Manage continuous deployment of new builds to Development.
Oversee our change control, configuration and release management processes.<p>Oversee and optimize of our continuous integration system.<p>Requirements<p>You have a passion for computing that extends beyond work.
You have worked at a senior technical level as a developer or devops engineer.
Your development experience enables you to build the tools that will make a .NET developers life easier, with a strong working knowledge of C#, .NET and SQL.
Your have solid experience with Amazon Web Services infrastructure administration (EC2, S3, VPC, RDS, IAM, SQS, Route53) through the AWS CLI or SDK.
You are driven to automate any manual process and adept at one or more scripting languages (e.g. PowerShell, bash, Perl, Python).
You have overseen software builds and deployment on a .NET platform for at least one year.
You have a strong working knowledge of source control systems (Git highly desirable), continuous integration platforms (such as TeamCity), and continuous deployment platforms, especially in support of deploying hosted, SaaS applications.
You have a strong working knowledge of networking, Windows Server, Linux (CentOS and Ubuntu) and SQL Server administration.<p>Please feel free to contact me directly at johnball@olo.com",2016-03-01 16:23:57,11203699
2057,"Olo - Xamarin Mobile Developer
Engineering - New York  or Remote within U.S.  - Full Time<p>At Olo we develop an online food ordering platform used by many of the countrys largest restaurant chains, reaching millions of consumers. We take pride in a neat codebase with automated tests and continuous integration, and encourage constant refactoring.  We encourage new ideas and experimentation.  Were so obsessed with automation that we laugh nervously at xkcd.com&#x2F;974.<p>Olo is revolutionizing the customer experience at these restaurant chains, and we&#x27;re looking for talented engineers to join our mobile team and help us achieve this vision. As part of the team you will play a significant and visible role in helping us deliver an exceptional mobile ordering experience to our clients consumers via our native iOS and Android apps, as well as contribute to our ongoing innovation in restaurant operations tools and services.  Youll work with a small and passionate team dedicated to delivering amazing products using modern tools and technologies such as Xamarin, HockeyApp, MVVM, and more.<p>This is a full-time position.<p>Requirements<p>You are excited by the ongoing advances in mobile technology.
You have strong working knowledge of the iOS or Android platforms (bonus points for both).
You have experience working with Xamarin and have built apps that integrate with web services.
While not a designer, you understand the key factors in a quality mobile UI&#x2F;UX design.
You have at least 3 years on-the-job development experience at a senior technical level.
You can demonstrate thorough knowledge of C#, .NET and object oriented design and patterns.
You are adept at writing unit tests and testable code, and working under distributed version control (preferably Git).
You have an innate drive to automate anything that has to be done more than once.
Your English writing and verbal communication skills are strong.<p>please email your resume to johnball@olo.com<p><a href=""http:&#x2F;&#x2F;www.olo.com&#x2F;careers.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.olo.com&#x2F;careers.html</a>",2016-03-01 18:03:42,11204626
2058,"Gatecoin (<a href=""http:&#x2F;&#x2F;gatecoin.com"" rel=""nofollow"">http:&#x2F;&#x2F;gatecoin.com</a>) | Hong Kong ONSITE | Multiple Positions | Fulltime | (INTERNS also welcome, VISA sponsor)<p>We&#x27;re a regulated bitcoin&#x2F;ether(&#x2F;others) exchange in Hong Kong, with many projects in our backlog!<p>We&#x27;re looking for technical folks to fill some roles:<p>a) Devs (Frontend, Backend, Fullstack, Mobile soonish via Xamarin)<p>b) QA<p>c) SysAdmins+DBA<p>d) Security<p>e) UI&#x2F;UX&#x2F;CSS designers (Android&#x2F;iOS experience desirable too)<p>f) Hybrid roles of the above<p>We use AngularJS (moving to TypeScript) and .NET&#x2F;Mono (C#, looking at F# too), with a hybrid Linux&#x2F;Windows environment (i.e. Redis, MySQL). Get in contact to know more at knocte at gmail dot com, using the subject &quot;Interested in Gatecoin roles&quot;.<p>We help with sponsorship&#x2F;relocation to HK.<p>Want to make a difference in the cryptocurrency world? Join like-minded people to work together and help us change the world!",2016-03-02 02:09:24,11207677
2059,"I&#x27;m looking to create a social networking app, something like Tinder or MeetUp and was in the process of deciding which technologies to use for the same.<p>Are there any disadvantages of using Xamarin for app development compared to native Java&#x2F;Swift for Android&#x2F;iOs respectively?  Why would I want to develop the same application twice, once in Java &amp; once in Swift, rather than developing it just once in Xamarin?",2016-03-02 14:17:57,11210021
2060,"I&#x27;m looking to create a social networking app, something like Tinder or MeetUp.<p>What technologies would you recommend for the same? Should I develop the app first in Swift and then in Java for Android? Or should I use a cross platform tool like Xamarin?<p>Is there enough ROI in developing natively for each platform?",2016-03-02 14:48:11,11210194
2061,"I&#x27;m kind of a MS fanboy, but please don&#x27;t believe their lies:
- VS is still not free; the community edition can only be legally used by very small companies with slim revenue
- the Xamarin acquisition will turn out to be a slap in the face of developers who want to cross target Android and WP
- the desaster of the Metro App API that has been replaced by UWP after being hailed as the future of application development for Windows (for a time, you could develop Windows 8.1 Metro Apps only on Windows 8.1 machine, not a Windows 8 machine)<p>Anybody doing any non-desktop application development on Windows is shouldering the full risk of obsolescence within 2 year.<p>I would really, really like a cooperation between Google and Microsoft in the area of the utterly braindead 90ies API of Android development by switching to XAML + C# ... ah, a man can dream!",2016-03-03 19:11:07,11219175
2062,&gt; XAML + C#<p>Xamarin enables that.,2016-03-04 12:04:18,11223212
2063,"The next level future of UI would be something as developer-productive as Visual Basic .NET from 2007: lay out my app visually in minutes, double click to add code, build, run, ship.<p>It&#x27;s 2016 and I&#x27;m still using a soup of hacks to build web UIs. GWT was promising but far too clunky. React+Bootstrap is almost there but I still have to write code to make wheels roll (in a parser hack called JSX!) and I still have to think about the web layer instead of having it abstracted away. As soon as I start using anything else I have to drag in a soup of hacks, so in the end I always end up with a web app with a hundred dependencies. Sorry, must have (insert hipster framework here) installed <i>too</i> if I want to embed BeanieCap.JS.<p>I would pay thousands of dollars for something as productive as VS.NET from 2007 but for generating modern responsive UIs for the web. It&#x27;s okay to simplify the problem by being opinionated, but only if your opinions don&#x27;t suck and only if whatever abstractions you create are elegant and degrade gracefully when they (inevitably) leak a little. Now that MS is open sourcing .NET, adding web UIs to Xamarin and making them work like mobile and desktop would be one route to this. Another would be to reboot GWT using Go-&gt;ASM.JS as the code path and do the UI in Go, then build a visual UI designer for it. Use the dom as a renderer and shit-can CSS and all the rest of that stuff in favor of an opinionated uniform minimally-themable design (as long as it doesn&#x27;t look like crap).<p>Every now and then I go searching for this. Nope, still doesn&#x27;t exist. I have a wad of cash in hand but nobody will take it so back to hacking web UIs in a text editor manually. Sigh.",2016-03-07 17:36:29,11240170
2064,"Technical Lead, Xamarin Insights (<a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;insights"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;insights</a>)<p>Side Projects:
<a href=""https:&#x2F;&#x2F;github.com&#x2F;skizzehq&#x2F;skizze"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;skizzehq&#x2F;skizze</a> - High-throughput probalistic data structure service. Also working on it&#x27;s Golang and Node.js client bindings (see the org.)<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;njpatel&#x2F;grpcc"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;njpatel&#x2F;grpcc</a> - a nice-to-use gRPC CLI for testing&#x2F;debugging gRPC services<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;njpatel&#x2F;HiveKit"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;njpatel&#x2F;HiveKit</a> - a British gas Hive Heating -&gt; HomeKit bridge<p>Also working on another little utility for devs around sending files between machines, should be out by the weekend!",2016-03-08 10:34:17,11244515
2065,"Distaste for the GPL aside, the second part of GP&#x27;s comment is on-point.<p>Not sure if you&#x27;ve actually looked at Microsoft&#x27;s CLA or tried to contribute to any of their projects.  The CLA signals that, despite having chosen how their projects are licensed themselves, they don&#x27;t hold those licenses in high regard.  And like most CLAs, it creates a needless barrier to entry and turns away real contributors.  (Not that this is actually seen as a big concern within MSat least it doesn&#x27;t seem to be.  Based on the projects I&#x27;ve been watching, development is very cabalistic [read: top-down] and that they might get some outside contributions because they&#x27;re open source seems more like a nice also-have rather than an outright goal.)<p>And since you brought up the .NET patent grant, it&#x27;s hardly comprehensive.  It severely limits the practical chances of anybody doing anything with it outside of Microsoft&#x27;s own .NET Core project and Monowhich is more or less another project under Microsoft control, now that they&#x27;ve acquired Xamarin.<p>All signs point to the .NET patent grant being specifically written to enable Microsoft&#x27;s very own version of Sun&#x2F;Oracle&#x27;s &quot;don&#x27;t fragment Java&quot; lawsuits.  (Especially ironic given that the whole reason C#&#x2F;.NET came about in the first place is because, in addition to Google being a target because of Android, the only other big target of such a suit was Microsoft themselves because of Visual J++.)",2016-03-08 16:16:29,11246157
2066,"...or Xamarin.Forms, which is its own beast and a rather different direction.",2016-03-08 19:48:48,11247969
2067,"Location: Dallas TX<p>Remote: YES<p>Willing to relocate: NYC, SF Only
Technologies: C#, JS, Java, Android, iOS, Xamarin, AngularJS, NodeJS, WebAPI, MVC, ASP.Net, MSMQ, AMQP, Swift, Objective-C, JIRA<p>Rsum&#x2F;CV: <a href=""https:&#x2F;&#x2F;www.dropbox.com&#x2F;s&#x2F;4g55n26luq6t6ow&#x2F;mutaaf_aziz_resume_july.pdf?dl=0"" rel=""nofollow"">https:&#x2F;&#x2F;www.dropbox.com&#x2F;s&#x2F;4g55n26luq6t6ow&#x2F;mutaaf_aziz_resume...</a><p>LinkedIn: linkedin.com&#x2F;in&#x2F;mutaaf<p>Email: mutaaf.aziz@gmail.com",2016-03-09 22:10:45,11256084
2068,"It&#x27;s amazing, really. A few years ago I was brought in to feature-enhance (80%) &#x2F; bug-fix (20%) some mil-spec hardware that interfaced with some custom Delphi front-end which was acting as a controller. I was amazed at the functionality:LOC ratio along with the correctness[0] with purely pre&amp;post Asserts[1]. The hotel industry still largely runs on one popular Delphi app that&#x27;s still chugging away. Other than MS Lightswitch which is dead[2], nothing even came close re: great RAD.<p>(Hey, MS employees reading this - now VS Community is free-for-commercial-use, if you want to capture the 5&lt;=revenue&lt;=50 MM market, replicate the Delphi + VCL ecosystem for RAD apps with Azure as the backing technology. Lightswitch already let me target WPF and HTML5, with Xamarin you now have native mobile. You pushed for an &quot;integrated&quot; desktop + surface&#x2F;tablet + cell-phone a few years too early, but Xamarin as the presentation layer and Azure as your data-store and you&#x27;ve got the feature set that most businesses need. You&#x27;d put me out of business, but absolutely take over that mid-market share.)<p>[0] Pedants, I&#x27;m one of you. No Coq was not used in this project ;)
[1] <a href=""http:&#x2F;&#x2F;blog.matthewskelton.net&#x2F;2012&#x2F;01&#x2F;29&#x2F;assert-based-error-reporting-in-delphi&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;blog.matthewskelton.net&#x2F;2012&#x2F;01&#x2F;29&#x2F;assert-based-error...</a> Similar to this
[2] <a href=""http:&#x2F;&#x2F;janvanderhaegen.com&#x2F;2015&#x2F;01&#x2F;14&#x2F;its-2015-and-lightswitch-is-dead-now-what&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;janvanderhaegen.com&#x2F;2015&#x2F;01&#x2F;14&#x2F;its-2015-and-lightswit...</a>",2016-03-11 22:30:28,11270016
2069,There are alternatives to hybrid apps like Kivy and Xamarin that handle some of these pain points better yet bring most of the benefits.,2016-03-13 22:00:38,11279553
2070,"I wouldn&#x27;t suspect such fanboyism on StackOverflow&#x27;s part (they conducted the survey).<p>Apart from that I believe you&#x27;re largely right. I had to switch from Windows to OS X for this reason exactly.<p>I&#x27;m an Android dev joined a Xamarin team recently, and you can&#x27;t work on the iOS version lest you have an OS X machine. As far as UX goes, I&#x27;m not too pleased with the transition.",2016-03-18 12:15:04,11311227
2071,"According to the report, at least 71.2% of all development is happening inside Windows or a Windows VM (Visual Studio and Notepad++ are Windows only).  Sounds like a lot of folks are using Macs to host a Windows VM, which I see all the time.  If you include a small portion of Eclipse, Netbeans, IntelliJ, Xamarin then you&#x27;re probably approaching 80% of all development being done on <i>gasp</i> Windows.",2016-03-18 14:07:34,11311853
2072,"Xamarin would probably be the framework&#x2F;tool of choice if you want C#. Other than that, most (popular) cross-platform app development frameworks I&#x27;ve found do use JavaScript. &quot;Disclaimer&quot;: I&#x27;m in the middle of writing a thesis on the subject.",2016-03-18 15:33:51,11312425
2073,"The best reason for Microsoft to stop leaching off vaguely applicable patents on smartphones is that their best chance at reviving their own smartphone business is with something along the lines of the Nokia X handsets, running Android, but with an emphasis on Microsoft&#x27;s apps and ecosystem.<p>That won&#x27;t fly without access to Google&#x27;s proprietary apps and app store. Microsoft will need to bury this hatchet before they could get that licensing deal.<p>They have an SDK for this approach now, with Xamarin. Don&#x27;t be surprised if they trade the patent revenue for another shot at phones.",2016-03-20 21:43:55,11324813
2074,"How are Microsoft technologies not trendy?<p>F#, Reactive Extensions, Xamarin, Typescript, etc.",2016-03-21 13:36:45,11327929
2075,Microsoft opensourced a cross platform official implementation of .NET called CoreCLR - and altough slightly young you can do what you just said and they support it trough Azure on linux and offer OSX builds.<p>Also Mono took better parts of CoreCLR and made their implementation better.<p>Also Microsoft acquired the company behind mono&#x2F;Xamarin and given their recent trend will just fold that work in to their OSS offerings (at least partially)<p>So please get your facts straight before commenting on the issue because that&#x27;s sort of the problen I&#x27;m getting at in my post.,2016-03-21 16:53:17,11329448
2076,"See this is exactly what I&#x27;m talking about !<p>I can&#x27;t blame you for not being up to date with developments on .NET platform or in the Microsoft world - but please o please refrain from making comments about the issue you are not informed about and obviously haven&#x27;t looked in to for the last couple of years.<p>Microsoft has their own cross platform open source .NET implementation under MIT license supported officially on Linux and OSX. <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;coreclr"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;coreclr</a><p>Not only that but they are opensourcing and porting huge parts of their stack like build system, web framework, etc. and are  supporting it officially on Azure cloud. <a href=""https:&#x2F;&#x2F;github.com&#x2F;aspnet&#x2F;Mvc"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;aspnet&#x2F;Mvc</a><p>They are doing pure OSS from scratch projects such as LLILC - a static compiler for CoreCLR based on LLVM : <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;llilc"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;llilc</a><p>Further more even before that Microsoft has started opensourcing large parts of their implementation at the request from Mono team and Mono has taken those + CoreCLR and made their implementation better - showing that they actually wanted to help Mono team implement feature parity.<p>And finally Microsoft recently acquired the Mono team (Xamarin) and will probably fold that in to their OSS offerings.<p>So please stop the FUD - it&#x27;s not helping anything - I realize you have an opinion but before voicing it please check if it matches the facts - otherwise you&#x27;re just creating noise in the discussion.",2016-03-21 17:02:58,11329547
2077,You might want to review the Xamarin bug reports as the slash alone nearly put them out of business at least three times.,2016-03-22 16:50:12,11337854
2078,"Still I have come to like it quite much.<p>Yes we cannot get rid of the C underpinnings, but there are enough features to write safe C++. At least when using it alone or in small teams that value safety.<p>I have been using it in anger on my side projects for mobile s.<p>Why use it in spite of my rants about safety?<p>Tooling.<p>Using C++ across Android and Windows Phone is already an extra layer of pain (thanks NDK) with first class support from the platform owners.<p>Using Go, Swift, Rust would increase that pain level quite higher given the actual lack of comparable tooling.<p>Meaning build scripts, IDE, debugging tools, packaging and APIs.<p>C# doesn&#x27;t suffer as much from it thanks to Xamarin, but I would only use it in commercial projects.<p>I really would wish that one of those languages would eventually be adopted across mobile OS SDKs as C and C++ currently are.<p>Already had a look at Rust for Windows Phone, but COM support is not yet there to the level expected by WinRT as C++&#x2F;CX allows.  Assuming I was looking at the right place.",2016-03-23 13:10:16,11344045
2079,"It&#x27;s telling me to use Java and Swift for mobile development because hybrid apps suck.  But Xamarin is fine, I don&#x27;t get it.",2016-03-24 17:47:03,11354806
2080,"For Rx w&#x2F;Xamarin (iOS, Android) and Windows Platforms check out <a href=""http:&#x2F;&#x2F;reactiveui.net&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;reactiveui.net&#x2F;</a> :-)",2016-03-25 04:34:49,11358498
2081,"The author says he agrees with <i>&quot;The web is the only truly open platform weve got. Its the closest thing we have to a level playing field.&quot;</i><p>While there are places like e-commerce catalogs where &quot;hybrid&quot; apps, which is to say &quot;apps where WebView is important,&quot; are the best implementation choice, it&#x27;s not everyplace. If you treat the browser as a means for app portability, maybe you ought to look at Xamarin instead, or as an addition to your toolkit if a portable code-base is required for many of your apps.<p>It isn&#x27;t Google&#x27;s job to make your cross-platform implementation strategy easy. Platforms have unique capabilities and when you put cross-platform implementation too high in your priorities you&#x27;ll miss having the best possible app on each platform. In some cases that doesn&#x27;t matter, but when it does, change your implementation approach and make native apps.",2016-03-26 14:43:26,11365782
2082,Would love to hear that Xamarin will be free and will be part of Visual Studio :),2016-03-26 22:57:19,11367860
2083,"There used to exist GCJ, but its development died when the main developers joined OpenJDK development or moved elsewhere, back in 2009.<p>There is still the RoboVM version before it got acquired by Xamarin.<p>There are also Avian and JikesRVM, but it depends a bit what features you are using.<p>The problem with Java non-comercial AOT compilers is that the majority of the Java shops that really care about AOT compilation don&#x27;t mind to pay for it, so there isn&#x27;t a real effort to invest on a free AOT compiler.<p>The lack of community support for RoboVM was a good example of it.<p>Even the upcoming AOT compiler in the official JDK will be a commercial feature, at least it was announced as such.",2016-03-28 15:02:54,11374641
2084,"&gt; I sympathize with cross-platform development woes (we have this problem too) but I can&#x27;t say I&#x27;ve ever been impressed with a cross-platform app developed using React Native (or anything else cross-platform).<p>Do you feel the same way about Xamarin? I&#x27;m just curious as I&#x27;ve been considering moving to it. My company has been developing on Ionic the past year or so and it&#x27;s become quite cumbersome as a platform. Basic apps look alright in Ionic, but is plagued by web view problems, making a non believer in the platform. Xamarin seems to compile better and avoid the web view. I guess I&#x27;m just looking for opinions.",2016-03-30 05:32:30,11387163
2085,"You realize that React Native also avoids the web view, right? Its more like Xamarin-for-JS with a ui kit built in.",2016-03-30 05:44:52,11387197
2086,"Any 3rd party solution will have <i>some</i> issues. Whenever you see mostly positive testimonials, you should be both suspicious and scared, because it means you will be the one to find those issues in production, and you won&#x27;t find any help on the internet.<p>That was a long time the case for Xamarin, but if you look at their customer forums, reddit, stackoverflow etc you will find the negatives too nowadays.<p>I am not interested in .NET, so I would not personally use Xamarin anyway, but I know that with Qt for instance you have to be careful with mobile UIs - it&#x27;s best used for custom stuff and not native-looking apps.",2016-03-30 08:47:30,11387851
2087,"I use Xamarin regularly, and it&#x27;s true the primary downside is frequent bugs and regressions along the entire toolchain, and in the Xamarin wrappers of native APIs. That said, it&#x27;s improved by leaps and bounds in since last Summer. It&#x27;s gone from &quot;I&#x27;m about to dump this platform any day now&quot; to &quot;minor nuisance&quot;, and most of the time you can just get on with your work.",2016-03-30 09:35:06,11388071
2088,I second the regression issue.  Particularly if you use Xamarin.Forms.  The Forms navigation stack is full of memory leaks as well.,2016-03-30 11:58:59,11388594
2089,"I wish it to be true :)<p>Disclaimer: I didn&#x27;t feel the user experience you described. (and have a lot more experience with XUL than QML)<p>What I experienced is that actual performances of crossplatform &quot;runtimed&quot; toolkits are enough for desktops and acceptable for mobile devices, but the global overhead (compared to a binary using native OS widgets) exists, beginning with startup cost, memory consumption, i&#x2F;o latency. In fact, the same constraints that VM-based languages have. And even more : the underlying GUI toolkit may be used in an unexpected way, strange GPU driver behaviours may pop up, how not to be bothered by OS fragmentation.
And then an application may run flawlessly on a device with a given OS while on another it performs not that good.<p>While I think it&#x27;s correct to say that VM-based languages does not have to blush in front of compiled programs when talking about raw computing performance, my experience (as an ex XUL-lover, I may be biased) make me think that this is still not true when UI is involved. Java has maybe the oldest (and most optimized ?) runtimed UI, and it does not convince me. OK, this may be a bad example : Java UIs are &quot;runtimed&quot; at a different layer. but seeing the length of the QML performance wiki page is a bit scary :)<p>Maybe the &quot;1% overhead&quot; is an unreachable dream, and maybe the native apps will become deprecated, but I think there are a place for improvements. How many attempts of crossplatform UI runtime exists ? Not that much. With hardware improvements, the overhead will be more and more acceptable.
It s a huge work, and previous errors should be looked at (rant time : Mozilla: you should not have stopped to use native widgets - Adobe: Flex - QML: mimicking web dev like XUL did is nice !).<p>Though, I am really impressed by Qt and .Net SDKs and I would really love to see more free software and linux surprises from Microsoft with the Xamarin acquisition.<p>And, let&#x27;s be utopic, the future is maybe about a standard API -la POSIX for end-user applications, where OS vendors will agree on an app, and natively implement their own &lt;button&gt;, their own &lt;menu&gt;, their own &lt;video&gt;. They do if for the browser, for the &quot;webassembly&quot;, why not for the OS ?
Or the browser will be deeply integrated in OS and the &quot;web&quot; apps will replace all native applications. Or they&#x27;ll still coexist for years.<p>OK, anything but embedding a webview would please me :)",2016-03-30 14:06:37,11389344
2090,"Is this part of a patent deal between Microsoft and Canonical? Or why would Canonical help them - that&#x27; s the only explanation that makes sense. We all know how it works out for companies sleeping in bed with a huge corporation... either the buy you, do an inside job trojan horse style, or compete against you. (Cyanogen, Nokia, Xamarin, Yahoo, Sun, RedHat, Google, Apple, etc) If they buy Canonical and&#x2F;or RedHat, I would drop Ubuntu&#x2F;RedHat in a second and would advise everyone to switch to Debian or another independent community driven distro.",2016-03-30 19:24:58,11392188
2091,Any updates on Xamarin? Are they going to make it more affordable?,2016-03-30 19:54:52,11392411
2092,"For the record, I use Xamarin &quot;classic&quot; and not forms, and my comment was in reference to that. Given the age of X.Forms, what you say sounds par for the course.",2016-03-30 20:12:57,11392581
2093,"You are right, the Xamarin acquisition was for this very reason. If you are building iOS &amp; Android, why not Windows App with the same code.",2016-03-30 21:19:20,11393100
2094,Xamarin session is on March 31 at 2:00PM PDT.,2016-03-31 05:49:31,11395235
2095,"Fantastic.  Xamarin was very slick, but the licensing costs to actually be able to use it was pretty hefty",2016-03-31 15:52:01,11398044
2096,"hope they port the full thing to linux (i mean xamarin studio, not visual studio)<p>i was kinda always turned off, that xamarin treated linux as a second class citizen",2016-03-31 15:57:38,11398098
2097,"You can download Xamarin Studio for OS X or Visual Studio with Xamarin here <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;download"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;download</a>",2016-03-31 15:59:21,11398115
2098,"<i>Xamarin also supports development on OS X using Xamarin Studio. This too is now available for free as a community edition for small teams, and is included in MSDN Subscriptions.</i><p>This would explain the message I got on my Macbook the other day.<p>Sadly Xamarin isn&#x27;t supported for F#, so it&#x27;s still basically useless to me.",2016-03-31 16:00:53,11398126
2099,Xamarin does support F#.,2016-03-31 16:02:55,11398150
2100,Our entire Xamarin codebase is written in F# so not quite sure what you mean by that.,2016-03-31 16:03:42,11398158
2101,"This is cool. They updated the pricing page: <a href=""https:&#x2F;&#x2F;store.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a>. Hint, it&#x27;s free.",2016-03-31 16:03:48,11398159
2102,"Not so sure about that, for most Windows developers Xamarin will offer more benefits and it is extremely mature by now. React-Native is still pretty early on Android for example.",2016-03-31 16:04:00,11398162
2103,So how would I use this on Linux? I&#x27;m seeing different versions of VS to download from the official website. Only VS Code is available on Linux?! Does&#x2F;will that contain Xamarin?!,2016-03-31 16:04:00,11398163
2104,Xamarin works in F#. What are you talking about?,2016-03-31 16:04:51,11398170
2105,Seems unlikely. Xamarin supports F# and C# and is aligned 1:1 to the native platform.,2016-03-31 16:05:08,11398175
2106,"&gt; &quot;Microsoft will also be open sourcing the Xamarin SDK over the next few months.&quot; ... &quot;Included in this open sourcing is the Xamarin Forms library that provides a cross-platform toolkit for building user interfaces.&quot;<p>This is great news! For those that aren&#x27;t familiar...<p><a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms</a>",2016-03-31 16:05:23,11398178
2107,"I&#x27;d like to see a really thorough comparison of the advantages and disadvantages of React Native vs Xamarin, but I doubt there are enough people out there with in-depth experience of both to do the comparison justice.",2016-03-31 16:05:41,11398180
2108,Has the damage already been done though? Previous Xamarin pricing killed off any investment in that product&#x2F;ecosystem when the mobile game was hot,2016-03-31 16:05:49,11398182
2109,I still want a full IDE for Mac that is equivalent to VS and that is more mature than Xamarin Studio (VS Cose doesn&#x27;t count). Is rather have Visual Studio for Mac than Xamarin Studio.,2016-03-31 16:06:37,11398189
2110,"How does it compare to React Native, anyone using both? I was just starting a project with RN, will be my first React project. But I have years of C# experience, so Xamarin way would be faster.",2016-03-31 16:08:48,11398204
2111,"Now that the full runtime and, presumably, the AOT compiler are being open sourced, I wonder if someone will port them to Apple tvOS. I&#x27;m disappointed that 6 months after the first beta of tvOS, Xamarin still doesn&#x27;t support it.<p>Edit: Never mind; tvOS support has been in preview since October. I wonder why it isn&#x27;t in the stable release yet, but I guess it&#x27;s just a low priority.",2016-03-31 16:09:40,11398209
2112,"Having tried both, Xamarin has been significantly more mature environment with better libraries and better support for underlying OS than React-Native.",2016-03-31 16:10:51,11398220
2113,"Right now xamarin is offered &quot;for free&quot; in the vs2015 install but the catch is that it only allows making apps under a certain size (and no xamarin forms), still requiring the pricy offers for the full functionality.
Now the article (or perhaps even microsoft) is just vague with this whole &quot;integrated in visual studio&quot; stuff.
For all we know they could still require a license for anything that aren&#x27;t really small apps.<p>I&#x27;d like to figure out if this is going to be the case or if there will be a way for even hobbist users to do something useful with xamarin with the new stuff, there&#x27;s not enough info to know right now though",2016-03-31 16:12:45,11398233
2114,"At my previous job, mobile projects were all done in xamarin (after like 2013&#x2F;14 or so) and the developers who did those projects raved about it, often. If I were going to make a mobile app right now, I would definitely use it. However, I&#x27;m much more at home in C# than I am javascript. To each their own.",2016-03-31 16:13:50,11398240
2115,"<a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;tvos&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;tvos&#x2F;</a>",2016-03-31 16:13:50,11398241
2116,"I don&#x27;t think you can right now. It&#x27;s likely to be a community effort once the SDK will be open sourced. Then you&#x27;d have to use MonoDevelop (Xamarin Studio OSS, basically).",2016-03-31 16:16:15,11398265
2117,"It certainly killed off investment by people that had no money to invest in the first place. Which enabled Xamarin to create a base of over 500,000 of paying customers which tends to help when your business plan stretches about 5 years, to bump up the value as much as possible, before the planned sale to Microsoft.",2016-03-31 16:18:08,11398291
2118,so should you use react-native or xamarin now?<p>how much &#x27;write-once-run-everywhere&#x27; is available in xamarin vs react-native?<p>I&#x27;ve long avoided .net and c# but now I&#x27;m getting interested because these things are becoming open source.,2016-03-31 16:18:34,11398297
2119,We&#x27;ll give you a full refund. Drop a note to hello@xamarin.com.,2016-03-31 16:20:13,11398311
2120,"That&#x27;s awesome, and very fast indeed after Microsoft&#x27;s acquisition of Xamarin. Thanks to all involved, I was waiting a long time for these moves!",2016-03-31 16:20:26,11398315
2121,"RoboVM also owned by Xamarin, not sure they are making it free",2016-03-31 16:20:35,11398320
2122,That is awesome Nat! Do you have any plan open sourcing Xamarin Studio as well?,2016-03-31 16:22:20,11398330
2123,"I don&#x27;t know anything about Xamarin, but i&#x27;ve been needing to learn C# so this is really nice timing for me! Learning Rust for my local server, and C#+Xamarin for the mobile app interacting with it, exciting!",2016-03-31 16:22:36,11398335
2124,"Xamarin Studio is based on the open source MonoDevelop project already: <a href=""http:&#x2F;&#x2F;www.monodevelop.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.monodevelop.com&#x2F;</a>.",2016-03-31 16:25:20,11398364
2125,"Xamarin Studio is already, essentially, open source. It&#x27;s called &quot;MonoDevelop&quot;. Xamarin Studio is just a &quot;skin&quot; of MonoDevelop, because it just bundles 4 plugins that MD doesn&#x27;t have: Xamarin.Android, Xamarin.iOS, Xamarin.Mac, and Xamarin-Branding. If the SDKs are going to be opensourced, for sure this distinction between XamarinStudio and MonoDevelop will not hold anymore?",2016-03-31 16:25:23,11398365
2126,"VS Professional is not discontinued:  <a href=""https:&#x2F;&#x2F;www.visualstudio.com&#x2F;products&#x2F;how-to-buy-vs"" rel=""nofollow"">https:&#x2F;&#x2F;www.visualstudio.com&#x2F;products&#x2F;how-to-buy-vs</a><p>You can buy both it and Enterprise online.  Not sure why Xamarin says to contact them for a quote, except that Xamarin&#x27;s sales people really like to talk to people.",2016-03-31 16:25:45,11398368
2127,"Two obvious answers:<p>1) Use developer tools as onramps to Azure. Same reason Amazon made Lumberyard free. Yes, developers can opt for other clouds, but the effort required to do so will often seem more costly than it&#x27;s worth.<p>2) Specifically for Xamarin, if you&#x27;ve already built your iOS and Android app in .NET, in Visual Studio, and there&#x27;s little more than a recompile between you and a Windows Mobile version, why not do that too?",2016-03-31 16:25:54,11398370
2128,"The thing that makes me most excited about microsoft buying xamarin, is I have high hopes that mono + core will improve.  While libraries are being ported, there&#x27;s still a bunch of dependencies on 4.5, which I understand dnx uses mono for.  I&#x27;ve wasted several hours trying to deploy my MVC app to a linux server only to learn that the fix is to downgrade the version of mono i&#x27;m using :(",2016-03-31 16:26:04,11398372
2129,"I haven&#x27;t used Xamarin, so take this with a big grain of salt. But my understanding is that its API is similar to that of the underlying platform, meaning that it&#x27;s mostly imperative and you write and interact with views in much the same way you would in Objective-C or Java, just in a different and arguably better language (C#).<p>React Native has a different philosophy -- it intentionally abstracts away the platform APIs entirely, and unless you&#x27;re writing a native plugin you&#x27;re <i>only</i> able to access a React-centric API. This is a lot more ambitious and leads to a great developer experience when it works. Some people however feel that it&#x27;s a misguided effort and that you can&#x27;t expect to write fluid mobile applications without interacting with the platform primitives directly. The jury is still out on how well it will scale and there definitely still are pain points with both the developer experience and app performance, but many people including myself have written production apps in it and in my opinion it largely delivers on its promise.",2016-03-31 16:26:31,11398376
2130,"I don&#x27;t know. I&#x27;ve been spending some time learning React-Native, but it&#x27;s in fits and starts. There are several things that trip me up. I&#x27;ve got the basics pretty much down now, but now I&#x27;m banging my head against local storage and wrapping my head around Redux in general. It is interesting, but time consuming. And I don&#x27;t have much leisure time right now.<p>I&#x27;ve made stuff in Xamarin before, and it was a pretty smooth experience, except for needing to have separate UI code for each platform. The language and syntax never got in the way, it was more just having to look up the corresponding UI elements (especially Android, where I have less experience) and get those working from time to time. As such, I could generally code like a fiend and get tons accomplished in a short period of time.<p>That being said, I really, really like how most of the React Native code is the same, and it&#x27;s quite possible I&#x27;ll get to that point with React Native also.",2016-03-31 16:27:16,11398382
2131,"Those plugins won&#x27;t be open sourced. We&#x27;re releasing the Xamarin runtime and all the commandline tools you need to build apps, but we&#x27;re going to keep some of the IDE stuff proprietary.",2016-03-31 16:27:21,11398383
2132,I think you can still download xamarin studio.,2016-03-31 16:28:35,11398397
2133,"As someone who&#x27;s never used Mono or Xamarin, but who has played around with CoreCLR and the DNX tooling. I can&#x27;t figure out whether to start developing with Mono, or wait for CoreCLR to mature. I don&#x27;t understand the roadmap.",2016-03-31 16:28:52,11398401
2134,Xamarin Studio doesn&#x27;t run on Linux.,2016-03-31 16:30:21,11398413
2135,"I&#x27;ve made apps with Xamarin before. For UI it&#x27;s basically a very thin wrapper around existing UI code (at least pre-Xamarin Forms). I basically could take my existing native iOS knowledge, look up what they changed the function or object name to in Xamarin (usually a minor name change to be more idiomatic to C#), and set things up almost exactly the way I would have done in Objective-C code.<p>It was actually very common that if I didn&#x27;t know how to do something I&#x27;d look it up for iOS on Stack Overflow, because it was almost certainly answered there, then look up the corresponding Xamarin object&#x2F;function names.",2016-03-31 16:30:30,11398414
2136,"Correct. The Xamarin API is 1:1 aligned with the native platform. To the point that it is almost entirely generated from automatic tooling with the odd &quot;fix up&quot; here and there.<p>Xamarin Forms however is a framework that performs abstraction, in a similar vein as React Native. Xamarin Forms is built upon the Xamarin API.",2016-03-31 16:32:14,11398426
2137,"tvOS has been supported since October: <a href=""https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;52477&#x2F;xamarin-ios-9-3-preview-for-ios-9-1-tvos-9-0-and-watchos-2-0"" rel=""nofollow"">https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;52477&#x2F;xamarin-ios-9-3-...</a>",2016-03-31 16:41:03,11398493
2138,"It could be also that Xamarin didn&#x27;t want to use pricing it has no control over, e.g. what Microsoft dictates for commercial versions of Visual Studio. I assume that &quot;contact us for a quote&quot; would take you to the MS online store through their sales personnel anyway.<p>edit: typo",2016-03-31 16:41:35,11398498
2139,Then why is it excluded as an option for Xamarin.Forms or iOS&#x2F;Android projects in Studio?<p>Xamarin the framework and the editor are not the same thing.<p>And I find it ironic that official support for the framework is limited to C# only just as Windows Phone was.<p>Apparently no one wants first class mobile support to exist for any .Net languages other than C#.,2016-03-31 16:43:29,11398518
2140,"Monodevelop, which is Xamarin Studio without skin works like a charm on my GeckoLinux box and Linux Mint before that.",2016-03-31 16:44:19,11398524
2141,"The great thing about Xamarin Forms is you can use Dependency Injection [1] to access the Native features.
I started with Xamarin Forms without any pre-knowledge of iOS or Android development. I use Xamarin Forms on a daily basis and share 99% of my code.<p>[1] <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;xamarin-forms&#x2F;dependency-service&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;xamarin-forms&#x2F;dependenc...</a>",2016-03-31 16:47:41,11398550
2142,Xamarin already has tools to create Mac apps from .Net&#x2F;MonoDevelop.<p>The work has been started - it&#x27;s just a matter of time.,2016-03-31 17:13:23,11398769
2143,Exactly what I was hopping for! I have about 7 Obj-C&#x2F;Swift iOS apps but any new one will be built with C#&#x2F;Xamarin!,2016-03-31 17:17:37,11398806
2144,Not very likely since Mono is developed by Xamarin which was recently acquired by Microsoft ;),2016-03-31 17:19:18,11398825
2145,Very usable :) I use it all the time via Xamarin Studio,2016-03-31 17:19:43,11398826
2146,"Thanks for the kudos everyone! This is a very exciting day for those of us who have been working on Mono and Xamarin for many years.<p>We have some more details on our blog:
<a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-for-all&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-for-all&#x2F;</a>",2016-03-31 17:20:32,11398832
2147,"Honestly Cordova is good for beginners. It won&#x27;t fade away but look for more of a pivot to something like React Native or like Xamarin where it&#x27;ll compile to native code. Their current approach of running in a web view is great for people tranistioning from traditional web development to app development. However as I&#x27;ve experienced, once you begin adding lots of plugins, things get really hacky or incompatible with each other. That&#x27;s where Cordova platforms like Phonegap and Ionic lose out.",2016-03-31 17:24:19,11398866
2148,"Coincidentally: PacktPub, HN-famous for &#x27;quantity over quality&#x27;, is offering the e-book <i>iOS Development with Xamarin Cookbook</i> (4+ stars @ 10 reviews) as their daily free e-book for 5.5 more hours.<p><a href=""https:&#x2F;&#x2F;www.packtpub.com&#x2F;packt&#x2F;offers&#x2F;free-learning"" rel=""nofollow"">https:&#x2F;&#x2F;www.packtpub.com&#x2F;packt&#x2F;offers&#x2F;free-learning</a><p> <a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=6933716"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=6933716</a><p> <a href=""http:&#x2F;&#x2F;amzn.com&#x2F;B00KJX443C"" rel=""nofollow"">http:&#x2F;&#x2F;amzn.com&#x2F;B00KJX443C</a>",2016-03-31 17:24:38,11398871
2149,Is it on GitHub? I&#x27;ve been working with C# for a decade and will be getting into Xamarin now that it won&#x27;t cost me thousands of dollars to do so. It would be great to have some Open Source examples to look at!,2016-03-31 17:26:06,11398881
2150,They finally did it. Thank you! Literally just got approval to buy Xamarin licenses at work which was a hard sell - now we get to go and deliver the good news that it will be free after all.<p>Words cannot express how big this is for the .NET community.,2016-03-31 17:34:09,11398958
2151,"wow...just an hour ago I asked if I should use Xamarin or React Native.<p><a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;reply?id=11398297&amp;goto=threads%3Fid%3Dradicalman"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;reply?id=11398297&amp;goto=threads%...</a><p>and now this arrives...<p>basically been struggling to run nuclide in an virtualbox ubuntu image on windows.<p>This basically brings the react native to windows!!!!!!<p>I always found it pretty pissy that nuclide didn&#x27;t support windowds out of the gate and it was too much like Atom (insanely customizable but without the ability to ctrl+click on functions and variable declaration and high configurability with dependencies on 3rd party packages breaks Atom).<p>like the comment by jolux, I vastly prefer VS over Atom. In fact I might ditch Atom asides using it as a powerful Notepad.<p>man what is going on today? it&#x27;s like a blitzkrieg by Microsoft.<p>Yesterday Microsoft was still uninteresting to me because I associated with being close source, not playing nice with other open source technologies....<p>I can confidently say that my view of Microsoft has changed dramatically after release of VS, React-Native, Xamarin, and now an AWS Lambda alternative that looks much better than AWS....here&#x27;s hoping I can get some free credits from Azure to test out Azure....which equally I used to ignore but now...I&#x27;m taking a keen interest in Azure and what it has to offer over AWS...<p>It&#x27;s really interesting to see Microsoft has made a huge effort in winning developer&#x27;s hearts by opening up everything and it&#x27;s working!",2016-03-31 17:37:36,11398984
2152,"&quot;I&#x27;ve made stuff in Xamarin before, and it was a pretty smooth experience, except for needing to have separate UI code for each platform.&quot;<p>That&#x27;s what you SHOULD be doing. Trying to force the same UI on platforms with different paradigms and look and feel is a recipe for a shitty, shitty app.",2016-03-31 17:42:07,11399030
2153,"&gt;I have always regretted the fact that Java and Linux did not have anything on par with what Visual Studio provides.<p>Linux has had JetBrains IDEs for a long time now.<p>In any case, without Xamarin being ported to Linux and tied to VS, the embrace you&#x27;re talking about is shortly followed by the other two &quot;E&quot;s.",2016-03-31 17:50:31,11399083
2154,"Last I checked you were able to install the Xamarin plugins into MonoDevelop, maybe I&#x27;m wrong.",2016-03-31 17:58:31,11399145
2155,F# will likely have a native compiler soon (and you could argue it does in case you compile it for mobile using Xamarin).<p>The key difference for me is &quot;is there a polished development environment where I can get from zero to debugging within minutes&quot;.,2016-03-31 17:59:36,11399160
2156,"Yes, they rather spend developer salaries implementing IL2CPP, which is still work in progress, instead of paying for new licenses.<p>I do wonder if $developer_salaries &lt; $Xamarin_licenses, specially taken into account most of the team is on Danish salaries.",2016-03-31 18:00:25,11399169
2157,The download page there has me downloading Xamarin Studio. How do I get just MonoDevelop?,2016-03-31 18:22:02,11399340
2158,"Projects such as Ionic Framework that build upon Cordova will still remain popular becuase they appeal to front-end web developers with Javascript skills. However, Xamarin is a great fit for Windows web developers that already work with C#.",2016-03-31 18:24:02,11399354
2159,"I was learning react native, after this I will try Xamarin.
Much better to be able to use c# (that I use for work) than JavaScript.",2016-03-31 18:26:52,11399383
2160,Then best stick with Xamarin. There&#x27;s still nothing better for F# dev on Mac currently (and unfortunately).,2016-03-31 18:31:43,11399425
2161,Will Xamarin Studio be open sourced?,2016-03-31 18:49:55,11399562
2162,"The strategy is an enterprise play. MS has loss the consumer for mobile, so focusing on enterprise to take advantage of its strongest strength. Enterprise needs cloud: Azure. Enterprise needs hardware: Surface Pro&#x2F;Win10. Making it stick is the many enterprise C# developers and one developer tools for all platforms, outside or within enterprise. This will effectively counter IBM&#x2F;Apple&#x27;s Swift strategy with iOS devices for the enterprise. And keeping its enterprise customers away from AWS and Google. I&#x27;m learning React Native, MS is giving me pause to look at Xamarin. As a side note, it might be good startup idea to create a Xamarin clone that uses Swift that targets all platform. Likely acquire by Apple or IBM. Fastest way is for JetBrain to spin off one unit :-).",2016-03-31 18:57:30,11399635
2163,But Xamarin&#x27;s tools do not run on Monodevelop.,2016-03-31 18:59:03,11399654
2164,"There are some good tutorials about Xamarin Forms, e.g. <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;xamarin-forms&#x2F;getting-started&#x2F;introduction-to-xamarin-forms&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;xamarin-forms&#x2F;getting-s...</a>.<p>Xamarin Forms Labs is a great open source project for controls and services using Xamarin Forms: <a href=""https:&#x2F;&#x2F;github.com&#x2F;XLabs&#x2F;Xamarin-Forms-Labs"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;XLabs&#x2F;Xamarin-Forms-Labs</a>",2016-03-31 19:02:46,11399682
2165,"This blog post, written by mpweiher shortly after the initial public release of React Native, explains why it can&#x27;t truly be considered &quot;native&quot;:<p><a href=""http:&#x2F;&#x2F;blog.metaobject.com&#x2F;2015&#x2F;04&#x2F;reactnative-isn.html"" rel=""nofollow"">http:&#x2F;&#x2F;blog.metaobject.com&#x2F;2015&#x2F;04&#x2F;reactnative-isn.html</a><p>Xamarin is much closer to native. In particular, unless you choose to use Xamarin Forms, you&#x27;ll be using each platform&#x27;s native UI APIs, so your UI will be indistinguishable from an app written in the platform&#x27;s native language. Also, whereas React Native for iOS is restricted to using the JavaScriptCore interpreter (not even the JIT compiler), the Xamarin toolchain AOT-compiles .NET IL to native code.",2016-03-31 19:04:46,11399699
2166,"Mono was not started by Novell. Miguel originally worked on his own with volunteers on a purely open source project. Miguel later pulled the mono dev team into Novell and started a commercial development side with SuseLinux. When that partnership was desolved, Novell gave everything to Miguel and he created Xamarin.",2016-03-31 19:06:22,11399712
2167,"It&#x27;s free in your MSDN if you&#x27;re subscribed. I downloaded them all :-)<p>So if you&#x27;re a VS user already, it&#x27;s likely bundled with an MSDN subscription. Just link it to your Xamarin account and you&#x27;re done.",2016-03-31 19:19:43,11399816
2168,"What point in the game?<p>Mono now has all the benefit of recent MS open sourcings of their core libs, compiler, and several Xamarin tech -- it didn&#x27;t have all those before.<p>The license change is just an added cherry for companies.",2016-03-31 19:27:29,11399871
2169,"As a Xamarin developer for the past year, I don&#x27;t want to use Visual Studio, I want to use Xamarin Studio.<p>Visual Studio is slow and doesn&#x27;t work near as well as Xamarin Studio for many core development tasks. Not to mention, it&#x27;s completely hamstrung by its dependency on a Mac build host. VS integration needs to step up, dramatically.",2016-03-31 19:30:20,11399894
2170,"I&#x27;m leading a small team in building an ionic app right now.<p>The edge that cordova&#x2F;phonegap&#x2F;ionic will retain is the HTML and CSS part. As well as, at least for a little while, a more robust plugin ecosystem.  Though that second one will change VERY rapidly.<p>The other developers on my team are very much frontend &amp; CSS types.<p>I would be too much of a bottleneck if I were the only developer able to write the code for the app.<p>If xamarin were free when I started, I may have given it more time in evaluation, but at the end of the day, I think that the choice would have remained ionic.<p>Even react-native isn&#x27;t ready yet if you&#x27;re a windows based shop. But maybe that&#x27;s come along in the last couple  months too.",2016-03-31 19:37:01,11399944
2171,"Honestly, I think it still has its place.<p>HTML+CSS means we don&#x27;t have to retrain our web developers but can still produce work for our clients that meets their needs.<p>Personally,  I&#x27;d like to go more native and xamarin could enable that, but in consideration for the team holistically, HTML&amp;CSS&amp;js was the way to go.",2016-03-31 19:40:07,11399971
2172,"You should most definitely look at the docs for both before you decide. Unless something has changed, the Xamarin docs are pretty weak. They seem good until you do something beyond a simple todo list, then you are on your own, with few books&#x2F;resources to draw from. React on the other hand has a much more active community and thorough docs.<p>I&#x27;m not saying Xamarin won&#x27;t work for you, plenty of people seem to be productive in it. I personally have switched my focus to React and React-Native (coming from a c#&#x2F;.net background).<p>Now I just wish MS would support React as a first class citizen in Visual Studio 2015&#x2F;Community. It&#x27;s great it&#x27;s supported in Code, but lets get it supported across the entire VS family. That would rule.",2016-03-31 19:46:02,11400033
2173,"What&#x27;s the plan regarding better documentation? That&#x27;s the number one reason I&#x27;ve lost interest in Xamarin. Outwardly, esp. coming from a C# background, it seems awesome. Then you try to build something other than a todo list and you quickly find out how lacking the docs are. You might find a decent sample for Android, but then nothing for iOS, or vice verse. Forget about OS-X development, the docs are even worse when you get outside of iOS&#x2F;Android.<p>I would reconsider Xamarin if the docs improved greatly. Maybe with MS involvement this will finally happen?<p>MS at this point would be better served by integrating React and React-Native in Visual Studio 2015 and Community. I know they recently came out with support for VS Code, but that&#x27;s a different beast if you are a traditional C#&#x2F;.Net&#x2F;VS guy. From my experience with both, React is a pleasure to use, while Xamarin often had me cursing my decision to use the platform.",2016-03-31 19:54:44,11400116
2174,"Went ahead and downloaded Xamarin Studio for the Mac. Still has an &quot;Enterprise Trial&quot; button, and apparently I still have to login to activate it.<p>It annoys me to no end that I have to log in to Visual Studio as well (even Community) for it to even open a project, and I wish both Microsoft and Xamarin were more respectful of our privacy.",2016-03-31 19:58:33,11400141
2175,"Incidentally, JetBrains is starting out with Project Rider (a C# IDE).<p>I&#x27;ve been working professionally with Xamarin for the past month, honestly I&#x27;m shocked how half-baked Xamarin Studio is, both in terms of stability and features. (Since we develop for iOS, we use Macs and VS is not an option).<p>Of course now that Microsoft has stepped in all the way, things may turn around, but my feeling is that the best window of opportunity for JetBrains would be to provide compelling Xamarin tooling on non-Windows platforms. That&#x27;s the weak spot of their mammoth competitor as far as C# goes<p><a href=""https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;62250&#x2F;vote-for-project-rider-xamarin-project-support"" rel=""nofollow"">https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;62250&#x2F;vote-for-project...</a><p><a href=""https:&#x2F;&#x2F;youtrack.jetbrains.com&#x2F;oauth?state=%2Fissue%2FRIDER-618"" rel=""nofollow"">https:&#x2F;&#x2F;youtrack.jetbrains.com&#x2F;oauth?state=%2Fissue%2FRIDER-...</a>",2016-03-31 20:12:11,11400243
2176,"I work actively in Xamarin with both iOS and OSX. Documentation can be somewhat lacking, but it&#x27;s usually not too hard to figure out. Xamarin.Forms is pretty well documented, and if ever you need to dive into platform specific code, the translation from Obj-C&#x2F;Java to C# is about as straightforward as you can get. The classes have the same names, the methods take the same arguments, and if it deviates, the autocomplete provides enough info to figure out the difference. The only exception I&#x27;ve found is for Obj-C constants. It&#x27;s not always clear which class they&#x27;re buried in.<p>Overall, I&#x27;ve really enjoyed Xamarin. Development is quick and easy, you can use a lot of NuGet packages, and if you think C# first, platform specific second, it&#x27;s easy to port code between platforms.",2016-03-31 21:02:12,11400526
2177,Xamarin have some very smart people on the case.,2016-03-31 22:31:39,11401120
2178,"That&#x27;s what Xamarin.Forms (<a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms</a>) does, for iOS, Android and UWP (desktop, mobile, xbox). My preference is still to go the native UI route though. If you take an MVVM approach, you&#x27;ll naturally keep the logic in the shared code - the models and viewmodels - and you then can build views specifically for each platform and bind them on.",2016-03-31 22:59:02,11401253
2179,"I would love to start messing around with Xamarin, and I definitely plan to because of this news. However, I&#x27;m using Microsoft&#x27;s Bizspark, and I have Visual Studio Professional through MSDN. So it doesn&#x27;t appear that I can download Xamarin for free unless I go down to the Community version. Is this correct?",2016-03-31 23:16:34,11401360
2180,"&gt; This will effectively counter IBM&#x2F;Apple&#x27;s Swift strategy with iOS devices for the enterprise.<p>In a similar vein, Satya Nadella&#x27;s new &quot;vision&quot; expressed in yesterday&#x27;s keynote, aka the future of chat bots with their AI &#x2F; personal agents (channeling some of the original General Magic vision of 25 years ago), strikes me as more attainable for &quot;developers developers developers&quot; v.s. the marketing messages &#x2F; PR spin coming from IBM on the Watson AI.<p>&gt;  I&#x27;m learning React Native, MS is giving me pause to look at Xamarin.<p>Likewise. Let&#x27;s see what Facebook has to say at F8 starting April 12th. The competition is great. We are in a much better place today v.s. 20 years ago when Microsoft was a monopoly and expending time and money trying to kill Netscape and battle Sun&#x27;s lawyers over Java.",2016-04-01 00:49:41,11401784
2181,"I am currently developing a hybrid app. Where communication with backend, image manipulation, interaction with settings+security features of the platform -- are in Android Java.  While the basic data entry &#x2F; data presentation forms are in React-native.<p>I would not mind switching the Android Java side -- to Xamarin, but will I still be able to have a portion of my app in React Native?  
Are there any open source examples that use Xamarin and React-native?",2016-04-01 00:58:30,11401820
2182,"I agree with you about the documentation not being very useful, but Xamarin isn&#x27;t what&#x27;s usually referred to as &quot;hybrid&quot;. It&#x27;s fully native code, no webviews needed.",2016-04-01 02:43:44,11402189
2183,"You could have hooked a Mac up to Visual Studio for building and Deploying Xamarin apps. I used to have a Mac mini on my desk for this.<p>Here&#x27;s the instructions btw.
<a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;getting_started&#x2F;installation&#x2F;windows&#x2F;connecting-to-mac&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;getting_started&#x2F;ins...</a>",2016-04-01 03:53:27,11402449
2184,"&gt; Then why is it excluded as an option for Xamarin.Forms or iOS&#x2F;Android projects in Studio?<p>Try the preview version (6.0) where F# is enabled for those project types as well:<p><a href=""https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;53121&#x2F;preview-release-xamarin-studio-6-0-with-roslyn-support"" rel=""nofollow"">https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;53121&#x2F;preview-release-...</a>",2016-04-01 04:32:45,11402641
2185,What would be great is to be able to also run VB on xamarin,2016-04-01 06:55:30,11403149
2186,"That&#x27;s possible, true, but the company deemed it too expensive to supply everyone with two computers and then pay for VS licenses on the top of Xamarin licensing (already rather pricey)",2016-04-01 07:58:19,11403400
2187,":) The idea is that everybody works on Android and iOS alike, no specialization on the team. And the UI itself (Xamarin.Forms) takes the bulk of our development time, we&#x27;re running into so many quirks, and the cross-platform abstraction is very leaky unfortunately. So your recommendation may be good, but I don&#x27;t think it would pan out in our particular scenario. Especially since the team consists of people with no prior exposure to Xamarin (C#&#x2F;MVVM devs + me, an Android dev with some half-forgotten familiarity with C#), so we&#x27;ve been learning on the job a lot",2016-04-01 08:05:28,11403429
2188,HTTP and JSON are well catered for on .NET and Xamarin. Newtonsoft.Json is the most popular. And then HttpClient has first class support in Xamarin.<p>In terms of view models... how long is a piece of string? There are literally dozens of approaches one could take. Or you could use Xamarin.Forms which is a MVVM framework (amongst other things).,2016-04-01 09:48:11,11403762
2189,I agree with you. That&#x27;s why I prefer to use Xamarin Studio than Visual Studio.,2016-04-01 14:28:46,11404980
2190,"SiteDocs is hiring junior and senior programmers to join our REMOTE team, working on web and mobile applications for the construction industry. (SiteDocs headquarters are near Vancouver, but our dev team is spread throughout Canada and North America.)<p>We&#x27;re a growing B2B start-up with dozens of employees, thousands of users, and real revenue. Our mobile applications are built with Xamarin, and our web app is built with React, but we don&#x27;t necessarily care if you&#x27;ve worked with either before as long as you&#x27;re a good programmer who&#x27;s interested in (and reasonably good at) learning new things.<p>A job at SiteDocs means:<p>* Being responsible for your own piece of the product. We&#x27;re a relatively small team, and our product is relatively young, so the features and components you build will have a meaningful impact on our users&#x27; experiences.<p>* The opportunity to teach (for senior developers) and to learn (for junior developers). Our company values continuous learning, and as a dev team we are more than happy to hire and train programmers right out of university (or self taught, etc).<p>* Market salary. However, we&#x27;re a Canadian company and our dollar is not doing very well these days, so it is currently difficult for us to pay in markets that demand more than $100k USD. I know that&#x27;s a completely reasonable salary, but we&#x27;re just not there at the moment and don&#x27;t want to waste your time :) As a remote team, it is more feasible for us to hire people in low cost-of-living areas and paying them slightly above-market for their location.<p>If you&#x27;d like to talk, please email dave.noel@sitedocs.com with &quot;HN Hiring&quot; in the subject line.",2016-04-01 15:04:33,11405292
2191,"Mono was started by Miguel at Ximian, and most of the Mono code was owned by Ximian.  Ximian was bought by Novell and with it, all the Ximian-owned Mono code.  (I don&#x27;t remember if a CLA was required before or after Novell bought Ximian.)<p>The Novell-owned IP was either sold or licensed to Xamarin later.",2016-04-01 15:36:36,11405578
2192,"Gatecoin (<a href=""http:&#x2F;&#x2F;gatecoin.com"" rel=""nofollow"">http:&#x2F;&#x2F;gatecoin.com</a>) | Hong Kong ONSITE | Multiple Positions | Fulltime | (INTERNS also welcome, VISA sponsor)<p>We&#x27;re a regulated bitcoin&#x2F;ether(&#x2F;others) exchange in Hong Kong, with many projects in our backlog!<p>We&#x27;re looking for technical folks to fill some roles:<p>a) Devs (Frontend, Backend, Fullstack, Mobile soonish via Xamarin)<p>b) QA<p>c) SysAdmins+DBA<p>d) Security<p>e) UI&#x2F;UX&#x2F;CSS designers (Android&#x2F;iOS experience desirable too)<p>f) Hybrid roles of the above<p>We use AngularJS (moving to TypeScript) and .NET&#x2F;Mono (C#, looking at F# too), with a hybrid Linux&#x2F;Windows environment (i.e. Redis, MySQL). Get in contact to know more at andres at gatecoin dot com, using the subject &quot;Interested in Gatecoin roles&quot;.<p>We help with sponsorship&#x2F;relocation to HK.<p>Want to make a difference in the cryptocurrency space? Join like-minded people to work together and help us change the world!",2016-04-01 16:55:24,11406378
2193,"Location: Miami, FL, USA<p>Remote: No<p>Willing to relocate: Yes, even if that means paying the relocation myself<p>Technologies: Golang, NodeJS, Redis, MariaDB, MySQL, Postgres, REST, Stylus, Xamarin and quite a few others (portfolio: <a href=""http:&#x2F;&#x2F;www.theosomefactory.com&#x2F;portfolio-alternative.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.theosomefactory.com&#x2F;portfolio-alternative.html</a>)<p>Rsum&#x2F;CV: <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;patrickdappollonio"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;patrickdappollonio</a> | <a href=""https:&#x2F;&#x2F;www.github.com&#x2F;patrickdappollonio&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.github.com&#x2F;patrickdappollonio&#x2F;</a><p>Email: patrick at dappollonio dot us.",2016-04-01 17:40:32,11406792
2194,"Olo - Software Engineer, Infrastructure Automation Engineering - New York - Full Time OR Remote within the USA<p>At Olo we run an online food ordering platform used by many of the countrys largest restaurant chains, reaching millions of consumers. Olo is revolutionizing the customer experience at these restaurant chains, and we&#x27;re looking for talented engineers to join our team and help us achieve our vision.
As part of the Engineering team you will play a significant and visible role in helping us scale one of the most advanced food ordering platforms in the market. Your penchant for automating tasks enables you to remove friction from our Development and QA teams. You understand that Getting Things Done extends to the whole team as you look for ways to improve everyones efficiency. You follow the latest trends in Continuous Integration, Continuous Deployment, and Infrastructure as Code and enjoy introducing new practices and tools that improve everyones daily worklife.
You&#x27;ll work with a smart, passionate team dedicated to delivering amazing products using modern tools and technologies such as AWS, .NET 4.6, ASP.NET MVC 5, TeamCity, GitHub, Octopus Deploy, Xamarin, and heavy use of OSS.<p>Responsibilities
Automate each stage of the build-test-deploy cycle. Ensure that the Development environments run smoothly.
Manage continuous deployment of new builds to Development. Oversee our change control, configuration and release management processes.
Oversee and optimize of our continuous integration system.<p>Requirements
You have a passion for computing that extends beyond work. You have worked at a senior technical level as a developer or devops engineer. Your development experience enables you to build the tools that will make a .NET developers life easier, with a strong working knowledge of C#, .NET and SQL. Your have solid experience with Amazon Web Services infrastructure administration (EC2, S3, VPC, RDS, IAM, SQS, Route53) through the AWS CLI or SDK. You are driven to automate any manual process and adept at one or more scripting languages (e.g. PowerShell, bash, Perl, Python). You have overseen software builds and deployment on a .NET platform for at least one year. You have a strong working knowledge of source control systems (Git highly desirable), continuous integration platforms (such as TeamCity), and continuous deployment platforms, especially in support of deploying hosted, SaaS applications. You have a strong working knowledge of networking, Windows Server, Linux (CentOS and Ubuntu) and SQL Server administration.<p>Please feel free to contact me directly at johnball@olo.com",2016-04-01 18:06:59,11407067
2195,"Engineering Manager Engineering - New York, NY - Full Time<p>At Olo we develop an online food ordering platform used by many of the countrys largest restaurant chains, reaching millions of consumers. We take pride in a neat codebase with automated tests and continuous integration, and encourage new ideas, experimentation, and constant refactoring.<p>Olo is revolutionizing the customer experience at these restaurant chains, and we&#x27;re looking for a talented engineering manager to join our team and help us achieve this vision. As part of the team you will play a significant and visible role in helping us deliver an industry-leading digital ordering capability to our clients. Youll work with a passionate team dedicated to delivering amazing products using modern tools and technologies such as .NET 4.6, ASP.NET MVC 5, TeamCity, GitHub, Octopus Deploy, Redis, Xamarin, and heavy use of OSS.<p>You will manage one of Olos software engineering teams. Your primary responsibility is to ensure that your team is able to effectively deliver new product value at a steady pace. You will be responsible for hiring talented engineers and providing the needed coaching and guidance to ensure that they excel and grow. You will be a key facilitator in Agile planning, supporting business priorities and advocating engineering priorities. You will oversee a team consisting of both developers and QA engineers and will be responsible for the full software lifecycle of Agile planning through deployment.<p>This is a full-time position based in NYC.
Requirements * You have demonstrated mastery of C#, .NET, web application and object-oriented concepts in a development leadership role. * You know good code when you see it. * You understand the value of QA as a fundamental component of producing enterprise-grade commercial software. * You have at least 3 years on-the-job experience managing development teams. * You are comfortable translating business needs into workable plans, and translating business-speak to geek-speak (and vice versa). * You can articulate what it takes to build reliable, robust software systems. * You enjoy the role of coach and facilitator, and are confident in your ability to build and mentor a high performance team. * You have experience developing software iteratively under an Agile process framework. * Experience developing a multi-tenant SaaS platform<p>Please email your resume to johnball@olo.com",2016-04-01 18:09:56,11407096
2196,"SEEKING WORK - Remote only<p>I specialize in C#&#x2F;.NET. I build web applications with ASP.NET (MVC, ASP.NET Core, Web API), desktop applications with WPF or Universal Apps and I build cross-platform mobile apps with Xamarin.<p>Linkedin: <a href=""https:&#x2F;&#x2F;nl.linkedin.com&#x2F;in&#x2F;leoncullens"" rel=""nofollow"">https:&#x2F;&#x2F;nl.linkedin.com&#x2F;in&#x2F;leoncullens</a><p>Email: leoncullens at gmail.com",2016-04-01 18:53:26,11407509
2197,"I have a foot in both communities.<p>Around 10 years ago, developing Java enterprise desktop applications was a mix of pure Swing, SWT, Eclipse RCP and Netbeans Platform.<p>Nowadays, just speaking from our customer projects, it is .NET for Windows only applications and Web for everything else.<p>The only place where Java based UIs still matters are on Android.<p>And on mobile OS, thanks to Oracle not caring about iOS and Windows Phone, C++ and C# are the languages to go for portable native apps. With Xamarin being made available for free, this will increase C# (including F#) usage for such applications.<p>Currently .NET Core lacks a story for portable UI framework, but if it gets one, it might win some adoption outside Windows for desktop apps, at least more than Java, as JavaFX doesn&#x27;t seem to be wining much mind-share.<p>Another advantage of .NET Core is that Microsoft is having AOT compilation for free, while on Java world the best AOT compilers are commercial.<p>However for server side UNIX applications, mainframes and embedded devices, there Java might still rule, specially thanks to the existing developer base.<p>Also pure speculation from my part.",2016-04-01 21:39:53,11408812
2198,It will be interesting to see what happens to RoboVM  (because it acquired by Xamarin)?,2016-04-02 06:05:18,11410454
2199,"A shame :(<p>I wonder what your thougts are on this - personally ofc. - you probably thought about it at some point given your work on moonlight and xamarin. Even the MS implementation was ported to osx, you could strip codec&#x2F;DRM stuff - you could get a fully featured GUI toolkit native to .NET - a <i>lot</i> of work went in to that before Microsoft pulled the plug - now that it&#x27;s laying dead and new MS OSS trend it doesn&#x27;t seem that far fetched that they could OSS it.",2016-04-02 15:39:36,11411886
2200,"Go is probably one of the least interesting languages released lately IMO, certainly when you compare it to Rust (and I don&#x27;t know a whole lot about Julia), and yet the amount of attention it has gotten is pretty huge.<p>So I think MS is just as capable of throwing new shiny things at developers as anyone else. Typescript and free Xamarin are recent examples.",2016-04-03 13:32:42,11416038
2201,"Personally I do Windows, Android and iOS. Xamarin allows me to use and share C# code for all 3.",2016-04-04 09:09:48,11420371
2202,"I&#x27;m a web dev working with C# and like other people in this thread I&#x27;ve felt the need to learn something mobile. I looked at React Native, Ionic, and native Android, but I still haven&#x27;t taken the leap into concentrating on something in particular. With the recent developments with Xamarin, I think that might be the direction I take. I really hope Xamarin can gain a lot of momentum and popularity.",2016-04-04 12:44:25,11421405
2203,"I&#x27;m current working at a IT services company in the Netherlands as a consultant for everything Microsoft for 3 years after graduating with honours from a local university. I&#x27;m mainly specialized in the Microsoft Web stack and Xamarin: got my MCSD&#x27;s for Azure, Web Applications and I am a certified Xamarin developer. This means I know my way in full-stack architecture, DevOps, ASP.NET MVC, but also stuff like PHP, Angular, React and D3 aren&#x27;t unfamiliar to me.<p>My consulting job takes 50h&#x2F;week (with traffic), I moonlight another 24 hours a week as a freelancer, honing my skills as broadly as I can. As long as I learn something (and the pay is reasonable) I&#x27;m up. I&#x27;ve always been driven by passion and ambition, and by the need to do something new (preferably impossible at the time of saying &#x27;yes&#x27;), and I&#x27;m thinking about applying for a remote worker position because my consulting job no longer triggers my passion and amibition....<p>I&#x27;ve been doing lots of jobs on the side, learning new technologies as they appeared, and that makes me think a &#x27;remote&#x27; job as a worker for one of the &quot;who&#x27;s hiring&quot; companies would be a good bet. Something new every day, being pushed to the limit by your teammates, working as a whole to crank out those awesome features for clients every day. I think I can be a a great asset with my knowledge (I&#x27;m full stack after all), allbeit knowledge of another stack (MS). Obviously I would only choose a startup if a) they would have me and b) I believe in the product (-:<p>I&#x27;d love for some of the readers to share their experiences with working for a startup (especially remotely). Some questions out the of the top of my mind are:<p>- Would you want to go back to your previous job? What if they paid you double?<p>- Working for a startup means putting in a lot more than the regular 40 hours &#x2F; week we&#x27;re used to in Europe. Is this hard on you? Does this affect your social life much?<p>- What are some of the downsides to working for a startup?<p>- Did you find your passion?",2016-04-04 19:53:01,11424935
2204,"Location: New York<p>Remote: Yes<p>Willing to relocate: Possibly<p>Technologies: Javascript (Node, ES6), PHP, Ruby, HTML, CSS (SASS, Less), C# (Xamarin)<p>Rsum&#x2F;CV: <a href=""https:&#x2F;&#x2F;camray.github.io&#x2F;resume.pdf"" rel=""nofollow"">https:&#x2F;&#x2F;camray.github.io&#x2F;resume.pdf</a><p>GitHub: <a href=""https:&#x2F;&#x2F;github.com&#x2F;camray"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;camray</a><p>Email: cameron[at]cameronray[dot]net<p>Hi, I&#x27;m currently seeking work around the NYC area, currently based in Brooklyn. I&#x27;ve previously done a lot of Javascript, PHP, Ruby, and mobile iOS (Xamarin) work. Very interested in new technologies and solving problems.",2016-04-07 17:35:48,11449041
2205,"Not a moment too soon, especially considering I would probably save time using Xamarin in VS from start to end now.",2016-04-07 18:36:49,11449499
2206,"Does anyone know how that compares to the Xamarin Player? <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;android-player"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;android-player</a>",2016-04-07 19:38:03,11449998
2207,"My first thought. Then looking at what Microsoft is doing by offering compelling tool for cross platform development, then there is a possibility that Google is working to offer its own Xamarin like solution. Can only dream it will be one single GUI API for developing apps for Android, iOS, Windows, WebAssembly and Linux desktops using Swift. If Google has this cross platform GUI API, then many are likely to abandon Cocoa API. Google probably sees API as platform and not language.",2016-04-09 09:19:17,11460599
2208,"I recently came across this situation when attempting to hack on Keepass2Android [0], a Keepass client for Android. It was written with Xamarin, which was a closed-source framework at the time. Having to download and use software with a 30-day trial to hack on an open-source project seemed wrong.<p>Now that the Xamarin SDK is open-source[1] it looks like it&#x27;s moving towards being freed, which I think is a good thing. That said, I&#x27;m not sure the IDE is available on Linux yet, so I guess it&#x27;s still relying on non-free software.<p>[0] <a href=""https:&#x2F;&#x2F;keepass2android.codeplex.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;keepass2android.codeplex.com&#x2F;</a><p>[1] <a href=""http:&#x2F;&#x2F;arstechnica.com&#x2F;information-technology&#x2F;2016&#x2F;03&#x2F;xamarin-now-free-in-visual-studio&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;arstechnica.com&#x2F;information-technology&#x2F;2016&#x2F;03&#x2F;xamari...</a>",2016-04-10 03:13:26,11464700
2209,"Too late. They had since 5.0 to make it properly.<p>Now Xamarin is free to indies and they use native controls, not themes that look somehow like native.",2016-04-11 05:21:47,11469784
2210,"I can&#x27;t believe you don&#x27;t see the evil.  Open your eyes.  Just because a company pays 400 million for Xamarin and then open sources the Xamarin SDKs for Android, iOS, and Mac shouldn&#x27;t fool you.  People everywhere... revolt!<p>If you can&#x27;t tell, I am being sarcastic.  I love Microsoft.  People just believe what they want to believe.  I&#x27;m sure they will never change.",2016-04-12 14:38:22,11479933
2211,"Las3r, we are a startup on the MS&#x2F;Xamarin stack, let&#x27;s get in touch. You can reach me at bogdan_at_teravive_com",2016-04-13 18:24:03,11490837
2212,"Cordova, Xamarin and React Native...oh my! Which one are you all going to choose?",2016-04-13 22:21:09,11492805
2213,"Well, Corvoda and Xamarin are only for mobile apps. If React Native begins officially supporting desktop platforms, it&#x27;ll be the only (popular) framework of its kind.",2016-04-14 00:05:19,11493377
2214,"Xamarin does OSX apps as well, Not sure about Linux",2016-04-14 14:09:52,11496815
2215,"Cordova and Xamarin both give you desktop reach on Windows through the UWP. You may be using the UWP to target mobile first and may not think to test for desktop, but both give you that option to expand into desktop.<p>You can somewhat easily rehost a Cordova app in Electron for desktop reach on Mac and Linux (and even Windows if you prefer Electron to the UWP for some reason).<p>There already are Xamarin Framework bindings for the Mac and you shouldn&#x27;t have too hard of a time to use existing Gtk# resources to target Linux. Now that Xamarin Forms is true open source maybe someone will have more incentive to build a good XAML binding and Xamarin Forms implementation for Gtk# (or some other Linux UI toolkit for that matter).<p>tl;dr: Lots of options! Yay!",2016-04-14 15:09:20,11497304
2216,Xamarin is Monodevelop (plus some mobile and Mac stuff). Apparently monodevelop can be used to build apps for Linux using GTK#,2016-04-14 15:50:31,11497669
2217,"Create both Android and iOS apps using Java. It&#x27;s similar to Xamarin, which uses C# instead.",2016-04-15 13:00:23,11503899
2218,"I agree, a little healthy competition is a good thing. Xamarin being the only player (afaik) in town is an odd thing, maybe a result of Xamarin open sourcing a decision they couldn&#x27;t afford to compete against possibly?<p>Edit: Forgot Xamarin technically owns RoboVM, maybe Microsoft wants to avoid any legal issues with Oracle.",2016-04-15 13:10:06,11503945
2219,"So Xamarin buys RoboVM, then a couple of months later MS buys Xamarin and kills RoboVM. Feels like the MS of the 90&#x27;s is back.",2016-04-15 13:10:24,11503947
2220,"However by doing that, Microsoft protects Xamarin from competition.",2016-04-15 13:14:31,11503979
2221,"Absolutely. I&#x27;d love to see the &quot;new Microsoft&quot; step up and say &quot;Under our stewardship, one of our acquisitions has abandoned a vital and heavily relied upon product. We&#x27;re going to give it back to the community to ensure that it&#x27;ll live on past Xamarin&#x27;s ownership&quot;.<p>I doubt this is just RoboVM unilaterally making this decision. They&#x27;re offering a full refund to all license holders - some decision maker somewhere is paying for this (be in Xamarin or Microsoft).",2016-04-15 13:46:51,11504222
2222,"Then I guess you didn&#x27;t click on the documentation link at the top of the roboVM page.<p><i>Why RoboVM?
We love mobile. We love the Java ecosystem. If you feel like we do, you will love RoboVM:<p>Create truly native mobile apps for iOS and Android.
Use libraries, tools and languages from the vast Java ecosystem.
Share code between platforms.</i><p>It seems to be an alternative to xamarin focused on Java or at least the JVM.",2016-04-15 14:00:43,11504311
2223,"On the other hand, after what happened the last time they used Java (back in the &quot;embrace, extend, extinguish&quot; days), I think they wouldn&#x27;t touch it with a 10-foot pole.<p>Though I do hope that they&#x27;ll make the sources available. It&#x27;s not like just a code dump will suddenly transform into viable competition for Xamarin.",2016-04-15 14:03:56,11504337
2224,"Exactly.  I think we should wait until they shut down Xamarin before we get out the pitchforks.  The simplest explanation is that they want to focus all of their cross-platform development resources on the core product that they acquired, and it sounds like Microsoft is very invested in Xamarin&#x27;s future.",2016-04-15 14:09:48,11504382
2225,"&gt; I doubt this is just RoboVM unilaterally making this decision.<p>While they likely didn&#x27;t make the decision to close up shop, RoboVM did unilaterally make the decision to close source the code 7 months ago.  Additionally, they did make the decision to sell to Xamarin.  They indicated that very few people contributed to the open source project, and with it being open source it was difficult, if not impossible, for them to make money as a business.<p>I understand that people want to make Microsoft the bad guy, but in this case RoboVM sealed this fate themselves a while back, and from their point of view they didn&#x27;t really have a choice if they wanted to make any money.<p>As another comment pointed out, the old open source repository is still available on github as of now.",2016-04-15 14:22:44,11504498
2226,"It happens all the time, companies unload unwanted or unaligned assets to focus on their roadmap and strategies. RoboVM should pick a page from Xamarin and buy out IP and support from mothership.",2016-04-15 14:26:51,11504543
2227,"Yes. I had experience with Scala which is another ML dialect, and that helped.<p>The more you end up using external libraries, the more you&#x27;ll have to understand interop between F# and C#. That sort of thing bit me with Xamarin in the past, but it looks like it is getting better (I hope!).",2016-04-15 14:41:12,11504674
2228,"I&#x27;d say yes if you have exposure to Java library &amp; ecosystem, because .NET Framework&#x27;s Library has a similar flavor to Java Standard Library.<p>There are also a bunch of F# centric projects (<a href=""http:&#x2F;&#x2F;fsprojects.github.io&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;fsprojects.github.io&#x2F;</a>) which might help you to stay in mostly functional programming land and not mingle too much with OOP.<p>The main difficulty is to get runtime working well, I think Mono has come a long way and is now well packaged and stable enough to get a good experience of the language, thanks to Xamarin who really invested a lot of efforts.<p>Microsoft is allegedly working on its open source implementation of .NET Framework and runtime, which just landed official F# support, but I think right now the experience and eco-system support has catch-up to do with what can be done with Mono.<p>Hope this helps!",2016-04-15 15:09:28,11504926
2229,"That the majority didn&#x27;t want to support with money, hence why they accepted Xamarin&#x27;s offer back then.",2016-04-15 15:29:28,11505081
2230,"I can&#x27;t blame Microsoft much, when they&#x27;ve open-sourced Xamarin and are doing good things with .NET Core, plus they aren&#x27;t the ones to blame.<p>The writing was on the wall ever since RoboVM was closed sourced, right before Xamarin bought them. I was one of the pessimists here. Basically any project that goes from open-source to close source is as good as dead, unless forked. And whenever you see such projects, <i>you should run</i>. Because the most interesting aspect of any open source project is its open source nature. And a bait and switch doesn&#x27;t work so well.<p>That said, RoboVM was open-source before October 2015 and the most interesting aspect of open source is the ability to fork the project. A fork of RoboVM can still happen, the code from before October 2015 should still be there somewhere, I just hope the license is permissive enough. And if a fork doesn&#x27;t happen, it only means that the project doesn&#x27;t have enough interest and so it probably should wither away.",2016-04-15 15:30:21,11505089
2231,"Xamarin is not the only game in town, if one is doing game apps.<p>Assuming one is ok with a little dosis of JNI pain on Android, given that C++ is a first class language in iOS (via Objective-C++) and Windows (C++&#x2F;CX and or via WRL).",2016-04-15 16:07:01,11505366
2232,"While not really a replacement, there&#x27;s always j2objc. On the downside, it doesn&#x27;t provide APIs, it just translates Java to Objective-C source. On the upside, it&#x27;s straightforward, fast, and can be integrated with Objective-C&#x2F;Swift code easily via a GWT-like JSNI mechanism. Some people have wired it up to libGDX and PlayN to provide a layer for writing games.<p>I will say that as soon as Xamarin bought RoboVM my heart sank. I had a feeling Microsoft was going to buy Xamarin, it made perfect sense to do so, the only other choice would have been to buy Unity (which they could still do) And of course, if MS bought Xamarin, there would be no point in maintaining both a C# and Java product.",2016-04-15 16:18:09,11505467
2233,That&#x27;s JNI pain + C++ pain (this is coming from a guy who just did a C++ project full time for &gt;year - C# and C++ aren&#x27;t in the same league when it comes to productivity) - and C++ has no access to android java api - xamarin is just a whole different kind of solution to this - you can literally have all code in one language across all platforms - C++ can&#x27;t do this without a custom UI like QT,2016-04-15 17:36:26,11506163
2234,"What you are forgetting is that some guys at Xamarin already went through that pain for their customers.<p>And if there is the need to use something that they have yet to wrap, there isn&#x27;t any difference between C# and C++.<p>Also in Android there is the additional pain of synchronising the .NET and JAVA GCs.<p>C++ is a good language, except for the warts introduced due to C copy-paste compatibility.",2016-04-15 18:20:50,11506484
2235,"If RoboVM isn&#x27;t revenue-positive, what&#x27;s Microsoft to do? Xamarin bought RoboVM, presumably hoping that there were synergies there. Then Microsoft bought Xamarin, and Xamarin&#x27;s business-model changed, and those synergies may not be there anymore. At that point, you can make a case for RoboVM to operate independently if RoboVM pays for itself. But the decision to take RoboVM closed-source and increase what they charge indicates that maybe RoboVM couldn&#x27;t and can&#x27;t self-sustain.",2016-04-15 20:04:21,11507226
2236,"C++ is a straight-up awesome language, on that you and I fully agree. And I have <i>been there</i> with regards to the teeth-pulling pain of Xamarin projects when you want to do something nontrivial. So it kind of pains me to disagree with you, but I do. C++ is awesome. I love it. But I also recognize that I barely trust myself to write it, after ten years or so of exposure and a few years of steady writing it. I don&#x27;t trust off-the-rack mobile developers to write it safely and correctly. To that end, something like Xamarin or the RIP&#x27;d RoboVM provide a significant benefit: by offering the kind of guardrails that C++ can&#x27;t, they do significantly improve the ability of people who don&#x27;t eat and breathe this stuff to get something out the door. (Whether or not that&#x27;s a desirable trait...reasonable people can differ. But it is in demand.)<p>Sure, Xamarin has done a lot of that work--but that&#x27;s also kind of the point in the first place.",2016-04-16 07:35:28,11509699
2237,"Don&#x27;t get me wrong, I would like that more type safe languages were available for native cross platform development and I am getting myself deeper in Xamarin.<p>However one thing that my likeness for Turbo Pascal and Oberon teached me was that making applications with languages which aren&#x27;t first class on the platform SDKs opens the door to situations like these.<p>So I rather be more pragmatic, even if it goes a bit against to my preferences and keep my code free of company politics, which may lead to porting the application to other languages.",2016-04-16 09:40:28,11509958
2238,"The only reason Xamarin bought RoboVM was to get a better deal from MS, it was used to flag to Oracle we are into Java and probably cause to MS to sign the deal before Oracle gets into the Picture.
It is just a shame the community is the biggest loser in this scenario. The RoboVM guys should have probably see this coming but who can blame them for earning some dollars on this deal.",2016-04-16 12:26:33,11510320
2239,"I&#x27;ve tried a couple cross platform frameworks (mostly Xamarin and PhoneGap&#x2F;Cordova) and am aware of some challenges there.<p>To me, Xamarin is like programming for each platform, just in C# and with another layer of bugs (and weirdness, I would say, and don&#x27;t even mention Xamarin Forms). Of course, you get the possibility to share BL in a common layer, but pay for it in terms of instability and complexity to get stuff working native-like. Good for trivial GUI, BL-heavy apps I guess, but not for complex GUI, little shared BL apps.<p>PhoneGap&#x2F;Cordova has some serious complications when it comes to predictable rendering due to the plethora of possible rendering engines you may encounter. Any non-trivial layout&#x2F;styling can be completely messed up on different platforms, or even different versions of the same platform. Also it can be a challenge to achieve native performance and feel.<p>How would you say React Native compares?<p>It seems it could be more able to adapt to the platform compared to PhoneGap&#x2F;Cordova, and easier (perhaps) to work with than Xamarin.<p>I&#x27;m considering using it in an upcoming project where both Android and iOS are required, and given my lack of iOS-experience, it seems like a good alternative.",2016-04-18 08:52:39,11518531
2240,"Full-time .NET developer (doing all sorts of freelance jobs; ASP.NET, Xamarin, etc.). I think you&#x27;ll find that if you look outside the silicon valley bubble, C# and Java are actually dominating the market and you won&#x27;t get very far trying to find a Haskell&#x2F;Rust&#x2F;Go job.",2016-04-18 13:16:34,11519639
2241,"There is some traction with being able to use Swift for android development.  Then why bother with xamarin at that point :)<p>Port to android in swift code base:
<a href=""https:&#x2F;&#x2F;github.com&#x2F;apple&#x2F;swift&#x2F;pull&#x2F;1442"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;apple&#x2F;swift&#x2F;pull&#x2F;1442</a>",2016-04-18 17:58:46,11521853
2242,"C# every day for 2.5 years.<p>I build Windows, iOS and Android (Xamarin).",2016-04-18 22:24:44,11523560
2243,"Could be they never received as many (or many) potential customers.<p>There have been a few services&#x2F;apps I was looking to use but had to turn down after talking to them because they didn&#x27;t support Linux (Xamarin, Codename One, etc.) They all said they didn&#x27;t receive as many requests for Linux as they did for Mac or Windows. I guess this would be similar.",2016-04-21 15:13:00,11542744
2244,"Raizlabs |Oakland | Full Time 
Do more than code!!! 
Raizlabs is seeking Android mobile developers to help engineer beautiful apps and influence product direction for startups and big brands like Bloomingdales, Localytics, RunKeeper, Rue La La, Care.com, and HubSpot.
Youll be working with enthusiastic and supportive peers in a trust-based work environment. 
Join us and contribute to the &quot;next big thing&quot; for years to come.<p>Skills &amp; Requirements
Were looking for seasoned native Android (Xamarin.Android also acceptable) mobile developers who have shipped apps. You should understand Android inside and out and take pride in your craft. Have experience in architecting custom UIs and the ability to communicate with RESTful backends.<p>- Full coverage of health and dental insurance premiums for full time employees.
- 401(k) retirement plan with company match.
- Trust-based vacation policy (take what you need).
- Continuing education assistance.
- Weekly, catered team meals<p>Feel free to reach out to me directly...
greg.clark@raizlabs.com",2016-04-26 17:42:29,11573969
2245,"Indeed, I don&#x27;t have a good understanding of the JVM ecosystem. However:<p>Google is tentatively on the hook for $9B for... essentially implementing its own JVM... or something. Doesn&#x27;t matter to me, end result is that the future of Java on Android is far from clear. They&#x27;re allegedly looking into using Swift as the next generation Android language.<p>RoboVM, one of the better &#x2F; more popular ways to write iOS apps in Java was close-sourced, then acquired by Xamarin, then Microsoft, then shut down.<p>Oracle charges licensing fees for using JVM in embedded devices and kiosks.<p>To summarize, there&#x27;s an incredible amount of tools and libraries for Java, but I don&#x27;t like where Java&#x27;s mobile story is going in general.<p>As far as I know the number of viable JVM machines you could build a business on is maybe... 5 at most? They&#x27;re all experimental and&#x2F;or abandoned.<p>Meanwhile, node &#x2F; JS &#x2F; ASM.js &#x2F; Emscripten and friends are only getting better, faster and more widespread outside of the web.",2016-04-26 23:10:38,11576518
2246,"If Xamarin is open sourced and RoboVM is dropped, I can only speculate that Microsoft did not want to touch JVM with a 10-foot pole and chose to not entertain Oracle legal. May be I am wrong, but that is one possibility.",2016-04-27 14:57:32,11580944
2247,"Why would Microsoft open source a direct competitor to the Xamarin .NET platform?<p>The best option you&#x27;re likely to get is to build on top of the older open-source RoboVM release:<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;robovm&#x2F;robovm"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;robovm&#x2F;robovm</a>",2016-04-27 14:58:00,11580950
2248,"It has been super exciting watching this all unfold over the last year, for those wondering where to get started in the new world of .NET open source - start here:<p>.NET CLR Managed Runtime - <a href=""https:&#x2F;&#x2F;gitter.im&#x2F;dotnet&#x2F;coreclr"" rel=""nofollow"">https:&#x2F;&#x2F;gitter.im&#x2F;dotnet&#x2F;coreclr</a><p>.NET Framework - <a href=""https:&#x2F;&#x2F;gitter.im&#x2F;dotnet&#x2F;corefx"" rel=""nofollow"">https:&#x2F;&#x2F;gitter.im&#x2F;dotnet&#x2F;corefx</a><p>.NET Compiler as a Service (&quot;Roslyn&quot;) - <a href=""https:&#x2F;&#x2F;gitter.im&#x2F;dotnet&#x2F;roslyn"" rel=""nofollow"">https:&#x2F;&#x2F;gitter.im&#x2F;dotnet&#x2F;roslyn</a><p>.NET Orleans Actor Framework - <a href=""https:&#x2F;&#x2F;gitter.im&#x2F;dotnet&#x2F;orleans"" rel=""nofollow"">https:&#x2F;&#x2F;gitter.im&#x2F;dotnet&#x2F;orleans</a><p>Mono Framework - <a href=""https:&#x2F;&#x2F;gitter.im&#x2F;mono&#x2F;mono"" rel=""nofollow"">https:&#x2F;&#x2F;gitter.im&#x2F;mono&#x2F;mono</a><p>Xamarin iOS, Watch, Mac Bindings and Framework - <a href=""https:&#x2F;&#x2F;gitter.im&#x2F;xamarin&#x2F;xamarin-macios"" rel=""nofollow"">https:&#x2F;&#x2F;gitter.im&#x2F;xamarin&#x2F;xamarin-macios</a><p>Xamarin Android Bindings and Framework - <a href=""https:&#x2F;&#x2F;gitter.im&#x2F;xamarin&#x2F;xamarin-android"" rel=""nofollow"">https:&#x2F;&#x2F;gitter.im&#x2F;xamarin&#x2F;xamarin-android</a><p>Everything is licensed under the MIT license w&#x2F;patent pledges.",2016-04-27 15:17:30,11581140
2249,Crazy seeing those Novell copyrights in the headers! I totally forgot about them and their relationship to Xamarin.,2016-04-27 15:36:47,11581339
2250,"Ok, so is there anything NOT being open sourced?<p>Is everything needed to actually be able to use it productively open source now?<p>Is Xamarin Studio open source?",2016-04-27 15:43:14,11581419
2251,"Depends on how you learn. Some learn by being around others, social interaction, asking questions and absorbing knowledge. It&#x27;s clear you fall into the latter category which likes to learn by diving right into the code, so here it is:<p>.NET CLR Managed Runtime - <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;coreclr"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;coreclr</a><p>.NET Framework - <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;corefx"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;corefx</a><p>.NET Compiler as a Service (&quot;Roslyn&quot;) - <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;roslyn"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;roslyn</a><p>.NET Orleans Actor Framework - <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;orleans"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;orleans</a><p>Mono Framework - <a href=""https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;mono"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;mono</a><p>Xamarin iOS, Watch, Mac Bindings and Framework - 
<a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-macios"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-macios</a><p>Xamarin Android Bindings and Framework - <a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-android"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-android</a>",2016-04-27 15:54:21,11581556
2252,"No, Xamarin Studio is not getting open sourced.<p>For more details, you can listen to this podcast from  founders of Xamarin - <a href=""http:&#x2F;&#x2F;www.dotnetrocks.com&#x2F;?show=1276"" rel=""nofollow"">http:&#x2F;&#x2F;www.dotnetrocks.com&#x2F;?show=1276</a>",2016-04-27 15:59:55,11581618
2253,"This is great news!<p>Last time I used it (more than a year ago) it was still felt quite buggy. That being said, has anyone successfully used Xamarin or have an example of a large and successful app built with it?",2016-04-27 16:01:03,11581625
2254,"Slack and GitHub are mentioned on their customers page.<p>There&#x27;s a list with some more companies here: <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers</a>",2016-04-27 16:59:10,11582230
2255,I believe you can code in xamarin (for free) using visual studio 2015,2016-04-27 17:04:00,11582277
2256,"With Xamarin, you can use it with both Xamarin Studio and Visual Studio. I believe XS is free now and you can get VS Community for free too.",2016-04-27 17:11:32,11582333
2257,I am also curious. Does anyone know of any good apps done with Xamarin?,2016-04-27 17:17:28,11582389
2258,"Of course, you can use it. Tools are under products at <a href=""http:&#x2F;&#x2F;open.xamarin.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;open.xamarin.com&#x2F;</a><p>Microsoft has not open sourced Visual studio (VS) so similarly they will not open source Xamarin. You can also use .net framework without using VS. Just use command line tools",2016-04-27 17:43:45,11582662
2259,"First thought: Xamarin is now open sourcegreat!<p>Second thought: Every time I looked into Xamarin (and I do this every 6 months) there was a lack of killer apps created with Xamarin on both iOS and Android, users&#x27; experiences with Xamarin were either rare or negative and in total the community felt non-existent<p>Third thought: Ok got it, they open source to get PR, build a community; I hope that helps and it&#x27;s not their last resort<p>So, <i>is</i> Xamarin really a viable solution?",2016-04-27 17:49:03,11582720
2260,Is linux support for xamarin.android planned?,2016-04-27 17:49:46,11582736
2261,"Now my only remaining qualm with Xamarin is this: Having two garbage-collected environments interacting within the same program, as is the case with Xamarin on Android, just seems pathologically complex. Does anyone have enough experience with Xamarin on Android to know if this is ever a problem in practice?<p>Edit: I wonder if the Xamarin.Android developers ever considered compiling CIL to JVM bytecode (which would then be compiled to Dex bytecode), then reimplementing mscorlib on top of the Java standard libraries. So basically, IKVM.NET in reverse. Then there&#x27;d be no bridging between two environments.",2016-04-27 17:55:00,11582806
2262,"Yep, I&#x27;ve thoroughly studied RemObjects Elements and seriously considered using it. But it doesn&#x27;t have nearly as big a standard library or surrounding ecosystem as .NET and Xamarin.",2016-04-27 18:02:27,11582889
2263,"That list is somewhat misleading. Slack, for instance, only uses Xamarin Test Cloud.",2016-04-27 18:21:48,11583084
2264,"As an aside, has anyone here created a Xamarin android app using material design? I was recently trying to integrate their component for the design support library, but it seemed horribly buggy.",2016-04-27 18:22:54,11583099
2265,"I&#x27;m not sure how credible this is but there might be comming something.
<a href=""https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;programmerchat&#x2F;comments&#x2F;4dxpcp&#x2F;i_am_miguel_de_icaza_i_started_xamarin_mono_gnome&#x2F;d1vdfwz"" rel=""nofollow"">https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;programmerchat&#x2F;comments&#x2F;4dxpcp&#x2F;i_am...</a>",2016-04-27 18:30:11,11583195
2266,"&gt; they open source to get PR, build a community; I hope that helps and it&#x27;s not their last resort<p>It&#x27;s not that: Microsoft acquired Xamarin earlier this year [1].<p>Xamarin is also holding a conference [2] right now, so I suspect this announcement is part of that.<p>Edit: Yes, it was. [3]<p>[1] <a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=11169215"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=11169215</a><p>[2] <a href=""https:&#x2F;&#x2F;evolve.xamarin.com&#x2F;live"" rel=""nofollow"">https:&#x2F;&#x2F;evolve.xamarin.com&#x2F;live</a><p>[3] <a href=""https:&#x2F;&#x2F;adtmag.com&#x2F;articles&#x2F;2016&#x2F;04&#x2F;27&#x2F;xamarin-evolve-16.aspx"" rel=""nofollow"">https:&#x2F;&#x2F;adtmag.com&#x2F;articles&#x2F;2016&#x2F;04&#x2F;27&#x2F;xamarin-evolve-16.asp...</a>",2016-04-27 19:04:46,11583538
2267,"That&#x27;s an unhelpful answer and misleading.<p>React native has a <i>LOT</i> of attention. It has a lot of support. <i>BUT</i> as of this writing if you are developing in corporate IT (meaning possibly running windows 7 systems) you actually <i>CANNOT</i> run react-native tools on windows easily.<p>I&#x27;m currently building an ionic project because I needed a cross-plat mobile app and work with a mix of OSX and windows 7 machines.<p>Now that said, windows 10 systems with the ubuntu emulator should be able to emulate all the calls you need to run react native on windows machines.<p><i>HOWEVER</i> windows 10 bash has not yet implemented all 350 linux system calls (<a href=""https:&#x2F;&#x2F;wpdev.uservoice.com&#x2F;forums&#x2F;266908-command-prompt-console-bash-on-ubuntu-on-windo"" rel=""nofollow"">https:&#x2F;&#x2F;wpdev.uservoice.com&#x2F;forums&#x2F;266908-command-prompt-con...</a>) and there is no guarantee that is bug free.<p>I&#x27;d hate to be 2 months into development to find there are deep internals that block me from using a critical feature.<p>None of this is to say Xamarin doesn&#x27;t have its own baggage.  The reason I web with cordova&#x2F;ionic was for the good of the other developers on my team (html+css+javascript over C#) and, at the time, the additional cost of the Xamarin licenses.<p>I would have given XAMARIN a much closer look if it were bundled with a Visual Studio license, and all things considered, if I were looking today, it might beat out React Native.<p>That said, I <i>do</i> agree that react-native <i>MAY</i> be the way forward in the next generation, but, Xamarin does have more than enough upside to make it a reasonable contender.",2016-04-27 19:08:10,11583565
2268,"Recording and playing back input events, at least, shouldn&#x27;t be that expensive unless you&#x27;re emulating the entire stack up to the application. If the logic is written in some portable manner (Xamarin [1], etc.) you could just re-execute on the server with the same logic as the client. It requires a fair amount of discipline to keep everything deterministic, too. The real difficulty would be identifying the AI players from the humans; you&#x27;d basically have to recreate re-captcha&#x27;s humanity checkbox, and that&#x27;s still not a guarantee.<p>Or, identify that your business need is just to provide &#x27;some&#x27; sort of ranking and compare the user against their Facebook&#x2F;G+&#x2F;Twitter friends, who are probably less likely to cheat.<p>[1]: <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a>",2016-04-27 20:09:20,11584086
2269,"tl;dr. The success of Unity can&#x27;t be used as an indicator that cross-platform frameworks are good for productivity&#x2F;utility apps.<p>Xamarin and Unity don&#x27;t have anything in common, other than the fact that Unity uses C# for scripting (on an ancient runtime).<p>Cross-platform app development frameworks are generally awful because they don&#x27;t tightly integrate with the native look and feel of every platform. Video games don&#x27;t even try to achieve native looks on any platforms. They&#x27;re always full screen works of art, without any hint of a UIButton (iOS) or TextView (Android).",2016-04-27 21:12:44,11584610
2270,"Of course Xamarin was built on top of earlier Open Source work in MonoMac, you still could do OS X applications without actually paying for Xamarin but it wasn&#x27;t as easy as using Xamarin straight.<p>So this is also partly just giving back from where they took it.",2016-04-27 21:28:17,11584707
2271,"There is a Xamarin Evolve 16 session shown free on their live channel starting in a few minutes at 5:30pm ET (Wed Apr 27):<p>&quot;Everyone Can Create Beautiful Apps with Material Design&quot;<p><a href=""https:&#x2F;&#x2F;evolve.xamarin.com&#x2F;live"" rel=""nofollow"">https:&#x2F;&#x2F;evolve.xamarin.com&#x2F;live</a>",2016-04-27 21:28:55,11584711
2272,"Can&#x27;t speak for the mobile side of things, but I used Xamarin for Mac to port a Delphi application and bring it to market last year. Considering when I started I didn&#x27;t know anything about Macs, Cocoa or Xamarin for Mac &#x2F; MonoMac, it turned out pretty well. Xamarin have some good people cruising their forums and offering support.",2016-04-27 21:52:22,11584874
2273,"What does Unity have to do with Xamarin? Are you referring to the fact that Unity uses an old version of Mono, because that hardly is relevant to greenspot&#x27;s comment.<p>To their actual comment, it is extraordinarily difficult to make a quality product with Xamarin. As they said, there are <i>shockingly</i> few wins built with it. There are loads and loads of teams using it, all sure that it&#x27;s the short cut that will build for everything with one code base, but so few wins.",2016-04-27 23:15:51,11585393
2274,"Recommended watching for iOS and Android - <a href=""https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=VJsmrTQWD2k"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=VJsmrTQWD2k</a> simple to identify these problems once you know of them. I keep coming across implementations that make some very fatal mistakes about resource management, notably these problems would potentially also happen when not using Xamarin as well (developers not reading documentation&#x2F;being careful with allocations)<p>With Android the most common mistake is cross-heap references, putting a large C# array into a java arrayadapter for example will result in objects that live in both worlds which makes it expensive for Java to see the C# object and C# to see the Java object. The objects are effectively being mirrored, the solution is to use C# all the way down. Where the object was created defines ownership, for example ArrayAdapter containing C# objects means owned by Java with overhead for Java to bridge the C# objects.",2016-04-27 23:32:23,11585464
2275,"People are mixing &quot;Xamarin the company&quot; with &quot;Xamarin technologies&quot; here and I&#x27;m not sure how to sort it out. Obviously the tech stack works. Obviously the stack ain&#x27;t going away, especially now. As for &quot;hard to build a quality product&quot; and &quot;so few wins&quot; well that describes mobile in general now, doesn&#x27;t it?",2016-04-27 23:45:44,11585552
2276,"I too hate cross-platform schlockware but it sounds like you are not familiar with the technology.<p>&quot;controls are mapped to platform-specific native user interface elements; for example, a Xamarin.Forms Entry becomes a UITextView on iOS, an EditText on Android, and a TextBox on Windows.&quot;<p><a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms</a>",2016-04-27 23:49:38,11585574
2277,Interesting. I was unaware that Xamarin maps widgets like that. Thanks for enlightening me. :-)<p>How does it abstract away the more fundamental differences between platforms Activities&#x2F;Fragments vs. UIViewControllers?,2016-04-27 23:57:00,11585609
2278,"You win some you lose some. With Fragments Xamarin actually extends support to earlier Android devices. Less of an issue now, but there was a time when this actually extended platform reach, reduced code, and simplified training&#x2F;upgrades.<p>For some things it&#x27;s about the common talk-to-the-backend code, not true-code-once across iOS&#x2F;Android...",2016-04-28 00:43:14,11585835
2279,"I&#x27;m genuinely curious as to where you are getting your information from - ? Are you referring to Xamarin Forms in particular? One isn&#x27;t forced to use Forms, it&#x27;s possible to utilise Xamarin iOS and Android, but still have (for example) a PCL that contains everything except for the visual side of things.",2016-04-28 01:09:41,11585929
2280,"You don&#x27;t need to use an IDE in order to write Xamarin.iOS or Android apps. You can just use a text editor (although Xamarin Studio <i>is</i> free).<p>The MSBuild logic, at least for Xamarin.Mac and Xamarin.iOS has been made completely open source, so all the logic to build your apps + the SDKs are all open source.",2016-04-28 01:18:52,11585965
2281,"I recently spent a few weeks with it and decided to not use it for a cross platform mobile app I&#x27;m working on.<p>1) The documentation seems good at first, but some parts are outdated and I did find myself stuck with it a number of times. iOS and Android docs are lightyears ahead.<p>2) The code editor in Xamarin Studio for OSX is mediocre. I&#x27;ve tried using VSCode instead but intellisense didn&#x27;t work. I imagine using Visual Studio must be a lot better. Both Xcode and Android Studio are much better in my experience. Maybe with the upcoming C# IDE from JetBrain this will change.<p>3) You need to learn iOS&#x2F;Android development anyway. Xamarin Forms works well for prototypes and such but in the end you need platform specific UIs and libraries. So you need to do the leg work in the native docs (Swift&#x2F;Java) and understand how these APIs&#x2F;languages work and be able to &quot;translate&quot; those to C#. It&#x27;s double the work compared to writing directly in native code.<p>4) The community around Xamarin is minuscule. If you get stuck there isn&#x27;t much material out there to help you compared to native iOS or Android. Also in my short experience their forums were not very helpful. I imagine with an expensive corporate account with dedicated support that must be very different, but for a solo developer it feels like you are on your own.<p>As much as I like C# as a language I really don&#x27;t see the point of Xamarin in my case. I started learning Java&#x2F;Android form scratch and I&#x27;m having better results in less time. I will have to work more to get both iOS and Android, but I won&#x27;t feel miserable and the dev experience in OSX will be awesome with first class tools.<p>I&#x27;d say Xamarin would be perfect for someone that already knows how to develop for iOS and Android but hates working with Swift and&#x2F;or Java, loves C#, and has access to Visual Studio in Windows.",2016-04-28 03:25:28,11586389
2282,I found that too a few weeks ago. I ditched Xamarin and moved to Java.,2016-04-28 03:26:29,11586391
2283,"&gt; Honestly, I am a little tired of all the articles (edit: I meant posts) claiming MS is suddenly in the Open Source camp.<p>Okay...but this isn&#x27;t one nor is it really an &quot;article&quot;. It&#x27;s simply the page about Xamarin being opened source. That&#x27;s it. It&#x27;s MIT licensed and opened sourced.<p>Did you not read the page or did you just want to rant about the same things people complain about with Microsoft in almost every HN thread about their open source efforts? I&#x27;m not saying some of these are not issues but when they&#x27;re unrelated and don&#x27;t add anything to the context of the content I don&#x27;t get the point.",2016-04-28 05:09:24,11586664
2284,"I don&#x27;t think Unity does it any more, but it wasn&#x27;t that long ago when Unity used Xamarin to be able to run on iOS, Android and PS4. Now they do it with il2cpp I think.<p>Also, it seems you have no idea what you&#x27;re talking about. Xamarin gives you access to the same native APIs that you use when developing a native app. You still need to know the native API if you want to build an iOS app. Xamarin.Forms helps, but doesn&#x27;t support everything.",2016-04-28 06:16:45,11586834
2285,"It can be complicated, but if you want to see an example, you can look at MonoGame samples [1]<p>The simple platformer has one source, but you should be able to compile it with Mono on Linux&#x2F;OSX&#x2F;Win or with Visual studio after you do the setup.<p>With Xamarin in the mix, your build targets can include Android and iOS.<p>Most of the time when I built with mono on linux, I was able to run the binary on windows, but I was creating smallish projects so far, so I don&#x27;t know how well that works for larger projects.<p>But with libraries, there are often built in such way, that you have shared interface, that will be usable no matter the target and during compilation the correct platform version would be linked, but my memory is kind-of hazy on the details.<p>[1] <a href=""https:&#x2F;&#x2F;github.com&#x2F;MonoGame&#x2F;MonoGame.Samples&#x2F;tree&#x2F;develop&#x2F;Platformer2D"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;MonoGame&#x2F;MonoGame.Samples&#x2F;tree&#x2F;develop&#x2F;Pl...</a>",2016-04-28 12:38:15,11588325
2286,"This is based upon attempting to use the products to build some solutions. The Xamarin advantage is in the cross-platform tooling (if I&#x27;m making separate code for each, why would I bother with a layer of abstraction?), but when used it generates a compromised result.<p>It is perfectly fine for some relatively simple things. Basic information apps, etc. But it isn&#x27;t long in complex apps before the abstraction is leaking all over the place, and you find yourself fighting the tooling rather than leveraging the tooling. Which has been the case for virtually every similar &quot;all platforms one tool&quot; type solutions.",2016-04-28 16:04:04,11589843
2287,"I was specifically referring to your comment &quot;There are loads and loads of teams using it, all sure that it&#x27;s the short cut that will build for everything with one code base, but so few wins.&quot; that implied knowledge above one&#x27;s own experience.<p>BTW Xamarin Forms has or is about to receive a bunch of updates, perhaps it&#x27;s worthwhile checking them out in case things have improved for you?",2016-04-28 22:32:37,11592374
2288,"<i>You&#x27;re talking about it like it&#x27;s some stupid ORM wrapper or wonky Widget UI library. It is not.</i><p>Again, <i>this</i> conversation is about Xamarin the mobile app studio. There is zero ambiguity in this, so it is perplexing that you keep bringing this up.<p><a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a><p>The context is the cross-platform app creation toolset. It generates extremely poor quality code, usually at a significantly increased development time (quite contrary to the promise). This is the case found by almost everyone who uses it, which is exactly why most teams have an Android project, fully using the tools of the platform, and an iOS project, fully using the tools of the platform. If Xamarin were heavily used, Windows Phone wouldn&#x27;t be so generally unsupported.",2016-04-28 23:41:43,11592726
2289,Haxe seems an interesting alternative for mobile development ( cross platform) for my currently chosen way : Xamarin.<p>Any tutorial for a crossplatform app on haxe with using native features ( eg. gps)?,2016-04-29 11:21:50,11594957
2290,"Xamarin (<i>not Mono</i>) is a solution that seems like all win: Why bother with completely separate solutions on iOS and Android...and maybe even Blackberry and Windows Phone and...<p>...when there&#x27;s a magic solution that covers them all. Surely such a solution would completely take over the industry, right?<p><i>Crickets</i>.<p>Extremely few successful solutions are built in Xamarin. Their case studies are limited, and are generally close to trivial apps. And when you point this out, Xamarin advocates tell you not to use most of the cross platform stuff, but instead use platform specific code that is layered on abstractions from the underlying tech, always a step behind and a mile too far.<p>I&#x27;m not amplifying anything: The market demonstrates every statement. Xamarin is something that floundering teams buy hoping it gives them a big heads up, and then some time down the path they just end up starting separate projects for each platform.<p>You obviously are heavily biased, and strangely confrontational, towards Xamarin. But this open sourcing has been met with a universal yawn.",2016-04-29 11:58:44,11595095
2291,"<i>Xamarin</i> is a company, not a product. <i>Mono</i> is a Microsoft-sponsored project. If you can&#x27;t be bothered to get that right it makes it even harder to accept you speaking on behalf of the entire industry.<p>&gt; &quot;this open sourcing has been met with a universal yawn&quot;<p>It happened 18 hours ago! Do you think the kinds of companies that code in C# even noticed yet?",2016-04-29 13:14:29,11595471
2292,"At this point I have to assume you&#x27;re trolling. No one is this obtuse.<p><i>Xamarin is a company, not a product</i><p>Xamarin <i>the company</i> has a <i>primary anchor product</i> that is a tooling and SDK to build cross platform apps (indeed, on Xamarin.com it is literally the only non-service product. There is zero ambiguity). To anyone not autistic, that is <i>clearly</i> the focus on this entire discussion. Your bizarre incantation of Unity using a very old version of Mono as a citation in support of Xamarin set the bar pretty low for this conversation.<p><i>It happened 18 hours ago!</i><p>Microsoft made it completely free. <i>Yawn.</i>. Microsoft open sources the entire SDK. <i>Yawn.</i><p>Clearly you work either for Microsoft, or you hitched your wagon entirely to Xamarin or Microsoft. Your emotions on this are bizarre and completely out of touch with the reality.",2016-04-29 13:26:09,11595528
2293,"&gt; on Xamarin.com it is literally the only non-service product<p>&gt; Microsoft made it completely free. Yawn.. Microsoft open sources the entire SDK. Yawn.<p>After your nap, click the &quot;All Products&quot; link. You&#x27;ll see other products -- and 26 pages of components.",2016-04-29 15:55:20,11596512
2294,"&quot;All products&quot; list four items, one of which is a product , three of which are services. <i>Exactly as I already said</i>.<p>Give it up. Your initial comment about Mono was ridiculous and grotesquely out of context, and you&#x27;ve just continued this bizarre obnoxiously.<p>And the most <i>ridiculous</i> part of all is that this very submission, and Xamarin&#x27;s own terminology, calls their app development stack &quot;Xamarin&quot;.<p>No one is confused but you.",2016-04-29 16:33:22,11596821
2295,"You don&#x27;t seem to understand how Xamarin works at all.  The entire point is that you have the ability to share code, but also to drop to platform specific code at any time.  The absolute worst case should be that you build totally different UI code for each platform while most of your business logic can sit in shared code.  If you do target their cross platform UI framework (Xamarin.Forms) then all or large chunks of of your UI are in shared code, but even then you can write things like platform specific renderers to tweak your controls to the platform.",2016-04-29 17:35:30,11597295
2296,"Haxe is cross platform in the sense of being able to compile to different languages not in the sense of merging different platform features into one library.<p>For example, you can use Haxe to build a native Android application using the Java target as you would do with using Java in the first place. Same with iOS (but using the C++ target)<p>AFAIK, there isn&#x27;t any active project that offer the same as Xamarin in Haxe. You could, in theory, use Haxe to target C# and Xamarin but I haven&#x27;t tested it.",2016-04-29 18:16:45,11597621
2297,"Not just slower , it does not fit to native look and feel, You are not going to believe me how much time I spent for fixing ridiculous font rendering for Android Studio, at the end I just gave up (in Ubuntu. I tried all kind of patches, TuxJdk, changing arguments for OpenJdk, OracleJdk , changing fontconfig, using infinality and anything you can imagine. nothing works). Right now I am switching to Xamarin,Perfect support from Microsoft (because it is important strategic product for Microsoft. I remember one year ago I predict Microsoft will buy xamarin and open source it).Bash is coming to Windows and lets be honest , none of java&#x27;s IDEs can compete with Visual Studio.<p>and one of the worst thing about google is they don&#x27;t deliverer feature they promise. I did a lot of NDK development. I use emacs for that , but eclipse was acceptable too. But I remember last year they promised full NDK support in android studio, but they haven&#x27;t introduced it yet. This is what absolutely  I will not tolerate from a company. If it is not ready , then don&#x27;t introduce it in development conference , if it is ready why it took so long (1 year ??? and still no news).<p>another point about Google is they don&#x27;t absolutely care about developers. Who are we kidding ? no one can deny for years developer begged google for new,faster,better Android emulator. But they did nothing. Right after Microsoft introduced their Hyper-V based android emulator which is fast as hell, They developed new virtual machine. (they use qt5 for its interface). Because they felt threatened by Microsoft.I promise if it wasn&#x27;t for that the old emulator was still there.",2016-04-29 19:18:19,11598089
2298,"You just described exactly what I described in various other posts. How you came to the conclusion that I &quot;don&#x27;t seem to understand&quot; can only possibly be due to some sort of zealot blindness that makes you a defender.<p>Best case -- terrible abstraction.
Worst case -- you&#x27;re rewriting much of your code for each platform, working on a 3rd party <i>incomplete</i> abstraction that is always behind and full of unnecessary layered surprises.<p>What a win!<p>And for the next bizarre Xamarin sponsor that decides to wallow in and throw up this -- I worked on a large scale solution with Xamarin. We <i>threw it out</i> and just went with separate projects for each platform, sharing code with C++. Works wonders. Way better than Xamarin.",2016-04-29 19:56:29,11598328
2299,"&gt; &quot;All products&quot; list four items, one of which is a product<p>The Products menu has a <i>fifth</i> menu item, All Products. It will show you additional products.<p>Apparently you are not familiar with the (bumpy!) history of Xamarin&#x27;s technology. Now that it&#x27;s open source, you can actually trace lines of code from Xamarin Platform and Xamarin Forms and the Xamarin Profiler back to the early Mono and Unity days. They were a small team that bit off way more than they can chew, delivered more than seems possible even today, and gradually tightened their focus to mobile.<p>Now they are open source and have Microsoft fully behind them. I wasted a ton of time and money and performance running under Mono on Linux when I should&#x27;ve just used Windows server. But I got it back using Xamarin Platform on two recent large-scale mobile development efforts.<p>You win some, you lose some, and eventually you develop the maturity not to claim an entire industry had the same exact failures you did to make yourself feel better. Good luck.",2016-04-30 11:53:38,11601357
2300,"Fairfax, VA
Remote: YES
Willing to Relocate: NO
Tech: Android, iOS, C#, .NET, WPF, Java, API and webservices
Resume: <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;pub&#x2F;scott-pio&#x2F;2&#x2F;595&#x2F;4a"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;pub&#x2F;scott-pio&#x2F;2&#x2F;595&#x2F;4a</a>
Email: pio.scott with gmail<p>I have experience with creating MVPs, CRMs, full apps, enhancements, testing and maintenance&#x2F;bug fixing.<p>About me: I am a single developer, but have the ability to grow the team quickly with people within my network. I have 12 years experience with programming and can start work today.<p>I have experience with:
  * App Design&#x2F;User Experience
  * Cross platform
  * Java
  * Objective-C
  * C#&#x2F;Xamarin&#x2F;.NET
  * Angular, Knockout, Jquery
  * Android, WP, iOS<p>Public Portfolio:
Roller Derby Nation: Team Management for roller derby <a href=""https:&#x2F;&#x2F;rdnation.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;rdnation.com&#x2F;</a>
Windows Phone App for RDNation: <a href=""http:&#x2F;&#x2F;www.windowsphone.com&#x2F;en-us&#x2F;store&#x2F;app&#x2F;rdnation&#x2F;dc5d030.."" rel=""nofollow"">http:&#x2F;&#x2F;www.windowsphone.com&#x2F;en-us&#x2F;store&#x2F;app&#x2F;rdnation&#x2F;dc5d030...</a>.
Android Penalty Timer for Roller Derby: <a href=""http:&#x2F;&#x2F;www.windowsphone.com&#x2F;en-us&#x2F;store&#x2F;app&#x2F;rdnation&#x2F;dc5d030.."" rel=""nofollow"">http:&#x2F;&#x2F;www.windowsphone.com&#x2F;en-us&#x2F;store&#x2F;app&#x2F;rdnation&#x2F;dc5d030...</a>.
Android App for RDNation: <a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.RDNation.D.."" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.RDNation.D...</a>.
WPF Scoreboard App for Roller Derby: <a href=""https:&#x2F;&#x2F;rdnation.com&#x2F;roller-derby-scoreboard"" rel=""nofollow"">https:&#x2F;&#x2F;rdnation.com&#x2F;roller-derby-scoreboard</a>
Swinton Report: News Aggregation for the US. <a href=""http:&#x2F;&#x2F;swintonreport.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;swintonreport.com&#x2F;</a>
Lofty List: Lead Generation Service for businesses <a href=""http:&#x2F;&#x2F;loftylist.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;loftylist.com&#x2F;</a>",2016-05-02 15:17:52,11612052
2301,"SEEKING WORK
Fairfax, VA
Remote: YES
Willing to Relocate: NO
Tech: Android, iOS, C#, .NET, WPF, Java, API and webservices<p>Resume: <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;pub&#x2F;scott-pio&#x2F;2&#x2F;595&#x2F;4a"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;pub&#x2F;scott-pio&#x2F;2&#x2F;595&#x2F;4a</a><p>Email: pio.scott with gmail<p>I have experience with creating MVPs, CRMs, full apps, enhancements, testing and maintenance&#x2F;bug fixing.<p>About me: I am a single developer, but have the ability to grow the team quickly with people within my network. I have 12 years experience with programming and can start work today.<p>I have experience with:
  * App Design&#x2F;User Experience
  * Cross platform
  * Java
  * Objective-C
  * C#&#x2F;Xamarin&#x2F;.NET
  * Angular, Knockout, Jquery
  * Android, WP, iOS<p>Public Portfolio:
Roller Derby Nation: Team Management for roller derby <a href=""https:&#x2F;&#x2F;rdnation.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;rdnation.com&#x2F;</a>
Windows Phone App for RDNation: <a href=""http:&#x2F;&#x2F;www.windowsphone.com&#x2F;en-us&#x2F;store&#x2F;app&#x2F;rdnation&#x2F;dc5d030.."" rel=""nofollow"">http:&#x2F;&#x2F;www.windowsphone.com&#x2F;en-us&#x2F;store&#x2F;app&#x2F;rdnation&#x2F;dc5d030...</a>.
Android Penalty Timer for Roller Derby: <a href=""http:&#x2F;&#x2F;www.windowsphone.com&#x2F;en-us&#x2F;store&#x2F;app&#x2F;rdnation&#x2F;dc5d030.."" rel=""nofollow"">http:&#x2F;&#x2F;www.windowsphone.com&#x2F;en-us&#x2F;store&#x2F;app&#x2F;rdnation&#x2F;dc5d030...</a>.
Android App for RDNation: <a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.RDNation.D.."" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.RDNation.D...</a>.
WPF Scoreboard App for Roller Derby: <a href=""https:&#x2F;&#x2F;rdnation.com&#x2F;roller-derby-scoreboard"" rel=""nofollow"">https:&#x2F;&#x2F;rdnation.com&#x2F;roller-derby-scoreboard</a>
Swinton Report: News Aggregation for the US. <a href=""http:&#x2F;&#x2F;swintonreport.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;swintonreport.com&#x2F;</a>
Lofty List: Lead Generation Service for businesses <a href=""http:&#x2F;&#x2F;loftylist.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;loftylist.com&#x2F;</a>",2016-05-02 15:19:16,11612069
2302,"SiteDocs is hiring junior and senior programmers to join our REMOTE team (North American time zones), working on web and mobile applications for the construction industry. (SiteDocs headquarters are near Vancouver, but our dev team is spread throughout Canada and North America.)<p>We&#x27;re a growing B2B start-up with dozens of employees, thousands of users, and real revenue. Our mobile applications are built with Xamarin, and our web app is built with React, but we don&#x27;t necessarily care if you&#x27;ve worked with either before as long as you&#x27;re a good programmer who&#x27;s interested in (and reasonably good at) learning new things.<p>A job at SiteDocs means:<p>* Being responsible for your own piece of the product. We&#x27;re a relatively small team, and our product is relatively young, so the features and components you build will have a meaningful impact on our users&#x27; experiences.<p>* The opportunity to teach (for senior developers) and to learn (for junior developers). Our company values continuous learning, and as a dev team we are more than happy to hire and train programmers right out of university (or self taught, etc).<p>* Market salary. However, we&#x27;re a Canadian company and our dollar is not doing very well these days, so it is currently difficult for us to pay in markets that demand more than $100k USD. I know that&#x27;s a completely reasonable salary, but we&#x27;re just not there at the moment and don&#x27;t want to waste your time :) As a remote team, it is more feasible for us to hire people in low cost-of-living areas and pay them slightly above-market for their location--note, however, that we&#x27;re limited to employees working in North American time zones at the moment.<p>Our hiring process is as follows:<p>1. Email application.<p>2. 15 minute screening call with me.<p>3. Online programming test at testdome.com. It&#x27;s a fairly tough test, with questions in a few different programming languages (the intent is not to bias our process towards experience with any particular language).<p>4. Short (one page) writing sample. We value written communication a lot.<p>5. Group conversation (over Google Hangouts) with some other members of the team. This is largely assessing oral communication.<p>Yes, there are several steps, but the entire process only adds up to about 5 hours of your time, and the plus side is you&#x27;ll be joining a remote team that truly values programming competence AND communication skill.<p>If you&#x27;d like to talk, please email dave.noel@sitedocs.com with &quot;HN Hiring&quot; in the subject line.",2016-05-02 16:19:39,11612784
2303,"XeniT Solutions (<a href=""https:&#x2F;&#x2F;www.xenit.eu"" rel=""nofollow"">https:&#x2F;&#x2F;www.xenit.eu</a>) | Leuven, Belgium | Onsite<p>What: making content smarter, ECM&#x2F;document-management building on top of open-source Alfresco platform<p>We are a small bootstrapped and now fast growing company, active as both a product company and a service integrator building on top of Alfresco<p>Looking for Junior&#x2F;Senior Software Engineers or DevOps&#x2F;Infra Engineer for various technical positions.<p>* Backend stack is Alfresco&#x2F;Tomcat&#x2F;Java&#x2F;Postgres<p>* Front-ends in Typescript&#x2F;Angular or .NET (Xamarin).<p>* Infrastructure on top of Docker.<p>Contact: toon.geens _at_ xenit.eu",2016-05-03 10:25:43,11619310
2304,"Raizlabs | Oakland, CA or Boston, MA | Full Time (Onsite)
Phone Screen-Inperson- Decision.... Simple and fast.<p>Native Android Developers
Sick of just coding? 
Working on the same app and just doing enhancements? 
Not having a say as to what is being created?
Then you should consider Raizlabs.....<p>Raizlabs is seeking Native Android mobile developers to help engineer beautiful apps and influence product direction for startups and big brands like Bloomingdales, SixFlags, Virgin Pulse, EMC, RunKeeper, Rue La La, Care.com, and HubSpot.<p>Youll be working with enthusiastic and supportive peers in a trust-based work environment.<p>Skills &amp; Requirements
Were looking for seasoned native Android (Xamarin.Android also acceptable) mobile developers who have shipped apps. You should understand Android inside and out and take pride in your craft. Have experience in architecting custom UIs and the ability to communicate with RESTful backends.
	Android: Obviously... 
	Android libraries: Retrofit&#x2F;OkHttp, Volley, RxJava, Gson&#x2F;Jackson, Dagger2&#x2F;Butterknife&#x2F;Roboguice, Espresso, Robolectric, Robotium, JUnit, and more. Our MO: Best library for the job
	IDEs: Android Studio, IntelliJ
	Languages: Java 6&#x2F;7&#x2F;8, Kotlin
	Build system: Gradle, Proguard, TeamCity, Bintray
	Third party services: Firebase, Google Analytics, GCM, Crashlytics&#x2F;Fabric
	APIs: We expect the entire team to contribute to API design and encourage full-stack development<p>Curious about some of our code? Check out some of our work on GitHub and let us know what you think: raizlabs.github.io
Feel free to reach out to me directly- 
Greg.clark@raizlabs.com",2016-05-03 13:22:34,11620354
2305,"Does anyone ever actually experience greater emulator performance under Windows?  Each time an update is pushed, I am excited to always see &quot;XX faster emulator&quot; listed as an improvement - but never do I see a notable improvement... So far, the only usable &quot;emulator&quot; that I&#x27;ve found is actually virtualization using Xamarin&#x27;s Android Player...",2016-05-03 13:40:51,11620507
2306,"----------------------<p>New York, NY | Good Uncle | Full Stack Javascript Engineer | Full Time Onsite - 4 month contract<p>Were looking for a full-stack Javascript engineer to help us build out mobile, web, and backend applications in Js. We believe in:<p>* ES6<p>* BDD<p>* Scrum<p>* CI&#x2F;CD<p>* Documenting all the things.<p>* Open-sourcing as much as possible.<p>* Under-promising and over-delivering.<p>As a Js engineer, youll be working up and down the stack. Front-end single-page-applications in Angular, backend microservices in Node.js, and mobile apps using React Native. We need someone who is comfortable in Javascript regardless of the context. Experience in particular frameworks is not required; but a desire to learn quickly on the job is!<p>Here&#x27;s the full job description: <a href=""https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;1p2S0X086d4dQM5CmplGsqpzxaBeX7TlZ9jskJu4ZNv4&#x2F;edit?usp=sharing"" rel=""nofollow"">https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;1p2S0X086d4dQM5CmplGsqpzx...</a><p>Note: This is a 4 month contract position, and would require working on-site in NYC.<p>Please email me at malcolm@gooduncle.com if you&#x27;re interested.<p>----------------------<p>Keywords: javascript, js, node, node.js, nodejs, gulp, gulpjs, grunt, express, expressjs, restify, hapi, yeoman, angular, angularjs, ember, react, react native, derby, backbone, phonegap, titanium, xamarin, cordova, es6, es2015, html, css, css3, knockout, jquery, mootools, bootstrap, foundation, mongo, mongodb, dynamodb, sqs, ec2, neo4j, rabbitmq, aws, linode, digital ocean, mocha, jasmine, should, promises, let, var, docker, containers, codeship, travis, manhattan, brooklyn, queens, staten, nyc, funded",2016-05-04 21:12:09,11631862
2307,"Not _that_ hard. Gradual transition should work.<p>If you like videogames, learn some OpenGL ES, apply to mobile game development position, if youll like the area, youll be able to continue career developing games for other platforms. If youd like to move to MS stack, learn some .NET, then look for Xamarin iOS jobs, youll be able to continue career developing .NET for Windows. If you enjoy hacking, seek a job in a company that makes UI test automation tools for iOS, or iOS-related security software.<p>You already have experience dealing with all those iOS weirdness, you might be able to minimize or even negate that pay cut.",2016-05-05 12:45:16,11635555
2308,"I am. But I as I do contracting and choose interesting projects I tend to be a generalist so my outlook is skewed.<p>If you were just starting out, I&#x27;d suggest you work with Xamarin to do your app development in, and Unity3d if you were doing games or 3d work (Though you could use monogame with xamarin if you were so inclined). But then again, my comfort zone is C#.<p>Android and iOS apps these days tend to look very similar, with the main difference being a soft back button for iOS and none for Android. Windows phone can look very different if you use the Metro design language but quite a few apps that I&#x27;ve used seem to be mostly ignoring it (admittedly niche ones) and looking like the big two.<p>Whatever developer you hire will be &quot;better&quot; (or at least more comfortable) at one platform than another.<p>Have you done your market research? Are you targeting a particular market that is likely to have one phone type rather than another? I&#x27;ve noticed that the different platforms tend to attract different types of people. App Annie is a good source on this market data though you&#x27;ll have to ignore the most-popular apps as you&#x27;re not going to be the next facebook&#x2F;ebay etc no matter how hard you try.",2016-05-05 21:02:03,11639642
2309,"1. I was just curious if, by implementing the CLR, they have effectively implemented a VM for CIL in their OS, not if they reproduced Inferno.<p>3. My question was how close it came.  In other words, what else would your OS need in order to be compatible with something like a cross-platform app created in Xamarin.",2016-05-05 21:55:35,11639941
2310,3) Not close at all. UWP and WPF are proprietary Windows technologies that rely on the Windows APIs. They&#x27;re closed source so nobody really knows what they need.<p>Cross platform Xamarin apps are different. Xamarin has its own GUI library wrappers but do not provide a cross platform library (or at least they didn&#x27;t last time I checked. They&#x27;d need to create one for GTK&#x2F;Qt&#x2F;X&#x2F;whatever and devs would have to write for it,2016-05-05 22:46:31,11640266
2311,"Nothing for GTK and desktop Cocoa, but they provide Xamarin.Forms for iOS&#x2F;Android&#x2F;WindowsPhone8&#x2F;UniversalWindows: <a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms</a>",2016-05-05 23:50:26,11640618
2312,"Location: San Francisco and S.F Peninsula &#x2F; Bay Area<p>Remote: Willing, Yes<p>Willing to relocate: No<p>Technologies: Python, SolveSpace, Mechanisms, &quot;Soft-PLC&quot;-Style programming, .NET, C#, Java, Visual Basic, Xamarin, MATLAB, Android, Kawasaki Robotics, Semiconductors, CAD.<p>Rsum&#x2F;CV: <a href=""https:&#x2F;&#x2F;drive.google.com&#x2F;open?id=0B0K7a02_S9mxdzVDRldkaTRHbWM"" rel=""nofollow"">https:&#x2F;&#x2F;drive.google.com&#x2F;open?id=0B0K7a02_S9mxdzVDRldkaTRHbW...</a>, <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;proericchan"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;proericchan</a><p>Email: pro.eric.chan@gmail.com<p>I&#x27;m currently a Robotics Engineer at Kawasaki Robotics handling the programming for robots used by the semiconductor industry. These are robots that handle millions of dollars worth of products each day, and I work with the customers and our engineering teams to ensure that their behaviors are correct, that they operate reliably, and ensure they run as fast as possible.",2016-05-06 02:00:05,11641177
2313,"You have Xwt for desktop applications. Xamarin Studio itself uses it: <a href=""https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;xwt"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;xwt</a>",2016-05-06 03:24:29,11641472
2314,"IIRC there was a note taking app that was included with Ubuntu for a while.  It was mainly removed to save the disk space (the target at the time was CD size), but there was a lot of negative feedback about it at the time.<p>Some of the negative feedback was deserved, but I think most of it was FUD.  I tried to run Mono for some things earlier on, and it was just a lot of effort for things that worked so well in Windows at the time.  I think the CoreCLR work and acquiring Xamarin definitely show some work in the right direction here.<p>I&#x27;ve been doing mostly node.js dev for the past few years, may consider .Net again... tbh, more interested in looking at Go for something though, as an excuse to learn.  I do miss some niceties with VS though.",2016-05-06 07:42:02,11642359
2315,They haven&#x27;t tried it yet but plan to support CoreCRL on Linux (and Xamarin on mobiles).,2016-05-06 15:12:24,11644498
2316,"Realm | San Francisco &amp; Copenhagen | Realm (YC S11)<p>Hello,(<a href=""https:&#x2F;&#x2F;realm.io"" rel=""nofollow"">https:&#x2F;&#x2F;realm.io</a>). Were currently shipping a mobile database that runs directly inside mobile phones, tablets &amp; wearables. Hundreds of millions of people rely on Realm every day through apps by Google, Amazon, eBay, Intel, Hipmunk, Expensify, GoPro, the BBC, Adidas, IBM, Homeland Security, Walmart, LINE, Starbucks, Xiaomi, the Washington Post and many, many more.<p>We allow people to build faster apps, faster, and do so in a reactive way with live objects, change notifications, unidirectional data flows and much more.<p>Were the 3rd-most starred database on GitHub (<a href=""https:&#x2F;&#x2F;github.com&#x2F;realm"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;realm</a>) and growing fast.
Were working on some exciting new projects Some keywords: Mobile, C++, iOS, Objective-C, Swift, Android, Java, JS, React Native, C#, .NET, Xamarin, Unity, distributed systems, cloud, devops, infrastructure, test, QA, evangelism, OS X, Product Manager
We will consider sponsoring work visas to Denmark for the right candidates.<p>If youd like to apply it will be easiest if you do so directly on our Lever where we have specific jobs listed: <a href=""https:&#x2F;&#x2F;jobs.lever.co&#x2F;realm"" rel=""nofollow"">https:&#x2F;&#x2F;jobs.lever.co&#x2F;realm</a>",2016-05-06 19:21:25,11646125
2317,"Maybe we&#x27;ll have to agree to disagree. The public asked for open and we gave them Open with a pretty capital O. When this project started we didn&#x27;t know we were buying Xamarin, so that required a pivot. Yes it looked messy because it was messy. It&#x27;s hard to be Open AND Organized. Node is a mess, remember io.js? Software Development <i>is</i> messy and this was a peek into the kitchen.<p>I can&#x27;t speak to OneDrive, but it&#x27;s clearly a problem. Unfortunately, I work in DevDiv, not Windows.<p>As far as Bash is concerned, I think &quot;literally nothing works&quot; is not fair. I helped with this release. I presented on it for 90 minutes this morning and installed and brought in build-essentials, worked on redis-server, g++, ruby, and it worked fine. Yes there&#x27;s rough areas, but we can update it often with WU. Also, you&#x27;re complaining about Trusty in the same breath as Bash on Windows. You&#x27;ll be able to update to 16.04 later so that might help. And, you&#x27;re certainly able to Hyper-V any Linux and SSH in as well.",2016-05-06 22:16:27,11647086
2318,"I&#x27;ve been using .NET core in &quot;production&quot; (i get less than a thousand users a day... so not heavy production) for almost a month now.  I love the platform, and I love how it keeps getting better.  Glad to see this timeline, and i&#x27;m really glad to see Xamarin a part of this.",2016-05-07 00:19:39,11647677
2319,"There are many ways you can actually not ask yourself that question.<p>1. You can package your web app into electron or similar
2. You can use a portable platform like QT or Xamarin<p>But more importantly, you should chose the one that will help you conclude that this is a good idea sooner. You&#x27;ll probably end up rewriting the tool once you get feedback about where it rules and where it sucks.<p>So I&#x27;d say that unless you want to do that side project to learn something new, stick to what you know best (and what you know will work). That&#x27;ll get you to the point where you can decide whether this is worth pursuing faster.",2016-05-09 12:26:30,11659225
2320,"Video Platform Software Developer | Atlanta, Georgia | ONSITE | techjobs@playonsports.com<p>PlayOn! Sports is a rapidly growing startup and the nation&#x27;s largest producer and distributor of high school sports events. We are hiring a Software Developer to join our team.<p>You will work on building our video processing platform that sits behind our suite of products for producing and viewing high school sports events on the web, mobile devices, and television. This position develops both desktop and server-side components for manipulating video, including compositing graphics, encoding video, transcoding video, post-production workflows, and integration with CDNs. Responsibilities include writing code, building automated tests, contributing to system architecture, mentoring developers, reviewing code, and contributing to development methodologies and standards for the team.<p>Requirements<p>* 5+ years experience developing software in C#, Java, Scala, JavaScript or Ruby<p>* Experience building desktop applications<p>* Good understanding of video processing software, standards and methodologies such as ffmpeg, Libav, DirectShow or AV Foundation<p>* Experience working on a public-facing web site with a large audience<p>* Knowledge of HTTP &#x2F; REST and modern web standards<p>Preferred Skills &#x2F; Experience<p>* BS in Computer Science or equivalent<p>* WPF, Xamarin, Silverlight, and Visual Studio<p>* Cloud experience with AWS, including ec2, dynamo and lambda
* Git or similar VCS<p>* Practical experience with continuous integration processes and products such as Snap CI and Jenkins<p>* Good understand of design patterns and related libraries such as MVVM, MVC and Prism<p>* Strong communication, teamwork and interpersonal skills",2016-05-09 14:54:26,11660258
2321,"You may have missed the announcement where MS bought out Xamarin and is now giving it away for free.  You owe it to yourself to at least give it a try while waiting for actual cross-platform Swift.<p>90+% of your mobile code can be shared between Android and iOS.  Not sure if that&#x27;s something currently possible with Swift or not, but it was worth keeping C# around for our needs.<p>We&#x27;re more of a &quot;mobile app is something we also offer&quot; and web is our main presence though, so your mileage may vary (especially if you&#x27;re mobile-only or mobile-centric).",2016-05-09 15:37:30,11660601
2322,"The concern about patents was sort of fair, but was as much a FUD red herring as anything else. There was the debate whether Microsoft&#x27;s .NET open patent promise at the time applied to Mono in general or just OpenSUSE&#x27;s distribution of Mono. In the time that the Ubuntu community spent debating that they could have done the simple thing that Red Hat did back then which was ask Microsoft to generalize the promise a bit more...<p>The issues of control were definite FUD, as Mono at the time was always an open source project first and foremost and it shouldn&#x27;t have mattered that most of its contributors were Novell employees at the time or Xamarin employees when Novell divested itself of much of its open source development staff.<p>The &quot;decline in Mono&quot; in Ubuntu had everything to do with FUD. Arguably Mono itself has never really seen a decline, it&#x27;s always been out there for the installation and usage. Even when priorities were focused elsewhere (because mobile efforts first at Novell and then at Xamarin paid the bills), Mono has seen stable development.<p>(Now you could say that Mono is in &quot;decline&quot; in today&#x27;s world, but only because first Roslyn and now .NET Core have been supplanting Mono as cross-platform open source efforts for C#&#x2F;.NET.)<p>As for Vala, I still don&#x27;t understand why as a developer I&#x27;d ever want to write Vala rather than C#. Vala still seems like a strange choice to me. Why build a &quot;Gnome-specific language&quot; that isn&#x27;t really useful outside of the bubble of Gtk?",2016-05-09 15:43:48,11660660
2323,"90%+ shared code is a bold claim, Xamarin.com states 60-90%.<p>In my experience it&#x27;s closer to 60%.",2016-05-09 16:15:53,11660921
2324,"I can see you have no idea what Xamarin is. With Xamarin, you still use UIKit and the native Android UI, the difference is that you program it in C# and thus the non-UI code can be shared seamlessly. Performance is not &quot;very meh&quot; as the UI is completely native and Xamarin compiles the C# to native code ahead-of-time. It has literally nothing to do with WebViews.",2016-05-09 18:25:49,11661967
2325,"Hey, you need to read the parent a bit closer.<p>Nobody&#x27;s saying that Xamarin uses web views, but clearly there&#x27;s a comparison to be drawn with the craze a few years back for writing mobile apps using web views. This was advocated as being cross-platform, allowing developers to write the same code and run it on multiple platforms. The downsides are the same in some ways, as the parent enumerated.<p>Xamarin&#x27;s use of native UI is important, but in my experience it&#x27;s clearly not as seamless as you think; while you access the UI natively, there are intrinsic architectural differences that make it difficult to do so in a high-performance manner without a lot of fairly hacky code.",2016-05-09 19:51:39,11662604
2326,"I haven&#x27;t used Xamarin, but I&#x27;ve used a number of other frameworks (some webview based, many not). Some had benefits, but many had a lot of drawbacks.<p>I could write a long blog post about what a headache it is to support both platforms, but I don&#x27;t think any of these frameworks solve the real pain points. It&#x27;s generally a lot of small things which add up. It also takes a lot of team discipline.<p>Code sharing would be useful, but not massively since the majority of code is in the UI. When the UI is different, a lot of differences start to be needed in the non-UI code as well. Suddenly you are back at square one. Depends on the app though.",2016-05-09 22:14:37,11663655
2327,"Yes, I&#x27;ve read the parent closely. The downsides are still wrong, because they assume that Xamarin is a cross-platform UI toolkit, which is not true. The performance downside is wrong, the newer features downsides is wrong, the front-end code sharing is wrong, the third party libraries is wrong (Xamarin can generate bindings for other frameworks automatically), and the only debatable one is getting locked in a framework.",2016-05-10 09:21:00,11666003
2328,"Hey, Yavor on the Realm team here. A reactive database allows you to structure your code so that you &quot;react&quot; to changes in your data layer - you don&#x27;t have to re-run queries to get updates, because Realm updates all your data objects to point to the newest version of your data. Check out the sample code in your blog post: <a href=""https:&#x2F;&#x2F;realm.io&#x2F;news&#x2F;introducing-realm-xamarin"" rel=""nofollow"">https:&#x2F;&#x2F;realm.io&#x2F;news&#x2F;introducing-realm-xamarin</a>",2016-05-10 16:19:01,11668316
2329,"None of the effort in adding C# and Xamarin support distracted anyone from getting the core product to 1.0. We are an entirely separate team hired specifically for this project. If you follow the Java, Swift or Objective-C products you will have seen a steady set of releases in the last year. I can&#x27;t comment on our closeness to 1.0 shipping.<p>I&#x27;d like to think that the C# team has also contributed by setting a high standard for API usability and ease of use but we&#x27;re standing on the shoulders of the giants who wrote LINQ and Fody (thanks Simon Cropp).<p>Realm also keeps growing all its other teams and people are welcome to apply <a href=""https:&#x2F;&#x2F;jobs.lever.co&#x2F;realm"" rel=""nofollow"">https:&#x2F;&#x2F;jobs.lever.co&#x2F;realm</a>",2016-05-11 01:31:12,11672033
2330,"The core of Realm tracks writes across different threads and processes and that&#x27;s how we know to update the result objects without rebuilding the query or rebinding the model objects. There is a PR to actually expose this as a high-level notifications API and we&#x27;ll roll it out in our next Realm Xamarin release: <a href=""https:&#x2F;&#x2F;github.com&#x2F;realm&#x2F;realm-dotnet&#x2F;pull&#x2F;502&#x2F;commits&#x2F;f4169276e3c197a875f2aca259c24e80700344ab"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;realm&#x2F;realm-dotnet&#x2F;pull&#x2F;502&#x2F;commits&#x2F;f4169...</a>. Using that it will be possible to implement INotifyCollectionChanged and IObservable directly on top of Realm.",2016-05-11 06:48:27,11673092
2331,"Realm itself only adds less than 1 MB extra in your final app :-)<p>On Xamarin.iOS the Realm static libraries for all the iOS platforms and architectures we support are embedded inside the Realm.dll assembly. During build, Xamarin extracts the static libraries and links the app against them.<p>We should be more explicit about the size implications to avoid that chocking misunderstanding! We will update our FAQ.<p>Re. POCO support: We expect to support that going forward - you can follow the issue here: <a href=""https:&#x2F;&#x2F;github.com&#x2F;realm&#x2F;realm-dotnet&#x2F;issues&#x2F;529"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;realm&#x2F;realm-dotnet&#x2F;issues&#x2F;529</a>.<p>Let us know if you have other questions or concerns! Github issues is a good place to suggest features or ask questions.<p>Thanks!",2016-05-12 12:41:32,11682908
2332,"&gt; What are the implications for my free, open source software? And my closed source commercial software?<p>Software that implements other party&#x27;s APIs might be obligated to agree to a licensing agreement - projects like Wine, Samba and various 3rd-party emulators. Ironically, Microsoft&#x27;s discontinued, Android-compatible project Astoria would be exposed (to both Google <i>and</i> Oracle) - Microsoft submitted an amicus in the first Oracle v Google case supporting Oracle&#x27;s cause. I am not sure if Xamarin- and Cordova-&#x2F;Phonegap-type projects would be subject to Apple&#x27;s lawsuits.<p>I also suspect web-APIs might also become risky, making it possibly for Amazon to sue you for providing AWS-compatible APIs[1] for example<p>Disclamer: I am not a lawyer, this is just my layman&#x27;s perspective.<p>1. <a href=""https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Eucalyptus_(software)"" rel=""nofollow"">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Eucalyptus_(software)</a>",2016-05-12 14:22:28,11683566
2333,"This sounds like a huge boon to game development! With the piston.rs ecosystem doing a stellar job of centralising Rust gamedev libraries, Rust seems primed for use in game tech.<p>One thing I&#x27;m not hearing much about yet is iOS though. C# relies on Xamarin. Java&#x27;s best bet is probably Intel&#x27;s Multi-OS (since RoboVM is no more). What does Rust&#x2F;Rustup have planned?",2016-05-13 20:07:27,11692889
2334,"I&#x27;m starting to get an interest in .NET development because of the recent news regarding Xamarin and the mobile ecosystem.
How does this project relates to .NET development? The web site provides only generic informations such as &quot;enable a great .NET experience in YOUR editor of choice&quot;. Would this allow me to open and build Visual Studio projects on non-Windows environments?",2016-05-16 12:39:43,11705869
2335,"The short answer is that yes, with tools like Omnisharp and Xamarin Studio, you can write code targeting the CLR on OSX and Linux.  Omnisharp basically interacts with Rosyln (the .NET compiler) to provide integration for various editors.<p>The longer answer is that it really depends on what type of project you&#x27;re looking to do.  Certain technologies from Microsoft will never get ported.  WPF and anything that relies on the System.Web assembly are the more well known exceptions.  This is because both of those technologies rely specifically on Windows technology to work. WPF, for example relies on a library called PresentationCore which ultimately ends up using DirectX for rendering.  System.Web, if I remember correctly, relies on specific IIS technologies to work.<p>ASP.NET and .NET are moving to more platform independent states, which is what is on GitHub. The ASP.NET ream removed the requirement on System.Web and instead defined the OWIN standard which formalizes the communication between sites that are developed in .NET and servers that can run them.  The 2 most widely used implementors of that are IIS 8 (with the HttpPlatform Handler), Suave (F#), and project Katana, although I know I&#x27;m missing one.",2016-05-16 13:13:54,11706015
2336,"Android noob here. I&#x27;ve been teaching myself Android programming for the past couple of months and I&#x27;ve found it overall a messy and unpleasant experience for the reasons many of you have already mentioned. So much, in fact, that I&#x27;m looking for alternatives.<p>So what&#x27;s the best option?<p>Kivy? Python is slow, adoption seems non-existent, not suitable for every kind of app<p>Cordova? Web apps are slow, JavaScript sucks big time<p>Qt? Google discourages use of the NDK for developing apps, can&#x27;t figure out anything from their crappy website<p>Xamarin? C# doesn&#x27;t look like a significant step up from Java, from Microsoft<p>Delphi? Proprietary, Windows-only and costly<p>Clojure&#x2F;Kotlin&#x2F;Scala? It seems you need to be a master Android developer to use them, still doesn&#x27;t get you out of the horrible Android architecture.",2016-05-16 14:18:31,11706385
2337,"Android is a messy process. Since you&#x27;ve effectively implied that you&#x27;re excluding all of the options, you only have message Android.<p>Web apps don&#x27;t suck that much as long as each screen does one thing well. Xamarin is for getting a slightly more elegant language (since Java 1.8 isn&#x27;t supported) into the mix while providing a reasonable cross-system platform. Clojure&#x2F;Kotlin&#x2F;Scala do require you to master Android first because they are built on top of it. Each provides is own abstraction, even if it&#x27;s just a language.<p>In the end it&#x27;s about trade offs and acceptance. Raw Android is like working in a better assembly. It&#x27;s got decade&#x27;s old abstractions. It&#x27;s powerful, but annoying. For everything else, there&#x27;s the complexity of working with the various abstractions over a system that does not want to be abstracted.",2016-05-16 14:30:49,11706487
2338,"I spend a lot of time in Xamarin so I&#x27;m biased in that direction, here&#x27;s why I think it might bring more of an advantage than you think.<p>C# is IMO a significant step up from whatever Java is running in Android. It&#x27;s a much richer language as far as syntactic sugar (see properties, type inference), and fundamentals - optional dynamic typing, better generics than Java, and gotcha-free lambdas. The biggest advantage though is async&#x2F;await, which puts c# miles ahead of Java when it comes to concurrency, something that&#x27;s oh-so-important in mobile land. And of course Xamarin opens up F#, which is a whole different story.<p>Also, C# opens up some frameworks that will give you significantly more modern techniques than what can be easily done in vanilla native Android dev. Take a look at ReactiveUI and MvvmCross, and a recent favorite - <a href=""https:&#x2F;&#x2F;github.com&#x2F;RolandPheasant&#x2F;DynamicData"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;RolandPheasant&#x2F;DynamicData</a><p>Now that it&#x27;s free and doesn&#x27;t require Windows, I definitely think anyone trying to build significant native Android apps should at least take a look.",2016-05-16 18:02:40,11708202
2339,"As a software engineer that works across multiple platforms, I&#x27;ve used Amazon Workspaces as my primary Windows dev environment for the past 18 months. In general the experience is great- the input response and 2D graphics are superior to an RDP session. It&#x27;s easy to forget you&#x27;re working remotely. Another nice bonus is longer battery life relative to running a virtual machine on your laptop.<p>But the real limitation is the tiny C: partition. It&#x27;s fixed at 60 GB, nearly half of which consumed by Windows and its gradual updates, which generally leaves you with insufficient space to install Visual Studio with the Xamarin tools.<p>The limitation has been noted in the AWS Developer forums, but unfortunately the 60 GB limitation seems hard-wired into the platform for now[1]. It&#x27;s painful enough that I searched around for alternatives, but I couldn&#x27;t find any direct competitors! I&#x27;d be 100% happy with this if I didn&#x27;t have to run up against this 60 GB limit all the time. Just a heads-up for any engineers considering this for a Windows development environment.<p>[1] <a href=""https:&#x2F;&#x2F;forums.aws.amazon.com&#x2F;thread.jspa?threadID=220618"" rel=""nofollow"">https:&#x2F;&#x2F;forums.aws.amazon.com&#x2F;thread.jspa?threadID=220618</a>",2016-05-18 14:14:39,11722072
2340,"Eh, they kept the price so high for all this time and now that Xamarin has become free they decided to offer it free, (but still: &quot;Non-customizable splash screen. iOS and Android stable versions only.Support for OS X, watchOS and tvOS not included&quot;).<p>Probably a bit too late guys?",2016-05-19 17:12:17,11731736
2341,"For our customers it is all about WPF, Qt and Xamarin.Forms.<p>The few customers that still require Java desktop applications have no desire to move away from Swing.<p>I really don&#x27;t see a bright future for JavaFX.",2016-05-20 15:58:56,11738889
2342,"It is only a matter of time before the end of Windows only for those apps - the new Microsoft under Nadella is operating system agnostic. Losing out in the mobile space forced the abandonment of &quot;devices and services&quot; and vertical integration to a horizontal &quot;platform first&quot; strategy, but it was always going to happen (and many pundits wanted Microsoft to anticipate it rather than react to it).<p>The kernel doesn&#x27;t matter - developers can and will target runtimes not operating systems. Today we&#x27;re in a situation that would have been infeasible a few years ago: Microsoft producing apps for iOS. The strategy here is all about blocking competitive software from establishing itself against Office (the real cash-cow) and thus Microsoft services (a potential cash-cow) while the runtime is developed and rolled out across all systems.<p>What used to be vNext is now .NET Core and <i>it is brilliant</i>. It is largely open source[0], builds on open source tools and the runtime is small, fast and portable.<p>VS Code is an example of this new strategy: if Microsoft can make VS[1] and their developer toolchain (which has always been the best environment, imo) cross-platform then any app can be made cross-platform (this is working, at least in my case - I was never a .NET developer until .NET Core).<p>The advantage Windows will hold is DirectX and WPF - but for everyone else there is xwt[2] and coincidently (or not) Microsoft just bought Xamarin who wrote their cross-platform Studio product in xwt.<p>In the interim developers can use the existing cross-platform GUI toolkit: html. Bind to a local port and open the browser and point it to <a href=""http:&#x2F;&#x2F;localhost:random_port"" rel=""nofollow"">http:&#x2F;&#x2F;localhost:random_port</a> (I just happen to install Sonarr[3] this morning which does this, it means you can distribute cross-platform binaries) or write a thin platform-specific frontend.<p>[0] <a href=""https:&#x2F;&#x2F;dotnet.github.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;dotnet.github.io&#x2F;</a><p>[1] <a href=""https:&#x2F;&#x2F;www.visualstudio.com&#x2F;en-us&#x2F;products&#x2F;code-vs.aspx"" rel=""nofollow"">https:&#x2F;&#x2F;www.visualstudio.com&#x2F;en-us&#x2F;products&#x2F;code-vs.aspx</a><p>[2] <a href=""https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;xwt"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;xwt</a><p>[3] <a href=""https:&#x2F;&#x2F;sonarr.tv&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;sonarr.tv&#x2F;</a>",2016-05-21 07:01:56,11743551
2343,"I remember it all too well. I was a WPF contractor in early 2011 and Silverlight was the one of the best paying skills so it was the thing to learn until the confusion of that announcement. I got a short Silverlight role at the end of 2011 but after that things dried up totally just as I was hoping to buy a home when they were affordable.<p>I mistakenly stuck with .Net and ended up going to back end data work before returning to the web side as I had begun years before. Things are good on the web and cloud side but I stick see Xaml as too risky to go back to now, even with Xamarin.",2016-05-24 17:17:31,11763435
2344,"I&#x27;ve been trying Realm for Xamarin recently and I&#x27;ve got to say I&#x27;m pretty disappointed with it, compared to my previous experiences with EF.<p>My complaints are as follows:<p>- No enum support<p>- No inheritance support<p>- Many LINQ operations aren&#x27;t implemented, no select, no aggregate, etc. I have to do a ToList or ToArray to use these operations.<p>And that was just what came up in the first day of usage...<p>Why would I use Realm if EF7 gets SQLite Code First+Xamarin support and can do all of these things? Sure, it&#x27;s faster, but faster doesn&#x27;t matter if I&#x27;m not speed critical on my DB (most mobile apps aren&#x27;t) and I can write cleaner code. It might be better than manually writing SQL queries, but it&#x27;s a lot worse than existing ORM solutions.",2016-05-25 13:51:51,11769732
2345,"The Xamarin product is the youngest in the family (and, not officially 1.0 like the others) so we obviously have a lot to do still. :-)<p>Your complaints are noted and are more or less all in the pipeline. Our goal is definitely that you should be able to write cleaner as well as faster code than you would with EF. Thank you for your feedback!",2016-05-25 13:59:09,11769778
2346,"1. &quot;Realm is not an ORM, and is not built on top of SQLite. Instead weve built a full database for mobile app developers, one that uses native objects that are dynamically mapped to a full, custom database engine (not just a key-value store).&quot;<p>=&gt; Why not use the terms &quot;object database&quot; or &quot;OODBMS&quot;, then ?<p>2. &quot;Realm supports Java, Objective-C, React Native, Swift and Xamarin.&quot;<p>=&gt; &quot;React Native&quot; is not a language, why not just state that you support &quot;JavaScript&quot; ?<p>3. What about Python ?",2016-05-25 14:12:26,11769872
2347,"Xamarin has been highly requested, so we have tried to make it available as quickly as possible as a pre-1.0 version to get the proper input from developers like yourself as to what should be prioritized. Love to keep getting your feedback on github as well. Thanks!",2016-05-25 14:36:18,11770040
2348,"It&#x27;s a LOT of work to open-source something which has been evolving at a huge pace and is as complex as the Realm core.<p>Even just announcing the work of the Xamarin C# team that I&#x27;m on got some complaints from the public about this representing a &quot;loss of focus&quot;. So yes, you could say there was a &quot;business reason&quot; of protecting the core team whilst they got to 1.0.<p>If you look at the C++ portions included in most of the Realm open source you can see we have moved code gradually into the open source codebase. There&#x27;s not yet an official C++ API either for the same reason - it would lock in too many decisions and tie up the team.
(disclaimer - these are opinions and observations from a remote contractor, not Realm management!)",2016-05-26 03:30:04,11775169
2349,"I&#x27;ve been working with .NET, Xamarin, and Azure for a while. Those Microsoft products really are a pleasure, I have very little to complain about. Shame that it&#x27;s only these 3 MS products that justify that statement.",2016-05-27 10:08:13,11784975
2350,"Xamarin is hardly a MS product, and they shut down RoboVM pretty much immediately after purchasing Xamarin.",2016-05-27 10:41:54,11785081
2351,"I must say .net is a bit of an exception in this sad sight of microsoft&#x27;s decay. Pretty much everything they have done in the past 3 years in the .net space makes sense and is nice to Microsoft&#x27;s customers (open sourcing .net, finally delivering on platform-independence, visual studio community being pretty much a complete and fully functional IDE, buying and making xamarin free, etc).<p>For the other divisions. Windows has become an absolute shit show. Every time I go on the Azure portal I get lost. My xbox one is blowing like a leaf blower. They stopped developing Office 15 years ago (ah no, they changed the color from blue to green) and my surface pro is reminding me of my Windows 98 BSOD days.<p>Ha not, their mouses are still pretty decent.",2016-05-27 11:07:57,11785178
2352,"Bluebeam Softwares awesome engineers develop intuitive applications that revolutionize how people collaborate and share data in real time. As part of the Bluebeam team, you will use your expertise to design and develop customer-centric applications.<p>We are hiring for our Pasadena headquarters and remote offices in Boston, San Diego, and Chicago:<p>Lead Developers (2)<p>Sr. Web Application Developers<p>Sr. Frontend developers<p>Developers for our Xamarin &#x2F; Mobile and Mac teams<p>Learn more about these and other opportunities here: <a href=""http:&#x2F;&#x2F;careers.bluebeam.com&#x2F;join&#x2F;engineering"" rel=""nofollow"">http:&#x2F;&#x2F;careers.bluebeam.com&#x2F;join&#x2F;engineering</a>.<p>And more about our culture here: <a href=""http:&#x2F;&#x2F;careers.bluebeam.com&#x2F;culture"" rel=""nofollow"">http:&#x2F;&#x2F;careers.bluebeam.com&#x2F;culture</a><p>Please apply through the appropriate posting or reach out to laura.marks@bluebeam.com.",2016-06-01 20:21:14,11817804
2353,"Raizlabs | Oakland, CA | Full Time |No Remote
Interested- Reach out to Greg Clark greg.clark@raizlabs.com<p>Were looking for seasoned native Android (Xamarin.Android also acceptable) mobile developers who have shipped apps. You should understand Android inside and out and take pride in your craft. Have experience in architecting custom UIs and the ability to communicate with RESTful backends.
	Android: Obviously... 
	Android libraries: Retrofit&#x2F;OkHttp, Volley, RxJava, Gson&#x2F;Jackson, Dagger2&#x2F;Butterknife&#x2F;Roboguice, Espresso, Robolectric, Robotium, JUnit, and more. Our MO: Best library for the job
	IDEs: Android Studio, IntelliJ
	Languages: Java 6&#x2F;7&#x2F;8, Kotlin
	Build system: Gradle, Proguard, TeamCity, Bintray
	Third party services: Firebase, Google Analytics, GCM, Crashlytics&#x2F;Fabric
	APIs: We expect the entire team to contribute to API design and encourage full-stack development<p>Curious about some of our code? Check out some of our work on GitHub and let us know what you think: raizlabs.github.io",2016-06-02 12:28:04,11821908
2354,"SEEKING WORK - Remote Only<p>Senior Software Developer &#x2F; Architect<p>Location: East Coast, Canada<p>Allocation: 20ish hours per week (evenings and weekends)<p>Technologies: Python, GO, C# (Xamarin), Git,<p>Specialties: Backend development, Systems architecture, and integration.<p>Experience: 15+ years in designing, developing and deploying. have deployed several products to market,<p>Contact&#x2F;Details: <a href=""https:&#x2F;&#x2F;tanerax.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;tanerax.com&#x2F;</a>",2016-06-03 11:17:33,11829603
2355,They just bought Xamarin and killed Robovm.,2016-06-06 22:38:06,11851042
2356,"https:&#x2F;&#x2F;channel9.msdn.com&#x2F;Events&#x2F;dotnetConf&#x2F;2016&#x2F;NET-Conf-Day-1-Keynote-Scott-Hunter<p>for those who does not want to watch the full video 
.NET standard- One standard library across all the platforms full .net framework,Xamarin,.NET Core 
c#,vb.net and F# support
standardise tooling across xamarin,VS code and VS- msbuild (project.json will be merged with csproj)",2016-06-08 04:15:02,11859968
2357,"Ehhh.... These examples seem really amateurish to me. You&#x27;ll run into lots of issues developing for the web, sure, it&#x27;s not perfect. Especially web &quot;apps&quot; that need to work cross-browser. But the listed problems stem from not understanding your platform, not problems inherent to the web itself.<p>To make an analogy, it&#x27;s like the equivalent writing a native app where input and UI rendering are handled by the same thread, and then complaining that input doesn&#x27;t work during intensive operations, so javascript &#x2F; the web is better for apps, and native is terrible.<p>It&#x27;s also an unfair comparison. These statements:<p>&gt; We made a bet on the web. Built a responsive site for desktop and mobile and tried to avoid the native app space (still are).<p>And then later<p>&gt; One app for iOS, one for Android, and I got over 90% consumer coverage. I can even use a framework to share work between the two.<p>So originally with the web, they&#x27;re trying to target Desktop Chrome, Desktop Safari, Desktop Firefox, Desktop Edge, Mobile Chrome and Mobile Safari with one codebase. Then they move to only targeting Android and iOS (native mobile only) with two separate codebases? They could have just as easily targeted mobile Chrome and mobile Safari, and shared 100% of the code.<p>I&#x27;m not sure what they mean by a framework to share work between the two. If they&#x27;re referring to something like Xamarin, I hope they&#x27;ve at least tried it before assuming everything works great. They&#x27;re very unstable, and you still need separate codebases for your views, typically more. Ironically, the most stable ones of these I&#x27;ve tried have been web-dev based frameworks.<p>tl;dr: &quot;It&#x27;s cheaper to make an app for 2 platforms than for 8 you don&#x27;t understand.&quot;",2016-06-09 20:38:17,11872192
2358,"I&#x27;m running it in prod since last year and from the runtime perspective there are no issues.<p>Tooling is what sucks. MonoDevelop F# support is very unreliable. Basic refactoring, like rename, don&#x27;t work correctly every time and I had to literally do git reset few times, after renaming, as it screw up multiple files.<p>Also, editor often has visual glitches where letters get corrupted and I have to reopen the file to get it back to normal. Not something I expect from such a long time maintained application.
However, it looks like Xamarin Studio 6.0 will be much better.<p>Alternative is Visual Studio Code with Ionide plugin, but I didn&#x27;t use that beyond trying it once. Hopefully someone else can comment.<p><i>Edit: typos</i>",2016-06-10 13:03:18,11876045
2359,Xamarin Studio 6 has gotten a lot of F# support. I&#x27;ve seen a lot of folks using that for coding in F#.,2016-06-10 13:04:37,11876051
2360,"Xamarin Studio and MonoDevelop are the same, what your probably seeing are the artefacts or using an old version of MonoDevelop",2016-06-10 13:43:20,11876248
2361,"This is all I need usually:<p><pre><code>    sudo apt-key adv --keyserver hkp:&#x2F;&#x2F;keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
    echo &quot;deb http:&#x2F;&#x2F;download.mono-project.com&#x2F;repo&#x2F;debian wheezy main&quot; | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;mono-xamarin.list
    sudo apt-get install -y mono-complete fsharp monodevelop</code></pre>",2016-06-10 14:08:01,11876413
2362,"Release notes [1] say: <i>This is a preview of the upcoming Xamarin Studio 6.1 release.</i><p>Is it already released?<p>[1] <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;releases&#x2F;studio&#x2F;xamarin.studio_6.1&#x2F;xamarin.studio_6.1&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;releases&#x2F;studio&#x2F;xamarin.studio...</a>",2016-06-10 15:53:14,11877249
2363,+1 for Xamarin Studio.  That&#x27;s what we&#x27;re using for F# &#x2F; iOS &#x2F; Android.,2016-06-10 18:17:50,11878605
2364,"I&#x27;ve been in computers since the early 90&#x27;s and as far as I can see, Apple has always been hostile towards developers (and users).<p>&gt; For all those developers sitting on the sidelines refusing to develop iOS apps...<p>I&#x27;ve made a ton of money building Ionic and Xamarin apps and recommend those to anybody building for iOS because both of them will let you spend as little time using OS X as possible. The way my workflow is now, I could totally rent a cloud Mac and just compile and publish stuff from there.<p>Anyway, even though I think OS X and iOS are quite possibly the worst operating systems I&#x27;ve ever had the displeasure of using and even though I know for a fact that Apple is hostile to developers and users, I don&#x27;t mind making apps for them because I figure anyone who uses there stuff must not care about wasting money and it should be easy for me to grab some...and it is :)<p>And, like Spotify, all of my apps are subscription based with out-of-app signup, so Apple doesn&#x27;t get 30% of my money. I also only buy used Macs because Apple doesn&#x27;t get your money that way either. Right now I&#x27;m running a Mid-2012 Mac Pro with 32GB RAM that I got for ~$1,200. It was about double the money that I spent for a similar PC server, but I made all that back by taking money out of Apple&#x27;s ecosystem and not putting it back in, so I feel like that&#x27;s a win for everybody (except Apple of course, but hey - fuck them - if they&#x27;re going to be hostile to me, I&#x27;m going to be hostile to them.)",2016-06-11 15:20:22,11883726
2365,"I heartily agree with what you have said. It is the reason I am not really biting at Pony. Maybe if I needed everything else it offered, or fully understood everything else it offered?<p>The problem I see now is that the entire functional domain is so spread out - Clojure, F#, OCaml, Haskell, Idris, Erlang&#x2F;Elixir&#x2F;LFE, and even the APL&#x2F;J&#x2F;K&#x2F;Q crowd and Java&#x27;s attempt to go functional. I&#x27;m not complaining about the number of functional languages to choose from, which is good. It&#x27;s whether there will be enough critical mass in any one of the functional languages given a new non-functional language popping up every week. I don&#x27;t know.<p>Now that MS has opensourced so much, and Xamarin&#x27;s stuff is free, F# is looking better to me (again).<p>I also find myself dropping to C. C was my third language (after 6502 assembly and CPM Basic). Haskell&#x2F;Idris&#x2F;Elm are my toys of the year. I never fully dove into Haskell, but the concise, readable and very mathematical syntax agrees with my sensibilities.<p>Old! I&#x27;m 52, but I didn&#x27;t stay with programming for a living, so my age doesn&#x27;t reflect my programming experience. I did start with a CPM PET in 1978&#x2F;79, but then went on years later to do other things.",2016-06-11 17:10:55,11884249
2366,"If I were in your position, I would probably do these steps:<p>1. Make sure I know where do I stand with my personal safety net. Will I have problem with visa? What is my &#x27;runway&#x27;, i.e: when will I start having problems with paying rent&#x2F;morgage? You say you have money until the end of the year.<p>2. Then I would plan for some sort of worst-case scenario, probably something along the lines &quot;If I don&#x27;t get decent contract in 3 months I am moving somewhere cheaper&quot;, and plan accordingly, probably selling the apartment, making sure all my paperwork is in order, e.t.c. Probably would start searching for positions abroad in 2 months time?<p>3. I would try to polish up my resume. Maybe find a way to pivot from &quot;I an awesome jquery guy&quot; to &quot;My UX design is awesome and I can talk to the &#x27;serious-people&#x27;&quot; (Basically the main idea of patio11 <a href=""http:&#x2F;&#x2F;www.kalzumeus.com&#x2F;2011&#x2F;10&#x2F;28&#x2F;dont-call-yourself-a-programmer&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.kalzumeus.com&#x2F;2011&#x2F;10&#x2F;28&#x2F;dont-call-yourself-a-pro...</a>)<p>4. I would probably try to get at least some visible experience in something else than jquery. On one hand this would be to prove myself that if if I would want to pivot myself to &quot;I am a UX guy and don&#x27;t care about underlying technology that much&quot; to try out if that is actually true. Second, to have a $NON_JQUERY project on my resume. I would probably try to call some of my friends (maybe at my local church) if they needed some landing page or something, and hopefully in a month I would have something like a &quot;React landing page for $local-church-url&quot; on my resume. Ok, might not be react, might be angular 2.0, or whatever. (Disclaimer, if somebody asked how did I get Xamarin experience on my resume, I wouldn&#x27;t be that far from this made-up example :)l",2016-06-12 09:14:25,11887319
2367,"While it does comply with title rules, I feel this could use a better title - have they just moved to Github, or did someone just find Xamarin interesting and decide to post their Github page?",2016-06-12 14:10:18,11888147
2368,"Since I&#x27;m just starting to learn it, does anyone have opinions or tips around Xamarin? Specifically I&#x27;m building a toy Android app to learn the stack, but I&#x27;m curious as to just how much reusability there really is between Android&#x2F;iOS and other platforms.",2016-06-12 14:11:36,11888152
2369,"I started experimenting with Xamarin after they made it free with the open source announcement and I&#x27;m cautiously optimistic now. I can work around the works of Xamarin Studio (or the VS plugin) and I like C# and Swift about equally, but app startup time specifically seems subpar with Xamarin.<p>Edit: more on topic, the open source move is fantastic! I felt the money might be worth it for not only the tooling but also the top notch documentation, but I&#x27;ve never been able to convince any of my bosses on this.<p>Apps built with Xamarin (or a similar system where you bind to platform API&#x27;s) or so much better to build and use than these cross platform platforms.",2016-06-12 14:15:03,11888165
2370,"You must know how the UI work in both oses if you want to be capable of using xamarin efficently. Yeah, there is XamarinForms that tries to solve that problem, but it is very... bad, right now.",2016-06-12 14:18:23,11888179
2371,"I wrote a PoC (Proof of Concept) a few years ago of recompiling Xamarin iOS apps to Android without code changes and we released a few apps using that. It is especially handy for LoB (Line of Business) &#x2F; internal apps which actually are very usable like this. Clients loved it as they only had to pay once. It has parts of the Core Graphics and Core Animation implemented as the last app I ported with it was heavy on those.<p>This was before Forms came along. No clue if anyone would be interested in it, but i&#x27;m cleaning up the code to put it on github as open source.",2016-06-12 14:21:27,11888197
2372,"How does Xamarin compare with other ways to get platform native across all platforms ? There&#x27;s haxe (actionscript-like, but typed), which has lots of libraries. There&#x27;s QT. I haven&#x27;t even followed that well which others exist.",2016-06-12 14:29:11,11888226
2373,"Anyone who is serious about cross platform mobile development, whether it be Xamarin or React, needs to be well versed in Cocoa and the Android SDK.",2016-06-12 14:38:00,11888268
2374,"If you&#x27;re going to make a shared backend between Android, iOS, or other platforms Xamarin supports, I highly suggest using MvvmCross to guide the structure of your project. I&#x27;ve worked on a project with a custom backend and it was a monster of a codebase that I never was able to fully understand. However, if it&#x27;s mostly just UI and little backend, do your own backend, because MvvmCross would introduce unneeded overhead.<p>Let me know if you have any other questions.",2016-06-12 15:08:58,11888405
2375,"Xamarin forms is good for very limited uses. They give the basic layouts that each platform supports and that&#x27;s about it. So if your app is simple, it&#x27;s a great option.",2016-06-12 15:15:22,11888435
2376,"Is it better than Forms? It sounds the same, so I doubt it would be very interested for Xamarin.Forms users.",2016-06-12 15:18:33,11888460
2377,Maybe &quot;Xamarin on GitHub&quot;?,2016-06-12 15:21:46,11888472
2378,"&gt; Anyone who is serious about cross platform mobile development, whether it be Xamarin or React, needs to be well versed in Cocoa and the Android SDK.<p>Then why would I go the Xamarin route in the first place? The whole point is to avoid having to learn both platforms. Personally, I&#x27;d rather struggle with two <i>native</i> codebases than to struggle learning an imperfect abstraction that still requires me to learn both platforms.",2016-06-12 15:55:02,11888627
2379,"Twitter is the cheapest of the big networks. LinkedIn is entrenched in its market, unlike most of the others (including Instagram, Snapchat, etc.) Twitter I think would be a good buy somewhere, but Jack and his team seem inept and they probably want a massive premium.<p>When I first heard the news it made no sense; but after pondering, I think I know what they are trying to do, and it does makes sense. Also, LinkedIn was relatively cheap compared to its counterparts, I&#x27;ve already seen some shareholders raising some ire because they were trading a LOT higher not long ago.<p>Microsoft doesn&#x27;t have a good track record with big acquisitions, but this is Satya&#x27;s first and we have seen other deals turned down by him for being too rich. Salesforce being the prime example.<p>They paid with all cash (which was yielding nothing,) so now they get the benefit of a company that has pretty good revenues, is really close to profit, and they get a massive tax write off. It also integrates well with their core businesses and like I said, it&#x27;s fairly cheap.<p>Let&#x27;s not forget Satya has had some smart aquisitions lately. Minecraft &amp; Xamarin. So, maybe it&#x27;s worth having confidence in this one.",2016-06-13 12:55:15,11893336
2380,"Skype for business button on LI profiles. More stickiness for o365.<p>Data for Dynamics. People assume CRM here, and I tend to agree, but I wouldn&#x27;t discount  the ERP&#x2F;supply-chain management software play. Microsoft seems to be more interested in manufacturing than marketing.<p>Slide share integration for PowerPoint&#x2F;O365. More stickiness.<p>Lynda.com - increasing developer pool for C#&#x2F;Xamarin, which in turn means more stickiness for Visual Studio, Azure, Windows and SQL Server, Dynamics families, SharePoint.<p>Lynda.com - increasing user base for productivity software.<p>Lynda.com - future play for HR training both content and technology.<p>A truckload of content.",2016-06-13 13:42:18,11893768
2381,"MS is using and contributing to Linux, FreeBSD, Docker, Mesos, Hadoop, Clang, LLVM, Java, Eclipse, and C++. They have open sourced .Net and Xamarin.<p>TAKE YES FOR AN ANSWER. It&#x27;s over. Open Source won. Have a party and wear a little hat. Open source is everywhere and it isn&#x27;t going away. Yay!!!!<p>What&#x27;s your problem? Did you just want Microsoft to die? To disappear? You can&#x27;t always get what you want. But if you try sometimes, you just might find, that...everything you wanted to happen has really happened. Open source has never been stronger.",2016-06-14 10:52:46,11901086
2382,"Where did Microsoft employ embrace or extend before extinguishing RoboVM? They bough Xamarin for Xamarin, and ended up with a RoboVM they didn&#x27;t want. There was no RoboVM strategy there.",2016-06-14 14:27:31,11902193
2383,"I haven&#x27;t yet replaced Python, but I <i>really</i> enjoyed Dart using JetBrains&#x27; WebStorm IDE for a side project.<p>Python maps really well to a lot of the problems that I&#x27;m tackling right now professionally, but I&#x27;m considering trying to use Java for a number of them. C# may wind up  being viable for me as well; it has a chance of being a little more cross-platform with Xamarin&#x27;s purchase by MS and overtures toward OSS and Linux by integrating Ubuntu.",2016-06-14 20:43:06,11905169
2384,"Lately?<p>C# triggered by:
- Open sourcing of .NET
- Open Sourcing of Xamarin<p>I want to live in a world where writing mobile apps for multiple platforms with a single codebase becomes the de-facto way of doing things. C#&#x2F;Xamarin seems like the only viable way to achieve that.",2016-06-15 21:36:29,11912337
2385,"I&#x27;m currently in my very late 20s, looking to do a career shift from years spent in corporate IT functions to development. I&#x27;ve encountered a native startup, in the Eastern side of the European Union, who are doing full-time, non-academic programming courses for people of my age. They look promising, start off by quickly building foundations with processor basics, memory handling, i&#x2F;o, blocking, caches, linux, windows and cloud, algorithms, then move onto technologies and methodologies such as python, agile, UI&#x2F;UX, git, javascript, HTML, XML, Rest, Json, SQL and noSQL alike. After about 6-7 months they move onto OOP, and the students essentially end up as junior C# or Java developers with adequate knowledge to get internships at local companies (the startup sources you as interns, so no need for job search) who are desperate for proven quick learners. During your work at the IT company, you start paying off tuition fees monthly, at a reasonable rate, with no contract binding you to the company.<p>My ultimate goal would be to get a quick and focused programming education in a controlled environment (1.5yrs overall for the course), then by end of 2018 to leave for Switzerland. I would pay my tuition fees from there. I have no formal education in IT&#x2F;CS, and my unfinished university studies were in unrelated fields. I do have several years of experience working in relevant IT positions, however.<p>How hard is it, for a fluent English speaker and EU citizen, to find junior C# (Unity, Xamarin) developer jobs in Switzerland? I&#x27;d prefer smaller canton centers rather than large cities, as I plan to live on a farm. Learning languages is not an issue, although I would prefer French solely based on taste. I would aim for permanent employment in development, sysops&#x2F;devops&#x2F;security&#x2F;hardening.<p>Are E. Europeans discriminated against? Is it reasonable for one to apply online and do remote interviews? Are relocation packages a thing?",2016-06-17 18:41:44,11924651
2386,"Interesting, looks like this could even be used as a competitor for Swift (considering the large overlap in features). I&#x27;m surprised Microsoft didn&#x27;t open it up earlier and use it for .NET&#x2F;Xamarin.",2016-06-18 23:19:57,11931074
2387,"I just bought Lumia 640. :&#x2F; Gonna give it a try. It&#x27;s still getting Windows 10 mobile so there&#x27;s that. I think in the long run, WP&#x27;s success will depend on how easy MSFT can make it for developer to deploy onto it. Xamarin&#x27;s getting pretty close. I would love to see UWP app be unified with Xamarin.Forms and be called something else. Unified Xamarin App or something.",2016-06-23 04:58:37,11958933
2388,Cross-plateform mobile apps with Xamarin.,2016-06-25 07:35:37,11975580
2389,"As far as I remember the long term plan is to stack the remaining APIs from the full .NET on top of .NET Core.<p>So Microsoft would have: .NET Core - base for everything. .NET - Windows specific bits, Xamarin - mobile specific bits.",2016-06-27 16:36:28,11987331
2390,"Any ideas how to do GUI development with .NET Core? Is there a version of Xamarin? Are there plans to port Windows.Forms, WPF? There is this massive thread about it 
<a href=""http:&#x2F;&#x2F;forums.dotnetfoundation.org&#x2F;t&#x2F;cross-platform-wpf&#x2F;421&#x2F;90"" rel=""nofollow"">http:&#x2F;&#x2F;forums.dotnetfoundation.org&#x2F;t&#x2F;cross-platform-wpf&#x2F;421&#x2F;...</a><p>and an issue here
<a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;corefx&#x2F;issues&#x2F;5766"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;corefx&#x2F;issues&#x2F;5766</a>",2016-06-27 18:27:03,11988281
2391,Universal Windows Platform &quot;.NET Native&quot; stack is aligned with (built upon&#x2F;merging towards) .NET Core. It&#x27;s XAML-based like WPF and Silverlight.<p>ETA: Other than not cross-platform. Other option is Xamarin.Forms and would be useful to see more Xamarin.Forms targets.,2016-06-27 18:49:38,11988464
2392,"Is there a primer somewhere that explains simply what the difference and dependence is between .NET (core, foundation), ASP.NET (core, foundation), Xamarin, Visual Studio (in all it&#x27;s different flavors including VS.NET etc.) and Visual Studio Code?<p>I tried Wikipedia, and Microsoft&#x27;s own homepages for each, and am even more confused.<p>I&#x27;m a hierarchical thinker, and a hierarchical tree explaining the above would be very very helpful.<p>Disclaimer: I haven&#x27;t downloaded any of these yet. I usually don&#x27;t until I&#x27;ve understood something.<p>Bonus question: If I want to develop websites and electron apps using: HTML, CSS, Javascript and PHP, what&#x27;s the minimum set of technologies (or whatever it is that Microsoft is calling them these days) I will need?",2016-06-27 20:47:45,11989344
2393,"You can use Xamarin Studio, the Project Rider beta, or Atom&#x2F;Sublime&#x2F;TextMate with plugins.",2016-06-27 21:16:04,11989562
2394,"There is Omnisharp [1] - plugin for Atom, Brackets, Emacs, SublimeText, Vim and is built-in VisualStudio Code [2]. Also you may try Mono-develop&#x2F;Xamarin Studio [3] but it worth noting they were made especially for Mono. Both solutions are really pleasant to use and personally I prefer the second one since I use macOS&#x2F;Linux a lot.<p>[1]: <a href=""http:&#x2F;&#x2F;www.omnisharp.net&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.omnisharp.net&#x2F;</a><p>[2]: <a href=""https:&#x2F;&#x2F;code.visualstudio.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;code.visualstudio.com&#x2F;</a><p>[3]: <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;studio"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;studio</a>",2016-06-27 21:16:46,11989571
2395,"Java JRE&#x2F;SE&#x2F;JDK...  It&#x27;s really not much more confusing than what others use, and as to what you need to install for something.<p>.Net core apps should be a portable application (portable as in the runtime is compiled in)...  Yeah, it is a little confusing, and hopefully removing some of the separate terminology will help.  A lot of what has changed, is that you will likely be developing .Net Core (or Xamarin apps) that will target a given platform for running in...  Most of the rest should be cross-platform modules that install via nuget (platform&#x2F;language package manager) and bundled with the application output.",2016-06-27 21:48:26,11989791
2396,"yea, xamarin.forms targets UWP.<p>and looks like there&#x27;s a forms mac branch being somewhat worked on: <a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms&#x2F;tree&#x2F;mac"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms&#x2F;tree&#x2F;mac</a>",2016-06-27 22:44:24,11990111
2397,"Dotnet Foundation = NGO that manages various legal and org things for .NET. Think FSF for GNU.<p>.NET Core = cross platform software development platform. Includes a VM, compiler, tons of libraries.<p>ASP.NET Core = HTTP server + server side .NET libraries.<p>There is no ASP.NET Foundation, it&#x27;s all part of the Dotnet Foundation.<p>Xamarin = .NET libraries for mobile development. Wraps Android&#x2F;iOS native libraries.<p>Visual Studio = native Windows IDE for .NET and other languages.<p>Visual Studio Code = portable, Electron&#x2F;HTML 5 IDE for Javascript&#x2F;Typescript and other languages.<p>You probably want Visual Studio Code for HTML&#x2F;PHP. But you should check out .NET Core, it can replace PHP.<p>By the way, if it works, it works, but I find it better to research and do at the same time. Downloading only after you&#x27;ve understood the org chart seems a bit too radical for me :)",2016-06-28 06:56:23,11991955
2398,"Thanks for point out this, I can explain more details here:
It&#x27;s easy to write apps in C language to support both android and ios platform if using libphone. Write once, target both.
There is a similar project xamarin but it use C# and it is IDE, libphone is just a library though with also some tools for platform resources generating and layout.",2016-06-30 07:34:10,12007102
2399,"SEEKING WORK - Anywhere in US (need visa sponsorship) or remote (travel OK) - St. Peter, Russia (GMT+3)<p>Me: Full-stack software engineer since 2001, specializing in building custom web and cloud applications. Quick learner, early technology adopter, care a lot about best engineering practicies, visonary and thoughtful architectural decisions and great UI&#x2F;UX. Check out my recent OSS projects on GitHub:<p>- <a href=""https:&#x2F;&#x2F;git.io&#x2F;vecVR"" rel=""nofollow"">https:&#x2F;&#x2F;git.io&#x2F;vecVR</a> (9k stars) - &quot;isomorphic&quot; web app boilerplate (Node.js, GraphQL, React)<p>- <a href=""https:&#x2F;&#x2F;git.io&#x2F;vojYi"" rel=""nofollow"">https:&#x2F;&#x2F;git.io&#x2F;vojYi</a> (1k stars) - serverless single-page app (React, Redux, Firebase)<p>- <a href=""https:&#x2F;&#x2F;git.io&#x2F;vojY7"" rel=""nofollow"">https:&#x2F;&#x2F;git.io&#x2F;vojY7</a> (400 stars) - database schema for web apps (MSSQL, Postgres, SQLite)<p>- <a href=""https:&#x2F;&#x2F;git.io&#x2F;vojYy"" rel=""nofollow"">https:&#x2F;&#x2F;git.io&#x2F;vojYy</a> (180 stars) - cross-platform web development &#x2F;w ASP.NET Core, C# and React<p><pre><code>  Azure, .NET, C#  MSSQL, Node.js, JavaScript, Babel, Webpack, GraphQL, React, Relay
  + a little of React Native, iOS, Xamarine, F#
</code></pre>
You:<p>- [x] Have a greenfield web application (or, web+mobile) project with a great UI&#x2F;UX?<p>- [x] Need a sr. level full-stack software engineer, tech co-founder, or visionary CTO in a small startup?<p>- [x] Creating a robust, lasting solution with attention to details is important?<p>If so, let&#x27;s talk! Email: hello[at]tarkus.me, skype: koistya, or twitter: @koistya",2016-07-01 15:01:41,12016577
2400,"SEEKING WORK - NCY &#x2F; Budapest, Hungary + Remote - Full-stack Web &#x2F; mobile development team<p>ZenHeads is your remote dev team at hand, team of 8 including the founders.<p>We help build your MVP and beyond 
(ref: classport.fit &#x2F; trkr.net &#x2F; riport.co.hu &#x2F; soctics.com)<p><pre><code>  * Mobile: preferably Xamarin MVVM Cross (Android &#x2F; iOS &#x2F; WinMobile)
  * Frontend: Angular, React, Redux (turning more towards  React), D3
  * Backend: Django&#x2F;Python, Erlang (for soft realtime) 
  * Databases: Postgres, Redis 
  * Hosting: AWS or any smaller VPS. provisioning with Chef &#x2F; Fabric
  * CI: Gitlab
  * Clients from NYC &#x2F; high profile investors
</code></pre>
info@zenheads.hu<p><a href=""http:&#x2F;&#x2F;zenheads.hu"" rel=""nofollow"">http:&#x2F;&#x2F;zenheads.hu</a>",2016-07-01 16:13:06,12017341
2401,"Location: Jacksonville, FL<p>Remote: Yes<p>Willing to relocate: No<p>Technologies: Python, Delphi, Javascript, Android, C#, Xamarin, Scheme, Prolog, SQL Server, MySQL, Postgres<p>Rsum&#x2F;CV: <a href=""http:&#x2F;&#x2F;aquila.blue&#x2F;misc&#x2F;resume.html"" rel=""nofollow"">http:&#x2F;&#x2F;aquila.blue&#x2F;misc&#x2F;resume.html</a><p>Email: zephyrfalcon@gmail.com",2016-07-01 16:38:28,12017608
2402,"Location: London, UK<p>Remote: Yes, but prefer physical location<p>Willing to relocate: No<p>Technologies: Angular2, Typescript&#x2F;Javascript, Xamarin, .Net, Java, MongoDB, Oracle, Docker, many others..<p>Rsum&#x2F;CV: <a href=""http:&#x2F;&#x2F;donalfarrell.com&#x2F;cv&#x2F;DonalFarrell-CV.pdf"" rel=""nofollow"">http:&#x2F;&#x2F;donalfarrell.com&#x2F;cv&#x2F;DonalFarrell-CV.pdf</a><p>Email: donal@donalfarrell.com<p>Currently employed full-time (2 week notice..); 6+ years experience; I&#x27;m searching for something that is engaging and forward-looking.<p>Thanks, Donal",2016-07-01 16:50:13,12017711
2403,"I did use it two years ago, and it was mature enough if we followed these constrains:<p>* do not rely on Xamarin Forms, except for some menial configuration ui<p>* do not link native libraries, because fixing them after i.e Xcode upgrade can be PITA<p>* understand the difference in code-sharing with PCL Libraries and with multiple project sharing the same source folder, both have their advantages and disadvantages (PCL is usually stricter, with smaller api surface supporting more platforms, with sharing source you achieve greater code-reuse, but will have to use IFDEF)<p>I would probably choose it for a new project, but I really like C# and really dislike Objective-C :-)",2016-07-02 07:37:23,12021770
2404,SEEKING FREELANCER - Remote&#x2F;Portland Oregon<p>Looking for Xamarin Forms and&#x2F;or PHP&#x2F;Laravel developer for occasional load-leveling. We&#x27;re a small dev firm and sometimes needs help when things get too crazy.<p>Please reply to curtis [at] saltydogtechnology [dot] com.,2016-07-02 08:21:53,12021848
2405,I got the impression that Xamarin was going in that direction?,2016-07-05 15:30:01,12037080
2406,Xamarin is specifically for app and UI on Android&#x2F;iOS&#x2F;Windows Phone.,2016-07-05 16:10:04,12037409
2407,They released Mac bindings for Xamarin Forms recently. Not a stretch to imagine unified UI for desktops.,2016-07-05 16:44:16,12037713
2408,Actually that&#x27;s exactly what I imagined to happen. What would be so fundamentally different in desktop development compared to mobile UI development that would exclude it from Xamarin? I don&#x27;t see it.,2016-07-05 19:15:19,12038800
2409,"And Mac. You could write shared business logic in C# for your Windows, Mac, and mobile apps, with a combination of .NET and Xamarin, and still use C# for each native UI.<p>But it sounds like you are actually thinking of Xamarin.Forms, which allows sharing UI code on mobile platforms as well as UWP. You are correct that there is no Mac support for that.",2016-07-05 19:17:08,12038811
2410,"Are you quite sure? I don&#x27;t think this is correct.<p>Xamarin.Mac provides C# bindings to Mac desktop APIs, and has nothing to do with Xamarin.Forms.",2016-07-05 19:18:54,12038819
2411,"Bluebeam Softwares awesome engineers develop intuitive applications that revolutionize how people collaborate and share data in real time. As part of the Bluebeam team, you will use your expertise to design and develop customer-centric applications.
We are hiring for our Pasadena headquarters and remote offices in Boston, San Diego, and Chicago:<p>	Lead Developers (2)<p>	Mid-level&#x2F;Sr. Web Application Developers<p>	mid-level&#x2F;Sr. Frontend developers<p>	Mid-level&#x2F;Sr. Developers for our Xamarin &#x2F; Mobile and Mac teams<p>Learn more about these and other opportunities (and our culture) here: <a href=""http:&#x2F;&#x2F;careers.bluebeam.com&#x2F;join&#x2F;engineering"" rel=""nofollow"">http:&#x2F;&#x2F;careers.bluebeam.com&#x2F;join&#x2F;engineering</a>.<p>Please apply through the appropriate posting or reach out to laura.marks@bluebeam.com.",2016-07-05 23:41:28,12040282
2412,"SEEKING WORK - Remote (were based on the west and east coast of the US)<p>Need a native iOS or Android app? We can deliver. Were a team of three engineers with experience shipping iOS and Android apps to the App Store and Google Play. An example of what weve built can be found here: <a href=""https:&#x2F;&#x2F;itunes.apple.com&#x2F;ye&#x2F;app&#x2F;1upside-mobile-referral-management&#x2F;id1042161037?mt=8"" rel=""nofollow"">https:&#x2F;&#x2F;itunes.apple.com&#x2F;ye&#x2F;app&#x2F;1upside-mobile-referral-mana...</a><p>Services we provide:
- Have an app idea? We can walk you through every step of the process, including graphic design and server development (Node.js, Docker)
- Continuous integration&#x2F;deployment to Google Play and the App Store. Imagine if a copy of your app was automatically built and send to a list of alpha testers each time an engineer committed code. We can set that up for you.
- Automated testing with Xamarin test cloud. Have an app already made, but tired of getting bug reports and lower ratings on the app store? We can write a suite of automated user interaction tests and integrate them into your current build process<p>If you have any questions drop me a line (jhush91@gmail.com)",2016-07-05 23:50:28,12040320
2413,"If you want cross platform that compiles down to native - and gives you the option to extend with native-specific functionality - then you can&#x27;t beat Xamarin - specifically Xamarin Forms.
<a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms</a>",2016-07-06 06:23:33,12041507
2414,"I have been using Pythonista and Codea, but now I can do F# on my iPad Pro. I originally bought it for drawing, but it is slowly acquiring all of my attention.<p>Great work on Continuous! MS&#x2F;Xamarin opensource enriching an Apple product...",2016-07-07 03:03:39,12047263
2415,"because you can write&#x2F;try ios app (without recompilation, live too!), using Native iOS Libraries (UIKit, SceneKit, SpriteKit, Foundation, CoreImage) and .NET with xamarin (Xamarin.Forms, mscorlib, System.Core, FSharp.Core).<p>see the website <a href=""http:&#x2F;&#x2F;continuous.codes&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;continuous.codes&#x2F;</a> , it deserve a slow scroll.",2016-07-07 10:04:39,12048425
2416,"Okay - managed to make a simple UI Xamarin Forms script.. label, button with a single click event. It wasn&#x27;t hideous to make and it did work. I don&#x27;t know Xamarin Forms all that well, but for prototyping this could be very nice. The IDE isn&#x27;t quite there as I found more often that not, the pop up hints and help are obscured by the keyboard on my iPhone 6. I&#x27;m sure on an iPad this is much slicker.<p>Here&#x27;s a big issue though - if I develop some &quot;cool app&quot;, how do I then transfer it to a desktop for compilation and distribution? That seems like it should be an option, but I haven&#x27;t found the magic mechanism yet.",2016-07-07 12:25:32,12048852
2417,"If you develop a cool app and want to distribute it on the App Store, then you will indeed have to transfer it to a Mac and recompile it there using Xamarin&#x27;s free product. This is a mix of limitations of Continuous (doesn&#x27;t have an ARM compiler included) plus a limitation of Apple (you need a Mac per their rules).",2016-07-07 17:15:49,12050716
2418,"Yeah, that&#x27;s what his blog post said, so for him and other .Net on iOS devs (Xamarin), makes total sense there.<p>For the rest of us, casual .Net coding on the go :)",2016-07-07 20:30:36,12051893
2419,"I hear xamarin&#x27;s toolset compiles to multiple platforms, if you know csharp. kinda the route im going for my game.",2016-07-10 21:45:19,12067412
2420,"Also, Xamarin makes .NET runnable on Android with their runtime and compile it down for iOS.<p>.NET Microframework makes it runnable on IoT.",2016-07-11 14:10:07,12071128
2421,"Were looking for seasoned native Android (Xamarin.Android also acceptable) mobile developers who have shipped apps. You should understand Android inside and out and take pride in your craft. Have experience in architecting custom UIs and the ability to communicate with RESTful backends.
	Android: Obviously... 
	Android libraries: Retrofit&#x2F;OkHttp, Volley, RxJava, Gson&#x2F;Jackson, Dagger2&#x2F;Butterknife&#x2F;Roboguice, Espresso, Robolectric, Robotium, JUnit, and more. Our MO: Best library for the job
	IDEs: Android Studio, IntelliJ
	Languages: Java 6&#x2F;7&#x2F;8, Kotlin
	Build system: Gradle, Proguard, TeamCity, Bintray
	Third party services: Firebase, Google Analytics, GCM, Crashlytics&#x2F;Fabric
	APIs: We expect the entire team to contribute to API design and encourage full-stack development
	Integrated collaboration tools: We develop in a team and emphasize collaboration and code review. We use git, Slack, Jira, and Confluence.<p>Other Perks:
	Full coverage of health and dental insurance premiums for full time employees
	401(k) retirement plan with company match
	Trust-based vacation policy (take what you need)
	Continuing education assistance
	Weekly, catered team lunches
	Frequent tech talks, hack days for open exploration, and our monthly mobile meet-up, Drinks on Tap.<p>Any interest, please contact me directly- Greg Clark greg.clark@raizlabs.com",2016-07-12 15:37:26,12079917
2422,"I&#x27;m referring to Microsoft&#x27;s moves in the past year to release their compiler and other parts of the .NET toolchain (and Xamarin) as MIT-licensed open-source projects (moves the company wasn&#x27;t forced to make). Even though the language itself has been an open standard for some time, the C# ecosystem was very different a few years ago than it is in 2016.",2016-07-12 19:42:57,12081782
2423,"Very unfortunate name since &quot;Gluon&quot; is already a commercial entity, sort of a Java counterpart to Xamarin, and almost certainly has trademarks that would overlap.  Even if they didn&#x27;t, it&#x27;s still a pretty uncool move.<p><a href=""http:&#x2F;&#x2F;gluonhq.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;gluonhq.com&#x2F;</a><p>Did nobody run a simple Google search before picking the name?",2016-07-13 14:38:20,12086437
2424,"Calling Gluon the &quot;Java counterpart to Xamarin&quot; is a bit of a stretch. They are a fraction of the size of Codename One which itself is a fraction of the size of Xamarin.<p>Since they are clearly so tiny any claim to trademark might be problematic. Furthermore, the domain is different. They can&#x27;t assert computers as a domain (gluon gun from Quake if I remember correctly). It is used as a sort of umbrella name for a lot of different products they have but none of them is a programming language.",2016-07-13 18:13:04,12088380
2425,"C#... huh :)<p>Accord.Net - <a href=""http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0410&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0410&#x2F;</a><p>Microsoft WPF Examples - <a href=""http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0407&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0407&#x2F;</a><p>Xamarin.Forms - <a href=""http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0400&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0400&#x2F;</a><p>Lucene.Net - <a href=""http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0381&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0381&#x2F;</a><p>Xenko Game Engine - <a href=""http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0379&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0379&#x2F;</a><p>Space Engineers - <a href=""http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0376&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0376&#x2F;</a><p>WPF examples by the Infragistics Company - <a href=""http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0375&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0375&#x2F;</a><p>CNTK tool kit - <a href=""http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0372&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0372&#x2F;</a><p>Sony C#&#x2F;.NET component - <a href=""http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0371&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0371&#x2F;</a><p>IronPython and IronRuby - <a href=""http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0367&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0367&#x2F;</a><p>MonoDevelop - <a href=""http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0366&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0366&#x2F;</a><p>CoreFX - <a href=""http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0365&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0365&#x2F;</a><p>Roslyn - <a href=""http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0363&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.viva64.com&#x2F;en&#x2F;b&#x2F;0363&#x2F;</a>",2016-07-13 21:01:18,12089631
2426,"I think it&#x27;s rather that the java and .net framework are pretty good out of the box. So there is only a need for additional framework for certain corner cases. And then some get bought by Microsoft and integrated out of the box, like the datavisualization libraries or xamarin.<p>JavaScript on the other side is a language that only its conceptor could love. All these frameworks are sort of required to be barely productive. Which is why you end up with these big frameworks to abstract the various browsers, introduce databinding, or add static typing.",2016-07-16 14:56:12,12106520
2427,"<i>Have there been any recent languages&#x2F;environments that (have reasonably) succeeded but aren&#x27;t completely open source?</i><p>Xamarin. iOS too, although that depends on what you mean by &#x27;recent&#x27;",2016-07-19 17:54:52,12123464
2428,"My comment was because I found it interesting that they are trying the partially open source model, when it seems like that hinders adoption.  So &#x27;recent&#x27; is the competition for adoption.<p>Didn&#x27;t a lot of Xamarin get open sourced after the acquisition?  Swift is also open source, although Xcode isn&#x27;t.",2016-07-19 18:33:55,12123735
2429,"Sadly, the slider-thumb&#x2F;slider-track pseudo-element selectors haven&#x27;t been standardized yet. There are prefixed selectors available for all the major rendering engines, but we were only targeting webkit-based browsers (more specifically, we were building for a webkit-based web view in a Xamarin app for iOS and Android). CSS-Tricks has a good writeup if you&#x27;re interested: <a href=""https:&#x2F;&#x2F;css-tricks.com&#x2F;styling-cross-browser-compatible-range-inputs-css&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;css-tricks.com&#x2F;styling-cross-browser-compatible-rang...</a>",2016-07-21 12:53:33,12136480
2430,"Wow, I am the opposite. Have to move to windows every now and again to develop (Damn you Xamarin and SOE), and I hate every minute of it. Everything is harder, the hardware is crap, it seems slow and buggy.<p>I much prefer xcode on Apple.",2016-07-27 03:09:24,12170238
2431,I&#x27;m not sure the point if I were going to develop an app today I would probably use xamarin because it could be developed a lot cheaper for both platforms.,2016-07-27 14:50:47,12173243
2432,"Those are just webviews.<p>Nativescript, titanium, xamarin, or qt is where react native would be categorized with",2016-07-28 02:43:11,12178017
2433,"Well, it isn&#x27;t. But you need to have autocomplete for a better experience.<p>There&#x27;s Xamarin and other IDEs as well (I&#x27;m sure there&#x27;s an Eclipse plugin but I wouldn&#x27;t go there)",2016-07-29 18:03:41,12188633
2434,There&#x27;s Project Rider in the making.<p>Xamarin Studio - based on my experience from about 4 months ago - is beyond awful at the moment,2016-07-29 20:59:57,12189949
2435,"Apple has Swift Playgrounds as someone described.<p>Visual Studio has edit-and-continue, interactive REPL, visualizers, some sort of backtracking and now from Xamarin Interactive Workbooks.<p>Then you have the whole INotebook trend which started out with Python and nowadays supports multiple languages.<p>However all these tools are actually catching up with many of the features that Smalltalk-80, Interlip-D, Mesa&#x2F;Cedar, Lisp Machines, Oberon already had.<p>This is what Bret Victor jokes about in another presentation of him, where he pretends we are in the 70&#x27;s making predictions how the world of computers will look like in the 21st century.<p>The future of programming, <a href=""https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=8pTEmbeENF4"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=8pTEmbeENF4</a>",2016-07-31 15:30:12,12197370
2436,"&gt;  I don&#x27;t like this trend of newer (Android) apps needing 20-50MB downloads, and being so bloated for what they actually do.<p>Most of those apps are actually written in Qt, PhoneGap, Xamarin, or whatever portable flavour of the month.<p>Applications written in Java just with the Android Frameworks, are hardly above 10MB in application code, usually the rest are image&#x2F;audio resources or a collection of the &quot;Java framework of the month&quot; for Android.",2016-08-01 09:41:23,12201137
2437,"Gatecoin (<a href=""http:&#x2F;&#x2F;gatecoin.com"" rel=""nofollow"">http:&#x2F;&#x2F;gatecoin.com</a>) | Hong Kong ONSITE | Multiple Positions | Fulltime | (INTERNS also welcome, VISA sponsor)<p>We&#x27;re a regulated bitcoin&#x2F;ether(&#x2F;others) exchange in Hong Kong, with many projects in our backlog!<p>We&#x27;re looking for technical folks to fill some roles:<p>a) Devs (Frontend, Backend, Fullstack, Mobile soonish via Xamarin)<p>b) QA<p>c) SysAdmins+DBA<p>d) Security<p>e) UI&#x2F;UX&#x2F;CSS designers (Android&#x2F;iOS experience desirable too)<p>f) Hybrid roles of the above<p>We use AngularJS (moving to TypeScript) and .NET&#x2F;Mono (F# and C#), with a hybrid Linux&#x2F;Windows environment (i.e. Redis, MySQL). Get in contact to know more at andres at gatecoin dot com, using the subject &quot;Interested in Gatecoin roles&quot;.
We help with sponsorship&#x2F;relocation to HK.<p>Some nice perks we have:<p>- 10% of &quot;free to tinker&quot; time<p>- 10% of remote work time allowed<p>Want to make a difference in the cryptocurrency space? Join like-minded people to work together and help us change the world!",2016-08-01 17:51:20,12204435
2438,"Location: Jacksonville, FL<p>Remote: Yes<p>Willing to relocate: No<p>Technologies: Python, Delphi, Javascript, Android, C#, Xamarin, SQL Server, MySQL, Postgres, Scheme, Prolog, Windows, Mac OS X, Linux<p>Rsum&#x2F;CV: <a href=""http:&#x2F;&#x2F;aquila.blue&#x2F;misc&#x2F;resume.html"" rel=""nofollow"">http:&#x2F;&#x2F;aquila.blue&#x2F;misc&#x2F;resume.html</a><p>Email: zephyrfalcon@gmail.com",2016-08-01 18:15:55,12204631
2439,"There is also the possibility of installing a VNC server inside the container and a desktop environment, then connecting to that. I did this when I wanted MonoDevelop on my Mac without having to install the mandatory 3-5gb of &quot;Xamarin Studio&quot; mobile emulators etc. Btw thanks for the link back to xpra.",2016-08-02 10:24:34,12208892
2440,"Even if nothing else (sorry, UWP), Xamarin uses WPF as its view language and MSFTs recent critical acquisition I think keeps WPF alive for at least another 5 years.",2016-08-02 23:45:21,12214325
2441,"Are you sure you&#x27;re not thinking that Xamarin uses XAML and not WPF?  XAML is used by WPF, UWP, &amp; Xamarin Forms, but I don&#x27;t recall WPF being on anything other than Windows.",2016-08-03 01:02:29,12214745
2442,"React Native might look a web-based kind of toolkit but it&#x27;s not. It supports a HTMLish layout system based on Flexbox, but it&#x27;s its own native compositing and layout framework. It circumvents the HTML layouting middle layer and a browser layer. It doesn&#x27;t need any virtual DOM, for example.<p>While it might sound redundant, it&#x27;s more about making UI layout simpler, faster, and all in all more &quot;native&quot;.<p>There&#x27;s already plenty of browser view-based layout frameworks, and in general they run into the same limitations (performance, lack of native components, etc). This is an alternative solution to that. Think of it as a middle ground between Xamarin and Phonegap.",2016-08-03 13:57:43,12217914
2443,"No, not a big fan of JavaScript.<p>Right now I am using C++14, with an eye on eventually move to Xamarin.",2016-08-05 13:17:58,12232057
2444,"Exactly, that is why they bought xamarin in first place. Xamarin was key product. They will push Xamarin as hard as they can in all platforms simultaneously and since they are biggest software company in planet, I see a bright future for Xamarin.",2016-08-05 22:16:56,12236077
2445,"Regarding iOS, the purchase of Xamarin and the direction of their tooling could be made to bridge that gap as well... Not that it will, but very well could.<p>Would be nice to see Apps from VS running in Linux and macOS.  There&#x27;s been some effort that one assumes supports this direction... Also, all things to make Azure nicer to use and better as a target are in their long term interest.",2016-08-05 22:18:14,12236081
2446,"I agree, Xamarin is what will bring UWP to all the major platforms.<p>My question mark over iOS is because of how strict Apple are with approved apps. Will Apple like Microsoft bringing &quot;app parity&quot; into the iOS eco-system and more importantly will they allow it?",2016-08-05 23:14:01,12236311
2447,"What&#x27;s the USP?<p>How does it compare to Qt, Xamarin an Electron?",2016-08-06 13:53:54,12238111
2448,"It&#x27;s based on the XAML family of frameworks so lookless controls are probably the biggest differentiator between the frameworks you mentioned. Qt is C++, I&#x27;ve not tried any .Net bindings for it so I can&#x27;t really compare. Xamarin uses native controls, which just a different approach really. Electron is great but you&#x27;re embedding chromium in an OS window which doesn&#x27;t work for everyone.",2016-08-06 14:31:44,12238229
2449,Does anyone have a prediction when .NET Core will be extended to include UI?  I find this lack is the most confounding aspect of MSFTs strategy.  Is Xamarin really it?,2016-08-06 16:22:55,12238638
2450,"MSFT strategy is to develop a lightweight, cross-platform .NET runtime that can be hosted on Linux&#x2F;Windows on Azure - that&#x27;s where their ROI lies and where their .NET Core investments are focused. Their mobile&#x2F;cloud approach is about using Xamarin to develop iOS&#x2F;Android Apps that connect to backend Services hosted on Azure. Although they won&#x27;t mind if you use Swift or Java to develop native iOS Apps or deploy on Linux - just as long as you host your backend Services on Azure.<p>There&#x27;s very little incentive for them to invest in making a cross-platform Desktop UI, most x-plat UI&#x27;s suck and requires significant resources and offer little return given the most popular UI&#x27;s are either Web&#x2F;Mobile - which they&#x27;ve already got covered.<p>I&#x27;d expect the most likely UI for .NET Core is to host a .NET Core runtime with a cross-platform web-based shell using something like Electron or CEF.",2016-08-06 17:10:52,12238873
2451,"SEEKING WORK - Remote (were based on the west and east coast of the US)<p>Need a native iOS or Android app? We can deliver. Were a team of three engineers with experience shipping iOS and Android apps to the App Store and Google Play. An example of what weve built can be found here: <a href=""http:&#x2F;&#x2F;bit.ly&#x2F;1UpsideAppStore"" rel=""nofollow"">http:&#x2F;&#x2F;bit.ly&#x2F;1UpsideAppStore</a><p>Services we provide: - Have an app idea? We can walk you through every step of the process, including graphic design and server development (Node.js, Docker) - Continuous integration&#x2F;deployment to Google Play and the App Store. Imagine if a copy of your app was automatically built and send to a list of alpha testers each time an engineer committed code. We can set that up for you. - Automated testing with Xamarin test cloud. Have an app already made, but tired of getting bug reports and lower ratings on the app store? We can write a suite of automated user interaction tests and integrate them into your current build process<p>If you have any questions drop me a line 
Prince@1Upside.com",2016-08-09 17:12:04,12256093
2452,"The important point is to be able to effectively use a single (non-JS ^) programming language for mobile, browser and server-side. Ideally, to cut down on the technologies folks would have to come up to speed on and allow them to go deep with a particular language. This is beyond isomorphic apps, though, these are included. So, F# can theoretically run on the server, in the browser (via Fable [1]) and on mobile (via Xamarin Studio [2]). Clojure has a similar story since JVM languages can run on Android mobile phones&#x2F;tablets and there is ClojureScipt [3]. These are just some examples of ones I am aware of. (I wonder if there is something like Fable for Swift?)<p>Is this a pipe dream, or is there real value to this approach?<p>^ Why non-JS? Mainly because I am interested in exploring other languages that can include statically typed, compiled languages.<p>[1] https:&#x2F;&#x2F;fsprojects.github.io&#x2F;Fable&#x2F;
[2] https:&#x2F;&#x2F;www.xamarin.com&#x2F;studio
[3] https:&#x2F;&#x2F;github.com&#x2F;clojure&#x2F;clojurescript<p>Edit: styling, grammar",2016-08-10 14:12:17,12261861
2453,Appcelerator is JS rather than C# (Xamarin does use C#),2016-08-19 11:15:00,12319241
2454,"Embrace, perhaps. But I think it ends there.<p>My guess is that they wanted to keep onboarding easier for Linux types (Embrace) by creating an implementation they thought would handle the typical use case (like ls and the like) using a wrapper for their Invoke-WebRequest.<p>Unfortunately, they&#x27;ve now created a problem in that they need to modify things to prevent users of real curl from getting hosed but at the same time not breaking the Invoke-WebRequest wrapper.<p>But the goal of something like this may be no more nefarious than, say, Xamarin or similar where the goal is for reuse across systems.",2016-08-19 14:24:18,12320189
2455,"In addition to the .net core push seems a likely candidate to unify things (xamarin, .net core in Linux, etc...)",2016-08-23 15:01:22,12344246
2456,"&gt; Granted, that&#x27;s only 1 month eyeball observation vs 5 years but it seems to be consistent with my perception of how much (how little?) C#&#x2F;ASP.NET is used in the startup scene.<p>This might change as dotnet core gathers steam. Mono was not considered a solid base by most companies, especially when compared to Java, while dotnet core has the QA assurances Microsoft can provide.<p>Xamarin was also commercial and was quite expensive just 1 year ago.<p>It would be an interesting experiment to monitor &quot;Who&#x27;s hiring&quot; 2-3 years from now, I&#x27;m betting on .NET climbing quite steadily.",2016-08-23 15:16:24,12344380
2457,Xamarin. It lets you build native mobile apps on Android and iOS using C# or F#.,2016-08-23 16:34:37,12345033
2458,"I&#x27;m a C#&#x2F;MVC developer working on a fairly large e-commerce site. It&#x27;s a distributed system using message based microservices tied together using <a href=""https:&#x2F;&#x2F;particular.net&#x2F;nservicebus"" rel=""nofollow"">https:&#x2F;&#x2F;particular.net&#x2F;nservicebus</a>. There is also <a href=""http:&#x2F;&#x2F;masstransit.readthedocs.io&#x2F;en&#x2F;master&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;masstransit.readthedocs.io&#x2F;en&#x2F;master&#x2F;</a><p>Some great tooling Visual Studio, Octopus Deploy, red gate SQL source control etc<p>C#&#x2F;F# - The languages are very nice. Huge inbuilt library.<p>C# is probably one of the best statically typed, OO languages there is. For functional languages you have F#,<p>C#&#x2F;F# is starting to run on many platforms including iOS&#x2F;Android&#x2F;Linux etc See Xamarin<p>The .NET platform is the home of CQRS and event sourcing if you want MASSIVE scale.",2016-08-23 17:23:55,12345475
2459,"As with any platform there are strengths and weaknesses.  In my mind, the greatest strength of the .NET framework is the sheer number of ways you can leverage your .NET knowledge to create various types of products.  For example:<p>1. Desktop GUI applications.  WPF is in my opinion the best GUI framework for Windows, and many well-known Linux GUI apps have been made with Mono + GTK.  You can even create Mac GUI apps with Xamarin.Mac (with commercial support!).<p>2. Server&#x2F;web software.  ASP.NET MVC, ASP.NET WebAPI, NancyFX, Suave...the list goes on for various frameworks (most of which will run on Windows, Linux, and OS X).<p>3. Video games.  Unity is very commonly used.<p>4. Internet of things.  You can run .NET on a Raspberry Pi, and on various other embedded devices (again, with commercial support!).<p>5. Mobile apps.  You can write iOS and Android applications using Xamarin.  In my opinion, it&#x27;s the best tool to write native, cross-platform mobile apps (when considering tooling, enterprise support, etc.).<p>Some other great points:<p>1. C# and F# are generally considered to be very-well designed languages that support a variety of programming styles.<p>2. .NET has very broad adoption in enterprise.  We hear about Rails, Go, Node, Clojure, etc. here in the HN echo chamber, but in any town beyond the big cities you&#x27;re far more likely to find a C# or Java job.  In the next big downturn, you&#x27;ll be happy to have .NET on your resume.<p>Now of course, .NET can&#x27;t do EVERYTHING.  It&#x27;s VM-based platform, so of course there will be applications (very low memory, for instance) for which it isn&#x27;t suited.  That said, from a bang-for-your-buck perspective it&#x27;s a pretty tempting offer.",2016-08-23 18:02:40,12345901
2460,"or if you want cross platform apps - Use .NET too... Microsoft bought Xamarin and added iOS, Android, and Linux and Mac support to .Net and Visual Studio. It&#x27;s all included free in VS 2015.",2016-08-24 11:52:12,12351320
2461,Use MonoDevelop&#x2F;XamarinStudio.,2016-08-24 12:15:32,12351428
2462,"I&#x27;m going to throw my vote in for the C#&#x2F;UWP pairing. I am part of the prototype team where I work, and when I need to target Windows it&#x27;s my weapon of choice. Sometimes I can&#x27;t get access to something I need due to the sandboxing, so I&#x27;ll drop back to WPF. I am familiar with forms, but I find that UWP&#x2F;WPF&#x27;s XAML is much easier once you get used to it. I would recommend against MVVM stuff if you&#x27;re just prototyping or making small one-off apps, that is a time trap in those cases.<p>That being said, if you don&#x27;t want to hit the more &quot;Universal&quot; part of the UWP and you just want to tie into shell commands&#x2F;utilities, it&#x27;s hard to beat Python with TKinter.<p>I&#x27;ll also use Unity a lot (I was previously in games, and we do a lot of entertainment work). It&#x27;s probably not what you like, but you&#x27;ll be able to hit every non-embedded platform under the sun (including Windows and UWP, but also including Chrome, various TV&#x27;s, &amp;c). The UI system has improved a lot, and their (older) IMGUI implementation makes it super easy to wrap a UI around logic.<p>Finally, I&#x27;ll add that (especially if I know that I&#x27;m building for a specific platform), it&#x27;s hard to beat the native rendering APIs these days. They&#x27;re all super easy (all being UWP&#x2F;WPF, Android, iOS&#x27;s UIKit, and macOS&#x27;s AppKit), and will generally get out of your way. I&#x27;ve gone down the Xamarin route in the past, and it turned out to be overly difficult to build some simple apps (plus, I&#x27;ve had trouble deploying to Android in some instances).",2016-08-24 13:51:11,12351966
2463,"There are plenty of options (all biased by personal opinion) for this task. Maybe one of these projects is a good fit for you (creating consistent uis should be easy with all of these).<p>- <a href=""https:&#x2F;&#x2F;crosswalk-project.org&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;crosswalk-project.org&#x2F;</a><p>- <a href=""https:&#x2F;&#x2F;cordova.apache.org&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;cordova.apache.org&#x2F;</a><p>- <a href=""https:&#x2F;&#x2F;kivy.org&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;kivy.org&#x2F;</a><p>- <a href=""https:&#x2F;&#x2F;www.nativescript.org&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.nativescript.org&#x2F;</a><p>- <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a><p>- <a href=""https:&#x2F;&#x2F;facebook.github.io&#x2F;react-native&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;facebook.github.io&#x2F;react-native&#x2F;</a><p>#<p>- <a href=""https:&#x2F;&#x2F;www.wxwidgets.org&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.wxwidgets.org&#x2F;</a><p>- <a href=""http:&#x2F;&#x2F;nwjs.io&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;nwjs.io&#x2F;</a><p>- <a href=""http:&#x2F;&#x2F;electron.atom.io&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;electron.atom.io&#x2F;</a>",2016-08-28 13:53:02,12376494
2464,"It depends on what you mean by, &quot;cross-platform.&quot; In my world there is no such thing. You pick your target platforms and program to them. However it is common to imply &quot;major platforms&quot; (ie: <i>iOS</i>, <i>Android</i>, <i>Windows 10</i>, <i>OSX</i>). Different platforms have different requirements and will shape your solution.<p>Next... what is the application? Do you need to target native APIs? Do you have memory limitations?<p>If you don&#x27;t mind taking up a lot of memory try one of the &quot;cross platform&quot; systems like Xamarin or some Java-based solution. If you need to be more constrained try writing to the native APIs and porting your project to each target platform you need to target. Lastly if you&#x27;re highly constrained maybe you need to try an immediate-mode style library like Nuklear[0].<p>It really depends on your needs. There&#x27;s no one-size-fits-all.<p>[0] <a href=""https:&#x2F;&#x2F;github.com&#x2F;vurtun&#x2F;nuklear"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;vurtun&#x2F;nuklear</a>",2016-08-28 14:43:53,12376715
2465,Why isn&#x27;t anyone here mentioning Xamarin + GTK#?,2016-08-28 15:05:21,12376788
2466,"Gtk# only suppports gtk2.<p>(well last beta release of gtk3 binding was released 2014-06-04, but lot of APIs are missing and buggy)<p>(Xamarin said that they would not going to port xamarin studio to gtk3)<p>since gtk2 doesn&#x27;t support hi-dpi scaling, I would not recommend it.",2016-08-28 23:11:35,12378990
2467,"I&#x27;m a Java guy, I love the language, I love the ecosystem, it&#x27;s my first choice for all my projects but for some weird reason I work for a .NET shop.<p>I like the company a lot and I don&#x27;t want to leave for a Java position.<p>In the past years I always have chosen the company based on the things I could learn there.<p>I don&#x27;t like trading time for money but the trade money and info for money seems legit to me but right now it&#x27;s a special case. 
I don&#x27;t see anything that would benefit my person projects, they ( we at the .NET ) use a different DB than I do, different OS and so on.<p>Well maybe Xamarin for mobile cross development but ... let&#x27;s see how it evolves.<p>C# is an amazing language, ASP.NET MVC is a nice web framework but I already got my own stack and I wouldn&#x27;t change that.<p>I&#x27;m asking you guys, do you see any benefits I&#x27;m missing right now, besides the obvious things?<p>- I solve problems, the language doesn&#x27;t matter, it shapes the brain.<p>- C# is very similar to Java, my Java knowledge also benefits from that.<p>Do you see any other benefits I&#x27;m missing ?<p>How could I use my .NET knowledge for my own projects ? How could I extract money out of it ?",2016-08-31 17:32:20,12400015
2468,"Location: Jacksonville, FL<p>Remote: Yes<p>Willing to relocate: No<p>Technologies: Python, Delphi, Javascript, Android, C#, Xamarin, SQL Server, MySQL, Postgres, Scheme, Prolog, Windows, Mac OS X, Linux<p>Rsum&#x2F;CV: <a href=""http:&#x2F;&#x2F;aquila.blue&#x2F;misc&#x2F;resume.html"" rel=""nofollow"">http:&#x2F;&#x2F;aquila.blue&#x2F;misc&#x2F;resume.html</a><p>Email: zephyrfalcon@gmail.com",2016-09-01 15:09:46,12405838
2469,"SEEKING WORK - Remote&#x2F;Freelance, with potential for on-site trips<p>Certified Xamarin developer here with mobile cross-platform experience in everything from Xamarin.Forms to native. Designed, built and released iOS &amp; Android apps for multiple happy clients in the double digits.<p>Proficient in:<p>- cross-platform development for various screen dimensions: smartphone, watch, tv &amp; tablet<p>- MVVM architecture and adjacent libraries (MvvmCross, etc.)<p>- connecting mobile apps to backend services via REST APIs<p>- offline functionality, local storage (Sqlite, Realm, etc.) and syncing strategies<p>- authentication and sharing features using social APIs<p>- error-proofing existing mobile apps with Xamarin Test Cloud and other reporting tools<p>- designing and implementing performance &amp; optimization strategies<p>- additional services around mobile apps: UI&#x2F;UX, prototyping, server-side &#x2F; APIs work<p>Website: <a href=""http:&#x2F;&#x2F;crossplatform.io"" rel=""nofollow"">http:&#x2F;&#x2F;crossplatform.io</a><p>Linkedin: <a href=""https:&#x2F;&#x2F;linkedin.com&#x2F;in&#x2F;alexandramarin01"" rel=""nofollow"">https:&#x2F;&#x2F;linkedin.com&#x2F;in&#x2F;alexandramarin01</a><p>Email: alexandra.marin01@gmail.com",2016-09-01 17:44:29,12407343
2470,"SEEKING WORK - NYC &#x2F; Budapest, Hungary + Remote - Full-stack Web &#x2F; mobile development team<p>ZenHeads is your remote dev team at hand, team of 8 including the founders.
We help build your MVP and beyond (ref: classport.fit &#x2F; trkr.net &#x2F; riport.co.hu &#x2F; soctics.com)<p><pre><code>  * Mobile: preferably Xamarin MVVM Cross (Android &#x2F; iOS &#x2F; WinMobile) or Unity3d (VR)
  * Frontend: React, Redux, Angular (turning more towards React nowadays), D3
  * Backend: Django&#x2F;Python, Erlang
  * Databases: Postgres, Redis 
  * OS: Debian Linux
  * Hosting: AWS or any smaller VPS. provisioning with Chef &#x2F; Fabric
  * CI: Gitlab
  * Clients from NYC &#x2F; high profile investors
</code></pre>
info+hn@zenheads.hu<p><a href=""http:&#x2F;&#x2F;zenheads.hu"" rel=""nofollow"">http:&#x2F;&#x2F;zenheads.hu</a>",2016-09-01 20:00:01,12408389
2471,"I know that, but when I used 5.4 the experience was quite bad and I was quicker to just write the frontend in Java and glue it myself to standard C++11 than make use of Qt.<p>So from 5.4. up to 5.8 little seems to have changed from that comment.<p>Nowadays I just use Native OS UI language + C++ or Xamarin, both are easier for me to write portable native apps with direct support for native widgets than using QML.",2016-09-05 12:15:26,12429736
2472,"No, my understanding of .Net core is that this is also the way they want to get back on devices. I think Xamarin will ultimately be based on .net Core. And for a mobile app, you bet you need a way to manipulate images.<p>Even for websites, depends on what sort of websites you do, but I often need to display charts, so being able to generate images on the fly.",2016-09-06 06:22:30,12433950
2473,"Indeed, but there&#x27;s still a heavy focus on web applications.<p>I have written a few commercial cross-platform applications with Xamarin. They deal with images - and System.Drawing would not have been helpful to me. iOS has UIImage and Android has Bitmap.",2016-09-06 07:33:52,12434222
2474,"I&#x27;m confused. Didn&#x27;t Microsoft purchase Xamarin lately? There&#x27;s <a href=""http:&#x2F;&#x2F;www.mono-project.com&#x2F;docs&#x2F;gui&#x2F;drawing&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;docs&#x2F;gui&#x2F;drawing&#x2F;</a> and <a href=""https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;mono&#x2F;tree&#x2F;master&#x2F;mcs&#x2F;class&#x2F;System.Drawing"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;mono&#x2F;tree&#x2F;master&#x2F;mcs&#x2F;class&#x2F;System.Dr...</a> all waiting to be integrated. But I guess, this won&#x27;t happen.<p>So many people would embrace a truly cross platform framework will all bells and whistles. But instead we have this disturbing split between .NET, .NET Core and Mono.",2016-09-06 07:45:25,12434261
2475,"In the last presentation that I saw, the line was that Mono would continue to exist as a full .NET implementation to support Xamarin mobile apps. The reason given was that .NET Core was scoped as a run-time for server applications, so no work had been done on making it run on mobile devices, whilst Mono has been used in production on those platforms for some time.",2016-09-06 11:43:26,12435240
2476,"I&#x27;m still holding out for Visual Studio for Mac.APP, not crummy Xamarin or a glorified text editor.",2016-09-08 19:33:56,12456495
2477,"I find it interesting that this software isn&#x27;t designed with Xamarin for all platforms, but instead uses Electron. I mean I get it, the cross platform libraries are better in Electron, but it side steps their current cross platform initiative.",2016-09-08 19:36:01,12456516
2478,"It predates MS buying Xamarin, I think.",2016-09-08 19:38:26,12456542
2479,"VS Code Initial release: April 29, 2015
Xamarin Acquisition Announcement Feb 24, 2016",2016-09-08 19:47:39,12456630
2480,Xamarin doesn&#x27;t support the platform the editor was originally written for: the web.,2016-09-08 19:48:26,12456638
2481,"Not super relevant to the topic, but what&#x27;s with Xamarin not supporting what is arguably the most important platform? This seems like a huge weakness, especially when you can now build a React app that renders natively on web and mobile thanks to React Native.",2016-09-08 19:57:32,12456722
2482,"MVC websites, which you can do with Xamarin as well?",2016-09-08 22:07:18,12457799
2483,My impression is that Xamarin is designed to suck dollars out of corporate enterprise users who need to do something with mobile devices and can pay big bucks for Xamarin because it allows their C# devs to make a mobile app in short order. It saves them in the long run.,2016-09-08 22:41:59,12458074
2484,Isn&#x27;t Xamarin free now?,2016-09-09 02:58:16,12459374
2485,"They have a community edition but sell a corporate version with Xamarin Studio &amp; SDK (not in community edition) for an unspecified price. It used to be $1,000 per developer.",2016-09-09 15:20:08,12463013
2486,"Considering React Native and Xamarin workflows, does anyone have experience with either (or both?).",2016-09-11 02:39:38,12471788
2487,"If you don&#x27;t have any experience and programming background you should start with C&#x2F;C++ to learn basics, data structures, algorithms etc. Then you may continue with C++ or move to different language - for example, C# or even F# if you like functional. With C# you can write mobile apps for both platforms using Xamarin. Please don&#x27;t start with JS, actually try to avoid JS as much as possible because that&#x27;s not programming language - but that&#x27;s my opinion.",2016-09-11 19:56:32,12475314
2488,"Mostly to avoid compiling much code that doesn&#x27;t actually get executed. For the most part you can do everything ahead of time via static analysis (Xamarin&#x27;s iOS toolchain does this). The only exception is access of code via reflection, which is harder to statically analyze and will also invoke the JIT.",2016-09-12 10:34:15,12478518
2489,"Xamarin, I reckon?[1]<p>[1]: <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a>",2016-09-12 19:36:19,12482932
2490,"You mean, like Java, C++, C#, F#?<p><a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;platform"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;platform</a><p><a href=""https:&#x2F;&#x2F;software.intel.com&#x2F;en-us&#x2F;multi-os-engine"" rel=""nofollow"">https:&#x2F;&#x2F;software.intel.com&#x2F;en-us&#x2F;multi-os-engine</a>",2016-09-14 06:46:56,12494693
2491,"I&#x27;ve worked on both RoboVM and Mono, I can tell you first hand that these are issues that are real and have high impact on performance.<p>Android and Windows Phone don&#x27;t lock their respective managed runtimes down like Apple does lock down the likes of Mono&#x2F;Xamarin. On Android you have full access to almost everything, and on Windows Phone MS has a vested interest in exposing all required features to their managed runtime. No such luck on Apple hardware.",2016-09-14 18:48:45,12500075
2492,And I&#x27;m guessing they&#x27;re even still not counting the Xamarin employees?,2016-09-15 10:31:16,12504772
2493,"and many more but this is still not the entire list:<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;Xamarin"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Xamarin</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;PowerBI"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;PowerBI</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;MicrosoftEdge"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;MicrosoftEdge</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;yammer"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;yammer</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;OneDrive"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;OneDrive</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;MicrosoftResearch"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;MicrosoftResearch</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;LIS"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;LIS</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;DynamicsCRM"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;DynamicsCRM</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;MicrosoftDX"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;MicrosoftDX</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;ms-iot"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;ms-iot</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;microsoft-mobile"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;microsoft-mobile</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;thaliproject"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;thaliproject</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;OneGet"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;OneGet</a><p>.<p>Please take a look here: <a href=""https:&#x2F;&#x2F;microsoft.github.io"" rel=""nofollow"">https:&#x2F;&#x2F;microsoft.github.io</a>",2016-09-15 13:54:02,12506102
2494,So then UWP is basically dead for 99+% of it&#x27;s use cases.<p>For mobile: use Xamarin.<p>For desktop: use win32&#x2F;.net so you can support pre August 2016 versions of Windows.<p>For Xbox and ARM where you also need support for desktop and mobile devices: use UWP.,2016-09-15 14:15:01,12506297
2495,"There is no &quot;Xamarin for Windows&quot; there is only UWP. Xamarin spreads in the other direction giving Android and iOS a more UWP-like .NET development stack.<p>For Desktop, probably still a better idea for new development to be in UWP directly instead of converting a Win32 app.<p>This isn&#x27;t the &quot;death&quot; of UWP, this is a stopgap bridge to take the long legacy of old Windows apps and give them a new life in the UWP era, including making it much easier to migrate out of classic Win32&#x2F;.NET for newer UWP APIs, one screen at a time instead of porting the whole thing at once.",2016-09-15 15:51:15,12507151
2496,"Sorry, how does Xamarin not support this?",2016-09-15 18:24:49,12508519
2497,"I fully agree with the author about the risk of Unity as a closed source engine.<p>Unity isn&#x27;t just closed source, but your main access to the engine is through an ancient Mono .NET environment that hasn&#x27;t been updated in years due to licensing issues. The latest re-licensing of Xamarin should help here, but as with many other features Unity will be afraid to make upgrades for fear of braking compatibility.<p>This means that most of the Unity game code that will set your game apart has to be written in C# 3.0, and your memory use and performance is heavily taxed, unless you resort to platform specific native plugins. As a game developer this scales down your ambition down to mostly casual games. The type of AAA games that Unity advertises are mostly distinguished by large amount of content, but nothing innovative in gameplay or technology besides what the engine provides. I can&#x27;t imagine anyone starting a No Man&#x27;s Sky or even a next Minecraft in Unity.<p>This is sad, because about 5 years ago I was cheering for Unity and having a lot of fun with some prototypes. They know they are a mill for casual clone games too, since they are shifting their business focus to online developer services like advertising and multiplayer hosting with per-player fees.",2016-09-17 03:43:45,12519017
2498,"You&#x27;re going to call me crazy.  But using Xamarin to develop Android apps in C# via Visual Studio is seriously a better experience than using the Android Studio.  At least, that&#x27;s been my experience with simple personal projects -- perhaps if you are Facebook or Instagram that&#x27;s not the case.<p>The API is almost the same, sure.  But things like class attributes, null-coalescing, lack of Gradle, automatically generated getters and setters which can be overloaded...  I had more fun writing a personal app for fun in Xamarin than I ever did in Android Studio, which only ever frustrated me, even though I love the IDE it is based upon.",2016-09-20 05:08:42,12537200
2499,"If you still don&#x27;t like it, give Xamarin a shot (yeah I&#x27;m kind of pushing Xamarin here just because I couldn&#x27;t believe how great it was).",2016-09-20 05:10:09,12537208
2500,"Not in a year, but it wasn&#x27;t different enough to me - less verbose, but the same when I long for a Lisp or ML or Haskell for Android! Scala was a thought. And I am now looking at F# again with the recent OS works by MS and the Xamarin situation.<p>As I wrote downstream, I just need to commit to Java (or Kotlin!) I think!",2016-09-20 06:36:03,12537577
2501,Check Xamarin documentation they have some Android F# samples.,2016-09-20 07:05:40,12537706
2502,"I&#x27;ve been really enjoying Xamarin Android recently.<p>What&#x27;s nice is that most of the regular Android tutorials&#x2F;SO answers are easily translatable to Xamarin Android.<p>I have found myself just leaving the word <i>Xamarin</i> when I google something, as the ordinary Android resources are good enough.",2016-09-20 09:10:47,12538132
2503,Want to hear others&#x27; overall experience on Xamarin too.<p>It looked like it&#x27;s just a middle ground that does neither as good as the native solutions. Was hoping MS will accelerate it to be more competitive.,2016-09-20 09:33:46,12538206
2504,"I know Java since it was introduced in 1996 and had experience targeting J2ME, so learning Android wasn&#x27;t that complicated to me.<p>I own a few PacktPub books that I like, namely:<p><a href=""https:&#x2F;&#x2F;www.packtpub.com&#x2F;application-development&#x2F;asynchronous-android-programming-second-edition"" rel=""nofollow"">https:&#x2F;&#x2F;www.packtpub.com&#x2F;application-development&#x2F;asynchronou...</a><p><a href=""https:&#x2F;&#x2F;www.packtpub.com&#x2F;application-development&#x2F;android-application-development-cookbook-second-edition"" rel=""nofollow"">https:&#x2F;&#x2F;www.packtpub.com&#x2F;application-development&#x2F;android-app...</a><p><a href=""https:&#x2F;&#x2F;www.packtpub.com&#x2F;application-development&#x2F;android-database-programming"" rel=""nofollow"">https:&#x2F;&#x2F;www.packtpub.com&#x2F;application-development&#x2F;android-dat...</a><p><a href=""https:&#x2F;&#x2F;www.packtpub.com&#x2F;application-development&#x2F;android-ui-design"" rel=""nofollow"">https:&#x2F;&#x2F;www.packtpub.com&#x2F;application-development&#x2F;android-ui-...</a><p>I don&#x27;t know that book, so I cannot judge it, but it is important to try to use your interests as an idea for a possible app that you could use as learning process.<p>If you stay on Java side than using something like LibGDX will help on the game programing ideas. Or if you prefer to jump into the &quot;wonders&quot; of NDK, then something like SDL or Cocos2D-x.<p>For the Xamarin side, have you read the Petzold book?<p><a href=""https:&#x2F;&#x2F;blogs.msdn.microsoft.com&#x2F;microsoft_press&#x2F;2016&#x2F;03&#x2F;31&#x2F;free-ebook-creating-mobile-apps-with-xamarin-forms&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blogs.msdn.microsoft.com&#x2F;microsoft_press&#x2F;2016&#x2F;03&#x2F;31&#x2F;...</a><p>Regarding about using wanted programming languages, my experience with Turbo Pascal, Delphi, Oberon, Smalltalk and many other languages is that straying away from the true path of OS SDK supported languages usually ends in pain as the productivity gains get wasted battling interoperability issues, lack of tool support from the OS vendor and writing FFI bindings.<p>So nowadays although I dabble in lot of languages, for production code I only use the OS SDK supported languages.",2016-09-20 10:13:36,12538324
2505,"If no one used it, they wouldn&#x27;t be adding better support for it.<p>The NDK is pervasively used by many many applications; that&#x27;s why it&#x27;s getting more support.<p>For some reason this seems unpopular with the android team, who seem to keep trying to avoid the issue when ever its raised at I&#x2F;O...but hey, clearly at least someone is paying attention to what the statistics are showing.<p>Sure, it&#x27;s some extra hoops to jump though; but shared business logic that you can use on any code base on any platform; that&#x27;s a really really <i>compelling</i> reason to use the NDK, or one of the stacks based on it (eg. Xamarin, react native).<p>It&#x27;s not just for some edge case. The biggest players in the field are doing this.<p>I think it&#x27;s misrepresentative to try to characterize this as &#x27;just for games&#x27;...",2016-09-20 11:53:59,12538775
2506,"Well, Scaloid is a thing, so you might want to check it out.  AFAIK, it is not really popular for Android development, but it makes some people really happy, like predictive keyboards creators.<p>As for Xamarin, it really depends on what you want to do. If this is just a hobby project, well go for it.  
Otherwise, the only use case where it is really interesting is when you need to write an app for both iOS &amp; Android on the cheap.",2016-09-20 20:55:42,12543328
2507,I should also mention that we&#x27;ve found React Native to be far more productive to use than Appcelerator or Xamarin. Not sure what the author used to determine those charts near the bottom.,2016-09-22 22:44:41,12560964
2508,"- No clear roadmap<p>Indeed this would be nice to have!<p>- No guarantees from Facebook about longevity<p>As more products within Facebook (eg: Instagram) and companies outside of Facebook are depending on this (Airbnb, Netflix, Alibaba, Microsoft, Baidu, Uber), there is a bigger community of folks who share the burden of keeping it going.<p>- Legal concerns<p>This is the same license as React. Given the breadth of companies depending on React (all of those mentioned above, plus thousands more), I suspect that their legal departments considered it to be acceptable. If you don&#x27;t, that&#x27;s certainly fine!<p>- JavaScript problems<p>JavaScript does have plenty of problems, but it&#x27;s also what enables a lot of the nice things about React Native (x-platform, ota updates, resource sharing -- as the author identified).<p>- Alternate frameworks: Xamarin, Appcelerator<p>I&#x27;d like to see the author write a similar assessment of these tools! It&#x27;s worth noting that the author seemed to be unaware of the existence of React Native for UWP, maybe that would alter his assessment.",2016-09-23 01:08:15,12561621
2509,"Interesting. I&#x27;ve used C# heavily at my last couple of jobs and it has all been server side web work - mostly back ends of web apps, but also services and microservices of various kinds.<p>From talks with coworkers, the impression I&#x27;ve gotten is that most C# in the wild is running server side, though there&#x27;s obviously a lot of it in desktop apps, and on mobile with Xamarin.",2016-09-23 11:38:22,12563802
2510,"There is no need to complain about Javascript once again, we know it all, the Flow criticism about the percentage of .js files is ridiculous, what is the percentage of Xamarin C# in all C# files ? The whole number is more important that the ratio. Also the portability of Xamarin is overestimated, you choose to use native non portable components or non native one but portable. The longevity of Xamarin is also overestimated, this is closed source software where React Native is open.
This is not a good article overall.",2016-09-23 14:53:51,12565042
2511,"I started using Xamarin to develop an Android app, expecting the Xamarin platform to be some gross in-between which only exists to squeeze just a few more developers onto C#.<p>But, no joke, it&#x27;s a BETTER experience than Android Studio.  I had a much better time using Xamarin Studio (on OS X) and Visual Studio with Xamarin (on Windows) than I ever did with Android Studio.  And not just because of the tools: C# provides so many great features that make Android development awesome on it.  And the API is essentially the same as the true Android Java API; I found myself googling &quot;start an activity on Android&quot; rather than &quot;Xamarin start an activity on Android&quot; because it&#x27;s all done the same way.<p>I normally don&#x27;t obsess about my code looking clean and beautiful, but when I wrote my simple app in C# it shorter and easier to read than when I did it in the Android Studio.",2016-09-26 17:28:01,12583767
2512,It&#x27;s the API definition that will be shared by .net Core&#x2F;full framework&#x2F;asp.net&#x2F;xamarin.,2016-09-26 17:51:14,12583972
2513,"For me, the biggest downside to AS is its reliance on graddle. I used AS pretty extensively and I honestly feel like the Eclipse workflow was much better.<p>I&#x27;m curious about Xamarin. I&#x27;ve been weary of cross platform tools since the days of trying  to use phone gap but I understand the current gen of tools are much better.",2016-09-26 18:30:47,12584362
2514,"I can see that being a problem. Let me try to explain:<p>* We&#x27;ve concrete .NET platforms, such as .NET Framework, .NET Core, and Xamarin. They are the moral equivalent of Linux distributions.
* With .NET Standard we now have shared specification that dictates which APIs all these platforms have to implement. That&#x27;s the moral equivalent of POSIX.",2016-09-26 18:58:19,12584592
2515,"We probably should have mentioned Linux explicitly but it&#x27;s part of the very first diagram: .NET Core runs on many Linuxes, Xamarin runs on Android&#x27;s version of Linux.<p>We highly care about making it easy to write code that works cross-plaform, especially on Linux. That&#x27;s why we created .NET Standard!",2016-09-26 19:15:54,12584742
2516,"Small correction: .NET Core _will_ implement it. It has to grow quite a bit to get there.<p>At least, that&#x27;s my reading, but they manage to be fairly confusing by mixing present tense and future tense with two different names:<p><i>&quot;- .NET Standard is a set of APIs that all .NET platforms have to implement. This unifies the .NET platforms and prevents future fragmentation.<p>- .NET Standard 2.0 will be implemented by .NET Framework, .NET Core, and Xamarin. For .NET Core, this will add many of the existing APIs that have been requested.<p>- .NET Standard 2.0 includes a compatibility shim for .NET Framework binaries, significantly increasing the set of libraries that you can reference from your .NET Standard libraries.<p>- .NET Standard will replace Portable Class Libraries (PCLs) as the tooling story for building multi-platform .NET libraries.&quot;</i><p>So, do we have <i>&quot;.NET Standard&quot;</i> now and <i>&quot;.NET Standard 2.0&quot;</i> in the future? If so, why don&#x27;t they say &quot;.NET Standard 2.0 <i>will include</i> a compatibility shim for .NET Framework binaries&quot;?<p>On the other hand <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;standard&#x2F;blob&#x2F;master&#x2F;netstandard&#x2F;pkg&#x2F;NETStandard.pkgproj"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;standard&#x2F;blob&#x2F;master&#x2F;netstandard&#x2F;p...</a> seems to indicate the two are synonyms, and version 2.0 is the first version of this framework.",2016-09-26 20:32:47,12585304
2517,"Something about their own diagram bugs me: its clear that Xamarin covers a wide variety of targets all by itself so (on the surface) it already seems to have an architecture that handles new APIs well.  Shouldnt the logical course be to extend Xamarin and encourage developers to migrate to that?<p>Given Xamarin code that works on Macs, iOS and Android, <i>no one</i> would call Microsofts layer of peanut butter the API to rule them all except Microsoft.",2016-09-26 22:19:07,12586092
2518,"No. Think of UWP as WinRT + .NET Core. While .NET Core is available for Linux, WinRT isn&#x27;t. Within UWP the UI stack is provided by the WinRT side.<p>Xamarin has an abstraction layer for UI called Xamarin Forms. This will allow you share UI code across .NET Framework, UWP, iOS, and Android.",2016-09-26 22:48:55,12586281
2519,"Is there any plan, even a low priority one, for picking up maintenance for something like Gtk# or Xwt or Eto.Forms? Or for extending UWP or Xamarin.Forms to Linux?",2016-09-26 23:29:42,12586485
2520,"&gt; good tooling on all platforms<p>Eh... I&#x27;ve run into loads of trouble with F# and Mono, and with .NET Core you have to deal with platform fragmentation if you use any NuGet packages. Editors are pretty good across platforms now (as long as you stay far away from Xamarin Studio&#x2F;Mono Develop), but I wouldn&#x27;t call it &quot;good&quot; for non-Windows platforms.",2016-09-27 03:49:09,12587322
2521,"Actually this makes it easier.  It expands the subset of the .NET Framework that .NET Core supports.  It&#x27;s the same APIs we have used forever, just more of which are now available on other platforms (.NET Core, Xamarin)",2016-09-27 05:25:25,12587608
2522,"Xamarin does not &quot;wrap&quot; the API in the traditional, it just provides a binding - calling a method in C# actually calls the underlying native method. The classes are just proxy classes and do not actually have anything more&#x2F;less that does not exist in native code.",2016-09-27 16:15:32,12590712
2523,"Unless I&#x27;m wrong, the only listed alternatives are both paid and closed source. Xamarin (requires VS Pro) or Appcelerate (requires $480-$1200&#x2F;year&#x2F;developer).",2016-09-27 21:00:24,12593159
2524,"I believe Xamarin is now free post the MS acquisition with various parts and pieces even becoming open source:<p><a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-for-all&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-for-all&#x2F;</a>",2016-09-27 21:11:25,12593259
2525,"Others have mentioned Xamarin is free and (mostly? entirely?) open source now. See also NativeScript [1].<p>And TypeScript solves 80% of his complaints. A good linter with ruleset hits most of the remaining 20%.<p>Cross-platform <i>is</i> the way to go in 2016. It&#x27;s a waste to write in Swift and Java to cover two platforms.<p>[1] <a href=""http:&#x2F;&#x2F;nativescript.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;nativescript.com&#x2F;</a>",2016-09-27 21:34:41,12593428
2526,Xamarin is now both free and Open Source.,2016-09-27 21:36:07,12593442
2527,"I was actually looking here:
<a href=""https:&#x2F;&#x2F;store.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;</a><p>Apparently the free version has usage restrictions? I do consider free w&#x2F; Visual Studio Pro license not <i>really</i> free.<p>EDIT: The licensing pages are confusing but you&#x27;re right, my mistake.",2016-09-27 23:14:00,12594093
2528,"Yeah, but why use another patch on top of a patch where there are modern type-safe languages like Swift. JS has its uses, but it&#x27;s difficult to debug, doesn&#x27;t take advantage of all the advances in modern languages design that help prevent whole classes of bugs, and carries a lot of baggage. The only benefit would be universal app development, but even then Xamarin seems like a better choice.",2016-09-28 00:11:49,12594424
2529,"Speaking of Xamarin.<p>RN supports iOS, Windows, and Android. Plus RN is somewhat close to React, so some code could be reused between the two. Plus you get out-of-band code updates!<p>Xamarin supports iOS, Windows, and Android. But there is no web story. Or is there?",2016-09-28 01:22:35,12594739
2530,"From the article:<p>&gt; Compared to React Native, both Xamarin and Appcelerator have better prospects at longevity. Appcelerator (the maker of Titanium) (runs on apps installed on 350 million devices) was acquired in January 2016<p>Last time I tried (circa 2013) Appcelerator seemed a bit unpolished and the tooling was sub-par (I vaguely remember of some hacks needed to get their custom IDE runnning on Windows), I would like to know how are they doing now. Could anyone familiar with it summarise their recent developments?",2016-09-28 03:21:42,12595225
2531,"The anti JavaScript ranting is tedious and redundant, however he points out that virtually no React Native code uses Flow, etc., so it&#x27;s an unused solution. The point about React having hundreds of dependencies is also well taken.<p>While I&#x27;m at it, I find the graphs towards the end claiming, for example, that using Xamarin (or Appcelerator) is more productive than React Native, or implying Swift is barely shy of perfectly safe to stretch credulity.<p>Finally, Javascript&#x27;s &quot;slow&quot; state of development is a feature as well as a weakness, just as Swift&#x27;s rapid pace of development is both a weakness and a feature. React itself progresses at a breakneck pace.",2016-09-28 12:53:24,12597240
2532,"I simply cannot bring myself to use Appcelerator or Flutter. Isn&#x27;t Appcelerator expensive (like Xamarin used to be)? Xamarin is ok, but keep in mind unless you use Forms, you are still using the iOS and Android SDK&#x27;s so you still need to be proficient in both, so it is not as xplat as you think. Flutter would be ok, but I don&#x27;t trust Google with Dart and it looks extremely underpowered with no community.",2016-09-28 14:58:22,12598134
2533,"&gt; Yeah, but why use another patch on top of a patch where there are modern type-safe languages like Swift.<p>The JavaScript toolchain is more than good enough to build the kinds of applications that React Native targets.  Most of these applications aren&#x27;t stellar apps that require critical performance or rigorous type checking, they&#x27;re just dumb front-ends to REST endpoints. If you&#x27;re going to build an awesome app, then use better tools.<p>The reason I would use React over Xamarin is simple:  Speed of training and development.  I can hire, train and get a React developer up and running and building proof-of-concepts a lot quicker than on Xamarin.",2016-09-28 15:16:44,12598302
2534,With Xamarin now being free you can target mobile with C#&#x2F;XAML as well.,2016-09-30 01:06:27,12609947
2535,"Responses to each category...<p>1. uncertain roadmap<p>It&#x27;s open-source, and given the amount of contribution and efforts to get third party targets for windows, ubuntu and mac I seriously doubt it&#x27;s going anywhere any time soon.<p>If you look at React proper, it&#x27;s not much different, and that has gone incredibly well... React has some of the best diagnostic information in terms of error&#x2F;warning states of any web ui tooling I&#x27;ve used.<p>2. Patent grant<p>The reason for the separate patent grant is because a copyright license, particularly a permissive one like BSD (or MIT, ISC, etc) do not specify patented parts of the application.  MS-PL iirc was basically an MIT-like license with a patent grant (with nuclear deterrent) attached.<p>Most large companies that are publishing larger open-source tools have similar clauses to their patent grants.  That said, I&#x27;m against software patents as a rule, so this concerns me very little.<p>Hell, Apple&#x27;s swift license has a similar provision...<p><pre><code>      ... If You
      institute patent litigation against any entity (including a
      cross-claim or counterclaim in a lawsuit) alleging that the Work
      or a Contribution incorporated within the Work constitutes direct
      or contributory patent infringement, then any patent licenses
      granted to You under this License for that Work shall terminate
      as of the date such litigation is filed.
</code></pre>
3. JavaScript<p>I won&#x27;t argue the merits of JS over other languages... I will say that I&#x27;ve enjoyed working with it, it&#x27;s my favorite language, warts and all, and that you can write horrible code in any language.<p>There&#x27;s TS, flow, eslint and many other tools to help with issues there.<p>The cartoon illustration predates npm, es6 and a lot of other work towards making things a lot better.  Also, you&#x27;ve already invested into React*, then you may as well invest in babel&#x2F;es7+, redux and a handful of other options that do add a direction.<p>3. Dependencies<p>That&#x27;s the nature of large software projects... also, with node ecosystem, it means that React doesn&#x27;t have to re-create a lot of work that has already been done.<p>4. Alternatives<p>As to Xamarin and Appcelerator, what about web and desktop targets?  You will have to re-create a large amount of your codebase, and even non-ui bits in order to support them.<p>SUMMARY:<p>In general, I understand your arguments... but you&#x27;re missing one...  You can use a single unifying platform and language for all of your front end and back-end code while being able to target pretty much every platform in wide use with minimal changes.<p>The JS&#x2F;npm ecosystem is one of the most vibrant in developer history, while a mixed blessing sometimes, it does work incredibly well.",2016-09-30 17:55:10,12614048
2536,"What&#x27;s amazing is watching the big names on the Xamarin team elegantly talk patiently around what seems to be the majority complaint: &quot;I updates my OS and Xcode on the same day and Xamarin a diff day.&quot;<p>Apple is just... When you&#x27;re not on their golden iOS path they break thinks horribly with every release. Each time we need to address our build systems and practices and see why our shell scripts broke, why our cc workflows broke, why our interaction with the OS&#x27;s cert store broke, etc.<p>Xamarin has made the perhaps-bad but surely unavoidable decision of building their iOS house on shifting sands. I get frustrated when iOS developers don&#x27;t acknowledge this and act like everyone should be 100% onboard with every OS and XCode update instantly.<p>I usually wait months before upgrading, myself. I&#x27;ve never had anything but trouble trying to be on the cutting edge for what amounts to almost no features or performance updates I care about.",2016-10-01 19:35:19,12619523
2537,"Gatecoin (<a href=""http:&#x2F;&#x2F;gatecoin.com"" rel=""nofollow"">http:&#x2F;&#x2F;gatecoin.com</a>) | Hong Kong ONSITE | Multiple Positions | Fulltime | (INTERNS also welcome, VISA sponsor)<p>We&#x27;re a regulated exchange for bitcoin, ether and other blockchain assets based in Hong Kong, with many projects in our backlog!<p>We&#x27;re looking for technical folks to join our growing international team of blockchain technology specialists:<p>a) Devs (Frontend, Backend, Fullstack, Mobile soonish via Xamarin)<p>b) QA<p>c) SysAdmins+DBA<p>d) Security<p>e) UI&#x2F;UX&#x2F;CSS designers (Android&#x2F;iOS experience desirable too)<p>f) Hybrid roles of the above<p>We use AngularJS (moving to TypeScript) and .NET&#x2F;Mono (F# and C#), with a hybrid Linux&#x2F;Windows environment (i.e. Redis, MySQL). Get in contact to know more at andres at gatecoin dot com, using the subject &quot;Interested in Gatecoin roles&quot;.<p>We help with sponsorship&#x2F;relocation to Hong Kong.<p>Some nice perks we have:<p>- 10% of &quot;free to tinker&quot; time<p>- 10% of remote work time allowed<p>- International, friendly work environment<p>Want to make a difference in the blockchain space? Join like-minded people and work together to bring about the decentralized financial revolution!",2016-10-03 16:54:48,12629123
2538,"SEEKING FREELANCER - London, UK or Remote<p>Always looking for great React Native or Xamarin developers. My email: martin@getcodified.com",2016-10-03 17:09:54,12629267
2539,"SEEKING WORK - NYC &#x2F; Budapest, Hungary + Remote - Full-stack Web &#x2F; mobile development team<p>ZenHeads is your remote dev team at hand, team of 8 including the founders.<p>We help build your MVP and beyond (ref: classport.fit &#x2F; trkr.net &#x2F; riport.co.hu &#x2F; soctics.com)<p><pre><code>  * Mobile: preferably Xamarin MVVM Cross (Android &#x2F; iOS &#x2F; WinMobile) or Unity3d (VR)
  * Frontend: React, Redux, Angular (turning more towards React nowadays), D3
  * Backend: Django&#x2F;Python, Erlang
  * Databases: Postgres, Redis 
  * OS: Debian Linux
  * Hosting: AWS or any smaller VPS. provisioning with Chef &#x2F; Fabric
  * CI: Gitlab
  * Clients from NYC &#x2F; high profile investors
</code></pre>
info+hn@zenheads.hu<p><a href=""http:&#x2F;&#x2F;zenheads.hu"" rel=""nofollow"">http:&#x2F;&#x2F;zenheads.hu</a>",2016-10-03 17:24:25,12629399
2540,"SEEKING WORK - Remote&#x2F;Freelance, with potential for on-site trips<p>Certified Xamarin developer here with mobile cross-platform experience in everything from Xamarin.Forms to native. Designed, built and released iOS &amp; Android apps for multiple happy clients in the double digits.<p>Proficient in:<p>- cross-platform development for various screen dimensions: smartphone, watch, tv &amp; tablet<p>- MVVM architecture and adjacent libraries (MvvmCross, etc.)<p>- connecting mobile apps to backend services via REST APIs<p>- offline functionality, local storage (Sqlite, Realm, etc.) and syncing strategies<p>- authentication and sharing features using social APIs<p>- error-proofing existing mobile apps with Xamarin Test Cloud and other reporting tools<p>- designing and implementing performance &amp; optimization strategies<p>- additional services around mobile apps: UI&#x2F;UX, prototyping, server-side &#x2F; APIs work<p>Website: <a href=""http:&#x2F;&#x2F;crossplatform.io"" rel=""nofollow"">http:&#x2F;&#x2F;crossplatform.io</a><p>Linkedin: <a href=""https:&#x2F;&#x2F;linkedin.com&#x2F;in&#x2F;alexandramarin01"" rel=""nofollow"">https:&#x2F;&#x2F;linkedin.com&#x2F;in&#x2F;alexandramarin01</a><p>Email: alexandra.marin01@gmail.com",2016-10-03 17:46:59,12629621
2541,"Seeking work | Remote or UK<p>Full-stack developer with 10 years experience working on Ecommerce sites.<p>I can help with, A&#x2F;B testing, SEO, payment gateways, analytics, etc.<p>I have strong experience with PHP&#x2F;JS&#x2F;Angular&#x2F;SQL&#x2F;Git<p>But also some experience with, Java&#x2F;Xamarin&#x2F;node.js",2016-10-03 18:15:04,12629890
2542,"SEEKING WORK - SF Based, Remote Only<p>Our team at Rebel Idealist (<a href=""https:&#x2F;&#x2F;rebelidealist.com"" rel=""nofollow"">https:&#x2F;&#x2F;rebelidealist.com</a>) is smart and detailed oriented. We are a company of talented Rails &amp; JS dev, Designers, &amp; mobile developers (iOS, Android, &amp; Xamarin)<p>Please take a look at our recent design &amp; dev work:<p>Full Stack Web App Development
Crowdr: Live Video <a href=""https:&#x2F;&#x2F;crowdr.tv"" rel=""nofollow"">https:&#x2F;&#x2F;crowdr.tv</a> 
Big Idea Canavas: <a href=""http:&#x2F;&#x2F;bic.technium.com"" rel=""nofollow"">http:&#x2F;&#x2F;bic.technium.com</a>
Crowdfunding for Physics <a href=""https:&#x2F;&#x2F;fiatphysica.com"" rel=""nofollow"">https:&#x2F;&#x2F;fiatphysica.com</a> 
Donorbox: <a href=""https:&#x2F;&#x2F;donorbox.org"" rel=""nofollow"">https:&#x2F;&#x2F;donorbox.org</a> ($6mm in donations processed) 
Columbia College: <a href=""http:&#x2F;&#x2F;columbiasc.edu"" rel=""nofollow"">http:&#x2F;&#x2F;columbiasc.edu</a>  
Web Game: <a href=""http:&#x2F;&#x2F;gamesforamerica.org"" rel=""nofollow"">http:&#x2F;&#x2F;gamesforamerica.org</a><p>Mobile
Jornalera wage theft app
Android: <a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=jornalero.droid"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=jornalero.droi...</a>
iOS: <a href=""https:&#x2F;&#x2F;appsto.re&#x2F;us&#x2F;yLsCcb.i"" rel=""nofollow"">https:&#x2F;&#x2F;appsto.re&#x2F;us&#x2F;yLsCcb.i</a>
Parking app <a href=""http:&#x2F;&#x2F;imgur.com&#x2F;a&#x2F;riSJF"" rel=""nofollow"">http:&#x2F;&#x2F;imgur.com&#x2F;a&#x2F;riSJF</a><p>UI &#x2F; UX Design
Crowdr <a href=""https:&#x2F;&#x2F;crowdr.tv"" rel=""nofollow"">https:&#x2F;&#x2F;crowdr.tv</a> 
Wage theft app: <a href=""https:&#x2F;&#x2F;invis.io&#x2F;796NFHXP6"" rel=""nofollow"">https:&#x2F;&#x2F;invis.io&#x2F;796NFHXP6</a>
Parking app: <a href=""http:&#x2F;&#x2F;imgur.com&#x2F;a&#x2F;riSJF"" rel=""nofollow"">http:&#x2F;&#x2F;imgur.com&#x2F;a&#x2F;riSJF</a>
Donorbox <a href=""https:&#x2F;&#x2F;donorbox.org"" rel=""nofollow"">https:&#x2F;&#x2F;donorbox.org</a> 
Big Idea Canvas: <a href=""http:&#x2F;&#x2F;bic.technium.com"" rel=""nofollow"">http:&#x2F;&#x2F;bic.technium.com</a><p>If interested, please email me charles[at]rebelidealist.com
Thanks",2016-10-03 18:29:00,12630018
2543,"Microsoft is hiring, we&#x27;ve got a lot of openings world wide.<p><a href=""https:&#x2F;&#x2F;careers.microsoft.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;careers.microsoft.com&#x2F;</a><p>I have worked here for 8+ years now and I have to say its a really amazing company to work for. If you don&#x27;t know about Microsoft culture, we&#x27;ve got a ton of smart people and the atmosphere supports people through the good and bad times in their life, while enabling them to be successful.<p>The only thing worth noting is that most of the jobs at Microsoft when it comes to &quot;build products&quot; tends to be in Redmond, WA. We do have dev centers in other places like our ALM group in NC, or Xamarin mobile team in Boston, but again I just mean &quot;majority&quot; not all when I say &quot;Redmond&quot; :).",2016-10-03 20:35:08,12631084
2544,"Currently there are only two major mobile operating systems: Android and iOS. Attempts to create new operating systems, such as Firefox OS, have been met with initial fanfare then quickly followed by disappointment at the inevitably nonexistent adoption.<p>It seems that the biggest barrier to entry for a new mobile OS is the App Store and Play Store. Why would anyone spend hundreds of dollars on a phone with no access to the most popular apps? And why would anyone build apps for a phone nobody is using?<p>This barrier to entry would be substantially lower if it were easy for developers to port existing apps to a new mobile OS.<p>Toolchains like Xamarin, and more recently, react native, have made it easier than ever before to cross compile apps from one codebase to multiple platforms. Currently these tools only target Android, iOS, and web. But is there any reason they could not target any new mobile OS that arrives?<p>As cross compilers begin to reach feature parity with native compilers, and more developers build apps with them, will there be an opportunity for a new mobile OS to take advantage of the prevalence of this cross compilation?<p>Maybe this is even Facebook&#x27;s plan for react native. Build the tooling to decouple app development from OS target. Then once adoption is high enough, release a Facebook Phone and FBOS that can take immediate advantage of the many apps built with its tooling, to launch with an acceptably full App Store.<p>What does HN think?",2016-10-04 20:02:42,12638914
2545,That&#x27;s a good question. If I want to write a cross-platform tool I wouldn&#x27;t know what to choose either (besides electron that is).<p>Maybe Xamarin?,2016-10-06 05:59:50,12650521
2546,"The approach I use on my hobby projects between Android and WinRT (nowadays UWP).<p>A MVVM architecture with the business logic in C++, and views written in Java, C++&#x2F;CX.<p>It used to be less effort than trying to make Qt look like native UI, while at the same time having to write wrappers for the platform APIs not supported by Qt.<p>Other alternative I am now looking into, is moving into Xamarin.",2016-10-06 14:57:11,12652994
2547,Thanks. I reached out to the email listed in the guidelines.<p>Unfortunately I can only support the ARM64 architecture for iOS currently due how Xamarin builds the project. When I introduce additional architectures (i.e. ARMv7) it increases the size of the app from 50mb to 100mb.,2016-10-10 17:49:38,12678662
2548,"The Android mobile app looks good for Xamarin (smooth transitions, list views, etc).  Previous apps I&#x27;ve seen just seem a bit slow.",2016-10-10 19:00:02,12679089
2549,"Been coding in C# for several years now, I played with F# and it&#x27;s fun. question though....do you guys think it will be as a popular as C# or Java? you know &quot;first-class&quot; citizen(if I may say so) when it comes to writing business apps(desktop&#x2F;web&#x2F;mobile(xamarin-already supported)). :D",2016-10-11 06:23:02,12682204
2550,"SkyCircuits | UI &amp; Embedded | Salisbury, UK | Onsite | Full-time | 25-40K<p>SkyCircuits specialises in manned and unmanned aircraft operations and technology. Our business is rapidly expanding in exciting and technically challenging areas of aviation.<p>We are looking for both embedded and GUI developers (there will be a fair bit of crossover though) for developing various avionics systems for unmanned and manned aircraft.<p>For the embedded role, we&#x27;re looking for:
C&#x2F;C++ and&#x2F;or Ada experience
plus potentially some of ARM Cortex&#x2F;RTOS&#x2F;CANBUS&#x2F;DO-178B<p>For the GUI role, it&#x27;s:
C# (Xamarin ideal)
plus potentially some of iOS&#x2F;Android<p>For both, knowledge of the usual suspects (git &amp; CI) would be good.<p>Any questions, ask me, g.roberts at our domain.<p>Or for application details, <a href=""https:&#x2F;&#x2F;www.skycircuits.com&#x2F;careers"" rel=""nofollow"">https:&#x2F;&#x2F;www.skycircuits.com&#x2F;careers</a>",2016-10-11 09:50:30,12682828
2551,"I&#x27;m not a phone gap expert by all means, so I can&#x27;t speak for it&#x27;s new ability. But I wasn&#x27;t very pleased with my experience when I did have to use it.<p>Now that Xamarin is free, it&#x27;s very hard to say no to such a powerful tool.",2016-10-12 17:41:11,12694967
2552,If I am not mistaken doesn&#x27;t with Xamarin mean you need to build the UI code once for each platform?,2016-10-12 17:50:40,12695040
2553,"This says you can share 96% of the code base across platforms:<p><a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms</a>",2016-10-12 17:55:01,12695076
2554,"Xamarin Forms dev here. This is true. I wrote an audiotour app and I was able to reuse everything. The only thing I couldn&#x27;t reuse was the audio player because of differences between platforms, but still you can use plain old Xamarin.Android and Xamarin.iOS. Pretty good results and you save ton of time.",2016-10-12 17:58:51,12695118
2555,"This is what I came here to say. Cordova is relevant, yes, and many people use it. For basic applications, Cordova applications can feel &quot;native enough&quot;.<p>However, I don&#x27;t think Cordova is necessary anymore with Xamarin.",2016-10-12 18:14:40,12695247
2556,"Xamarin provides a bunch of generic controls that act as bridges to their corresponding platforms. It has enough flexibility that you can build the UI code from scratch for each platform, but you could probably put together a simple form based application with a single UI source.",2016-10-12 18:19:00,12695283
2557,"With the addition of React Native and Xamarin going free why would you? Hybrid apps will never feel native.<p>You can even go graphic intensive with RN, it doesn&#x27;t muddy you up if you need to do stuff with swift&#x2F;obj-c.",2016-10-12 20:20:09,12696125
2558,"Cordova is still quite relevant.<p>The better question may be a question of developer balance. React Native (and similarly Xamarin) requires extra work per each platform where things don&#x27;t quite overlap and native controls are different enough on the given platform.<p>In terms of balance for a small team, &quot;raw&quot; HTML5 on Cordova can still be a time saver for reaching all the platforms with the exact same UI. Admittedly, yes that&#x27;s likely not a true &quot;native&quot; UI and will look&#x2F;feel more like a &quot;website&quot;, but for some projects that least common denominator is more important the time&#x2F;developer effort of polishing the UI especially for each platform.",2016-10-12 20:24:59,12696159
2559,Which is Why he should move to Xamarin. Xamarin Forms can let him maintain one codebase over multiple platforms and leave the rest to convention,2016-10-13 05:27:52,12698663
2560,"I started as a Java dev in JDK1.1, moved to c# @ 1.3 and now apparently im an andriod and iOS dev too with Xamarin ;) I pretty much spent the last month creating a x-platform mobile app, i share 90% of my code across the server&#x2F;client and havnt really even had to learn too much about the intricies of each platform to replace the current version of our product which was written in ObjC  and Java.<p>I can program directly against viewControllrs or Activities, but i dont have to. I use Rx for all async stuff and my Views&#x2F;Models are eventSourced just like my aggeregates an their views are on the server.<p>Not saying Xamarin is bee&#x27;s knees or anything, it has its own quirks and own bugs, but in terms of andriod vs iOS dev, i dont have to buy into any of the core OS&#x27;s to get the job done.",2016-10-13 06:19:54,12698889
2561,"The same could be said about any platform - e.g. why can&#x27;t I write my iOS apps in python?<p>Transpiling languages like that nearly always ends up messy, and adds another layer of potential bugs to the system. Taking the time to learn the platform will end up better in the long run (at least with the current state of transpilers).<p>And as it stands, you can write Android apps with a native UI in Java, Kotlin, JS (React Native) and C# (Xamarin). And you if you want you can write business logic using any language that will compile to a C binary (using the NDK).",2016-10-13 08:40:22,12699330
2562,"I&#x27;ve never been an Android developer, but i am happy Xamarin (Forms) developer. It is not without some hassle, need to deal with a little amount of platform-specific code, but it&#x27;s the way mobile development should be in 2017.
Code the experience and functionality, do not loose (too much) time on platforms.",2016-10-13 09:03:27,12699399
2563,"The comparaison with JS is perfect. 
Like JS is the asm of the web ecosystem (no one wants to write its code just in JS, we generate it instead), default android and IOS way of programming have to be be generated.<p>Try Xamarin [0] or the newcomer flutter [1]. It&#x27;s such a pain in the ass to dev in raw android or raw ios, use multi platform sdks.<p>And if you start with xamarin, you can target windows phone too, even if nobody cares ;-)<p>[0] <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a>
[1] <a href=""https:&#x2F;&#x2F;flutter.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;flutter.io&#x2F;</a>",2016-10-13 11:45:35,12700014
2564,"I&#x27;ve had some terrible experiences with Xamarin. The tooling is very rudimentary compared to Android Studio, performance is subpar, app size is huge, and development is so slow it&#x27;s maddening. I wouldn&#x27;t recommend it other than for some very specific use cases. I&#x27;d much rather deal with just plain old Android issues than wrapped-by-Xamarin Android issues <i>and</i> Xamarin-specific issues.",2016-10-13 12:10:17,12700158
2565,"Mobile development in general is a pita.<p>We really need a native cross platform solution that doesn&#x27;t involve either running a JavaScript VM (ReactNative, NativeScript), writing UI code for each OS (Xamarin), and doesn&#x27;t rely on a WebView.<p>Xamarin Forms could fit the bill, but last time I checked it wasn&#x27;t there yet.<p>What other option are there?",2016-10-13 15:31:10,12701375
2566,"Depends on what do you want to achieve?<p>We utilize Cordova heavily in product I am working on, but more on a meta-layer, meaning, that user is able to create his simple application with drag-drop ui, see a preview in browser and then package it to a phone-installable file. We even had integrations for apparmor&#x2F;apperian, so that the user is able to upload the app to their corporate app management right away.<p>If I were to build a single app, I would go native.
Or xamarin, because I used it already, know how to get around its quirks, and like C# :)",2016-10-13 15:38:08,12701428
2567,Last time I checked Xamarin Forms about a year ago it was still limited.<p>Is it better now? What are some of its limitations?,2016-10-13 15:49:35,12701562
2568,"It&#x27;s still limited in that it&#x27;s not a good choice if your app requires UI functionality that is very platform specific. I think that&#x27;s intentional - it isn&#x27;t intended to be the right solution for every application.<p>It&#x27;s still a good choice if your app mainly involves displaying lists and tables of text and images, and data entry forms.  The cross platform Map control works quite well too.<p>I don&#x27;t remember exactly what is different now from a year ago, but if you list a few of the limitations you faced, I can tell you if they still exist. A quick look at the Pages, Layouts, and Controls section of the Xamarin Forms page might tell you if they&#x27;ve added things that were missing last time you tried it: <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms</a>",2016-10-13 16:04:36,12701682
2569,"Yeah, it is similar to React Native ins that way. There&#x27;s a limited set of cross platform components. In both Xamarin and RN, though, you can also include your own platform-specific components&#x2F;plugins when necessary.",2016-10-13 16:38:38,12702015
2570,"Absolutely! Despite critics, they can feel native due to increasingly better phone hardware and picking a good framework (KendoUI Mobile, Ionic, React Native, Xamarin). I use KendoUI Mobile and Knockout.js for mine currently, with plans to probably switch to Ionic someday. Users don&#x27;t care what the tech is - it&#x27;s about the experience. I&#x27;ve sold over $100k in apps over 3 years... just launched an Untappd beer app if you&#x27;re curious - www.getBeerSwift.com.",2016-10-13 18:28:17,12702924
2571,"Just found out about CloudRail now, looks awesome!<p>1. Is Xamarin support on the radar at all? That would allow me to integrate apps on multiple device platforms and multiple services all with one library.<p>That&#x27;s a pretty compelling case for the kind of work my company does.<p>2. Is there a one-time, fixed, pricing tier that you&#x27;ve considered (maybe including paid updates)? As a consultant in a larger firm, we will often build apps for a client and hand it off to them when it&#x27;s done. Handing them a monthly bill isn&#x27;t often an option, but engaging with them when APIs change and their APP will need to be updated is a fairly common&#x2F;straightforward thing to do.",2016-10-13 21:28:05,12704192
2572,"Better support for Realm. All our apps (native apps both on iOS and Android) are build around Realm as the shared data model and while I prefer Windows as my dev platform the lack of support for Realm in Visual Studio and the fact that there is only a Mac version of the Realm data browser really keeps me from going back to VS. Also we might have considered experimenting with Xamarin, but the Realm support there is also pretty weak (same problems with lack of VS integration, sync feature not supported yet, no UWP version).",2016-10-13 22:46:57,12704783
2573,Thanks!<p>1. Xamarin support is heavily requested and we are working on it. Unfortunately I don&#x27;t have an exact release date yet.<p>2. That is a very interesting point. Let me discuss that in our team and I&#x27;m sure we will come up with a solution. So basically you charge a one time fee for the app and then go back to them if an update is required and charge again for that?,2016-10-14 09:19:05,12706932
2574,"No I have several activities, but they&#x27;re very coarse-grained. Similar to how a large SPA may consist of a grand total of 3 or 4 pages, and routing works within pages, not just between them.<p>Also, I&#x27;m currently using this technique with Xamarin, which opens up some techniques that would be hard to pull off with native. So in this case I use an Angular-style MVVM pattern, so the custom views are all bound to corresponding viewmodels. So the custom views all share one small piece of code that takes care of some binding-related plumbing, and otherwise they&#x27;re nothing but AXML with binding statements in it. This adds up to a rather pleasing approximation of a web-frontend-style component-based architecture. Xamarin should really be more popular!",2016-10-14 11:28:50,12707387
2575,"Indeed, I&#x27;ve been on program committees were we have picked first-time speakers. Usually because the subject seems very compelling, and there is very little overlap with other submitted talks.<p>If the situation is: We have 5 talks on &quot;Getting started with Xamarin&quot;. You pick the experienced speaker, but there is only 1 talk on &quot;Implement your backend in Swift&quot; it is much more likely to get picked.",2016-10-17 18:53:09,12728046
2576,Xamarin.Forms is looking pretty good but still mobile (and Windows 10 UWP) at the moment. Will they extend to OS X and Linux?,2016-10-18 13:02:52,12733936
2577,"Glad to see a more unified approach, particularly with .NET Standard and Xamarin [0]. I&#x27;ve been experimenting with Xamarin.Forms recently and put together a little mobile game. There are a couple of blog posts coming on that, including the whole shared projects &#x2F; PCLs &#x2F; .NET Standard thing.<p>[0]: <a href=""https:&#x2F;&#x2F;unop.uk&#x2F;net-core-1-0-1-and-net-standard"" rel=""nofollow"">https:&#x2F;&#x2F;unop.uk&#x2F;net-core-1-0-1-and-net-standard</a>",2016-10-20 08:17:45,12750535
2578,Xamarin is a great alternative.,2016-10-22 00:49:43,12766262
2579,"Hi Everyone,<p>I just release MarcelloDB 0.6.0
MarcelloDB is an open-source Embedded NoSql database built for Xamarin and Windows Universal Apps.<p>I have been working on it for the last 2 years or so. It took me a while to stabilize the API and the file-format and to add all features I wanted in there for 1.0.<p>0.6 is the last version before 1.0.<p>So I want to invite everyone to give it a spin.<p>MarcelloDB saves entire objects trees (using Json.net), has a very flexible indexing mechanism and transactions.<p>All feedback is highly appreciated.<p>You can find the docs here: marcellodb.org<p>And the source here: github.com&#x2F;markmeeus&#x2F;marcellodb<p>kind regards,
Mark",2016-10-25 06:08:50,12785687
2580,"My plan is to target .NET Core.  I like the idea of being able to run on cheap Linux instances. Although Xamarin is part of Microsoft, I&#x27;m concerned Mono might end up being the red-headed stepchild, with Core getting better company backing.  The only thing that sucks is that currently some of the larger cool projects (like Suave and Akka.net aren&#x27;t ready for Core yet (I think)). So eventually: sweet, short-term might be a couple more headaches.",2016-10-26 16:04:47,12797594
2581,"Depends on what APIs you need, and what your tolerance is for futzing around with things.  If you need the larger API surface of the .NET Framework and you don&#x27;t have time to be on the bleeding edge, go with Mono.  Xamarin Studio has good support for it, and even if you&#x27;re using some other editor (VSCode, Spacemacs, etc.) everything still generally works with the tooling for Mono.<p>There are basically two components that need polishing for .NET Core to be a reasonable choice - the implementation of NetStandard 2.0 for .NET Core (so you get all the old APIs back), and for the tooling to mature (transition from project.json back to fsproj).  These efforts are coming along nicely [1][2], but still aren&#x27;t ready for prime time.<p>Here&#x27;s a roadmap that Enrico Sada has laid out to get the F# .NET Core situation to maturity: <a href=""https:&#x2F;&#x2F;gist.github.com&#x2F;enricosada&#x2F;6f0a0424ca65b9d08e5a84f79560c4c6"" rel=""nofollow"">https:&#x2F;&#x2F;gist.github.com&#x2F;enricosada&#x2F;6f0a0424ca65b9d08e5a84f79...</a><p>And by the way, don&#x27;t worry too much about switching over from Mono to .NET Core.  With NetStandard 2.0 the API changes should be minimal.  Similarly, once the cleaned up proj file format is out of preview the change in tooling from Mono to .NET Core should be minimal (or even non-existent).<p>[1] <a href=""https:&#x2F;&#x2F;slack-files.com&#x2F;T04BJKUMU-F2ST232AJ-6e68200a3d"" rel=""nofollow"">https:&#x2F;&#x2F;slack-files.com&#x2F;T04BJKUMU-F2ST232AJ-6e68200a3d</a> - Enrico Sada&#x27;s work on getting dotnet cli to work with proj system for .NET Core
[2] <a href=""https:&#x2F;&#x2F;twitter.com&#x2F;sforkmann&#x2F;status&#x2F;790488306991661056?s=09"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;sforkmann&#x2F;status&#x2F;790488306991661056?s=09</a> - Steffen Forkmann getting Paket to work with new proj system",2016-10-26 16:51:53,12798129
2582,"Wait a few months. Then target your library development at .net standard 2.0.  It will work across the classic .net framework (Windows), the new cross-platform .net core (Windows, Linux, OSX) as well as the Xamarin (iOS, Android, Windows UWP).",2016-10-26 17:00:02,12798210
2583,".NET Core is the equivalent to mono.  However the .NET Core libraries were a bit painful to port to since they were limited.  So they are expanding this with .NET Standard - which is an API specification - which you can use and work across all .NET platforms (.NET Framework, .NET Core, or Xamarin).<p>Keep in mind it sounds like .NET Standard basically is between the full .NET Framework and .NET Core.  So if you have an existing .NET Framework app it&#x27;s very possible it would just work on .NET Standard.",2016-10-26 17:27:48,12798485
2584,"&gt; Microsoft developer relations pushed C# as the defacto way to write apps targeting the platform, something that doesn&#x27;t scale when you also need to support Android and iOS.<p>Actually, our company has an Android and iOS App written in C# with a 80-90% shared Codebase using Xamarin. It has been pretty awesome so far.",2016-10-26 18:43:01,12799219
2585,"Yeah I wish more people realized that C# + Xamarin tools (that Microsoft now owns &amp; is totally free with Visual Studio Community) making C# something that can take you cross-platform in the mobile space.<p><a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a><p>Also .NET Core now runs on Mac and Linux for the server OS code written in C#.<p>Then if you add Unity supporting C# on top of that for game&#x2F;dev and I really can say that we&#x27;re in a cross-platform world now :). But I am a bit biased since I work on these teams.",2016-10-26 19:00:38,12799389
2586,All my iOS dev. is now done with Xamarin on Visual Studio on Windows with a headless Mac Mini sitting in the background.,2016-10-27 20:14:14,12809470
2587,".Net Core is the runtime. It&#x27;s the cross platform version of the .NET Framework.<p>.Net Standard is just an API specification which will be implemented on the .NET Framework, .NET Core, or Xamarin runtimes.  Technically it&#x27;s a subset of the .NET Framework libraries.  It&#x27;s more of an improvement on .NET Core as it is bringing more APIs to that runtime.<p>So basically as long as you use the APIs in .NET Standard, your application can be compiled for any of those 3 runtimes.",2016-10-27 23:00:04,12811175
2588,"Yes, they even used TLABs. I believe the issue was that Xamarin was more interested in mobile performance at the time when SGEN was seeing heavy development and preparing for release, so they optimized for memory usage instead of throughput. The generational part was probably more of a hindrance than a benefit at that point in the process.",2016-10-29 03:15:07,12822444
2589,"I&#x27;m not a great programmer, so don&#x27;t stop looking for information!<p>It mostly depends on what you want to do. 
Xamarin would be a great fit for cross-platform mobile applications, WPF(<a href=""https:&#x2F;&#x2F;msdn.microsoft.com&#x2F;en-gb&#x2F;library&#x2F;ms754130(v=vs.110).aspx"" rel=""nofollow"">https:&#x2F;&#x2F;msdn.microsoft.com&#x2F;en-gb&#x2F;library&#x2F;ms754130(v=vs.110)....</a>) for big desktop programs and WinForms for tinkering with old software.<p>UWP is indeed the big thing for MS now, but it has lots of programming languages support(so not only JS)! I don&#x27;t know anything like Sketch really; maybe this will help <a href=""https:&#x2F;&#x2F;developer.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;apps&#x2F;design"" rel=""nofollow"">https:&#x2F;&#x2F;developer.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;apps&#x2F;design</a><p>You should try VSCode(which is a lot like Atom, has excellent .NET support through OmniSharp) <a href=""https:&#x2F;&#x2F;code.visualstudio.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;code.visualstudio.com&#x2F;</a><p>C# is getting more attention because a lot of F# features got into recent C# versions, people not wanting to make the switch to FP and not getting full attention of MS.",2016-10-30 01:12:13,12827510
2590,"I read a blog post from someone at Xamarin with some test cases graphed, a bit before Xamarin started suggesting SGEN as the default. I&#x27;ll see if I can find the one I&#x27;m thinking of.",2016-10-30 02:29:02,12827805
2591,Sorry - it&#x27;s better for my job. But e.g. for Xamarin development it&#x27;s worse :) I don&#x27;t even consider macOS because I never liked the Mac hardware (had a late 2013 rMBP...),2016-10-30 21:06:23,12832286
2592,"Shit... Just one will start to put strain on the system.<p>If I&#x27;m developing an iOS&#x2F;Android frontend in osx with Xamarin Studio and an asp.net backend with Visual Studio, then 16gb just won&#x27;t do.",2016-10-31 05:39:35,12834518
2593,"Not sure about Xamarin studio, but for Xcode, AppCode, PHPStorm anr Virtualbox 16GB still does do.",2016-10-31 07:41:15,12834868
2594,"&gt; You can&#x27;t build an app for iOS or OSX on a Windows or a Linux machine<p>Well actually you can, when using something like Xamarin which has worked pretty well for our company. Sure, somewhere you need a Mac build machine, but that can be an older generation mac mini or similar. The development can be done on Windows using Visual Studio and C# which overall is a pretty great experience with the added benefit of sharing a large percentage of the codebase with the native android version of your app.",2016-10-31 09:32:04,12835316
2595,"Oh, that&#x27;s cool, thank you for your response.<p>I&#x27;ve taken a look on the Flutter, but it seems (through a glance) that it is another React-Native (or take Xamarin). So, this is not the first solution to share code between web and mobile. React-Native, though, is not the best for Android, and this framework should be awesome for it, thanks for the same company.<p>But the main question for me personally  experienced JS developer, looking into possibilities to write more better browser code, why should I consider Dart instead of TypeScript, or ClojureScript, or Elm? I am really curious about this question!",2016-10-31 16:07:29,12838095
2596,"SEEKING WORK - Remote&#x2F;Freelance, with potential for on-site trips<p>Certified Xamarin developer here with mobile cross-platform experience in everything from Xamarin.Forms to native. 
Designed, built and released iOS &amp; Android apps for multiple happy clients in the double digits.<p>Proficient in:<p>- cross-platform development for various screen dimensions: smartphone, watch, tv &amp; tablet<p>- MVVM architecture and adjacent libraries (MvvmCross, etc.)<p>- connecting mobile apps to backend services via REST APIs<p>- offline functionality, local storage (Sqlite, Realm, etc.) and syncing strategies<p>- authentication and sharing features using social APIs<p>- error-proofing existing mobile apps with Xamarin Test Cloud and other reporting tools<p>- designing and implementing performance &amp; optimization strategies<p>- additional services around mobile apps: UI&#x2F;UX, prototyping, server-side &#x2F; APIs work<p>Website: <a href=""http:&#x2F;&#x2F;crossplatform.io"" rel=""nofollow"">http:&#x2F;&#x2F;crossplatform.io</a><p>Linkedin: <a href=""https:&#x2F;&#x2F;linkedin.com&#x2F;in&#x2F;alexandramarin01"" rel=""nofollow"">https:&#x2F;&#x2F;linkedin.com&#x2F;in&#x2F;alexandramarin01</a><p>Email: alexandra.marin01@gmail.com",2016-11-01 15:06:43,12846249
2597,"Location: Dallas TX<p>Remote: YES<p>Willing to relocate: NYC, SF<p>Technologies: C#, JS, Java, Android, iOS, Xamarin, AngularJS, NodeJS, WebAPI, MVC, ASP.Net, RabbitMQ, MSMQ, Swift, Objective-C, JIRA<p>Rsum&#x2F;CV: <a href=""https:&#x2F;&#x2F;www.dropbox.com&#x2F;s&#x2F;6y0mzzq2kpp47g5&#x2F;Mutaaf_Aziz_resume_1016.pdf?dl=0"" rel=""nofollow"">https:&#x2F;&#x2F;www.dropbox.com&#x2F;s&#x2F;6y0mzzq2kpp47g5&#x2F;Mutaaf_Aziz_resume...</a><p>LinkedIn: linkedin.com&#x2F;in&#x2F;mutaaf<p>Email: mutaaf.aziz@gmail.com<p>ABOUT ME: I have experience being an integral part of many successful start-up and enterprise teams. I have 5+ apps in the iOS App Store and am currently CTO over 3 start-ups.",2016-11-01 15:52:58,12846883
2598,"Gatecoin (<a href=""http:&#x2F;&#x2F;gatecoin.com"" rel=""nofollow"">http:&#x2F;&#x2F;gatecoin.com</a>) | Hong Kong ONSITE | Multiple Positions | Fulltime | (INTERNS may also be welcome, VISA sponsor)<p>We&#x27;re a regulated exchange for bitcoin, ether and other blockchain assets based in Hong Kong, with many projects in our backlog!<p>We&#x27;re looking for technical folks to join our growing international team of blockchain technology specialists:<p>a) Linux DevOps&#x2F;Security<p>b) Devs (Frontend, Backend, Fullstack, Mobile soonish via Xamarin)<p>c) UI&#x2F;UX Designers&#x2F;Devs<p>If you&#x27;re a DevOps sysadmin with an obsession with reproducible environments (we use RedHat&#x27;s Ansible with Azure Debian VMs, although we&#x27;re pretty much CloudProvider agnostic), then this might be you&#x27;re place. We also hope you&#x27;re not afraid of functional programming when it comes to developing scripts.<p>If you&#x27;re a dev, our stack in the backend is mainly C# with some bits of F#, with a MySQL&#x2F;Redis storage. In the frontend we use AngularJS (moving to TypeScript).<p>Get in contact to know more at andres at gatecoin dot com, using the subject &quot;Interested in Gatecoin roles&quot;.<p>We help with sponsorship&#x2F;relocation to Hong Kong.<p>Some nice perks we have:<p>- 10% of &quot;free to tinker&quot; time on crypto currency projects<p>- 10% of remote work time allowed<p>- International, friendly work environment (more than 7 different nationalities in one office!).<p>Want to make a difference in the blockchain space? Join like-minded people and work together to bring about the decentralized financial revolution!",2016-11-01 16:23:55,12847294
2599,"REMOTE Software Engineer Position
We are looking Software Engineer to work in a small Agile team building large scale Single Page Applications. 
Youll work with the latest client-side technologies including: JavaScript, Angular 2, TypeScript, Knockout, Gulp.JS, Ionic and Xamarin.
Youll work with server-side technologies including: C#, ASP.NET MVC and SQL Server.
Youll have access to the latest tools including: Visual Studio 2015, Visual Studio Code, TFS 2015, GIT and Octopus Deploy.of operational data.
Apply online at: <a href=""http:&#x2F;&#x2F;www.cartegraph.com&#x2F;careers&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.cartegraph.com&#x2F;careers&#x2F;</a>",2016-11-01 16:28:56,12847366
2600,Xamarin Studio is good enough for Unity3d and Mono.,2016-11-02 03:24:07,12852035
2601,"SkyCircuits | UI &amp; Embedded | Salisbury, UK | Onsite | Full-time | 25-40K<p>SkyCircuits specialises in manned and unmanned aircraft operations and technology. Our business is rapidly expanding in exciting and technically challenging areas of aviation.<p>We are looking for both embedded and GUI developers (there will be a fair bit of crossover though) for developing various avionics systems for unmanned and manned aircraft.<p>For the embedded role, we&#x27;re looking for: C&#x2F;C++ and&#x2F;or Ada experience plus potentially some of ARM Cortex&#x2F;RTOS&#x2F;CANBUS&#x2F;DO-178B
For the GUI role, it&#x27;s: C# (Xamarin ideal) plus potentially some of iOS&#x2F;Android<p>For both, experience with the usual tooling things (git, CI, code review) would be good.<p>Any questions, g.roberts at our domain.
Or for application details, <a href=""https:&#x2F;&#x2F;www.skycircuits.com&#x2F;careers"" rel=""nofollow"">https:&#x2F;&#x2F;www.skycircuits.com&#x2F;careers</a>",2016-11-02 09:15:50,12853178
2602,"Hello)
I represent a developer team. We can offer you from 1 to 3 developers or strong Full-Stack  qualified dedicated team for your needs.
We have 12 developers (5 developers is full - stack), 2 managers, 1 UX designer, 1 designer and Search engine optimization department.
We are specialized on:
1) c#, Asp.Net ;
2) JavaScript, jQuery, MongoDB, NodeJS, Sails.js, AngularJS, Knockout, based fullstack js framework ;
3) c#, Xamarin (XAMARIN MVVMCross, Xamarin.Forms ) ;
4) JavaScript, Meteor.js(ECMAScript6) .<p>Rate: 
1. Meteor Developer- $800&#x2F; Week
2. XAMARIN Developer - $800&#x2F;Week
3. Data Entry Executives ( Data searching, scrubbing, List Management, CMS Bulk Entries etc) - $200&#x2F;Week
4. Graphic Designer- $449&#x2F;Week
5. HTML&#x2F;UI Developer $650&#x2F;Week
6. .Net Developers- $800&#x2F;Week
7. MEAN Fullstack Developer - $800&#x2F;Week<p>My java script developers have:
- 3+ years of JavaScript experience
- 3+ years of GIT, TFS, SVN experience
- 3+ years of Bootstrap, HTML, CSS experience 
- 3+ years of jQuery, Bootstrap, HTML, CSS experience 
- 1+ years of MEAN (MongoDB, ExpressJS&#x2F;Sales.js, AngularJS, NodeJS) experience 
- 1+ years of Knockout experience 
- 2+ years of PhoneGap&#x2F;Cordova experience 
- 2+ years of Ionic Framework experience 
- 1+ years of Meteor.js (ECMAScript 6) experience<p>My back-end developers have:
- 3+ years of C# experience
- 3+ years of Asp.Net, Asp.Net MVC, Asp.Net MVC Razor, EF, .Ado, Web API(REST, SOAP) experience
- 2+ years of Xamarin.iOS, Xamarin.Android, Xamarin MVVMCross, Xamarin.Forms experience
- 1+ years of Ruby experience
- 3+ years of GIT, TFS, SVN experience
- 3+ years of MsSql, MongoDB, MySql experience
Key features are:<p>         Month to Month Contract
         100% Satisfaction guaranteed
         Easily and quickly scale the team up&#x2F;down<p>Best Regards,
Yaryna,Sales Manager, NetLS
Skype: netls_sales_manager
 &lt;sm.netlsoftware@gmail.com&gt;
Telephone and fax: +38 (0342) 710110
Tel. +38 093 31 05 980",2016-11-02 16:14:20,12856365
2603,"<p><pre><code>  Location: Philadelphia, PA

  Remote: YES

  Willing to relocate: YES (Silicon Valley, NYC, Seattle)

  Technologies: C++, .NET&#x2F;C#, ASP.NET MVC, WPF&#x2F;WinRT&#x2F;UWP, Xamarin, Android, iOS, Linux, Javascript, Python, HTML, Bootstrap, Angular, Java, ObjectiveC

  Resume: email for a pdf &#x2F;&#x2F; wesnermoise.com
 
  Email: sftperson-hn@yahoo.com</code></pre>",2016-11-02 21:28:27,12859463
2604,"It most likely uses Xamarin, a C# tool for making iOS apps. It gets the job done, and I made a full commercial app for work using it years ago (and I bet it&#x27;s more solid now). It&#x27;s kinda cool because most of the Xamarin functions are almost direct wrappers for iOS functions, so you could look something up in Objective-C and 90% of the time know how to do it using Xamarin.<p>But there are some hiccups with Xamarin, and I&#x27;d rather just code native now for iOS only (there&#x27;s a lot more jobs for native iOS developers than Xamarin, although React Native is a good bet nowadays too). If I was doing cross-platform with Android, I&#x27;d either do React Native or I&#x27;d consider Xamarin again.",2016-11-03 20:39:24,12867736
2605,there are still other ways (like Xamarin) where the actual building could be done on an old mac mini or similar.,2016-11-05 12:29:01,12879472
2606,Great Job.<p>This is the next iteration of Titanium Appcelerator and Xamarin style apps (which basically do the same thing but internally).,2016-11-06 01:40:19,12882981
2607,This is awesome! I actually had this same idea and built a platform for non-technical people to have the ability to build native apps. We picked Xamarin.Forms as our mobile framework because that way we could target most of the mobile platforms and share as much code between those project. We also picked Drupal a CMS to give non-techies an easy framework to build things out. I am going to keep an eye on this project for some different ideas and maybe one day we can pick your brain with our idea&#x2F;platform.,2016-11-06 07:16:17,12883973
2608,"Location: Europe
Remote: Yes
Willing to relocate: No
Technologies: C#, .NET, Mono, Xamarin (Android, iOS), MVVM, ASP.NET, JavaScript, Node.js, Git.
Rsum&#x2F;CV: <a href=""https:&#x2F;&#x2F;stackoverflow.com&#x2F;users&#x2F;story&#x2F;4064749"" rel=""nofollow"">https:&#x2F;&#x2F;stackoverflow.com&#x2F;users&#x2F;story&#x2F;4064749</a>
Email: finkel2804 (at) gmail dot com",2016-11-06 11:44:03,12884660
2609,"Yes, but who does it depends on if my project is professional or personal.<p>1. Pro: Yes, we have a QA team; Per: No, but I have a few friends (some are Pro QA) I can have test the app for me.<p>2. Pro: Telerik or Xamarin Cloud Platform; Per: Nothing, running the app while screen recording on their mac (I mostly do iOS dev).<p>3. Pro: The QA team works with the BA to go over the requirements and develop positive and negative test cases; Per: I tell them what the app does and how it should work. They then bang on it until it either explodes or works.<p>4. Pro: Team Foundation Services - Create a bug and add it to the backlog; Per: Email and Spreadsheet, then I log into my TFS Online account and add it.<p>5. Pro: We have 3 levels of testing. Integration (where the devs&#x2F;ci live), QA (after code-freeze on the current sprint), UAT (business approves the app) and then if all of those check off we launch to the public (usually internal MDM deployment); Per: I have everyone test it before public release.<p>6. Probably the most important part of developing professional grade software. Which if you are releasing a mobile app, no matter if its a personal app or enterprise, it should be close to perfect!<p>7. Yes, but the key to any workflow is it has to be adaptable. Pro: We recently had a 2 week deadline from conception to market for a mobile app that integrated with a number of our cloud-hosted back office accounting applications, and with that tightened deadline, QA and UAT were combined and all testing was done by the CIO (who the project was for).",2016-11-06 14:04:07,12885102
2610,"My Windows license doesn&#x27;t feel &quot;Open by Default&quot;, nor SQL Server license audits ... I like the guy, he created Mono, Xamarin, Gtk and co. But only a tiny subset of MS products like the .NET ecosystem are open.",2016-11-08 15:59:16,12901250
2611,Why not use Xamarin? it has a better lenguaje (C#) and is free.,2016-11-08 21:03:51,12903915
2612,"Probably because IntelliJ is a superior IDE, Kotlin is a better language than C# and Xamarin apps look and perform like ass.",2016-11-08 22:35:21,12904569
2613,"I like both, but why do you consider Kotlin better than C#?<p>I also don&#x27;t get your point about how lame Xamarin apps look. Xamarin apps use native layout components (could be wrapped with lowest common denominator abstractions in case of Xamarin.Forms, but it&#x27;s optional), so they&#x27;re 100% capable of looking the same way your native app would.",2016-11-09 00:55:10,12905304
2614,"iOS and Android UX guides have completely different approaches to the logic of user interaction. AFAIK, Xamarin does not allow to have different layouts generated from shared code. So, even that components are native, their placement is alien.",2016-11-09 09:07:04,12908283
2615,"&gt; <i>Xamarin does not allow to have different layouts generated from shared code</i><p>That&#x27;s true, but noone says or recommends that <i>all</i> the code is shared. Typical Xamarin architecture and good practice assumes sharing the business (or domain) layer, and coding the views separately. In terms of reusability it&#x27;s still superior in comparison to writing both versions natively. Obviously the level of reuse you can achieve that way very much depends on the nature of the application.",2016-11-09 09:52:22,12908697
2616,"C# better than java, maybe but than Kotlin ? That&#x27;s a very subjective opinion.<p>Apps written in Xamarin and kotlin work very differently :<p>-with Xamarin you have to add the Xamarin runtine and depend on its integration. This brings several downsides : <a href=""http:&#x2F;&#x2F;www.slideshare.net&#x2F;KonstantinLoginov&#x2F;we-are-ditching-xamarin-why"" rel=""nofollow"">http:&#x2F;&#x2F;www.slideshare.net&#x2F;KonstantinLoginov&#x2F;we-are-ditching-...</a><p>-Kotlin outputs bytecode, so from the outside, it is just the same as any android app written in java. The output is a standard android app with one more library (the standard kotlin lib with all its base methods)",2016-11-12 12:33:33,12937583
2617,"While the title of the blog post says &quot;for .net core&quot;, it is much more than that. The blog post clarifies it is actually targeting the new .net standard so it works on all platforms including .net core (Windows, Mac, Linux), .net framework on Windows, Windows UWP and Xamarin (iOS, Android).",2016-11-12 16:21:07,12938567
2618,Since it&#x27;s based on MonoDevelop&#x2F;Xamarin you should expect it soon.,2016-11-14 07:32:48,12948109
2619,"It is based on Xamarin Studio. I work with XS on OSX last 3 years. Unfortunatelly, Xamarin Studio has a lot of issues with performance, refactoring, it crashes from time to time.<p>I think it will be better to wait for release of Project Rider. At least EAP is already available",2016-11-14 07:49:56,12948171
2620,"So as for now it is the rebranded and polished Xamarin Studio - hopefully, they have improved it&#x27;s usability as in the past it was pretty lacking compared to VS 2013&#x2F;2015",2016-11-14 07:52:31,12948180
2621,I think Microsoft will end-of-life Xamarin Studio and will convert it to Visual Studio brand with just support of OSX and Linux,2016-11-14 07:55:57,12948195
2622,"Given that &quot;Even core features such as C# editing, Xamarin.iOS, Xamarin.Android and ASP.NET Core are implemented as extensions&quot;, I assume it&#x27;d be relatively easy for them to implement, especially since VB and C# effectively compile the same.<p>Presumably, C#, Android, and iOS are their top priorities to support, things like VB are less so, but could be added later.",2016-11-14 07:59:08,12948211
2623,"Let&#x27;s put this in context. At the moment the main thing that&#x27;s happened is Xamarin Studio got rebranded as Visual Studio for Mac. If you look up the features of Xamarin Studio you&#x27;ll have your answer, at least based on the current features.",2016-11-14 08:03:09,12948232
2624,"They said it&#x27;s based on Roslyn, so it should support VB.net. In the current release of Xamarin Studio for Mac, VB is supported in GTK and console applications, while Xamarin targets only support C# and F#",2016-11-14 08:09:53,12948274
2625,"It&#x27;s a rebranded Xamarin Studio (MonoDevelop).<p>I wonder if it will continue to support Android, or if there will be a Linux release.",2016-11-14 08:18:42,12948303
2626,"This is mostly focused on Xamarin (IMHO they&#x27;re phasing out Xamarin Studio), and Visual Studio Code already offers a good .NET Core developer experience",2016-11-14 08:24:25,12948330
2627,"Since we&#x27;re talking about what is basically a rebrand of Xamarin Studio, the current release of Xamarin Studio for Mac uses the function keys for stepping in the debugger",2016-11-14 08:38:27,12948370
2628,"Indeed. I&#x27;ve been using XS on Mac and VS on PC to build a cross-platform product - with shared code for &#x27;core&#x27; calculations + view model stuff and dedicated GUI pieces for each platform - for a couple of years now, and I&#x27;ve been sometimes very frustrated by the restrictions of XS compared to VS; it made the Mac side of things much slower to develop. This, and other recent moves by Microsoft with respect to Xamarin, have made me happy (and, yes, somewhat relieved), that I &#x27;bet the company&#x27; on this kind of architecture.<p>There doesn&#x27;t appear to much demand for our product on Linux - it&#x27;s targeted towards quite a conservative and on-tech market - but Linux support would also be very welcome.",2016-11-14 08:49:58,12948419
2629,They already have Xamarin Studio.,2016-11-14 09:33:30,12948593
2630,This will essentially be a rebranded Xamarin Studio and tweaked to look more like VS for Windows. And Xamarin is basically based off MonoDevelop.,2016-11-14 10:19:33,12948746
2631,"<i>MS stack developer</i>
I think yes, MS invests a lot into the Xamarin platform, so I expect it to become more stable and more developer friendly than it was before. I have a plenty of experience doing cross platform mobile development and I tried several other alternatives, Xamarin was actually the best - easy to start, easy to implement stuff, fast enough on mobiles, has a lot of components, etc.<p>Also I would like to recommend to focus more on Xamarin.Forms, it&#x27;s using more modern approach. XAML (it&#x27;s a xml-derived language) is actually quite good for writing UI part. Add there some MVVM framework and you&#x27;d love it.<p>Edit: fixed spelling",2016-11-14 10:46:08,12948868
2632,"As I understand it, Visual Studio for Mac is simply a re-branded Xamarin Studio and will continue to be. It includes the improvements they had planned for the next release but I doubt they will do a rewrite.<p>I actually prefer Xamarin Studio over Visual Studio (on Windows) in some respects. For example, the Xamarin.Forms XAML previewer is much better. Looking forward to a full designer.<p>P.S. I&#x27;ve got a four part blog post series this week on Xamarin.Forms. Starting with this today: <a href=""https:&#x2F;&#x2F;unop.uk&#x2F;cross-platform-native-mobile-app-development-options"" rel=""nofollow"">https:&#x2F;&#x2F;unop.uk&#x2F;cross-platform-native-mobile-app-development...</a>",2016-11-14 10:48:31,12948885
2633,"Good news and great timing!<p>I had a four part blog post series on Xamarin.Forms and .NET on a Mac planned for this week. Starting with this introductory post today: <a href=""https:&#x2F;&#x2F;unop.uk&#x2F;cross-platform-native-mobile-app-development-options"" rel=""nofollow"">https:&#x2F;&#x2F;unop.uk&#x2F;cross-platform-native-mobile-app-development...</a>",2016-11-14 10:51:37,12948898
2634,Ruby Motion vs React Native vs Xamarin vs Native (Java&#x2F;Swift) is a question I have all the time. All look interesting and worth learning,2016-11-14 11:03:29,12948959
2635,"I tried Xamarin once for a macOS application. I migrated a Forms application by extracting all logic that I could from Forms-specific (code behind files) into more generic classes.<p>Then I had a .dll that I could use in my Xamarin project. The Xamarin project was razor thin and I only used C# to connect my XIBs or Storyboard (I forgot what I used, but it was in Interface Builder) to the existing .dll calls and a specific type of hardware scanner.<p>The hardest part was getting that scanner to work, which would be not so easy for me even in Objective-C. But I basically had to create an Objective-C wrapper wrapped in some kind of C# wrapper. It wasn&#x27;t easy but it was doable.<p>The hardest part was getting everything signed correctly, since I was using all kinds of layers you usually wouldn&#x27;t use in &quot;just software&quot; project.<p>The overall experience was really good despite that the native editor for macOS wasn&#x27;t that spectacular. I did the meat of my programming in Visual Studio and Visual Studio is a really great tool. Another part was done in Interface Builder which is a great tool in my opinion.<p>A friend uses it a lot for a cross-platform app written in Xamarin Forms. The thing with Forms is that unless you keep it simple you will run into Xamarin bugs, iOS specific bugs or Android specific bugs in your layouts and that can be challenging sometimes.<p>I would say that if you would make the UI in native code or storyboards and it still seems like an attractive idea to use Xamarin, use Xamarin. Don&#x27;t use Forms.",2016-11-14 11:07:28,12948975
2636,"There are tons of cross-platform mobile application frameworks ranging from Qt to Unity, Marmalade to probably hundreds of web-based solutions.<p>What Xamarin and React Native have in common is (partly) using native UI layers for building the interfaces, perhaps you wanted to specifically address frameworks doing that?",2016-11-14 11:11:40,12948995
2637,"I&#x27;m currently developing an app integrates Google APIs like SignIn and a google product that i plan to make available on all major platforms (Android,iOS,Windows).<p>In the beginning, i thought about making a hybrid app, because it could save me time on the long run, but starting to developing with Cordova and EmberJS or even Xamarin was frustrating.<p>My major reason for frustration is the tooling, cordova emulator just sucks (Ripple?) and working with javascript mvc frameworks isn&#x27;t just for me (too complex IMHO).<p>Xamarin on VS has some bugs that would only go away if i restarted the IDE in order for things to work. Also, i&#x27;m concerning about being dependant to a third party framework.Can they keep up to speed with Google,Apple and MS?<p>Another valid concern is app size distribution that seems to be considerably higher with cordova and Xamarin.<p>Since i started on Android, using Android Studio made my life a lot easier and i&#x27;m progressing daily and enjoying it, something that was a PITA with other tools.<p>In my experience i would say that it will be more time consuming (expensive) to develop a single solution for each platform as well as giving support, but the tooling is a lot better, also you can give users a better experience because you end up developing native apps for each platform that can take better advantage of it&#x27;s ecosystem.<p>I&#x27;ll find out in the future if i&#x27;m right or wrong.",2016-11-14 11:17:52,12949017
2638,Microsoft just announced the launch of Visual Studio for Mac (based on Xamarin). It&#x27;s great if you want to C# development. Have you tried Eclipse or Android Studio?,2016-11-14 11:21:43,12949036
2639,"If you&#x27;re familiar with C# and .NET, it&#x27;s a no brainer.<p>Xamarin is nothing more than a C# wrapper around the native iOS and Android APIs. Everything you&#x27;re familiar with (UIViewController, UIView, UITextField, UIButton, etc) remains the same. The main benefit (other than using C#) is that all non-UI code can be shared across platforms (iOS, Android, Windows, server, etc).<p>Xamarin.Forms is built on top of Xamarin and lets you reuse the same code for UI as well (using their own abstraction that&#x27;s similar to WPF&#x2F;UWP). I would only recommend this for relatively simple apps as you lose some control over platform specific details.",2016-11-14 11:24:05,12949045
2640,"&gt; Can they keep up to speed with Google,Apple and MS?<p>Xamarin <i>is</i> Microsoft now.",2016-11-14 11:25:40,12949054
2641,XAML and MVVM are <i>much</i> nicer to work with then their iOS and Android equivalent. WPF&#x2F;UWP&#x2F;Xamarin.Forms are very underrated.,2016-11-14 11:28:04,12949062
2642,"When using Xamarin I always get the feeling I&#x27;m writing Java code--but in C#. The cross-platform project is a blessing, it&#x27;s truly amazing to be able to write code once and use it on all platforms (especially if you use Dependency Injection for even more sharing).<p>The downside to this is that making a UI seems to even out your gained time--it&#x27;s extremely messy and even complicated. Code that&#x27;s valid in C# produces vague underwater bugs in Java code, which makes you keep hacking around until you find a working solution.<p>Not to mention the docs: some parts of the documentation are completely outdated to the point of not even compiling on an older version of Xamarin. For example, the tutorials on using Google Maps in your Xamarin.Droid application are way out of date, ignoring the fact that the &quot;Google Play Services&quot; component has split off into thirty-or-so components. Some of the most used API&#x27;s are not documented at all, simply having a &quot;To be added&quot; description.<p>All in all I find much potential in Xamarin, and I <i>really</i> want to love it, but it&#x27;s a messy nightmare to use, and it only makes me want to use Java and Swift separately for apps.",2016-11-14 11:28:27,12949064
2643,"I&#x27;ve used Xamarin for several projects and I greatly regret that decision. Granted, most of my hatred is targeted towards Xamarin Studio and Xamarin.Forms so if you use Visual Studio and build only native UIs then maybe your experience will be better.<p>However, in my experience, both Xamarin Studio and the build system are buggy as hell. Random or inexplicable build errors, things that break during updates, incompatibilities with official Android support libraries... I find myself doing &#x27;clean project and rebuild&#x27; to fix random errors, or switching between alpha, beta and &#x27;stable&#x27; channels all the time depending on which one does not have the bugs that I&#x27;m running in to.<p>Xamarin.Forms is simply a disaster. Because it aims to unify the apis for the UIs for various platforms it boils down to only the most common denominator of those platforms. And then makes it worse. Not only is it buggy, it is also very slow and incredibly limited. In our office we&#x27;re keeping a list of all of Xamarin&#x27;s silliness we encounter, here is just one of those:<p><pre><code>    &quot;Clicking a Button changes its text alignment from center to left-aligned; it requires writing a custom Renderer to solve this.&quot;
</code></pre>
I admit that Microsoft is usually quick to fix those bugs, but it doesn&#x27;t instill much trust in the system if you&#x27;re constantly running into issues. Many days I am literally working 50% of the time on my app and 50% working&#x2F;fighting my way around Xamarins issues.<p>I&#x27;d love to hear from someone using Visual Studio if their experience is more positive, but my advise is: please stay away from Xamarin.Forms and Xamarin Studio as much as possible.",2016-11-14 11:31:17,12949074
2644,"Nope.<p>Most of the UI was rewritten for VS2010 with WPF (XAML, DirectX acceleration), but lower&#x2F;deeper parts are written in c++ and this makes porting &quot;probelmatic&quot; (MFC, win32.dll, kernel.dll to posix stuff).<p>MonoDevelop ~ Xamarin.Studio is written in C# (some plugins in F#) and this makes porting easier. That is the reason there was MonoDevelop version on Windows.",2016-11-14 11:32:54,12949080
2645,"I am using Xamarin.Android currently for a project, and I really like it.<p>One thing I love is that because it maps so closely to native Android development, you don&#x27;t need to look specifically for Xamarin.Android tutorials&#x2F;SO Answers&#x2F;blog posts etc to learn how to do something.<p>Most of the time, information targeted towards native Android development will apply to Xamarin.Android also, and you can basically map example Java code to C# because they use the same classes&#x2F;namespaces.<p>I&#x27;m going to be getting into Xamarin.IOS soon, hopefully the experience is as nice.",2016-11-14 11:33:00,12949081
2646,"It&#x27;s not iOS &#x2F; Android development, it&#x27;s Xamarin development. Not really the same thing.",2016-11-14 11:33:04,12949083
2647,"At flexVDI, we use Xamarin for building our macOS client (Xamarin.Mac), sharing most of the code with the client for Windows, built with Visual Studio. Both of them, link against a shared library which implements core functionality, written in C.<p>I must say that, having its own quirks and nuisances (specially in Xamarin Studio, which was pretty buggy until version 6.x), it does the job pretty well.<p>In fact, when we wrote our iOS and Android clients, Xamarin was still pretty immature. But if we had to rewrite them today, it would be one our of first options, right after using the native frameworks (which ensures the best results, but drastically increases the costs).",2016-11-14 11:33:48,12949087
2648,"&gt; Some of the most used API&#x27;s are not documented at all, simply having a &quot;To be added&quot; description.<p>I rarely find myself reading the Xamarin documentation, and mostly browse documentation and StackOverflow as if I was coding a native iOS&#x2F;Android app. This works because the Xamarin wrapper is pretty much identical to native APIs.",2016-11-14 11:36:50,12949105
2649,"The statement &quot;macOS counterpart of the Windows version of Visual Studio&quot; is essentially false as far as I can see, the core of VS for mac is Xamarin Studio which is not Visual Studio.<p>Visual Studio for windows has two different &quot;cores&quot;: the massive old C++&#x2F;COM-based application used since forever, and the newer subsystems Such as The language subsystem (For C# and VB) Roslyn, which is .NET based.<p>Xamarin Studio could be using Roslyn, but the app isn&#x27;t based on the same platform as VS itself is. Since it is at it&#x27;s core a newer and much smaller application, it shouldn&#x27;t have to have any of the setup issues that VS has (just like VS code doesn&#x27;t).",2016-11-14 11:45:03,12949151
2650,Monodevelop&#x2F;Xamarin.Studio have really simple addin system and writing addin to support anything shouldn&#x27;t be big problem.<p>It is a lot easier than Visual Studio Extensibility system.,2016-11-14 11:49:53,12949176
2651,"I loved C#, hated Xamarin forms.
It was about a year ago no, but I doubt things have changed that much.
There were just so sooo many bugs.
I have nothing against them and still think .net is amazing, but that was such a worse experience.
I think reactive will win though.",2016-11-14 11:50:24,12949177
2652,"I believe MS claims they are &quot;open source 1st&quot; right now.<p>Everything made by Xamarin was opensourced in 2016-04&#x2F;2016-05 under MIT license, so it cannot be vendor locked anymore.",2016-11-14 11:51:59,12949186
2653,"I have used both &quot;native&quot; Xamarin and Forms to build apps. Last year Xamarin had a really bad streak with stability but things have certainly improved.<p>Android itself has so much quirks in development in itself that it is sometimes impossible to abstract away. Xamarin just doesn&#x27;t show this always so you&#x27;re chasing the wrong ghost from time to time. Android development is simply madness.<p>I&#x27;m not gonna say Forms is perfect, far from it but it serves a purpose. With a little bit of work I could get everything going that needs to be done. As a single dev I can cover both platforms. If you have the resources go native Xamarin.<p>Xamarin Studio is actually not that bad, only it has become a bit of resource hog last weeks releases and needs the occosional restart. With the power of MS behind that should certainly be improved.<p>Xamarin.Forms is now open source, but I really hate that the PR&#x27;s are slow to being reviewed and 1 contributer is outpacing the Xamarin team in his spare time. Clearly something is brewing, they must be working on something new. Or else they should ditch and start something else.<p>We&#x27;ll hear about it in a few days.",2016-11-14 11:54:02,12949196
2654,"I&#x27;ve used Xamarin for several projects and I greatly regret that decision. Granted, most of my hatred is targeted towards Xamarin Studio and Xamarin.Forms so if you use Visual Studio and build only native UIs then maybe your experience will be better.",2016-11-14 11:58:34,12949227
2655,"Xamarin has unfortunately muddled their branding.<p>Xamarin Forms is not Xamarin, it is a DSL. You do not need to use it. At its core Xamarin is c# with pinvoke to the underlying native platform implementation. You&#x27;ll still need that platform knowledge but now you can share the core business logic between platforms.<p>To get maximum code share you&#x27;ll need a MVVM framework such as ReactiveUI which is based on the Reactive Extensions and modeled on functional reactive principals check out  <a href=""https:&#x2F;&#x2F;github.com&#x2F;reactiveui&#x2F;ReactiveUI&#x2F;releases&#x2F;tag&#x2F;7.0.0"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;reactiveui&#x2F;ReactiveUI&#x2F;releases&#x2F;tag&#x2F;7.0.0</a> or <a href=""http:&#x2F;&#x2F;reactiveui.net"" rel=""nofollow"">http:&#x2F;&#x2F;reactiveui.net</a>",2016-11-14 12:08:09,12949262
2656,"Yes, but only Xamarin, not xamarin forms.",2016-11-14 12:11:10,12949276
2657,"If you are currently doing Xamarin development or are interested in learning more check out the <a href=""http:&#x2F;&#x2F;weeklyxamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;weeklyxamarin.com</a> newsletter.",2016-11-14 12:14:06,12949298
2658,"We are waiting since years for a simple xamarin studio for linux, even just supporting only ubuntu and letting the other distro to manage the packages for them... The reality is it seems they don&#x27;t want at all to bring Xamarin on Linux, sadly Miguel was very clear about it in the years.",2016-11-14 12:20:31,12949326
2659,"Agreed, people seem to think Xamarin == Xamarin Forms, while the real power lies in shared business logic with native UIs, in my opinion.<p>Xamarin Forms may be useful for internal super-CRUD LOB apps that really are just a collection of input fields, but as soon as you do anything customer facing, you should be using the standard native UI approach.<p>Also +1 for ReactiveUI, it completely changed the way I build apps for the better.",2016-11-14 12:23:56,12949338
2660,"I&#x27;ve been extremely disappointed in Xamarin. The main issue is that you don&#x27;t really get code sharing. I would estimate that only 25% of the Xamarin project I manage is cross platform code. The rest is this bizarre merger of native APIs with C#. It&#x27;s difficult to write because of the lack of examples and documentation. It&#x27;s also buggy, even with simple things like page views.<p>The real problem is that I can write a native iOS app in a fraction of the time it took to write a Xamarin app. Swift has improved iOS development speed so much I&#x27;m not convinced we need cross platform app engines (excluding games).<p>As for Android, yeah, native Android sucks. Activities and fragments are the worst idea anyone has ever had and no one agrees on best practices. But even with cross platform high levels of abstraction like Unity3D you still need to understand them. So, my current advice is to suck it up and write it native twice. Pick your favorite OS, start with that, and then port the logic.",2016-11-14 12:24:23,12949340
2661,"Forms is not Xamarin. It&#x27;s a DSL in the form of a NuGet (aka npm&#x2F;cpan) package developers can use to attempt to ignore the differences between the platforms.<p>It&#x27;s kinda like swing. Great for throwing together a line of business application and getting xplat ui for free. It&#x27;s possible to build a performant application with the framework but it abstracts subtle things that come back to hurt you.  For example. Forms apps on Android is a single activity, always, period. Fragments are cycled in and out of this activity as navigation occurs. This introduces subtle annoyances related to memory usage as the entire app must be running vs thin slice. It transforms the lifecycle of Android into the UWP or iOS lifecycle.<p>Again this is Xamarin Forms. It is not Xamarin. It has its place but please don&#x27;t confuse the product due to poor branding.",2016-11-14 12:25:54,12949344
2662,"No one is mentioning how expensive Xamarin is and there is no proper free version.<p>In the free version you app expires after 24 hours AND it has to be below a certain size, I dont remember maybe 2 MB or something.<p>To make something you have to cough up a lot of money, and the sad part is this information is incredibly hard to find, you only stumble upon it when you download GBs of files.",2016-11-14 12:26:51,12949349
2663,"I&#x27;ve written a few apps in C++&#x2F;COM with a UI written in Visual Basic.  The VB app was &#x27;button code&#x27;, with the heavy lifting done in COM.  I wonder if this approach would work for Xamarin - write the core logic in C# but leave the UI in Java.",2016-11-14 12:28:09,12949355
2664,"That&#x27;s not true anymore, Xamarin is now free for everyone, except larger companies, see <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-for-all&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-for-all&#x2F;</a>",2016-11-14 12:29:35,12949363
2665,"Agreed. I never read the Xamarin documentation, instead I&#x27;m looking at objc or Java and then impl as c# instead. The method names, signatures and idioms match almost one for one. When the API doesn&#x27;t match it&#x27;s because it makes sense to; Pickup a copy of the dotnet framework design guidelines and you&#x27;ll see what I mean about the previous statement.",2016-11-14 12:37:18,12949396
2666,I just started looking into Xamarin Forms and couldn&#x27;t figure if it was just blindly typing xaml or there was a way to preview it. Thanks for the posts.,2016-11-14 12:41:33,12949411
2667,"Yes it is worth learning. It&#x27;s a skill which is quite in demand especially from established companies for their business applications.<p>However, as others have pointed out, Xamarin Forms is a bit of let down.<p>In my experience, if you try to create custom designed UI (which is quite common in the native apps), then you find that Xamarin Forms is very limited. To overcome this limitation you need to write something called as a custom renderer for each OS you want to support. So it doesn&#x27;t really save you much time.<p>Xamarin has something called as Xamarin Labs project on Github: <a href=""https:&#x2F;&#x2F;github.com&#x2F;XLabs&#x2F;Xamarin-Forms-Labs"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;XLabs&#x2F;Xamarin-Forms-Labs</a> But it&#x27;s  progress has been very slow.<p>If you have a business data collection &#x2F; reporting app, where how things look is not very important, Xamarin can save a lot of time while creating cross-platform apps.<p>However, I wouldn&#x27;t recommend Xamarin Forms for B2C apps.",2016-11-14 12:47:57,12949438
2668,"AFAIK, Xamarin Forms was always meant to be simplistic, and not very customisable. They even say it was meant to be called Xamarin Duplo, but trademarks.",2016-11-14 12:50:05,12949447
2669,"Most of my problems often come from constructors. For example, using a custom <i>parametered</i> constructor in an Activity or Fragment seems impossible, so constructor injection is already out of the question. <i>This is valid C#</i>, but will not compile. Hence, I stated that using Xamarin feels like programming Java in C#, which makes me feel like I would actually be happier writing Java code.<p>Instead, for this example you could subclass Activity&#x2F;Fragment and use reflection to find properties on the activity to inject services into.<p>This is only one of countless annoying Xamarin problems I have encountered in my few months of use, and this one was relatively easy to solve. 
Vague problems also ensue when forgetting to inherit a class from Java.Lang.Object which leads to vague exception messages like &quot;Specified cast invalid&quot;.<p>Sure, sometimes parts can be made faster in C#, but more often than not I spend day(s) debugging extremely vague bugs related to non-documented mappings.",2016-11-14 12:54:19,12949471
2670,"Hey Guys,  Xamarin University Instructor here,<p>Obviously I think it&#x27;s worth it, I learned it well enough to teach others.  We have a bunch of <i>free</i> Self Paced Learning modules and videos at Xam University, as well as obviously the paid stuff that pays my salary ;-)<p>There is a ton of investment and effort from a small team, remember, we&#x27;ve only been with a &quot;big company&quot; a few months, so the improvements come at a blistering start-up pace.  If you haven&#x27;t seen it in a couple years, you should really check back.<p>If you are going to develop &quot;all platforms&quot; or even just iOS and Android, it is _certainly_ worth a long look.  Access to every API you get access to in their native languages and the ability to avoid that language &quot;context switching&quot; pain.  Plus, some amount of shared code (varies wildly, 25% - 75% depending on how heavily your app is just about custom UI and animations ).<p>Because we use the same APIs (except when we have better ones), you can leverage the same documentation and StackOverflow posts when you need to (yes with a little language translation), but you often don&#x27;t need to because Xamarin has a _lot_ of great documentation as well.<p>And, as has been mentioned, &quot;Xamarin Forms&quot; does not equal &quot;Xamarin&quot;.  Although it is a valid choice for developing in Xamarin, it is only one option.  Here is a super shallow comparison:<p>Xamarin Forms:  Super fast for super simple UI&#x27;s and interactions with common elements. It is highly opinionated on what it should do and look like on all platforms.  Customization is do-able but starts to increase the complexity of the app quickly to the point where the below would have been a better choice.<p>&quot;Xamarin&quot; aka &quot;Xamarin.iOS and Xamarin.Android&quot;: Use essentially the same development patterns as Native Android and iOS developers and use the same API&#x27;s (plus .NET library, and many .NET 3rd party libraries).  You get code sharing (as noted, amount varies considerably), ability to &quot;think in one language (often including your server, which might also be c#), and access to some additional libraries (because we support both the Native libraries _and_ the .NET ecosystem).<p>Hope this helps :)<p>Oh, and a quick plug.  Xamarin University is live classes taught by real, very experienced developers who can actually help you learn and understand, so we are, you know, worth asking questions of.   Also, we&#x27;ll be doing a free presentation all day on November 18th as part of Visual Studio Connect, so check us out there and see what you think of Xamarin _and_ Xamarin University!",2016-11-14 13:04:07,12949518
2671,"Hm, completely different experience here. I&#x27;ve been involved with three rather large Xamarin-Projects in the last year, and we were (team-wide) completely surprised at how much of the code can actually be shared, how our velocity compared to native development and the overall dev experience.<p>I think the code sharing thing really comes down to how you&#x27;re using Xamarin  if you keep on writing apps the way you&#x27;re used to from the original platforms, there&#x27;s not much to gain. On the other hand adopting the patterns and ideas that influence the .NET sphere (DI&#x2F;IoC, MVVM..), Code Sharing rates (or PCL vs. Native LoC) can be as high as 80&#x2F;20.<p>Xamarin Studio certainly has its own shortcomings, but both Microsoft (Visual Studio for Mac) and Jetbrains (Project Rider) are actively improving or developing alternatives, so I think that pain is going to fade over time.",2016-11-14 13:04:14,12949519
2672,"I understand this, but how many people read these kind of angry rants on the internet and realise there are more ways to use Xamarin than using Forms?",2016-11-14 13:07:53,12949537
2673,"We use Xamarin Forms a LOT for our internal and public facing apps. I started exploring it almost 2 years back, because native Android development just sucked, and C# has the async&#x2F;await keywords, which is simply perfect for asynchronous operations in UI.<p>It has not been an easy road. After 2 years, I&#x27;m finally beginning to reap the benefits. The simple problem is this: this is another layer over the existing layers and it&#x27;s very hard to get it right, especially if the underlying layers suck.<p>Just because you&#x27;ve learnt Xamarin Forms doesn&#x27;t mean you can choose not to learn the underlying native platforms. You can skip over most of the details, but something will always come back to bite you, and then you have to go figure it out. Xamarin Forms works on top of Xamarin Android, that works on top of Android SDK and Android Tooling, which works on top of the JDK, which works on top of the OS you&#x27;re developing on. So many places for something to go wrong, and usually presents itself in the form of a cryptic error at the top. Developing for iOS is considerably easier.<p>So there&#x27;s still a fair amount of expertise to develop if you&#x27;re completely new to mobile development. Take it for what it is -- an abstraction, and as with any abstraction, any concrete manifestation will have its issues, and you must be ready to roll up your sleeves to figure it out. And it does get keep getting better with every subsequent release.<p>But it does eventually help -- we have to get the complex bit right once, and then it simply works. Don&#x27;t approach this like you would approach an Android app -- make sure you understand UI design best practices -- especially reactive design and data binding.<p>We also have .NET stack, so I&#x27;m finally in this beautiful world where all my logic is represented as C# Expression Trees on the server side, that gets serialized and pushed down to our Xamarin Forms Apps. Looking forward to WASM adoption, so I can finally get rid of that JavaScript mess.<p>So if you&#x27;re writing a one-time app, and you just want to target Android&#x2F;iOS, and you don&#x27;t care how you&#x27;ve done it, no it doesn&#x27;t make too much sense.<p>But if you&#x27;re trying to make a long-term bet, in this awful fragmented device-oriented world, (and having to write the same app twice goes against the very nature of your existence), well that&#x27;s my bet, I will be cautiously optimistic. If you&#x27;re on .NET, it&#x27;s a no-brainer -- there are simply too many other benefits to ignore, and philosophically very true.<p>The architecture itself (Forms, Xamarin.Android, Xamarin.iOS, Custom Renderers, Platform Effects, Bindings to access native libraries) is theoretically flawless (or very close to it), a work of art -- and I&#x27;m a sucker for theory, no matter the real world pain.",2016-11-14 13:12:25,12949564
2674,IIRC he said they discontinued Xamarin for Linux because of a lack of demand,2016-11-14 13:12:57,12949569
2675,"&gt; I would estimate that only 25% of the Xamarin project I manage is cross platform code.<p>Yep, you will keep hearing this from people complaining of Xamarin. A huge problem indeed, and I&#x27;d say enough for it not be worth learning.",2016-11-14 13:33:46,12949701
2676,&quot;The rest is this bizarre merger of native APIs with C#. &quot;<p>That was the thing that struck me the most when following a Xamarin course. I just don&#x27;t see the added benefits of Xamarin when you are at that level of using (or having knowledge of) native code.,2016-11-14 13:36:25,12949709
2677,"I&#x27;ve had completely the opposite experience. Have worked on several medium-to-very large Xamarin projects (4 developers up to 60 developers) and rarely have I seen code sharing drop below 50%, with the sweet spot being around 60%.<p>2 years ago, Xamarin was buggy as hell. Today, (IMHO) it&#x27;s quite stable.<p>Edit: downvoted for sharing my experience? Stay classy, HN.",2016-11-14 13:57:40,12949799
2678,"I couldn&#x27;t get React Native working for Android (on either Mac or Windows) but I&#x27;ve been pretty happy with Xamarin. I&#x27;ve written a simple game in Xamarin.Forms that I will be posting about.<p>Purely by coincidence, I have four blog posts on this out this week. The first one (on React Native and Xamarin) is here: <a href=""https:&#x2F;&#x2F;unop.uk&#x2F;cross-platform-native-mobile-app-development-options"" rel=""nofollow"">https:&#x2F;&#x2F;unop.uk&#x2F;cross-platform-native-mobile-app-development...</a>",2016-11-14 13:59:57,12949807
2679,"It depends. I&#x27;ve been pretty happy with Xamarin for what I&#x27;m doing (a game [0]).<p>If you are using basic Xamarin then you will end up writing separate UI code for each platform, but you can still share business logic if you architect if well. Xamarin.Forms is different and lets you share the UI too.<p>Even with Forms, you will always have some platform specific code, but this is normally small. For example, some implementation details when using SQLite.<p>[0]: I&#x27;m writing about this starting with <a href=""https:&#x2F;&#x2F;unop.uk&#x2F;cross-platform-native-mobile-app-development-options"" rel=""nofollow"">https:&#x2F;&#x2F;unop.uk&#x2F;cross-platform-native-mobile-app-development...</a>",2016-11-14 14:03:16,12949824
2680,"I&#x27;ve used in production and experience was good. Xamarin Studio is more than enough for development &#x2F; debugging. Xamarin is very powerful, but usually people taking the wrong direction with Xamarin and using Xamarin.Forms. As like many other cross platform solutions Xamarin.Forms sucks. If you think making a native iOS application is easy with Swift, it is same with Xamarin too. When i develop applications with xamarin (desktop&#x2F;mobile) i usually look for java&#x2F;swift documentations or forums for my problems. This way i don&#x27;t need separate xamarin community. Because you can write the same code in c# easily. Please check my workflow, for any further questions, twitter: @umurgdk<p>Recommended workflow:
0. Never ever use Xamarin.Forms other than quick prototyping. If you develop applications with other cross-platform frameworks, you already know all of them sucks and Xamarin.Forms is not an exception.<p>1. Create PCL &#x2F; Shared project for your business logic (also your view models if you&#x27;re using MVVM architecture). Believe me most of your application is platform independent (except the view layer). Your api communication, storage operations all handled here. See 3rd article to how to make storage&#x2F;network platform independent.<p>2. Create native projects for each platform (iOS, Android, Windows) implement native views here (use xcode, android studio if you need visual designer). This part should be exactly the same as your swift&#x2F;java code. For iOS you&#x27;re just implementing an ApplicationDelegate class and UIViewControllers as same as your swift code. Same for Android part, nothing special to xamarin just implement your activity classes. At this level you have the full power of your native platform with one exception 3rd party native libraries. It&#x27;s possible to use (yes i used some swift&#x2F;java libraries for youtube player) them but really hard to integrate to your project, that part has to be improved and better documented.<p>3. Your shared code base need native features, for example storage implementations are totally different for each platform, or changing views (navigation) will be implemented differently for each platform. Since shared code base shouldn&#x27;t know anything about native platform. You should abstract these functionalities with interfaces. For example create a storage interface with methods like saving&#x2F;reading&#x2F;creating files. Another example might be network communication. Abstract it as an interface on your PCL and implement this interface in your native project with full control of your platform. Your shared code base only knows how to use that interface. And then each of your native projects should implement these interfaces. At this point dependency injection may help to register implementations easily. Actually that part is what makes you share your business logic. Writing idiomatic cocoa navigation code is much better than using any cross platform implementations, you have full control but in the same time your shared code base using them without knowing anything about the platform.",2016-11-14 14:12:46,12949877
2681,"iOS developer with multiple years of experience of burning fingers in cross-platform development here.<p>I&#x27;ve tried Cordova&#x2F;Ionic, Xamarin, Dropbox Djinni, and native iOS development. C++ is the closest I&#x27;ve got the a performant cross-platform solution, even though it go it&#x27;s own quirks.<p>The problem with Xamarin is it&#x27;ll always play second fiddle to quick moving targets of Android and iOS toolchains. In my case the Reactive Extensions support was utterly broken, and Visual Studio kept crashing on MvvmCross, Android SDK updates would make things hell, and I would waste at least 8 hours a week to fight the toolchain. The promise of cross-platform doesn&#x27;t deliver much as you&#x27;re trying to tweak your MVVM solution to Android&#x2F;iOSs whims and fancies, which leave you with a fragile common logic.<p>If you want to write a TODO list of simple CRUD app, it might work, but for professional iOS&#x2F;Android development, Xamarin is not enough. Xamarin doesn&#x27;t free you from learning ViewController lifecycle etc and platform specific implementation details. So you&#x27;re stuck on a foreign platform, with extra overload of learning C#&#x2F;F# along with Android&#x2F;iOS platform overhead.<p>My Advice: Learn Swift and Kotlin, and do native development. Cross-Platform is a illusion, and the road is paved with dead and failed projects.",2016-11-14 14:44:54,12950050
2682,"The Xamarin needs to develop easy and customization should be easy.<p>Had huge pain in full screen mode dynamically for all the devices.<p>Calendar with colors forced me to create a new custom control from 0.<p>To be stable with the controls if you make a tab control in one version should be the same in other versions also, not reinvent and change the wheel.<p>Easy and clear documentation. Forums all with lots of no one cares why it works int works on my machine stuff.<p>To new technology and has to get mature and stable. If you are not in the same versions of Xamarin in mac and windows it just not works properly.<p>Proper error message. I am getting an error like There were deployment errors. Continue. (Not run in administrative mode the vs 2015, closing the emulator or it was opened by other vs before, or you closed the emulator before finished the deploy)
There are lots of errors like &quot;aapt exited with code 1&quot; that means there is some bad character in image or in files like -.... or files starts with number.<p>Also sometimes out of memory exception when loading images larger then 1mb or in android 4.2 larger than 300kb, even going lover to 100kb having problems in 4.2 android.<p>Proper editor for Xamarin.Forms is a must have if you want to develop. You can&#x27;t see the design what you are doing with vs 2015.<p>Also designer is crashing all the time if i open multiple times and make some adjustments.",2016-11-14 14:50:56,12950093
2683,"The Xamarin needs to develop easy controls, documentation and customization should be easy.<p>Had huge pain in full screen mode dynamically for all the devices.<p>Calendar with colors forced me to create a new custom control from 0.<p>To be stable with the controls if you make a tab control in one version should be the same in other versions also, not reinvent and change the wheel.<p>Easy and clear documentation. Forums all with lots of no one cares why it works int works on my machine stuff.<p>To new technology and has to get mature and stable. If you are not in the same versions of Xamarin in mac and windows it just not works properly.<p>Proper error message. I am getting an error like There were deployment errors. Continue. (Not run in administrative mode the vs 2015, closing the emulator or it was opened by other vs before, or you closed the emulator before finished the deploy)
There are lots of errors like &quot;aapt exited with code 1&quot; that means there is some bad character in image or in files like -.... or files starts with number.<p>Also sometimes out of memory exception when loading images larger then 1mb or in android 4.2 larger than 300kb, even going lover to 100kb having problems in 4.2 android.<p>Proper editor for Xamarin.Forms is a must have if you want to develop. You can&#x27;t see the design what you are doing with vs 2015.<p>Also designer is crashing all the time if i open multiple times and make some adjustments.",2016-11-14 14:51:16,12950096
2684,This is different than your circumstance but back when I was recruiting I helped a Xamarin developer with no professional experience find a gig with a 95K base salary. It&#x27;s currently niche enough that people are willing to pay top dollar for anyone who can actually work in it. Another Xamarin developer I know consults for 150 an hour. (Although he&#x27;s probably one of if not the best xamarin guy in Chicago),2016-11-14 15:05:49,12950188
2685,"Xamarin for business layer logic, native for the actual app.",2016-11-14 15:21:32,12950302
2686,So it&#x27;s an updated version of Xamarin Studio... Not impressed.,2016-11-14 15:24:12,12950326
2687,"My experience with Xamarin is mostly on the Android side, so that&#x27;s what I&#x27;ll mention. Spoiler: mostly positive, with some big caveats.<p>In no particular order:<p>Stay the hell away from Xam.Forms, unless it&#x27;s improved drastically in the last 6 months. Though I also think the whole idea is misguided.<p>For Android, go with Xamarin or Kotlin. I would take C# over Kotlin because of the maturity of the language, the tooling around the language, and the ecosystem. Either way, having a powerful modern language will be a godsend.<p>Concurrency on Android is much easier to deal with in Xamarin than with native. This extends to things like complex orchestration of animations.<p>You will do backflips trying to get startup-time down. But once your app is in memory performance is basically native-level.<p>Xamarin gives you some nice framework-level things that native Android doesn&#x27;t. A good API for sqlite and http. Proper data-binding. MvvmCross and ReactiveUI are light-years ahead of anything that is available in native-land.<p>Xamarin builds are faster and more reliable than Gradle.<p>Xamarin introduces its own layer of bugs and glitches. You&#x27;ve added another slice of Swiss cheese to the stack.<p>Xamarin plugin for Visual Studio is crash&#x2F;glitch city. Xamarin Studio is tolerable at best. Either way, your tooling will be faster but less feature-rich than Android Studio.<p>Every time you want to use an existing third party library, you will go through this process: Has anyone done an official binding for it? If yes, use awkward Java syntax in C#. If no, try to find an unofficial binding. If not found, try to bind on your own - 50% chance it just works, 50% chance you fiddle for half the day and then fail. If it&#x27;s the latter, try to decide if you want to do a code-level port, or abandon your idea. Code-level ports are possible nearly line-by-line, it&#x27;s slow brainless work.",2016-11-14 15:29:30,12950362
2688,"Xamarin Native developer here,
I started off by trying to create a Pokemon Go Map app. Although I got off to a quick start, slowly it downed upon me that I started spending too much time finding fixes for Xamarin issues rather that programming. I used macbook as agent and visual studio as IDE. Sometimes the deployment would take 5 minutes! I then had to restart the agent to fix it. As a programmer I am rather a person who runs a code, change a little bit in code, then run it again. If I dont understand things I google it or find the documentation. Thats my way of learning things instead of reading through programming books.<p>For me Xamarin Native was slow and rigid. I highly doubt I could make &#x27;innovative&#x27; apps with Xamarin. Maybe it is okay for people who want simple things like a &quot;to-do app&quot; or somethign that fetches list of images and displays it.<p>I wanted more and found no solution for things I needed, so I gave up and started xcode (swift + some objective c).<p>And let me be clear here, if I had spent same amonut of time on xcode as xamarin I would have been iOS dev master :)<p>Things just works much better. You can do anything you imagine with Xcode and swift. With Xamarin its more like find whatever library is out there and try to create something by combining these. Too many bugs.<p>This is no sly dig on Xamarin or Microsoft as I use alot of MS products myself. I have also tried phonegap, react native etc. and Xamarin is the best when it comes to cross platform without a question, but none of these can match true native coding (xcode  swift&#x2F;objc)",2016-11-14 15:44:02,12950467
2689,"So we were told when Xamarin was bought by Microsoft and Xamarin Studio made free. I just wanted to be able to make Android apps on Xamarin from my Linux laptop. Miguel de Icaza said on a reddit AMA they were already using MonoDevelop with Xamarin Android SDK internally, and would be releasing it.<p>Till date I cannot find anything Android related in MonoDevelop (or its available Add-ins).",2016-11-14 15:52:21,12950548
2690,"Admittingly, the constant changes and breaking stuff in Ionic 2 is getting a bit... tired. I know it&#x27;s not at &#x27;final&#x27; status yet, but still.<p>But we&#x27;ve been using it for a long time and have, in the main, had great results with it.<p>Xamarin has however come on leaps and bounds since out team started doing mobile development. And is free too... so I could see us switching to Xamarin to get native performance on apps that demand it.",2016-11-14 16:24:19,12950816
2691,"Lot of overlap, but VS Code has a much bigger ecosystem&#x2F;community. Xamarin&#x2F;Visual Studio has advanced debugging features like thread inspection, &quot;immediate&quot; console for executing commands while the program execution is paused, profiler, App Store submission, and stuff like T4 templates, etc.",2016-11-14 16:29:58,12950879
2692,"i&#x27;m mostly a web developer with C# and JS. I&#x27;ve tried to learn Swift, Xamarin and React Native multiple times over the last 2 years.<p>With both Xamarin and React Native there was a honeymoon period where everything seemed so easy and great. But at some point I always hit a problem where there was limited documentation, or unsupported features, and that really hurt my productivity and motivation.<p>The learning curve for Swift&#x2F;ObjC always seemed much higher, with a lot more upfront investment required before I could make anything resembling a functional app. The iOS layout system in particular was an obstacle, as well as managing the tooling and dev environments.<p>If I had a free 6 months, I would just learn full native, but keep an eye on React Native. The dev experience in React Native is unparalleled, and it seems easy to drop down to native code (assuming you know it). Also the ability to easily contribute back to the community with NPM and react-native &quot;link&quot;, makes me hopeful limitations will quickly be erased.",2016-11-14 16:30:44,12950887
2693,"I&#x27;ve very recently worked with Xamarin Forms for about 5 full-time months and it was terrible.<p>My main complaints are:<p>* It&#x27;s full of bugs<p>* The build system is unreliable and mysteriously breaks, which generally takes a full day to fix<p>* Basic functionality such as merging resource dictionaries (which are stylesheets, kinda) is missing<p>* No graphical UI designer or preview, so every layout change requires a recompile and deploy before you can see it<p>* Apps feel sluggish and crash at runtime without specific error messages<p>* It makes VS crash all the time. I&#x27;m not a regular VS user so I&#x27;m not sure if VS:CE2015 is a POS or if Xamarin is.",2016-11-14 16:30:54,12950891
2694,"I&#x27;ve been doing Xamarin for about 6 months and I get most of me reuse in services. Sure, manipulating the UI is mostly native code but the rest can be reused such as the DB layer, API layer, and anywhere else you have business logic.",2016-11-14 16:42:45,12951015
2695,Can I ask the products you have worked on with Xamarin?,2016-11-14 16:46:25,12951044
2696,"I&#x27;ve been a life long Microsoft developer.  So when I started down the mobile app path, I naturally gravitated to Xamarin.  Xamarin allows you to build mobile apps in the best development IDE out there.  This is true... but it has it&#x27;s issues.  I&#x27;ve created 3 andoid apps with Xamarin (and tried more), but each time i&#x27;ve run in to bugs or oddities that make life suck.  I wish it was better, but if I could go back in time, I would have probably chosen a different language&#x2F;tool.  Maybe Unity if I still wanted to stay with the C#&#x2F;VS IDE.<p>One nice thing about it is that all the methods&#x2F;classes are named almost the same thing as native android.  If you want to know how to do something, you can find the android solution and just change a few small things.<p>So my vote would be to not do Xamarin and to choose a different cross platform development environment. Cross platform is the key.  If you do choose Xamarin, I would spend some time and do a little bit of training before jumping in.  It&#x27;s not like the ease of building windows applications in VS.",2016-11-14 16:48:53,12951072
2697,"What you have to deal with;<p>* Xcode = iOS bugs + UIKit bugs<p>* Xamarin = iOS bugs + UIKit bugs + different runtime, language, memory model abstractions + .NET bugs + P&#x2F;Invoke bugs &amp; overheads + GC inter-op bugs &amp; overheads + C# bugs + slow followup of platform updates<p>* Xamarin Forms = iOS bugs + UIKit bugs + different runtime, language, memory model abstractions + .NET bugs + P&#x2F;Invoke bugs &amp; overheads + GC inter-op bugs &amp; overheads + C# bugs + slow followup of platform updates + extra UI abstraction layers + lack of fine level controls &amp; features",2016-11-14 16:58:39,12951179
2698,"I was extremely disappointed in the development experience, but the core technology is extremely helpful, depending on your use-case.<p>If your app is just a mobile front-end for a REST API then I wouldn&#x27;t bother with it: develop two versions of the app with different UI idioms.<p>If your app does something considerably more complex, Xamarin might also be a good idea. Keeping two drastically different codebases in sync can be a very big task, but I suggest proactively looking at issues people have experienced with it, as well as other differences such as memory management which works very differently to what you&#x27;re used to as a .NET developer.<p>However I think a number of responses have strayed from the question, which is &quot;is it worth learning Xamarin&quot;. It appears Microsoft bought the technology because it was useful, not to kill it. I don&#x27;t think the technology will be retired any time soon and can only get better. So long as Microsoft gives this the TLC it needs, it will be a formidable part of any developer&#x27;s toolkit.. so long as it can get over the really bad reputation it has.<p>I for one will explore every possible alternative before considering Xamarin again.",2016-11-14 17:01:01,12951210
2699,"I use VS2015 a lot for .Net ASP dev, but when I do Xamarin iOS dev I tend to do it in Xamarin Studio on the mac.<p>Much better experience, fast deploys&#x2F;builds. I miss Resharper but can live without it.",2016-11-14 17:04:07,12951247
2700,"Very recently Microsoft introduced VS for Mac (although I understand it&#x27;s sort of a preview version).<p>I don&#x27;t know about OS X, but I used Xamarin Studio on Windows and it was horrible.",2016-11-14 17:08:00,12951281
2701,"My primary question, as an Android developer who can write decent enough Swift when needed and who does not develop on any Windows platforms, is why should I learn Xamarin?",2016-11-14 17:25:42,12951449
2702,"That is a rebranded Xamarin Studio, with a slightly updated layout to match VS.<p>It feels much better on mac I must say, also tried it on Windows but just weird and slow.<p>I&#x27;m quite happy with it, but maybe I&#x27;m biased a bit because it sucked big time and they made big improvements to it last year. It&#x27;s all relative ;-).",2016-11-14 17:26:52,12951463
2703,"Just one comment to bring up as many folks still don&#x27;t know, Xamarin is free for many developers along with Visual Studio Community edition, the full info is here in this announcement from March 2016: <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-for-all&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-for-all&#x2F;</a>",2016-11-14 17:29:12,12951485
2704,"I&#x27;ve been using Xamarin since mid-2012 and have developed a couple of niche imaging products on Android and iOS for my employer, plus some internal tools on Android.<p>Overall I&#x27;ve been very happy. Code re-use hasn&#x27;t been stellar, but good enough to repay the investment. We have re-use not only between apps, but also between mobile apps, Windows desktop apps, and our application backends. I also feel I&#x27;m more productive than if I had so swap between Java&#x2F;Swift&#x2F;ObjC&#x2F;Andorid Studio&#x2F;Xcode.<p>Stability has improved a lot in the last year. Paid-for support was pretty good (esp. guys like @jonpryor), but the self-serve forums can be a bit hat-and-miss. I never had any killer bugs (but then I never used Xamarin.Forms...)<p>Overall: 85% happy with Xamarin.",2016-11-14 17:32:04,12951518
2705,"I think where Xamarin shines is in places where the development stack is already .net.  If you are starting green pasture, and don&#x27;t have .net developers already, then it seems to make very little sense.<p>With that said, I&#x27;ve made a number of apps in it, and it works well enough, but the more abstractions, the more problems, and you want to do anything outside of simple UI apps, you are likely going to have to learn how the native methods work anyway.",2016-11-14 17:36:56,12951564
2706,"I have had clients that use Xamarin. This is what I&#x27;ve observed:<p>1. If you don&#x27;t use Xamarin and you don&#x27;t have a team in-house that uses C#, don&#x27;t bother. You&#x27;ll be better off doing native development on iOS and Android platforms.<p>2. Your app won&#x27;t be as pretty, and it won&#x27;t adhere to platform native UI conventions as well if you use Xamarin.<p>3. Xamarin does a better job of it than most but it will still be lagging in access to the latest features.<p>4. BUT, if you are doing a vertical market app that wants to be cross-platform AND you have C# coders you can apply to that task, Xamarin is the best choice.<p>There are a lot of places where choosing Xamarin makes a lot of sense. And the people who created Xamarin are excellent. And now that Xamarin is owned by MS, it won&#x27;t die because it is hard to make money as a cross-platform startup. But as with every other cross-platform tool for non-game apps I&#x27;ve seen, it isn&#x27;t the best choice in green-field situations.",2016-11-14 17:42:00,12951609
2707,"You can make any sort of UX in Xamarin. Xamarin.Android, Xamarin.IOS are just straight up wrappers to the real api.",2016-11-14 17:42:55,12951622
2708,The recent thread on Xamarin (https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=12948611) gave some great insights into the pitfalls of that platform.<p>I was hoping to gather the same kind of insight on React Native from those currently using it.,2016-11-14 17:48:25,12951663
2709,"I personally haven&#x27;t experienced any performance problems, even on lower end devices (only the ones where the whole OS is sluggish).<p>I don&#x27;t know what Discord has seen there, so I don&#x27;t know if that&#x27;s been resolved. They also state that transitioning to React-Native on Android would have been more time than on iOS , which doesn&#x27;t mean that any alternative like Xamarin would have been better. It also reads like the team for the respective platforms is around 1 person big and they already have a running version for Android, so the cost of a rewrite and the time to retrain would not have been worth it, which is reasonable. On a greenfield project, different conditions apply.",2016-11-14 17:56:25,12951737
2710,"Xamarin is only worth it if you already have lots of C# code you need to reuse in mobile apps(our formerly windows-only company had to)<p>As a day to day user, I quite dislike it. But rewriting our business code was not an option.",2016-11-14 17:58:17,12951753
2711,"The solution is to use Xamarin.Android, Xamarin.IoS",2016-11-14 18:04:27,12951820
2712,"One downside of Xamarin apps is memory usage. Just launching our app uses &gt;200mb of memory. After doing all we can to avoid memory leaks and excessive usage, we still crash regularly due to running out of memory. (part of this is due to a UIWebView)",2016-11-14 18:11:46,12951891
2713,"If you already is an iOS dev I think it&#x27;s easier to just also pick up android instead of Xamarin. Altough, Xamarin seems very nice and so on.",2016-11-14 18:21:05,12951958
2714,"No Xamarin Studio on the mac vs on Windows. Logical I think because Windows has the real Visual Studio and Xamarin Studio Windows is based on GTK# (AFAIK, I think the mac UI is native Xam since last year) it is limited on the Windows side &#x2F; feels quirky.",2016-11-14 18:39:59,12952129
2715,"You can use Visual Studio on Windows to write iOS apps with Xamarin or Cordova, using a network-attached Mac solely as build server, without ever having to use it (except for updating stuff, via VNC)",2016-11-14 18:54:44,12952253
2716,"looks basically like the Xamarin Studio editor, which is basically MonoDevelop.",2016-11-14 19:06:22,12952361
2717,Better title: Xamarin Studio rebranded to Visual Studio for Mac.,2016-11-14 19:07:01,12952365
2718,FYI don&#x27;t use x labs. It&#x27;d dead. Maintainer has left project and has joined Xamarin to work on improving forms.,2016-11-14 19:08:32,12952376
2719,"95k base is indeed low. Severe undersupply of developers with deep mobile knowledge.<p>Whilst it&#x27;s been years since the advent of mobile, most enterprise organisations are doing their first mobile project in 2016&#x2F;2017. You can thank Gartner for that.<p>As for $150&#x2F;hr on contract, I know someone who invoices more than that but you must be on your A game and be ready to teach, teach,  teach.<p>There&#x27;s nothing too special about Xamarin knowledge. Drop your Apple vs google fanboyisms, learn both platforms, learn MVVM, implement pure MVVM (don&#x27;t fall back to singleton city).<p>If you know android&#x2F;iOS well and are wondering where next to apply your six+ years of mobile development knowledge vs having to compete with comoditization and off shoring - this is it. With your deep knowledge and experience you will smash the existing talent in the market out of the park.",2016-11-14 19:11:22,12952402
2720,"A lot of Microsofts recent work has been really interesting if not surprising. Linux support in Windows and Visual Studio (as a cross platform target <i>with</i> debugging!), VS Code, bringing on Xamarin... Etc.<p>I&#x27;m Glad to see them pulling their head out of the sand. It wired to see them changing place with the post Jobs Apple. (In regards to head in sand :P)",2016-11-14 19:11:25,12952403
2721,Also Xamarin.Forms,2016-11-14 19:32:57,12952532
2722,That&#x27;s basically what they&#x27;re doing with Xamarin.Forms,2016-11-14 19:33:44,12952537
2723,"I&#x27;ve spent last 3 years working with Xamarin and native iOS and Android apps.<p>Xamarin wins if you need something for Enterprise. A lot of entry fields, validation, integrations with SSO, Sharepoint, other rest API. If you use MVVM well, it will lead to ~75% of code reuse between iOS and Android. Even more with XamarinForms. No complex effects, no complex animations, just enterprise.<p>Native wins if you want to make it more beautiful for end-users and you need to have a lot of customization. For example, customize map, pins and callout views. You will hate everything if you do it in Xamarin. No code reuse here<p>In general, Xamarin has very great chance to be #1 choise when you choose platform for Enterprise development.",2016-11-14 19:34:39,12952546
2724,"That was just an internal working name. Xamarin.Forms has first and foremost been a code patterns library, not a WORA framework (despite how it may be used in practice). It&#x27;s a unique leaf on the MV* tree. The central insight from it&#x27;s chief architect was to apply the scenegraph + renderer model from 3D graphics to solve the native cross-platform UI problem. It should be classified something like Model-ViewModel(Scenegraph)-Renderer.<p>As a practical matter it had to ship with a library of default renderers for common UI elements, but other than the layout system, those all can be replaced by alternative renderers either in part or in whole. But the scenegraph essentially is the data structure that stores your app&#x27;s business value (think HTML templates + JS). The renderers can too, but those should be reusable across many apps (think CSS&#x2F;the value prop of Bootstrap). The scenegraph maximizes intra-app UI code sharing and the renderers maximize inter-app UI code sharing.<p>It&#x27;s a hard problem space, and there is no magic bullet. Even the Xamarin.Forms team would tell you that. For many use cases, it&#x27;s great. The bugs are tricky, since UIKit and Android have major thread safety issues and wildly divergent object life cycles (and Android itself is such a moving target, which any experienced Android dev knows, cough <i>Support Libraries</i> cough). Bugs tend to come from the layout engine because that is the heaviest lift. XF eats complexity that you otherwise have to eat on your own. For many small&#x2F;under resourced teams, that&#x27;s the difference between &quot;iOS only&quot; and &quot;Android also&quot; support. If you are resourced for two teams, awesome! If not, but have to support both, you face some hard choices. Xamarin.Forms tops a very short list of available options.<p>All that&#x27;s to say that some people use Forms to build really native apps because they understand the patterns Forms is built on, and it&#x27;s limitations. Every framework has a grain. When you cut with it, the results are quick and smooth. When you cut against it, and the results are tough, course, and possibly cracked.",2016-11-14 20:03:35,12952772
2725,<i>Especially</i> when&#x2F;if using Xamarin.Forms (and not XAML). It&#x27;s a very good fit for a functional language. Code equals data.,2016-11-14 20:12:10,12952868
2726,"Visual Studio for Mac is a re-brand of Xamarin Studio. However, perhaps more importantly than the software itself, opening the Visual Studio brand to the mac environment signals Microsoft&#x27;s commitment, yet again, to meeting developers in their chosen environment. Xamarin Studio is also based on MonoDevelop, so maybe this could accelerate a VS linux port, if they&#x27;re so inclined.",2016-11-14 20:43:30,12953160
2727,Thats what this move is. VS for Mac is a rebranded Xamarin Studio.,2016-11-14 20:44:47,12953164
2728,"[Full Disclosure: I work on the Xamarin team at Microsoft. Im familiar with the Xamarin tools and want to offer my thoughts and guidance on the original post. Opinions here are my own.]<p>The answer to whether or not you should learn Xamarin depends largely on what you are trying to accomplish. Let me explain.<p>If you were to approach me as someone interested in Xamarin, I would start by asking what kinds of apps you are looking to build, how complex they are, and how much you care about UI quality and customization. This is to help decide between Xamarin and other xplat solutions, but also between Xamarin native and Xamarin.Forms, our cross-platform UI toolkit. Id ask what you hope to gain from a cross-platform approach, so we can optimize for that. Id ask what parts of your app you are looking to share, and how you plan on architecting your app to allow that.<p>Id ask how much experience you have with .NET, and if being able to use C# and&#x2F;or Visual Studio makes you more productive. Id ask if you have an existing codebase you want to connect to. Your familiarity with native iOS development is a plus - the particulars of iOS and Android add to the learning curve, but you cant make good native apps without knowing the basics of the platforms youre building for.<p>From these considerations, we would decide if Xamarin is a good fit for you. It would be naive to say that Xamarin is the ideal solution for everyone, but it is a very good solution for many people.<p>At the end of the day, Xamarin is free, and it takes less time to get a handle on developing with Xamarin than it does to read this thread. I encourage you to try it out and decide for yourself.",2016-11-14 21:13:15,12953412
2729,"Hi, from Xamarin here - what page are you referring to? Community is free, there are a few extra features that come with VS Enterprise. Those are just nice-to-haves, like other VS enterprise features. You can develop with Xamarin for free.",2016-11-14 21:27:43,12953532
2730,"if the xamarin cross platform sdk maps closely to one mobile platform, how does make it intuitive for iOS developers?  Or are the classes aliased for each target platform?",2016-11-14 23:44:28,12954374
2731,"Definitely worth. Please make sure you are learning good things, not bad.<p>There is an approach to have all native apps with good codeshare developed easily. There are alternative approaches with less advantages.<p>We are using Xamarin since before it was Xamarin and are happy. Literally, there is no other way to have production-quality native apps for iOS and Android written in one language (with code shared). (Unless it&#x27;s C-like language?)<p>Our code share is around 60-70%, depending on the project. What I personally like in Xamarin it&#x27;s a) one language b) such easy and comfortable way of introducing new features and fixing bugs.<p>If you have a bug in the logic, you fix it in the Core, and boom it&#x27;s fixed in 3 apps. Once you developed a feature for iOS (or Android), boom, it&#x27;s ready for all platforms. Just add the UI part (UI logic is in the core as well).<p>One of the disadvantages was app size, but nowadays Uber app is 80+ Mb (swift-based). Nobody cares.<p>If you have to use different APIs on different platforms - fine. Totally possible.<p>IDE is fine, I&#x27;d say much better than XCode.<p>There is also a problem that people mistaken Xamarin and Xamarin.Forms. Forms is different technology and as of now (2.3) I would recommend it only to the limited set of scenarios.<p>To clarify, I am Microsoft MVP. But I am MVP cause I like Xamarin and I use it every day. Not otherwise.<p>Feel free to ask any questions on twitter @AlexSorokoletov.",2016-11-15 07:13:32,12956219
2732,"Native iOS and Android developer here. I switched to Xamarin a few years ago. As a native developer i was afraid of Xamarin and that i couldn&#x27;t harness the power that Swift and Java gave me. However it give&#x27;s you full control over your apps just as Java or Swift does. Everything you do in Java or Swift can be done with Xamarin in C#! Your knowledge isn&#x27;t lost, the syntax has only changed. Nowadays i absolutely love it! I work with enterprise companies as a consultant using Xamarin, code sharing is approximately around 80% when using a Xamarin and a framework like MvvmCross! In my opinion Xamarin is the feature of building apps. Please ask any questions you have and i be happy to answer.",2016-11-15 08:45:01,12956556
2733,"It depends on what your career objectives are. If you intend to found a start-up you can of course choose your technology stack and ignore Xamarin completely if you wish.<p>However if Xamarin takes off in the way I hope it will and becomes a high-quality product under the auspices of Microsoft, I believe it will become a vital skill in the marketplace.<p>And then, it would be like not knowing React or Angular as a web app engineer. Depending on the company&#x27;s technology choices, that might not matter, or it might mean you don&#x27;t get the job.",2016-11-15 09:08:24,12956640
2734,"I had exactly the same experience with Xamarin.Droid, even though I&#x27;m mainly a C# developer, for android app development, i&#x27;ll go with Java &amp; intellij Idea.",2016-11-15 17:24:37,12960081
2735,"The only selling point for Xamarin for me is Xaramin.Forms, but so far neither this has a good reputation.",2016-11-15 20:03:38,12961649
2736,"As a person who&#x27;s used XF for the last 2 years in my company, stay away from Xamarin.Forms. I can see some of the appeal for the regular Xamarin.iOS and .Droid but the performance of Xamarin.Forms on Android is absolutely horrible even after optimizing it to an insane amount. Think several seconds render times per page on a Nexus 5X (on a page that takes 200ms if written using Xamarin Android).<p>They&#x27;ve been denying it&#x27;s a problem for over a year, and then acknowledged it a few months ago and did nothing about it.<p>The platform itself also harbors a lot of bizarre and difficult bugs that only cause a couple of crashes each under some very specific conditions that are nearly impossible repro consistently. But there are so many of them that on a given day, 5% of our apps will crash or freeze because of some Garbage Collector bug, a platform bug, or some platform race condition. Just check how many of the bugzilla bugs are still in the NEW state.",2016-11-16 00:15:11,12963546
2737,"I will re-iterate the &quot;Stay the hell away from Xam.Forms&quot; as we&#x27;ve used it at work for almost 1.5 years.<p>I just convinced our management to move away from it when I migrated a page from Xamarin.Forms to regular Xamarin.Android. The page render time went from 2,000ms to 400ms.<p>A quick glance on the now-open source code of Xamarin Forms now shows you why the perf is so sluggish (the whole thing seems like it was hacked together by a college intern as a week-end project).<p>Xamarin seems to have a marketing team that is far ahead of their development team.",2016-11-16 00:23:37,12963582
2738,Visual Studio 2017 RC announced by Nat Friedman. (CEO of Xamarin prior to acquisition).<p>e: kinda surprised its the mobile group who&#x27;s announcing RC for  VS as a whole,2016-11-16 15:38:38,12967855
2739,"The Xamarin tools have supported using a remote Mac to run the simulator. Microsoft has an iOS shim library and Objective-C tool chain for porting apps to Windows, but it&#x27;s very much in preview.",2016-11-16 15:47:48,12967969
2740,They&#x27;re integrating xamarin into visual studio. That&#x27;s pretty big no?,2016-11-16 15:53:27,12968063
2741,Does it mean that Microsoft may release some phone in near future (year? two? three?) with SDK based on Xamarin?,2016-11-16 15:54:48,12968085
2742,"FWIW, this is actually a rebranding of Xamarin Studio, so it only handles C# and F#. It&#x27;s a bit puzzling, as VSCode seemed to be the tool that was going to take over all the Xamarin Studio features.",2016-11-16 16:01:58,12968177
2743,Is the new xamarin going to be any less buggy?,2016-11-16 16:02:54,12968186
2744,"Link goes right to the product, so here&#x27;s the docs for what it actually is: <a href=""https:&#x2F;&#x2F;docs.mobile.azure.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;docs.mobile.azure.com&#x2F;</a><p>also, from ZDNet:<p>&quot;Visual Studio Mobile Center is a portal that is meant to help developers build, test, distribute and monitor apps built in Objective-C, Swift, Java, Xamarin and React Native for Android, iOS and Windows devices.&quot;",2016-11-16 16:04:14,12968205
2745,This is confirmed to be Xamarin Studio rebranded as VS for mac.,2016-11-16 16:04:18,12968206
2746,Can we change the title to &quot;Xamarin Studio for Mac renamed Visual Studio for Mac&quot;.,2016-11-16 16:22:25,12968450
2747,"Xamarin studio is in many ways lighter and more asynchronous than vs proper, so there is some upside. But it&#x27;s missing visual studio&#x27;s absolutely killer feature, which is the superb c# repl. Add that and my windows virtual machine will start gathering a lot of dust.",2016-11-16 16:30:38,12968548
2748,"I know that there&#x27;s a lot of comments about this just being a rename of Xamarin Studio, but hopefully this is pointer in the direction Microsoft may go in eventually joining the two IDEs and in a major version or two we might actually have a Visual Studio on Windows and Mac(and maybe Linux?) that are pretty close to each other.",2016-11-16 16:37:06,12968626
2749,Doesn&#x27;t Xamarin compile C# to Java&#x2F;Dalvik bytecode already?,2016-11-16 16:43:59,12968717
2750,"Xamarin Studio didn&#x27;t support .NET Core, so previously you had to use the CLI tools and an editor like VS Code. You could run ASP.NET MVC in XS (version 5, Core is effectively version 6) but this ran on Mono.<p>Visual Studio for Mac (aka XS vNext) does now support ASP.NET Core so there is less need for VS Code. The re-brand makes sense (it&#x27;s not just for Xamarin now). However, Code runs on more platforms (Linux, ARM etc.) and is also used in the browser as part of Azure.<p>I wrote a better summary of the differences here: <a href=""https:&#x2F;&#x2F;unop.uk&#x2F;getting-started-with-c-sharp-and-cross-platform-dot-net-on-a-mac"" rel=""nofollow"">https:&#x2F;&#x2F;unop.uk&#x2F;getting-started-with-c-sharp-and-cross-platf...</a>. It&#x27;s the last in a four part blog series about .NET on Mac.",2016-11-16 17:11:02,12969049
2751,".NET would have had a real chance at being the android application platform if it was philosophically in the state that it is today (open sourced toolchain&#x2F;compilers, open-source friendly MS, Mono&#x2F;Xamarin in good shape).<p>Moving android away from Java is going to be a big undertaking and I doubt Google will undertake such a huge project only to move away from Oracle and closer to MS.<p>If they ever try to replace Java, it&#x27;ll be Dart or another language they acquire in future. Dart has good chances.<p>They already have an early stage framework to make Android (and iOS) apps with Dart[0]. It&#x27;s also the main GUI toolkit for their Fuchsia OS [1].<p>0 <a href=""https:&#x2F;&#x2F;flutter.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;flutter.io&#x2F;</a><p>1 <a href=""https:&#x2F;&#x2F;github.com&#x2F;fuchsia-mirror&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fuchsia-mirror&#x2F;</a>",2016-11-16 17:12:11,12969062
2752,&quot;The IDE formerly known as Xamarin Studio for Mac.&quot; Or maybe just a graphic symbol.,2016-11-16 17:16:27,12969112
2753,"There already exists C# for Android, it recently became free too when Microsoft bought up Xamarin (the company formerly maintain Mono and the Xamarin Android and iOS wrappers). Microsoft is really pushing .NET Core and the open .NET platform, really an awesome move for developers.<p>What the parent wanted was official support from Google for Xamarin&#x27;s Android API wrapper or a complete rewrite of core parts of the OS in .NET instead of Java. It seems fairly unlikely because of all the effort Google has invested in their Java VM and JIT&#x2F;AOT compilers, but maybe that&#x27;ll change.",2016-11-16 17:20:29,12969151
2754,"I don&#x27;t think they have to switch languages. With official support&#x2F;talent working on Xamarin.Android (which is already great) coming from both MS and Google, that&#x27;d be enough to make C# on android a sure thing.",2016-11-16 17:37:08,12969306
2755,"UWP and Xamarin apps can use XAML, so it&#x27;s not like the underlying ideas of WPF&#x2F;Silverlight are dead.",2016-11-16 18:14:02,12969682
2756,"I went to install it and it seems to be forcing me to download  another full Android SDK to a private location without the option the specifying the existing Android SDK location that I already have set up. A quick search show this as an open issue that is 5 years old <a href=""https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=859"" rel=""nofollow"">https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=859</a><p>I lost interest already.",2016-11-16 18:27:00,12969832
2757,My experience with reporting a bug in Xamarin the other day was that it was fairly quickly reproduced and fixed. If you&#x27;re hitting bugs I&#x27;d really recommend reporting them if you&#x27;re not already.,2016-11-16 18:29:42,12969858
2758,"Looks like it uses Xamarin Forms for UI, which uses XAML and is WPF-like:<p><a href=""https:&#x2F;&#x2F;developer.tizen.org&#x2F;development&#x2F;preview&#x2F;getting-started"" rel=""nofollow"">https:&#x2F;&#x2F;developer.tizen.org&#x2F;development&#x2F;preview&#x2F;getting-star...</a><p>Seems like that might be the only option:<p><a href=""https:&#x2F;&#x2F;developer.tizen.org&#x2F;development&#x2F;preview&#x2F;api-reference"" rel=""nofollow"">https:&#x2F;&#x2F;developer.tizen.org&#x2F;development&#x2F;preview&#x2F;api-referenc...</a>",2016-11-16 18:32:40,12969888
2759,"In fact, the installer even states &quot;Install Xamarin&quot; in the About dialog:<p><a href=""https:&#x2F;&#x2F;i.imgur.com&#x2F;skl8Tqx.png"" rel=""nofollow"">https:&#x2F;&#x2F;i.imgur.com&#x2F;skl8Tqx.png</a>",2016-11-16 18:33:29,12969896
2760,"It&#x27;s not necessarily a rename of Xamarin, Xamarin Studio for mac was built on top of Monodevelop ( <a href=""http:&#x2F;&#x2F;www.monodevelop.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.monodevelop.com&#x2F;</a> ) and they are using the same thing as base for Visual Studio as well which is why they are all so similar. Im sure microsoft will keep adding features and make it have feature parity with the windows version.",2016-11-16 18:55:21,12970130
2761,"We just released Workbooks 1.0 [0]. You can use it on both Windows and Mac, and run your code in a variety of platforms.<p>Try a Console workbook for something quite similar to (and in some ways more powerful than) the Visual Studio REPL.<p>Workbooks go beyond the REPL and can include rich content so that they can be saved and shared. But I use it every day for random REPL tasks that I used to use `csharp` for.<p>[0] <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;releases&#x2F;interactive&#x2F;interactive-1.0.0&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;releases&#x2F;interactive&#x2F;interacti...</a>",2016-11-16 19:26:03,12970505
2762,"I doubt it&#x27;s going to be a first-class citizen like Java anytime soon.<p>there is a lot of Innovation going on, with the new open source .NET. 
the CoreRT[1] project compiles C#-&gt;C++-&gt;Machine code 
for any platform, including ARM. and Samsung has been a big contributor to make that happen.
and today during the Connect() event, they announced that every Xamarin forms app will run on Tizen[2].<p>[1] <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;corert"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;corert</a>
[2] <a href=""https:&#x2F;&#x2F;www.tizen.org&#x2F;blogs&#x2F;dh0922&#x2F;2016&#x2F;tizen-.net-developer-preview"" rel=""nofollow"">https:&#x2F;&#x2F;www.tizen.org&#x2F;blogs&#x2F;dh0922&#x2F;2016&#x2F;tizen-.net-developer...</a>",2016-11-16 19:42:04,12970679
2763,Both UWP and Xamarin Forms have all of that.,2016-11-16 19:47:20,12970741
2764,"Same thing here. I don&#x27;t care about Android development, just about Xamarin for iOS and Mac and .NET Core.  
I cancelled the installation as it tries to install some Java and Android SDK which I don&#x27;t want.  
Better luck next time.",2016-11-16 20:42:22,12971298
2765,"VS on macOS is Xamarin Studio rebranded, which Xamarin has never wanted to port for Linux (despite being a fork of MonoDevelop). I don&#x27;t see MS changing that.<p>Project Rider is still extremely green and is not FOSS, nor free as in free beer.<p>VS Code is extremely limited and the little support it has is for .NET Core only.<p>I&#x27;m <i>right now</i> working on an MVC 5 project on Linux and I have to jump around MonoDevelop and Rider to have a <i>workable</i> dev environment; with the occasional jump to a Windows VM and Visual Studio to make sure everything works over there (it often doesn&#x27;t).<p>.NET <i></i>IS NOT<i></i> a viable stack for developing on Linux and it&#x27;s an inferior one in macOS. If you want to do real work with it you have to eat, breathe and live Windows and VS.<p>If I didn&#x27;t absolutely have to work with .NET in this particular situation I would&#x27;ve laughed all my way back to a real cross-platform stack.",2016-11-16 21:23:44,12971688
2766,"Thanks for playing with it! You cheated and went outside the scope of the VS REPL though. :-P<p>* On Windows, first evaluation can take a few seconds (and we&#x27;re working on that), but subsequent evaluations should feel instant. If that&#x27;s not the case, would love a bug filed so we can explore a bit more. Of course, there is the startup penalty of launching the Android app and potentially an Android emulator, but I assume you&#x27;re talking about evaluations <i>after</i> the workbook has connected.<p>* Agreed! Our NuGet functionality needs a lot of work, but our goal is to have it work as easily as it does in the IDE.<p>* I don&#x27;t personally know much about Android view XML, but creating new custom Activities or other Java subclasses at runtime is a significant technical challenge. We have a bug [0] to track it, if you want to subscribe to any updates. This is an unfortunate limitation on Android, for sure.<p>We don&#x27;t have a published roadmap at this time, but you can definitely expect to hear more about this tool in the future. We have a pretty frequent release cadence, too.<p>[0] <a href=""https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=45382"" rel=""nofollow"">https:&#x2F;&#x2F;bugzilla.xamarin.com&#x2F;show_bug.cgi?id=45382</a>",2016-11-16 21:45:45,12971868
2767,"I&#x27;m sure it was difficult, but you can already ship C# code using Xamarin, no need to wait for Microsoft.",2016-11-16 21:52:28,12971925
2768,"Xamarin already provides what is, in effect, a .NET compatibility layer on top of Android&#x2F;Java.<p>There&#x27;s no reason why it can&#x27;t be reversed, with Xamarin (or something along these lines) becoming the new native high-level API, and Java being a compat layer on top of that.",2016-11-16 21:54:04,12971934
2769,Get Xamarin. You can start doing OS X apps with C# right away. They have a lot of tutorials on their website.,2016-11-16 22:23:26,12972165
2770,That&#x27;s weird because the Xamarin Studio installer definitely has an option to set your own API location.,2016-11-16 22:25:03,12972179
2771,"This is what I&#x27;ve run through: <a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;aspnet&#x2F;core&#x2F;tutorials&#x2F;your-first-mac-aspnet"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;aspnet&#x2F;core&#x2F;tutorials&#x2F;your-...</a><p>It&#x27;s nice. I went on to modify and hack with what I created to form it into a back end for a mobile app I&#x27;m playing around with. There are still some warts in the process (Namely just figuring out how everything fits together and which packages to import) but I&#x27;ve been pleasantly surprised.<p>It looks like the new Visual Studio for Mac (ie An updated Xamarin Studio) has an ASP.Net Core template. At least I thought I saw that on the live stream earlier today. Might want to check that out!",2016-11-16 22:26:36,12972190
2772,"To clarify...<p>I&#x27;m on a Mac. Tried it scoped to console and evaluations were not instant, but decent. Certainly slower than the Mono REPL. Then tried it scoped to Android and even after everything was warmed up the evaluations were still quite slow. Running against a six-month old build of the Xamarin Android emulator, running a Nexus 4 (Android 4.4) image.<p>My pleasure and thanks for your efforts!",2016-11-16 22:48:59,12972338
2773,"I&#x27;m just waiting for it to be available on Linux.<p>And no, MonoDevelop isn&#x27;t the same thing. I&#x27;d like to be able to develop Android apps using Xamarin on Linux, but MonoDevelop provides me no way to even install Xamarin Android.",2016-11-17 00:08:51,12972916
2774,"My intuition is that VScode and Visual Studio are likely to remain significantly different products for the foreseeable future. VScode is an Electron app. Visual Studio is more a &#x27;native&#x27; app with deeper integration into the host operating system.<p>Xamarin Studio was built to provide a Visual Studio like experience regarding platform integration and to align with the architecture of Visual Studio. VScode does not appear to have those as the primary goals. It was already available for OSX.<p>To me, this is further evidence that Microsoft&#x27;s acquisition of Xamarin was in hopes of accelerating cross platform product development along a roadmap that tends to be more open source friendly. It may turn out that Xamarin Studio provides the core platform for Visual Studio at some time in the future or at least that the code bases merge to a greater degree over time.",2016-11-17 01:31:56,12973401
2775,Just noting that Xamarin is part of Microsoft.,2016-11-17 03:05:44,12973888
2776,"It sounds like you&#x27;re done messing with it; but if you&#x27;re not, you can install it without the Android&#x2F;Java stuff.
If you let the installer start running, but deny it elevation to write to your system directories when prompted, it will throw up a &quot;manual install&quot; dialog with instructions and links to download the individual components separately.<p>Then you can download just the IDE, the Mono framework, and the Xamarin.Mac or Xamarin.iOS pieces if you want them.",2016-11-17 03:20:17,12973951
2777,"Hey! I work on the Xamarin team at Microsoft, and I would like to help out on this! Are you able to send me the crash logs or application output? Thanks!",2016-11-17 04:37:17,12974316
2778,"Hey,<p>Good catch! I will request that we add system requirements to out page. I am going to suggest they are added to <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;releases&#x2F;vs-mac&#x2F;preview&#x2F;vs-mac-preview1&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;releases&#x2F;vs-mac&#x2F;preview&#x2F;vs-mac...</a><p>Disclosure: I work at Microsoft on Xamarin",2016-11-17 04:41:35,12974346
2779,"Xamarin is a bit of a hack. What we really need is a cross platform solid (i.e. not javascript) language supported natively.<p>What would be ideal would be that Apple, Google and Microsoft sit together and agree on a common language and GUI API that would work on Android, iOS, Windows, MacOS and Linux natively.",2016-11-17 06:50:25,12974997
2780,"Also, a few years ago Xamarin actually ported Android (then 2.2. IIRC) to Mono&#x2F;C#, as a test for Java-&gt;C# converters, and the result was faster than Android&#x2F;Java.",2016-11-17 07:40:34,12975252
2781,"Sure here are the logs:<p>[art] Not late-enabling -Xcheck:jni (already on)
[AndroidRuntime] Shutting down VM
[AndroidRuntime] FATAL EXCEPTION: main
[AndroidRuntime] Process: com.greenrobot.testapp, PID: 3218
[AndroidRuntime] java.lang.RuntimeException: Unable to get provider mono.MonoRuntimeProvider: java.lang.RuntimeException: Unable to find application Mono.Android.Platform.ApiLevel_23 or Xamarin.Android.Platform!
[AndroidRuntime] 	at android.app.ActivityThread.installProvider(ActivityThread.java:5156)
[AndroidRuntime] 	at android.app.ActivityThread.installContentProviders(ActivityThread.java:4748)
[AndroidRuntime] 	at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4688)
[AndroidRuntime] 	at android.app.ActivityThread.-wrap1(ActivityThread.java)
[AndroidRuntime] 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1405)
[AndroidRuntime] 	at android.os.Handler.dispatchMessage(Handler.java:102)
[AndroidRuntime] 	at android.os.Looper.loop(Looper.java:148)
[AndroidRuntime] 	at android.app.ActivityThread.main(ActivityThread.java:5417)
[AndroidRuntime] 	at java.lang.reflect.Method.invoke(Native Method)
[AndroidRuntime] 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
[AndroidRuntime] 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
[AndroidRuntime] Caused by: java.lang.RuntimeException: Unable to find application Mono.Android.Platform.ApiLevel_23 or Xamarin.Android.Platform!
[AndroidRuntime] 	at mono.MonoRuntimeProvider.attachInfo(MonoRuntimeProvider.java:38)
[AndroidRuntime] 	at android.app.ActivityThread.installProvider(ActivityThread.java:5153)
[AndroidRuntime] 	... 10 more
[AndroidRuntime] Caused by: android.content.pm.PackageManager$NameNotFoundException: Xamarin.Android.Platform
[AndroidRuntime] 	at android.app.ApplicationPackageManager.getApplicationInfo(ApplicationPackageManager.java:304)
[AndroidRuntime] 	at mono.MonoRuntimeProvider.attachInfo(MonoRuntimeProvider.java:32)
[AndroidRuntime] 	... 11 more
[Process] Sending signal. PID: 3218 SIG: 9<p>Email me at andy@greenrobot.com if you have any questions and don&#x27;t want to post them publicly.",2016-11-17 10:30:00,12976166
2782,"Not yet - but it does run Xamarin Forms apps, and I&#x27;d be _very_ surprised if the syntax for Xamarin Forms and UWP isn&#x27;t integrated at some point soon... They&#x27;re both XAML based.",2016-11-17 14:27:17,12977671
2783,"It&#x27;s a rebranding of Xamarin Studio, they&#x27;re not going to stop support for it any time soon. Even if they did, just use Code.",2016-11-17 19:18:23,12980505
2784,"UWP is more than XAML, i.e. it isn&#x27;t tied to .NET in any way, Xamarin is",2016-11-17 23:09:44,12982653
2785,"... so, a C-ABI + per-language wrappers, or perhaps a high-quality cross-platform, multi-language wrapper generator? That effectively accomplishes what you&#x27;re describing in your second paragraph.<p>Either way, it&#x27;d be great if one could implement efficient GUI&#x27;s (and full apps more generally) on Android in C&#x2F;C++&#x2F;Go&#x2F;Rust without having to generate JVM bytecode on the fly (or like Xamarin does: at compile time).",2016-11-19 01:53:56,12991553
2786,"Actually they&#x27;ve released Xamarin Forms Previewer - <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;xamarin-forms&#x2F;xaml&#x2F;xaml-previewer&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;xamarin-forms&#x2F;xaml&#x2F;xaml...</a> It&#x27;s still a bit buggy but does the job in most cases. Also the latest version of Xamarin is way more stable.",2016-11-19 13:18:08,12993342
2787,"I think native apps are doomed for most smaller companies where the cost just doesn&#x27;t make sense, but there will always be a place for native apps for popular services that need OS level permissions. I do wonder how many native apps for smaller companies that end up costing more money than they are worth, but I&#x27;m sure at this point some companies are invoking the sunk cost fallacy instead of creating a proper web app that would save them money in the long run. Or the &quot;we have to have this because our competitor has this,&quot; even if their competitor is experiencing the same problem. It will be interesting to see how long it takes for that to shake out.<p>On a whole it&#x27;s not doomed, but it&#x27;s a bit silly to have 2-3 dev teams that have to keep platform parity in native apps instead of just having one app that has the same experience across all platforms. Even solutions like Xamarin haven&#x27;t really removed this rigidity with continual delivery and feature parity.",2016-11-21 03:40:43,13002965
2788,"wow, I can&#x27;t believe some of the attitude here in the comments. PWA is not an all fit solution. It&#x27;s still in the early stages but it&#x27;s pretty good at taking advantage of your browser. It covers a high enough minimum of capabilities that&#x27;s enough to replicate an app like experience. The big pluses are the add to home feature as well Service Workers that lets you run your code after the browser is closed (this part freaks me out and saw something here about sw botnet lol) and SPA pretty much replicates UI of any native app.<p>Think of the chrome browser on Android as another app you are constantly going to compete with in which it&#x27;s capability is getting more and more absurd until it inevitably covers almost all native capability. It&#x27;s only a matter of time and seeing how quickly Chrome moves, I&#x27;m not surprised.<p>I think this is fucking great. I was going to learn Xamarin but now I won&#x27;t have to. That&#x27;s fucking huge. I&#x27;ve been putting off mobile dev for a while because I found working with Java and Swift clunky. So I waited and waited....and now my dream is coming true. It&#x27;s pretty amazing that it&#x27;s Javascript that unites them all. But ES6 is a serious contender...especially that ... operator that expands the JSON objects, it makes working with REST API which almost always involves JSON, it&#x27;s a heaven to work with. Hell, I shunned ES5 and was actually learning clojure and maybe using Clojurescript with Om, but even though I really love clojure es6 seems like the much perkier option.<p>I wonder if there&#x27;s any nice frameworks that can generate some scaffolding and UI kit and stuff for PWA. I&#x27;m learning React &amp; Redux but I personally think Vue.js will outpace it...",2016-11-21 06:08:05,13003510
2789,"But your dream isn&#x27;t really here. There&#x27;s a ton of bugs with this experience. It&#x27;s just not on par with it&#x27;s native counterpart.<p>Yes, you, as a developer, can enjoy some major shortcuts in your development workflow to get an app like experience in people&#x27;s hands - that does not, however, make it a better user experience.<p>Until the user experience has parity with native apps, I don&#x27;t see it filling anything other than the niche that the Xamarin&#x2F;Cordava&#x27;s of the world already fulfill.",2016-11-21 06:40:00,13003634
2790,"&gt; On a whole it&#x27;s not doomed, but it&#x27;s a bit silly to have 2-3 dev teams that have to keep platform parity in native apps instead of just having one app that has the same experience across all platforms. Even solutions like Xamarin haven&#x27;t really removed this rigidity with continual delivery and feature parity.<p>That&#x27;s only true if you want to support the platform idiosyncracies in the app. Certainly not needed for a game or a line of business app, where one team can perfectly suffice.<p>In a webapp, however, you can&#x27;t do this. Not with 30 dev teams.",2016-11-21 10:12:47,13004332
2791,"Not sure if you have any experience, but Cordova and Xamarin are not the same kind of thing. In Xamarin you (and I would recommend that in most cases) get to use the native APIs of your platform of choice. Aka when targetting iOS you will be using UIView and when Android View. And all methods on those objects are the same ones you would use in Swift and Objective C for iOS and in Java for Android but then under a thin wrapper of C# or F#. Cordova is very much not that. I am not sure where the confusion under devs comes from but Xamarin generally is not used to run the same GUI codebase on two platforms like one would do with Cordova.",2016-11-21 11:09:04,13004525
2792,"Looks nice once it loaded, but it took far longer to load than an app install would have. Why on earth would I prefer this?<p>It seems to me that we keep seeing this argument over and over, but the point isn&#x27;t whether a given technology makes life easier for developers, it matters whether they provide more value to the end <i>users.</i><p>App install friction is by and large a red herring, as there is plenty of friction with the web ecosystem including user management, montisation and the poor state of browser API support. I&#x27;ll take technologies like cross-platform Xamarin anyday and provide my users with a better experience to boot.",2016-11-22 13:57:03,13014112
2793,"I went to Java&#x2F;.NET lands and respective languages.<p>Since 2006, I only had one project where using C++ really mattered. A mix of Assembly and C++ was used for image codecs, which were just 5% of the whole application done in WPF.<p>On personal projects, I went back to it for portable code across Android and Windows Store, but now with Xamarin being part of Microsoft, I am using it for newer projects.",2016-11-22 17:53:26,13015902
2794,"While I totally agree way too many apps are just webpages, the problem is that a bunch can&#x27;t be easily be webpages, even with all the HTML niceness.<p>The flaw in this argument I think is that does the author think you can build a great PWA for less than $100k either?<p>In my experience of doing heavy duty mobile web, it is horrendous to polish to a high standard. It was actually more expensive than doing native apps (before even Xamarin&#x2F;RN) if there was any tricky parts in it.",2016-11-23 14:23:44,13022809
2795,"In the blog post that&#x27;s an breakdown of ms project, yes. Used to show how ms is doing with open source? yes. because .net framework (and implementation of runtime,compiler&#x2F;blc) was owned by ms (mono is another implementation of the runtime&#x2F;compiler&#x2F;bcl).<p>But for some components is ok to contribute there:<p>- mono(xamarin) was already migrating to use open source components like the bcl (corefx) after the initial open source of code by ms. It&#x27;s like dont write two times the same stuff.<p>- coreclr: the .net core runtime<p>- corefx: the standard library (base class library like io etc), used by .net fw (win) and .net core and partially by mono<p>- roslyn: that&#x27;s the c#&#x2F;vb compiler, also mono is trying to reuse that<p>- cli: it&#x27;s the sdk for building projects. Can the project system changed? yes, but not needed now (.net core it&#x27;s boostrapping another xplat runtime so need tools). as a personal note, the cli team doesn an awesome job to make it easy to contribute<p>and some notes:<p>- asp.net is a web framework, it&#x27;s used a lot, nice ppl contribute. who like servicestack&#x2F;nancy&#x2F;suave, use that instead.<p>- fsharp (<a href=""http:&#x2F;&#x2F;fsharp.org&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;fsharp.org&#x2F;</a>) was and is already driven by community, and lang decision are in repo <a href=""https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;fslang-design"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;fslang-design</a> by community and lead by @dsyme<p>And you should also check dotnet foundation pulse and community projects (like Nancy&#x2F;Nunit&#x2F;Akka.net&#x2F;mbrace).<p>Lots of the work done by ms can be useful for others, see Kestrel server (damn fast) who can be used by other web projects like Suave (<a href=""https:&#x2F;&#x2F;github.com&#x2F;SuaveIO&#x2F;suave"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;SuaveIO&#x2F;suave</a> is a lib, not a framework :D)<p>- dnx was the predecessor of cli, and replaced by it (good job by aspnet team to boostrap xplat on netcore)",2016-11-24 08:49:20,13029119
2796,"It&#x27;s even more tire fire now: they&#x27;re announced &#x27;project.json&#x27; build system, but deprecated it[1] in favor of older msbuild. But it&#x27;s still mentioned on front page of .NET core[2] and used as the primary build system in latest version (I don&#x27;t know if .NET core even has msbuild, tried only mono).<p>Almost everyone think that you need some specific IDE (either Visual Studio or Monodevelop&#x2F;Xamarin Studio&#x2F;VS for mac (this is the same thing lol)), even in opensource communities[3].<p>And MSDN is the slowest and hardest to use web documentation I ever seen. Everything non-Windows non-VS is still very, very second-class.<p>[1] <a href=""https:&#x2F;&#x2F;blogs.msdn.microsoft.com&#x2F;dotnet&#x2F;2016&#x2F;05&#x2F;23&#x2F;changes-to-project-json&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blogs.msdn.microsoft.com&#x2F;dotnet&#x2F;2016&#x2F;05&#x2F;23&#x2F;changes-t...</a><p>[2] <a href=""https:&#x2F;&#x2F;www.microsoft.com&#x2F;net&#x2F;core"" rel=""nofollow"">https:&#x2F;&#x2F;www.microsoft.com&#x2F;net&#x2F;core</a><p>[3] <a href=""http:&#x2F;&#x2F;community.monogame.net&#x2F;t&#x2F;creating-a-new-monogame-proyect&#x2F;8404"" rel=""nofollow"">http:&#x2F;&#x2F;community.monogame.net&#x2F;t&#x2F;creating-a-new-monogame-proy...</a>",2016-11-24 12:29:19,13029963
2797,"I would bet all my money on .NET Core. I&#x27;m also .net dev with many years of experience and was quite skeptical about the platform last years, but since birth .NET Core, since they bought Xamarin and Mono, went from closed source to open source model, went to Linux, did amazing job on performance and stability of .NET Core I see that the future of the core is very bright. It&#x27;s not mature now but good enough for many project, IMO.",2016-11-25 11:07:56,13035867
2798,I ran across this library while researching Xamarin. Has anybody used this in production?,2016-11-25 16:27:52,13037793
2799,"I haven&#x27;t left Apple completely, but I&#x27;ve gone from having just a Macbook to also having a Thinkpad X220 running Win10 and Linux, an Asus Zenbook running Win10, and a beefy desktop running Win10 and Linux.<p>My goal has been to make it so that I can do most of my development work on any of the OSes, on any of the computers. Before the Win10 Linux subsystem, it was a little bit painful on Windows, but now it mostly just works. Node.js and Ruby native extensions have so far worked perfectly in WSL once I apt-get installed build-essential.<p>So far, I&#x27;ve only run into a couple of issues:<p>- A few ruby gems with native extensions have given me some trouble on OS X, but were fine on Linux and Win10 (using the Linux subsystem).<p>- Last time I tried React Native (a few months ago), there was a bug that prevented the build system from working on Windows. I found a fix had been added to the master branch, but hadn&#x27;t yet made it into a release. I added the fix on my machine by hand and everything worked after that.<p>I mostly use VSCode and Atom for editing, so my editing experience is pretty consistent across operating systems. I&#x27;ve done a bit of F# in Visual Studio on Windows, and was able to load the project up unmodified in Xamarin Studio in OSX. I imagine it&#x27;d be the same now in VS for Mac.<p>I only use Photoshop occasionally, and it seems to perform a little bit better in Windows.<p>Other thoughts:<p>- Ultraportable, high DPI laptops are a much better value outside of Apple land. I picked up an Asus Zenbook with a hidpi IPS touch screen, and pretty well exactly the same specs as the current Core M Macbook for $649CDN on sale. The Macbook sells for $1549.<p>- Consider a previous generation Thinkpad if you&#x27;d like to run Linux. I picked up my X220 for $300CDN earlier this year. It was technically &#x27;refurbished&#x27;, but they refurb&#x27;ed it so well it looked like new. It had a crappy TN display, but I picked up an inexpensive IPS panel for it on eBay, and it was super easy to install. The Core i5 it in still performs well. A bit slow clock-for-clock than the newest i5s, but still lots of power for most tasks I&#x27;ve thrown at it. I&#x27;d say that Win10 and Linux Mint perform equally well on it.<p>- Lots of Thinkpads make good Hackintoshes in case you ever want to try that.",2016-11-25 20:13:49,13039508
2800,Has anyone tried Xamarin for building mobile apps? Not Xamarin Forms but the lower level tool kit? It sounds pretty good on paper. At work the only negative I heard from one team who tried it is it added too much bloat. But that might just be their coding...,2016-11-26 22:21:05,13046252
2801,"If I were going that route, I&#x27;d probably consider using monogame via xamarin",2016-11-26 22:51:25,13046433
2802,"Monogame is impressing and open source, also for PS4 development. Also Xamarin is awesome if you&#x27;re into .NET.",2016-11-26 22:52:28,13046440
2803,"What about Qt&#x2F;QML, Xamarin.Forms and in fact Adobe Air&#x2F;Flex?",2016-11-27 08:09:07,13048268
2804,For games? Or in general? I worked with both Qt and Xamarin (Forms ane Native) and both work well for apps as you get to know them. For games I would not use them although maybe just an OpenGL surface on either but that is not actually using them.,2016-11-27 08:51:36,13048359
2805,"Not FUD. Backup: take a look at the number of outside contributors in Unreal engine release notes for each release. Its not FOSS, but still commercial licensed visible source. People can find and fix the bugs they encounter. Then take a look at commercial middleware vendors that can integrate with Unreal on their own, without having to involve Epic. Take a look at the list of companies committing development time to Blender because the see their effort improving the ecosystem instead of just adding to Unity own IP.<p>Also take a look at the ancient .NET integration in Unity that has been strangled by licensing problems with Xamarin. Even though Microsoft has re-licensed .NET recently, it doesn&#x27;t look like Unity will have an upgrade anytime soon. The only development environment for Unity is C#. Look at the numerous VMs and language integration in Unreal, in addition to any language that links with C++.<p>Answering your own questions is obnoxious. Public API documentation for software only available behind a commercial subscription is completely irrelevant when integrating with open source.",2016-11-28 02:09:53,13052935
2806,"Hey thanks for the detailed and long reply, I really appreciate it. Is it safe to assume you work on this team at Microsoft? Would you be ok saying what team in specific you work on? Do you work with Miguel (for instance) on any of the Xamarin stuff? I am a long time GNOME guy and loved to see the merger + integration of that stack into Microsoft.",2016-11-29 20:09:51,13065849
2807,"Yes. I work on the CLR&#x2F;.NET Team at Microsoft. Sorry for not disclosing that more clearly. Oops.<p>Yes, Miguel and I are friends and work together frequently. Usually, he&#x27;s badgering me, asking me when my team is going to deliver something we promised. We are now starting to adopt more of the Mono&#x2F;Xamarin tech (in this case, their assembly linker), so the relationship is reversing. Here&#x27;s a video of us together (where he makes fun of me): <a href=""https:&#x2F;&#x2F;channel9.msdn.com&#x2F;Events&#x2F;dotnetConf&#x2F;2015&#x2F;The-NET-Voyage-into-Open-Source"" rel=""nofollow"">https:&#x2F;&#x2F;channel9.msdn.com&#x2F;Events&#x2F;dotnetConf&#x2F;2015&#x2F;The-NET-Voy...</a><p>Haven&#x27;t started looking at the GNOME ecosystem yet. I&#x27;ll leave that to Miguel to make suggestions on.",2016-11-29 20:20:31,13065924
2808,"Arthrex Inc. | Naples, FL | Full time | Remote&#x2F;Onsite<p>Software Developer
----------------------------<p>We are looking for developers with either web or mobile experience to join our growing team in southwest Florida. Arthrex is a global medical device company and a leader in new product development and medical education in orthopaedics. As the software development team, we create innovative products to help support the company in education and research opportunities for our customers. Some projects that need immediate assistance include:<p>- Our main company website that serves as an education portal for our customers with tools and resources on our products<p>- A research registry that is being used by surgeons to track their patient&#x27;s progress both pre and post surgery<p>- Patient engagement software facilitating communication between the surgeon and the patient<p>- Several innovative mobile applications that further educate surgeons on best practices and new techniques<p>Some of the technologies&#x2F;patterns we work with:
- Golang, Ruby, Objective-C, Java, Xamarin&#x2F;C#
- Amazon Web Services
- Postgres
- Microservices<p>DevOps Engineer
----------------------------<p>We are looking for an experienced DevOps engineer to join our team and take ownership over of multiple production deployments and supporting services across our deployment
- Experience with AWS services<p>- Experience with Docker and orchestration of containers in a production environment<p>- Hands on experience developing, deploying, and maintaining Rails, Go or similar technologies required. We expect DevOps engineers to work closely with the development team, and pitch in and help where needed.<p>- Experience with running microservices, and architecture around microservices is a plus<p>Please email dbeard at arthrex.com if you have any questions or interest!
Arthrex was voted one for the top 100 places to work in 2016! Read more here: <a href=""http:&#x2F;&#x2F;fortune.com&#x2F;best-companies&#x2F;arthrex-62&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;fortune.com&#x2F;best-companies&#x2F;arthrex-62&#x2F;</a>",2016-12-01 16:04:42,13080321
2809,"Location: Dallas, TX<p>Remote: Sure (onsite is fine too)<p>Willing to relocate: Maybe (If in Toronto)<p>Technologies: NodeJS, PHP, Python, GO, AngularJS, React, CSS&#x2F;Less&#x2F;Stylus&#x2F;Sass, HTML, AWS (EC2, Lambda, S3&#x2F;CF, SNS, SQS, SES, etc), Nginx, FFMpeg, Websockets, Cordova&#x2F;Ionic&#x2F;Xamarin, Swift &amp; Java<p>Resume&#x2F;CV: <a href=""https:&#x2F;&#x2F;www.dropbox.com&#x2F;s&#x2F;7c0zevq431aq7i5&#x2F;resume-2016.pdf?dl=0"" rel=""nofollow"">https:&#x2F;&#x2F;www.dropbox.com&#x2F;s&#x2F;7c0zevq431aq7i5&#x2F;resume-2016.pdf?dl...</a><p>Github: <a href=""https:&#x2F;&#x2F;github.com&#x2F;ryanpager"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;ryanpager</a><p>Email: ryanpager@gmail.com<p>* Green card holder, Canadian citizen",2016-12-01 20:25:36,13083178
2810,"A programming language and toolset that could transpile to human readable code for just about every popular&#x2F;mainstream language out there. The closest I&#x27;ve seen is Haxe. This would be great for sharing business logic between different platforms. Right now it&#x27;s a fragmented mess of tools of various quality, many using regexes to get you only 90% there. For example pretty much everything can transpile very well to Javascript, so no problem there. But what if I want to write common code for iOS, Android, and the web? I&#x27;ve never figured out a good solution here besides contortions with C&#x2F;C++ or Javascript that introduced more problems than it was worth. Either that or you have to go all-in with a big framework like Xamarin.<p>I think part of the problem is that there isn&#x27;t a demand, and, if I may rant a little, the reason there isn&#x27;t a demand is that most developers do not separate business logic and platform-specific stuff (rendering, I&#x2F;O, etc.) in the first place, whether from lack of skill&#x2F;experience (which everyone including me is guilty of early in their careers), or the fact that the framework&#x2F;platform you&#x27;re working in &quot;discourages&quot; it.",2016-12-02 15:22:54,13089260
2811,"Anyone Can Learn To Code &#x2F; anyonecanlearntocode.com &#x2F; Chicago &#x2F; Onsite<p>Anyone Can Learn To Code is a 12 week part time coding bootcamp followed by a four month development apprenticeship program. We also have a development branch that builds cutting edge AR technology. We pride ourselves in offering a great work&#x2F;life balance and passionately caring about the people who work here. If interested, please email me at taylor@actualize.co<p>We are hiring for a couple positions:<p>* Lead Game Designer (UX&#x2F;UI Developing Game Concepts - Coding experience is a big plus - Unity&#x2F;Xamarin&#x2F;C#)<p>* Sales&#x2F;Recruiting (Developing partnerships with companies interested in meeting with and interviewing ACLTC graduates)<p>* Name Your Own Position (We are growing and may have roles open up in all departments and city (Chicago, New York, San Francisco) that we opperate in so please reach out if you think you would be a good fit for our ognization)<p>taylor@actualize.co",2016-12-02 16:46:20,13090110
2812,"Rubymotion, dozens of js frameworks, Xamarin...<p>I dont really see why swift.",2016-12-03 13:11:42,13095524
2813,"SEEKING WORK<p>Location: Europe<p>Remote: Yes<p>Willing to relocate: No<p>Technologies: C#, .NET, Mono, Xamarin (Android, iOS), XAML, MVVM, ASP.NET, JavaScript, Node.js, Git.<p>Rsum&#x2F;CV: <a href=""https:&#x2F;&#x2F;stackoverflow.com&#x2F;users&#x2F;story&#x2F;4064749"" rel=""nofollow"">https:&#x2F;&#x2F;stackoverflow.com&#x2F;users&#x2F;story&#x2F;4064749</a><p>Email: finkel2804 (at) gmail dot com",2016-12-03 18:47:04,13096886
2814,"I&#x27;ve played with the Xamarin samples and build a really simple app about 12 months ago. I found then that the app felt slow. This is obviously an abstraction layer and there are performance penalties involved there, but is Xam.Forms ready for use in commercial apps?<p>I found the framework to be a little bit buggy then, is that still true now? Has the speed improved? Is there anything obviously missing?<p>Thanks!",2016-12-06 00:54:30,13111351
2815,"It doesnt have to be swift, it could be dart or something else, what I&#x27;m wishing its a language distinct from Java but with first tier support, ideally supported by google (We all know that JS&#x2F;Xamarin&#x2F;Rubimotion aren&#x27;t there yet)",2016-12-06 13:00:18,13114239
2816,"Very, very interesting - curious about whether the C# bit supports Xamarin on iOS and Android, or if the C# piece is just Windows-only (not super clear from the documentation).",2016-12-07 19:50:29,13125612
2817,I&#x27;m not very familiar with Xamarin but I think it should work. If it doesn&#x27;t please file an issue on the repo.,2016-12-07 19:52:35,13125627
2818,"I&#x27;m not sure how you&#x27;re supposed to use this from C# in real life, though.<p>Ok, you have a layout engine. For what widgets? Windows.Forms? WPF? Xamarin Forms? Can those even use a third party layout engine?<p>I&#x27;m slightly confused :)",2016-12-07 19:54:33,13125644
2819,"XAML is the state of the art, which is cross-platform thanks to Xamarin.Forms.",2016-12-07 20:32:03,13125948
2820,"I make plenty use of async requests to get files (images) and make web service calls at the same time. It&#x27;s a Xamarin mobile application. Mobile apps are sometimes constrained by latency, so having a few requests in flight at once speeds things up.<p>Performance is not just fewer CPU cycles.<p>&gt; IIS has many threads available to it, that&#x27;s my entire point<p>My web services run on a VM with four cores. That&#x27;s what I get given, and there&#x27;s another twenty websites on it. The less overhead my code has the better. Just because it&#x27;s not 100K TPS doesn&#x27;t mean there aren&#x27;t benefits.",2016-12-08 22:12:19,13134785
2821,"I&#x27;m a 44-year old developer who first programmed on a TRS-80 in 1982, graduated with a degree in Maths and Comp. Sci in 1994, and I&#x27;ve been working ever since as a &#x27;software guy&#x27; in various industries (school administration, medical, construction, logistics, real estate finance, hospitality). I&#x27;m unsure what to do next.<p>Data points:
1) current job is for a logistics company where over 5 years, along with a non-developer co-worker as advisor, I&#x27;ve created a custom Winforms &#x2F; SQL server application that now runs the company.<p>2) have Australian and EU citizenship, currently in the EU<p>3) technically am &#x27;ok&#x27;, sometimes slightly better than that; my strengths lie is talking to non-technical people and creating cleanly-developed and maintainable software that meets their requirements<p>4) have a joint venture agreement in place with an Australian-based long-running client (since 2005); I rewrote his Delphi-based finance application in C# so it now works cross-platform on Windows and Mac (using Xamarin), with a shared PCL (portable class library) that contains the core calculations. There is an &#x27;ok&#x27; mostly-passive (aside from bug fixes) income from the sale of this product.<p>5) my work, with the exception of some C# Mac work in recent years, has been entirely Windows-based, and 90% of this has been Winforms. Early on I worked on and helped develop a C++&#x2F;Paradox (!!) application, then Delphi apps, and now C#&#x2F;.NET&#x2F;Winforms is basically everything.<p>6) via HN I have a reasonable understanding of current technologies, but zero practical experience, although I do have some &#x27;as required&#x27; experience with HTML &#x2F; CSS &#x2F; JS<p>7) I&#x27;ve got Crohn&#x27;s disease, and can&#x27;t practically make it into an office job 5 days a week, or reliably<p>8) currently am learning Python and Django<p>I still love developing, and although I&#x27;m an introvert like solving people&#x27;s business or general problems with software, and interacting with them to achieve this.<p>Any brainstorming ideas would be appreciated.",2016-12-11 07:24:23,13150006
2822,"I was lucky enough to meet Steve at Xamarin Evolve, this year. He is incredibly friendly, and one of the most fascinating people I&#x27;ve ever had the chance to hear speak.",2016-12-14 04:43:35,13173907
2823,"If Xamarin would be painless to use I guess we would see a lot more guys advocating it. However, personally I know quite a lot of app developers who tried Xamarin and disliked the quality of the tooling.<p>I hope that Xamarin keeps on improving as I believe it still could be (one of) the best x-plat option.",2016-12-14 13:43:45,13175856
2824,"At buddybuild, we see tens of thousands of mobile projects from mobile dev teams.<p>Of the teams looking for cross platform solutions (versus native iOS or Android), Xamarin comes up on occasion.<p>However, React Native tends to be FAR more common as teams are looking for solutions for &quot;write once, run on many&quot;",2016-12-14 14:05:13,13175982
2825,"I&#x27;ve tried Xamarin a couple of times and found that it&#x27;s come along leaps and bounds in recent years. Especially when you compare it to the crashy mess that is XCode.<p>I suspect it hasn&#x27;t been widely adopted simply because it costs money and adds a dependency (Xamarin need to implement new iOS APIs before you can use them).<p>For me personally, I love C# and really tried to justify buying. But then Swift came along and it&#x27;s a joy to use. Doesn&#x27;t work cross platform, of course.",2016-12-14 14:23:42,13176105
2826,Xamarin is free now. Open Source even.,2016-12-14 14:35:26,13176185
2827,No doubt there are areas where Xamarin will excel.,2016-12-14 14:52:13,13176330
2828,"Ah, I should clarify and provide context.<p>We&#x27;re a mobile focused continuous integration and deployment solution.<p>When deciding which platforms to support, we looked at current adoption for Native iOS and Android (this was no brainer), Hybrid (PhoneGap, Ionic, Cordova) and &quot;emerging&quot; platforms (React Native, Xamarin).<p>Ultimately, we decided to prioritize the others first. CI&#x2F;CD service is applicable to any mobile development team.. but to your point, buddybuild is better suited to those other platforms, as those are the only ones we support.<p>In our experience (which also factors inbound requests), Xamarin is still relatively nascent as compared to the others.<p>That said, you can should expect to see Xamarin support soon :)<p>Also, fwiw, Microsoft purchased Xamarin only recently.",2016-12-14 15:00:32,13176388
2829,"I installed VS2015 + xamarin + VS emulator for android, downloaded some samples, hit F5, and they all ran fine.<p>The tooling is actually pretty good.  Now the problem is a lot of the libraries I want to use are native android&#x2F;java which means doing a lot of C#&#x2F;java interop.",2016-12-14 15:08:34,13176438
2830,Some of the products (like Xamarin.Mac) only run on macOS and a significant percentage of the team develops on macOS. I wouldn&#x27;t assume poor non-Windows support.,2016-12-14 15:20:34,13176553
2831,"I had a really poor experience with Xamarin on macOS. Especially with Xamarin Studio IDE, it seemed like support was well behind Windows + VS.",2016-12-14 15:28:41,13176626
2832,"It looks to me that Xamarin would like sunset Xamarin Studio. This was easy on Windows with Visual Studio, but on macOS I think they are waiting for the VS Code (or whatever it ends up being) to be mature enough.",2016-12-14 15:47:09,13176807
2833,"don&#x27;t learn xamarin. it&#x27;s a useless unmarketable skill. Nobody looks for xamarin devs, they look for platform specific devs",2016-12-14 15:49:41,13176827
2834,"It&#x27;s pretty painful.  I love using Xamarin and don&#x27;t often need to use a native library but when it comes up it is the worst part of the Xamarin experience.  There is a tool to help the process on Ios ,objective sharpie, but it&#x27;s not the easiest thing to use either.",2016-12-14 15:54:25,13176871
2835,"Xamarin compiles through XCode, so having Mac somewhere is a requirement. Any platform that compiles for iOS would have this same issue. I think the MS is pushing Xamarin Forms because it could eventually become a more direct competitor to React Native. In theory, you could remove the compile requirement for a Xamarin Forms only project. I am  a C# guy, but React Native is attractive and Xamarin needs to have a compelling alternative.",2016-12-14 15:56:29,13176887
2836,But this puts your first statement in a completely different light ;)<p>I should also note that React Native was announced in 2015 while Xamarin was announced in 2011 (with Miguel&#x27;s work on Mono being much older). Can you then call Xamarin an &quot;emerging&quot; platform?<p><i>(disclaimer: I don&#x27;t use either platform)</i>,2016-12-14 16:05:30,13176980
2837,"OK, it seems like they <i>have</i> committed to Xamarin Studio renamed now to &#x27;Visual Studio for Mac&#x27;. Doesn&#x27;t make sense to me with the parallel effort building the cross platform IDE &#x27;Visual Studio Code&#x27;. Thanks for the correction.",2016-12-14 16:48:03,13177374
2838,"Other platforms like Codename One ( <a href=""https:&#x2F;&#x2F;www.codenameone.com&#x2F;blog&#x2F;comparing-xamarin-and-codename-one.html"" rel=""nofollow"">https:&#x2F;&#x2F;www.codenameone.com&#x2F;blog&#x2F;comparing-xamarin-and-coden...</a> ) can provide things like Java support for iOS, Android, Windows etc. without a physical Mac. They do it thru a cloud build process. It works properly because of the lightweight architecture.<p>Obviously the goals of Codename One and Xamarin are different whereas Codename One tries to be WORA, Xamarin doesn&#x27;t.",2016-12-14 16:56:13,13177432
2839,"Just so happens, today is Xamarin Dev days: <a href=""https:&#x2F;&#x2F;channel9.msdn.com&#x2F;Events&#x2F;Xamarin&#x2F;Xamarin-Dev-Days-Live"" rel=""nofollow"">https:&#x2F;&#x2F;channel9.msdn.com&#x2F;Events&#x2F;Xamarin&#x2F;Xamarin-Dev-Days-Li...</a>",2016-12-14 17:01:27,13177475
2840,"On my local job board, there are a number of Xamarin roles paying 450-500&#x2F;day. It can&#x27;t be entirely unmarketable.",2016-12-14 17:10:16,13177554
2841,"If you know Swift or Java, C# is trivial to pick up. And Xamarin&#x27;s SDK maps closely to their native counterparts, so hardly anything new there either.<p>I&#x27;d say C# is worth learning if you have the opportunity. But agree it&#x27;s better to invest time learning a specific platform like iOS or Android. Coupled with C#, you&#x27;ll be in good shape to pick up any Xamarin project out there.",2016-12-14 17:35:32,13177854
2842,"VSCode isn&#x27;t really an IDE as much as a text editor and competitor to Sublime, Atom, etc. You can build in some languages with it, but it&#x27;s not a competitor to a full-featured development environment like Intellij&#x27;s IDEA or Visual Studio and not anywhere near a mobile development-oriented IDE.<p>In addition, VSCode is open source, so to some degree its direction depends on what the community wants to happen with it.<p>That being said, re-branding Xamarin Studio (which in my experience, has been buggy as all get-out) as Visual Studio Mac without many significant new features seems more of a PR move than anything else. It&#x27;d be awesome if they&#x27;d put more money&#x2F;manpower towards fixing it.",2016-12-14 17:43:40,13177933
2843,"My biggest hang-up is true [edit: complete as in covers all platforms] xplat UI; Xamarin Forms targets mobile only.<p>There are a couple options:<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;picoe&#x2F;Eto"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;picoe&#x2F;Eto</a> (Windows, Linux, OS X, iOS; Android, Windows phone: pre-alpha)<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia</a> (Windows, Linux, OS X, iOS and Android; all alpha)<p>For now I&#x27;m planning on using Eto since my initial focus will be on the desktop.",2016-12-14 18:29:39,13178360
2844,"Not sure which is setup by default; there is the Android SDK emulator and the newer Hyper-V based Visual Studio Emulator for Android. Based on @snarfy&#x27;s comment elsewhere, I&#x27;m guessing the Xamarin installer isn&#x27;t installing the VS emulator.<p><a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=13176438"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=13176438</a><p><a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;android&#x2F;deployment,_testing,_and_metrics&#x2F;debug-on-emulator&#x2F;visual-studio-android-emulator&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;android&#x2F;deployment,_tes...</a>",2016-12-14 18:32:30,13178387
2845,"I&#x27;m not saying Xamarin is the greatest tool, but it&#x27;s definitely not unmarketable.  There are always several jobs around me on the job boards.  But if your comment was a generalization, then I guess you could make the same argument for being a Swift developer because ios devices are only 10% of the market.  Telling people not to learn Xamarin is stupid.  It maybe the right tool for some people.  And besides, Xamarin Android is VERY similar to native Android Java code.  If you learn Xamarin Android, it is a easy jump to native android.",2016-12-14 18:35:06,13178415
2846,"Is your concern developing on Linux or targeting Linux?<p>I think Xamarin claims to have both cases are covered, though not nearly as well as other platforms.<p>Any additional detail you can add to your anecdote would be appreciated!",2016-12-14 18:36:49,13178431
2847,"Xamarin is really focused on mobile development, and in particular a large chunk of our effort is into making C# and F# great languages on both Android and iOS.<p>Our Forms API is a cross-mobile API to create UIs, part of a family of cross-platform APIs that allow for more code sharing across platforms (additionally we now have libraries for 2D raster graphics, 3D retained graphics, and various assorted device-specific libraries [1]).<p>Eto and Avalonia area really APIs on top of a .NET runtime, either Xamarin or .NET, just like Forms, and they have a focus on the desktop space.   I think they are great, and we fix bugs and assist those teams when possible.<p>That said, some of our users have asked for a long time to share their mobile code on the desktop, so we have started an effort to bring Xamarin.Forms to Mac, and we will be extending this with support for WPF on Windows as well (in addition to the already supported Windows&#x2F;UWP).<p>If you want to try out our Mac support, check out this branch:<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin.forms&#x2F;tree&#x2F;macOS"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin.forms&#x2F;tree&#x2F;macOS</a><p>[1] <a href=""https:&#x2F;&#x2F;components.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;components.xamarin.com&#x2F;</a>",2016-12-14 18:57:43,13178640
2848,I wonder if they&#x27;ve considered using something like React Native or Xamarin so they can share some of that functional-style code between the two platforms.,2016-12-14 19:11:49,13178771
2849,"Xamarin has some pretty sweet tools (Inspector, Profiler) that are only available for Visual Studio Enterprise subscribers.<p>This is a bummer because things like this live coding add-in require installation of the Inspector, which adds some magic to every build to facilitate dynamic assemblies: <a href=""https:&#x2F;&#x2F;github.com&#x2F;praeclarum&#x2F;Continuous"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;praeclarum&#x2F;Continuous</a><p>The Xamarin Workbooks thingy appears to offer an IPython notebook experience (a chance to reduce edit&#x2F;build&#x2F;test cycle for prototypes); not sure if it&#x27;s headed for Enterprise-only or not:<p><a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;workbooks&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;workbook...</a>",2016-12-14 19:11:59,13178776
2850,"Totally disagree with this, I have been in a xamarin dev team and had seen senior developers get nice salaries as more corps are going on to Xamarin. I also saw our talent get head hunted by other companies. I receive at least 2-3 emails a month for Xamarin roles. In fact I told my software dev friends that wanted to get into mobile to learn Xamarin. Some took my advice, it has worked out great for them and their careers.",2016-12-14 21:41:41,13179918
2851,"Xamarin as a platform has made great advancements in the latest 1.5 years. I have been using it for 2.5 years. Haven&#x27;t had a chance to play with React yet, which HN seems to leans towards. When I stared my app building platform startup, I had to pick between React and Xamarin. Ultimately picked Xamarin because we already knew the platform and Forms was mature enough, whereas React wasn&#x27;t that mature imo (few apps outside the facebook dev team were big in scale). Xamarin Forms has its issues but now that it is open source the community can tackle those issues together. Happy with my choice so far, Xamarin has a great community.",2016-12-14 22:01:29,13180056
2852,"Is this similar to Xamarin Workbooks?<p><a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;workbooks&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;workbook...</a>",2016-12-14 22:02:47,13180060
2853,It feels like Microsoft is starting to get more vocal about pushing F#. Worth noting that Visual Studio&#x2F;Xamarin for Mac is prominently offering F# for Android and iOS out of the box now as well.,2016-12-14 22:05:38,13180080
2854,"I do most of my dev work on Windows or OSX. Xamarin also works with VS and it seem like VS runs on linux (<a href=""https:&#x2F;&#x2F;code.visualstudio.com&#x2F;docs&#x2F;setup&#x2F;linux"" rel=""nofollow"">https:&#x2F;&#x2F;code.visualstudio.com&#x2F;docs&#x2F;setup&#x2F;linux</a>). It is the same as deving for Xamarin on Windows, you have to use VS.",2016-12-14 23:00:31,13180540
2855,Anyone recommend any introductions to Xamarin?,2016-12-14 23:23:26,13180730
2856,"Development on Linux. Xamarin dev on Linux is limited to MonoDevelop, instead of Xamarin Studio which is the one where you actually get some tooling for the purpose; and I&#x27;m not sure it&#x27;s even possible to get anything of value done with Xamarin using Linux alone.<p>Xamarin thought it was a great idea to fork MonoDevelop but completely drop support for a platform the application was already running on. Something that would blow my mind if I didn&#x27;t know better the people involved with Xamarin at the start. Rather, a specific person. No points for guessing correctly who it is.<p>With that said, there are a lot of alternatives for Xamarin. Last year I tested a bunch of mobile frameworks on low-end devices and it really doesn&#x27;t compete with native, and in fact lost to Kivy in runtime speed, a Cython-based, community-run framework. Worth mentioning that it was about on par with React Native.",2016-12-15 00:02:51,13180990
2857,"He works for Microsoft, on Xamarin. And seems happy doing it. Hence the statement that he won&#x27;t be working on GNOME again.",2016-12-16 23:04:08,13197706
2858,"What a strange time to switch to java, with MS acquiring Xamarin and dotnet core",2016-12-17 18:04:43,13201641
2859,AFAIK .NET Core offers nothing of any value for cross-platform GUI though. There is Xamarin.Forms but last I looked at things it was pretty shit compared to Java&#x27;s offerings.,2016-12-17 18:26:35,13201734
2860,"Xamarin.Forms isn&#x27;t really equivalent to any (commonly used) Java options. Something like GTK# or WinForms+Monk would. There&#x27;s also Eto and Avalon &quot;in the pipeline&quot; so to speak.<p>To me neither Java nor C# does well at WORA UIs but they are at parity imo. JavaFx isn&#x27;t bad, but it doesn&#x27;t do anything the C# offerings can&#x27;t do fairly easily.<p>I&#x27;m actually a fan of Qt for true cross-platform apps these days myself",2016-12-17 19:37:23,13202070
2861,"Yes, as part of a project that has used Swift for the last year, migrating away from Objective-C on a decent size codebase, I can say it is not ready for primetime.<p>Swift 2.2 + Xcode 7 wasn&#x27;t great, but it was livable.<p>Constraint SourceKit crashes makes Xcode essentially a text editor and not a good one. 
All indexing, highlighting essentially all IDE functionally lost.<p>This is the worst development experience that I&#x27;ve seen in 20+ years as a developer.<p>I thought the CoreData &#x2F; CloudKit debacle from 3 years ago was bad, but oh my God, I just want to jump ship and go to Android, switch to Xamarin, or just leave mobile at this point.<p>It would be nice to have some level of optimism and say this is growing pains, but I don&#x27;t have any faith that the Apple developers are competent in making this better.",2016-12-18 16:07:58,13206241
2862,"If you are looking for a great user experience, maybe you should think well before you start with Xamarin.",2016-12-19 08:21:49,13210209
2863,"<p><pre><code>  &gt; &quot;Python works okay, but I think Xcode is great because of autocomplete and syntax checks.&quot;
</code></pre>
Well, just say that you wanted to try something new. That&#x27;s a much better excuse to pick a technology.<p>I think that there are some great tools around for Python, and picking a language because of XCode... I think that one of the major selling point of Xamarin is that you can avoid it altogether :-)",2016-12-19 17:44:56,13213258
2864,"F# with monogame  will get you better performance and less weirdness, it is a pleasant lighter weight environment.  unity gc and runtime are rapidly improving now that ms owns xamarin though.",2016-12-20 01:05:32,13216476
2865,"they have a roadmap with the plans laid out on their website. it was impossible in the past because xamarin did not want to sell them licenses for newer mono. now Microsoft owns xamarin, and they are happy to. some improvements have already landed at least in beta.",2016-12-20 01:12:40,13216512
2866,"Don&#x27;t they share the same codebase? Of course there&#x27;s gpedit and probably some other management tools, but I stand by my point that it indicates not prioritizing security, and it makes me supect the military will just have compliance-related differences while the IoT version will have functions somewhat haphazardly removed, with no real improvements on the underlying code.<p>I also have bad experiences with their open-source products (Visual Studio Community, Xamarin, .NET libraries written by them), their IoT for RPi offering. Their consumer OS&#x27;s require manual cleanup and yearly full reinstalls. I&#x27;ve had software updates break my drivers, and one game (Gmod) on Windows 7 kill my graphics card twice, the second time taking my mobo with it. Their software installation&#x2F;deinstallation system is unreliable. I&#x27;ve had automatic disk repair completely wreck a hardware RAID 2 setup. I had about two BSOD&#x27;s a year until I switched to Linux.<p>I think my most stable Microsoft software experience I&#x27;ve had was Age of Mythology, and even that crashed sometimes.",2016-12-25 11:38:02,13253790
2867,"C#, F#, .NET, Visual Studio, Xamarin, TFS, Azure, TypeScript.",2016-12-30 02:07:45,13281987
2868,&gt;and mobile apps<p>Last time I tried (which was probably over 2 years ago by now) the CLJ android had a huge loading time to the point of not being usable for anything serious (it offered no tangible benefits that would justify the load time it had) and iOS was something based on that JVM for Android port that Xamarin bought then shut down. Has that changed ? Or are you talking about CLJS + ReactNative and similar tech ?,2016-12-30 10:40:03,13283719
2869,"So, first off, I&#x27;ve never done mobile, but I&#x27;ve been writing software for 30 years.   The biggest issues are probably obvious and are heard all over the place:<p>1) cross platform mobile-app development is a nightmare.  I tried Xamarin and gave up because I felt like I would have to learn an whole new layer of syntax to do any UX work.  Also the build times, the heavy lifting that was going to be required to setup the simulation environments, etc.  just didn&#x27;t make sense.<p>2) Setting up your development environment is just a complete nightmare.  After a week or two of messing around, I finally got the Android emulators working at reasonable performance on my Windows machine. Still haven&#x27;t even attempted to hook up a mac.<p>3) The amount of third party code, npm modules, and pre-processing required to build the simplest shell application is astounding.   My current &quot;shell&quot; app, after first build, is 32k files and almost 300MB.  Its absurd.   and the app doesn&#x27;t even do ANYTHING yet.  The problem with all this code is that no one can possibly understand ALL this plumbing, and the instant something goes wrong, you&#x27;re immediately sucked into non-productive rabbit holes.<p>All that being said, this is an awesome learning experience.  I&#x27;ve been avoiding mobile development for years hoping it would mature, and I guess it has somewhat, but at this point, feeling like I won the lottery when I finally was able to set a breakpoint in my VS Code editor, run a react-native application through the emulator and hit the breakpoint.  Ha!",2016-12-30 16:32:09,13285185
2870,"Ah, yes, the tools involved with mobile development can be frustrating. FWIW, I generally skip the emulator&#x2F;simulator and go straight to testing on the device. For iOS, you have to mess with Apple developer program membership, code signing, and provisioning profiles to run an app on the device. But for Android, just enable debugging on your device, connect via USB, and use adb.<p>About learning a &quot;new syntax&quot; for Xamarin, do you just mean that you don&#x27;t know C#? Or are you talking about XAML? As I understand it, XAML is basically .NET&#x27;s JSX, but with a sharper division between the declarative markup and the code (or &quot;code behind&quot; as it&#x27;s called in the .NET world). Charles Petzold&#x27;s book about Xamarin Forms does a good job of demystifying XAML.<p>I have mixed feelings about Xamarin versus React Native. On the one hand, React Native is fairly easy to integrate into an existing mobile app, and it integrates with each platform&#x27;s native development tools (Xcode for iOS, Gradle for Android). That&#x27;s not the case for Xamarin; in particular, on iOS, Xamarin uses its own AOT native code compiler based on LLVM. The next time that Apple puts out a new version of Xcode and, the same day, introduces a new requirement for app store submissions (for a new platform if not for iOS itself), Xamarin users are stuck until Xamarin scrambles to update its compiler.<p>On the other hand, with Xamarin, the resulting app is more native in ways that users can actually perceive, even when using Xamarin Forms. To take a simple example, React Native&#x27;s (new) Button component doesn&#x27;t actually use a UIButton on iOS or the equivalent on Android. So what happens when a future version of the platform changes the appearance of a button&#x27;s border? Now React Native&#x27;s hard-coded styles are out of date. A more complex example that&#x27;s actually more relevant to me is React Native&#x27;s ListView component. It doesn&#x27;t use UITableView on iOS or the native ListView on Android. I don&#x27;t know what this means for Android, but for iOS, the difference is noticeable, at least to blind people using an app with VoiceOver. Bring up the UIExplorer app on a device, turn on VoiceOver, and swipe through the screen. Notice that VoiceOver doesn&#x27;t automatically scroll through the list; you have to do that manually with a three-finger swipe up. Contrast that with any native UITableView. My feeling is that React Native&#x27;s developers will use native components in situations where they <i>know</i> they can&#x27;t duplicate the native behavior, but if they think they can produce a cross-platform JS component that feels native enough, they will. Given the great momentum of React Native, which isn&#x27;t likely to stop any time soon, I guess I should stop ranting and actually fix the problem, or at least the user-visible symptoms.<p>I haven&#x27;t used either Xamarin or React Native for a real project yet. For my latest mobile project, I tried to take the Google Inbox approach, that is, writing non-UI code in cross-platform Java, then writing each platform&#x27;s UI in that platform&#x27;s native language. Then for iOS, I use Google&#x27;s J2ObjC to compile the cross-platform Java into ObjC. But I&#x27;m not really happy with this approach. My guess is that all the best practices for writing an app this way are only known by the teams within Google that are doing it. There certainly isn&#x27;t a strong community of developers outside of Google using this approach. And while cross-platform UI toolkits are criticized for being prone to the uncanny valley problem, my experience writing a desktop app with SWT suggests that you can go a long way with a cross-platform UI toolkit, as long as the toolkit is based on the highest-level native facilities that are applicable, and you can drop down to native when necessary. So I&#x27;m looking at cross-platform mobile development solutions that actually have strong developer communities behind them, and Xamarin and React Native are the top contenders.<p>This long-winded rant is the product of my last few weeks of thinking about cross-platform mobile development and surveying the landscape. Perhaps this thread wasn&#x27;t the best place for it to finally burst out. Just know that it&#x27;s a vexing problem even for someone who&#x27;s been doing mobile development intermittently for a while (6 years for an iOS app, 3 years for the Android version).<p>Good luck with your mobile app.",2016-12-30 17:26:25,13285607
2871,"yea, cut me I bleed C# .. the transition to client libraries has been hard enough, but mobile has thrown me in a tizzy.<p>The straight up performance of Xamarin on my development machine was what through me.  Getting it all setup and rolling and seeing the incredible amount of heavy lifting it took to get something rolling just turned me off completely.<p>I see what you mean about react-native, but from my perspective, the next-best-thing is a far enough second place finisher that I don&#x27;t want to consider it.  I still feel a native web based app running on all platforms is the ultimate best way to roll.    We just need Apple to stop fighting it.",2016-12-30 18:30:36,13286103
2872,"While the article mentions at the end the Crystal[1] language.  I will say that I found that C# with generics was very approachable, and F# has always been interesting.  Wish some of the changes approaching with the acquisition of Xamarin by MS, the openness since ASP.Net MVC, and now .Net Core it&#x27;s worth looking at again.<p>I&#x27;ve been in JS&#x2F;Node land for most of the past 6 years now, and tbh, I&#x27;ve enjoyed it thoroughly, but I wouldn&#x27;t mind dabbling back in modern C# without some of the &quot;Enterprise&quot; patterns that were <i>way</i> over-used.  On the flip side, I still just don&#x27;t care for Java.  Even then, some of the things I might reach for C# to do may be a better opportunity to get into go or rust.<p>Definitely some interesting opportunities all around.<p>[1] <a href=""http:&#x2F;&#x2F;crystal-lang.org&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;crystal-lang.org&#x2F;</a>",2016-12-31 23:59:54,13293887
2873,"Well, they (MS) have Xamarin, which is free, and targets Android, iOS, and WP. You could likely share a lot of the codebase with a UWP app also, since it&#x27;s all .NET natively or supported (UWP supports other languages, eg. JS, C++ etc). It&#x27;s a pretty compelling option, and works well in my experience.",2017-01-06 06:08:39,13334326
2874,"No love for Xamarin?<p>Being able to target Android&#x2F;iOS[&#x2F;WP, relevancy aside] (and UWP in part, with a shared logic codebase), is pretty nice. I rather suspect it will get full UWP support in due course, also.<p>In my experience, it&#x27;s fast at runtime, very easy to debug, very customisable UX, easy to code for in a pleasant, highly productive language with <i>amazing</i> tooling (best in VS, but Xamarin Studio on Mac or Linux isn&#x27;t bad, especially compared to the competition), allows you to share often the vast majority of the codebase across platforms, has very good, but optional, Azure integrations should you want them - and free. Pretty compelling offering, I&#x27;d have thought!",2017-01-06 06:19:23,13334360
2875,"I have tried hybrid&#x2F;cross-platfrom development route many times. It&#x27;s not as rosy as it seems on paper. In terms of maturity there only 3-4 options out there and each of them have their own set of problems and gotchas.<p>Out the 3-4 mainstream ones, I am quite familiar with<p>Cordova &#x2F; PhoneGap<p>Xamarin<p>The main problem that I see, is the lack of ecosystem support for both of these. For example, you want to use latest features of a third party SDK, you find out that they only have native libraries available. Then it falls on your plate to create the JS or C# wrappers for these native libraries. This calls for a specialist who has experience in writing these wrappers. There are not that many people who have experience with this. So it also ends up being expensive.<p>Another problem is that the &quot;idea&quot; &#x2F; &quot;visionary&quot; people don&#x27;t understand the limitations of the cross platform development. They keep coming up with user experience demands which don&#x27;t really fit well in the cross platform sense. When you the programmer tell them that it&#x27;s very time consuming to do it in the chosen technology, they refuse to understand and argue a lot citing examples from other popular apps. Most of these popular apps are from companies who are very well funded and have access to extraordinary programming talent. They undertake creation of custom components&#x2F;frameworks as part of their app development. This is really not possible for small agencies &#x2F; small startups.<p>In the end the cross platform approach always ends up making up some compromises. If the senior management of the product understands the compromises and is wiling to live with it only then it works out. Still from time to time, there are discussions about whether &quot;right&quot; technology was chosen when you find a limitation of the chosen approach which makes a new &quot;groundbreaking&quot; feature very expensive to implement.",2017-01-06 07:11:44,13334517
2876,"I&#x27;m still not convinced that React Native is a great solution for anything beyond the most simple apps.<p>The iOS&#x2F;Android SDKs are already complex enough to deal with when you&#x27;re writing native apps. When you introduce a third-party framework that wraps the native SDKs, you now have to worry about bugs in that framework, plus bugs in the bindings to the system SDKs, on top of bugs in the system SDKs themselves. (Of which anyone experienced in iOS&#x2F;Android development knows there are already plenty.)<p>React is very trendy right now and I think that&#x27;s why React Native is getting a lot of attention, but I think there&#x27;s a good reason similar cross-platform frameworks like Xamarin and Titanium have only reached niche status, and most mobile-first apps are still developed natively.",2017-01-06 07:14:54,13334521
2877,"God no, Xamarin is the perfect example of something being &#x27;too good to be true&#x27;. :)",2017-01-06 13:07:31,13335946
2878,"I am one of those people who like Xamarin, especially now that it is open source. But needing a Mac for iOS is a pain. I understand it is hard to not work like that but it is annoying. That said, I do like Xamarin and  currently work fast in it.",2017-01-06 16:17:45,13337470
2879,".NET probably means web developer. There&#x27;s game dev with Unity, granted, and a few jobs out there doing mobile work with Xamarin, and I imagine some windows only app or tools development, but the majority of .NET work seems to be web dev nowadays.<p>You do make a good point, though.",2017-01-06 16:46:44,13337767
2880,"Recently Visual Studio for Mac (which is a massively improved Xamarin Studio it seems) because C# + Xamarin for iOS. When not for work VIM for Clojure, Lua and others.",2017-01-06 16:48:42,13337783
2881,"Visual Studio (C#, ASP.NET MVC, Xamarin) and Visual Studio Code. :)",2017-01-10 09:49:16,13363771
2882,"I&#x27;m currently a .NET developer using C#&#x2F;ASP.NET MVC. This year I plan to play around with these things =&gt; ReactJS, Xamarin, AWS, Docker, (and hopefully swift)",2017-01-10 10:02:36,13363807
2883,Doesn&#x27;t Async&#x2F;Await help dealing with nested callbacks and simplify exception handling? I wouldn&#x27;t push everyone to use it. But it is really useful in a lot of places. I cannot imaging writing Xamarin apps and distributed cloud services without it.,2017-01-11 17:30:51,13375651
2884,Visual Studio for C# and Xamarin.,2017-01-12 10:24:18,13381200
2885,"I think some of the confusion comes from people trying to follow old standards (PCLs and PCL profiles) and the bouncing standards as they were being developed and settled on, all at roughly the same time.<p>For instance, there was a brief point where .NET Core itself was expected to be the .NET &quot;standard bearer&quot; and specification versions might have been derived from it [1]. That idea didn&#x27;t last because it didn&#x27;t well account for the history&#x2F;current states of the other runtimes (.NET Framework, Mono&#x2F;Xamarin), but I think it did leave lasting and confusing scars amongst some of the vanguard bloggers.<p>[1] And basically were; the 1.x sequence of .NET Standard do more directly correspond to a subset of the .NET Framework and .NET Core intersection as viewed from the lens of .NET Core, which is part of the compatibility break between 1.x and 2.0 in .NET Standard versions...",2017-01-12 16:02:19,13383266
2886,"It&#x27;s not that complex but I think it&#x27;s just that .NET naming and versions are currently quite confusing. I did a lot of reading on this for the book I wrote and I still find I need to double-check things.<p>I guess this is what you get when you try and munge three platforms together. Package support is very important for uptake and many library authors were waiting for some stability. I found this out when researching the support matrix at <a href=""https:&#x2F;&#x2F;anclafs.com"" rel=""nofollow"">https:&#x2F;&#x2F;anclafs.com</a>.<p>If you look at the volume of MS docs on this you would be forgiven for thinking it&#x27;s complicated:<p><a href=""https:&#x2F;&#x2F;blogs.msdn.microsoft.com&#x2F;dotnet&#x2F;2016&#x2F;09&#x2F;26&#x2F;introducing-net-standard&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blogs.msdn.microsoft.com&#x2F;dotnet&#x2F;2016&#x2F;09&#x2F;26&#x2F;introduci...</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;standard&#x2F;blob&#x2F;master&#x2F;docs&#x2F;faq.md"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;standard&#x2F;blob&#x2F;master&#x2F;docs&#x2F;faq.md</a><p><a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;articles&#x2F;standard&#x2F;library"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;articles&#x2F;standard&#x2F;li...</a><p><a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;net-standard-library-support-for-xamarin&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;net-standard-library-support-for-xa...</a>",2017-01-12 16:35:49,13383626
2887,"The first problem is that .NET Standard is not a specification in a traditional sense: &quot;The official spec is a set of .cs files that define the APIs that are part of the standard.&quot; [0]<p>If you&#x27;re new to the .NET ecosystem and you try to dig deeper, you find yourself having to understand more and more things: .NET Core, project.json (dependencies, frameworks, imports), vNext, portable class library, PCL profiles, CLI implementations etc, all the while battling misinformation, confusion and terrible proprietary tools, should you chose (or be forced to!) use them.<p>It took me about two weeks to finally wrap my head around the ecosystem in an effort to build a &quot;.NET Standard library&quot;(not a standard library) with a few dependencies and use it in a non-trivial Xamarin project. Let me know if you&#x27;d like me to share.<p>[0] <a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;articles&#x2F;standard&#x2F;library#specification"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;articles&#x2F;standard&#x2F;li...</a>",2017-01-12 17:38:43,13384299
2888,"I don&#x27;t think MS wants to discourage developing apps using web technologies. They support a number of ways [1,2,3] to turn HTML&#x2F;JS apps into windows {,store} apps. They&#x27;ve been supportive of using web technologies to make apps before electron existed. The original &quot;modern&quot; app platform for Windows 8 had APIs for C#, C++&#x2F;CX, and JS. I don&#x27;t think the first JS push was an effort to improve portability, but portability is definitely a part of &quot;new MS&quot; strategy. Look at things like Xamarin and the Objective-C compiler for visual studio (whatever they&#x27;re calling it). They don&#x27;t care if your app isn&#x27;t Windows exclusive, they&#x27;re just begging you to put it in the Windows Store.<p>[1]: <a href=""https:&#x2F;&#x2F;developer.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;develop&#x2F;winjs"" rel=""nofollow"">https:&#x2F;&#x2F;developer.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;develop&#x2F;winjs</a>
[2]: <a href=""https:&#x2F;&#x2F;www.microsoft.com&#x2F;developerblog&#x2F;real-life-code&#x2F;2016&#x2F;05&#x2F;09&#x2F;Electron-Windows-Store.html"" rel=""nofollow"">https:&#x2F;&#x2F;www.microsoft.com&#x2F;developerblog&#x2F;real-life-code&#x2F;2016&#x2F;...</a>
[3]: <a href=""https:&#x2F;&#x2F;developer.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;bridges&#x2F;hosted-web-apps"" rel=""nofollow"">https:&#x2F;&#x2F;developer.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;bridges&#x2F;hosted...</a>",2017-01-15 16:37:13,13404745
2889,"The future of developer opinions will be as vague as this question.<p>Hybrid app frameworks simplify life for developers at the expense of user experience. In this case, neither users nor developers are the decision pivot here, it depends on what the project requires (deep hardware&#x2F;platform integration or simple app across platforms).<p>Microsoft&#x27;s acquisition of Xamarin early 2016 has caused more M$ devs to look into mobile development, but platforms are still so different (styles&#x2F;guidelines&#x2F;hardware) that creating a slick mobile app in one codebase is still less likely than having separate dev teams for each platform. Certainly true in enterprises where M$ banks, and startups need the speed of prototyping that only native development can currently support.<p>React Native is coming along nicely, but no matter what hybrid framework you use, you&#x27;ll still need to test it on multiple platforms, hardware, and under various conditions to really feel confident shipping it to people. Mobile is hard. That&#x27;s why there are resources like this: <a href=""http:&#x2F;&#x2F;info.perfectomobile.com&#x2F;digital-test-coverage-index.html"" rel=""nofollow"">http:&#x2F;&#x2F;info.perfectomobile.com&#x2F;digital-test-coverage-index.h...</a>",2017-01-16 18:45:08,13411937
2890,"&gt; GTK is probably the main reason Gimp isn&#x27;t a serious competitor in professional work, then.<p>Xamarin Studio is built using Gtk and actually looks nice on macOS, or at least I have seldom heard people complain about it:<p><a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;the-making-of-xamarin-studio&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;the-making-of-xamarin-studio&#x2F;</a><p>I think the problem is that Gimp is understaffed to produce a Photoshop killer with <i>any</i> toolkit.",2017-01-18 03:58:45,13423850
2891,"There probably aren&#x27;t that many xamarin studio users on mac and most of them would be developers anyway. If something looks out of place, developers are often oblivious to it (how long would it take you to spot a font out of place?) but artists are hyper-sensitive to it.",2017-01-18 04:04:08,13423868
2892,"&gt; Just wished it was not a .NET thing<p>Then what? OCalm is the other possibility, but the appeal of a larger ecosystem and easier mobile target by xamarin is what put me into F#.",2017-01-18 19:54:36,13429713
2893,"Disclosure: I&#x27;m the CEO of Raygun (<a href=""https:&#x2F;&#x2F;raygun.com"" rel=""nofollow"">https:&#x2F;&#x2F;raygun.com</a>).<p>Raygun provides Crash Reporting &amp; Real User Monitoring. Across  both mobile, backend and desktop (and all mobile, including Xamarin stacks). Love to have you check it out.<p>We&#x27;ve been picking up a bunch of customers who have been getting nervous with Twitter being in a bad shape and worrying about Fabric previously.",2017-01-18 20:14:53,13429881
2894,"Absolutely. Although, I&#x27;d like to say that most of the time people get into discussions like these, it ends in an &quot;agree to disagree&quot; conclusion because, in my opinion, the truth of the matter is it all comes down to tradeoffs and opinions.<p>I need to keep this short due to wife so I probably won&#x27;t be able to get my full opinion across. From my experience, I believe that the additional layer of abstraction provides a faster and easier development experience upfront, but generally (not always) comes with an additional layer of bugs, troubleshooting, updates, etc. I read an article on here the other day about whether Xamarin was worth learning. I loved a comment that one user name eonil left:<p><i>What you have to deal with;<p>Xcode = iOS bugs + UIKit bugs<p>Xamarin = iOS bugs + UIKit bugs + different runtime, language, memory model abstractions + .NET bugs + P&#x2F;Invoke bugs &amp; overheads + GC inter-op bugs &amp; overheads + C# bugs + slow followup of platform updates<p>Xamarin Forms = iOS bugs + UIKit bugs + different runtime, language, memory model abstractions + .NET bugs + P&#x2F;Invoke bugs &amp; overheads + GC inter-op bugs &amp; overheads + C# bugs + slow followup of platform updates + extra UI abstraction layers + lack of fine level controls &amp; features</i><p><a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=12948611"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=12948611</a><p>While I know this is specific to Xamarin and is only an opinion, I tend to think similarly about layers of abstraction over a language. Clearly there is abstraction all over the place that I couldnt go without, but maybe Im not just not yet ready to accept another one.",2017-01-19 04:29:37,13433023
2895,"HockeyApp is great.  Owned by Microsoft, who has doubled down on mobile tools with Xamarin.  For beta distriubtion, HockeyApp is a superior product.  And it has an API (so you can, say, auto register iOS devices).  Fabric is just more known and considered cooler (they do have nice CSS transitions :).",2017-01-19 12:34:15,13435240
2896,Does this mean the mobile platform supports Xamarin now?,2017-01-19 15:37:28,13436561
2897,As Adam said - stay tuned. The Xamarin version of RealmDraw is included in the same repo as the others so you can see the source code but you can&#x27;t build it with the public NuGet components just yet. (I am on the Xamarin team and built the Draw app.),2017-01-19 15:51:46,13436699
2898,"We are building an enterprise app for iPad users, and there are no plans to support other devices.<p>We built a related iPhone app for another user group using Swift, but there is some organizational push towards Xamarin (I think because we have a lot of C# developers).<p>Should we build the iPad app in Swift or Xamarin?",2017-01-19 16:36:17,13437089
2899,"The C# documentation is quite clear:
<a href=""https:&#x2F;&#x2F;realm.io&#x2F;docs&#x2F;xamarin&#x2F;latest&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;realm.io&#x2F;docs&#x2F;xamarin&#x2F;latest&#x2F;</a><p><pre><code>  var puppies = realm.All&lt;Dog&gt;().Where(d =&gt; d.Age &lt; 2);
</code></pre>
The LINQ integration is appreciated.<p><pre><code>  &#x2F;&#x2F; Update and persist objects with a thread-safe transaction
  realm.Write(() =&gt; 
  {
      realm.Add(new Dog { Name = &quot;Rex&quot;, Age = 1 });
  });

  &#x2F;&#x2F; Queries are updated in realtime
  puppies.Count(); &#x2F;&#x2F; =&gt; 1
</code></pre>
I&#x27;m assuming that &quot;updated in realtime&quot; means &quot;realm.Write is a blocking operation&quot;, correct?",2017-01-19 20:02:57,13439007
2900,I have seen that people who come from native (Java&#x2F;ObjectiveC&#x2F;Swift and even Xamarin) write more robust React Native apps than people coming from HTML5. That is not strange by any means but something to keep in mind. It is not &#x27;magic&#x27;.,2017-01-23 15:52:59,13462996
2901,"The tooling for Swift is certainly miles better on iOS, but I do like Rust as a language. On Android the most comprehensive solution I&#x27;ve seen is Xamarin, but last time I tried it (which was years ago), I wasn&#x27;t a fan of the GUI and the perf was worse than Dalvik. Hopefully that has improved now.",2017-01-25 13:20:56,13481162
2902,"You&#x27;re not wrong. I&#x27;ve worked with Ionic v1 a fair amount. The framework is good for mockups and prototypes but nothing more. What ends up happening, as you app grows to include notifications, deep linking, etc, is you need to rely on more and more hacky thirdparty solutions. These days I either code natively or use Xamarin.",2017-01-25 17:34:16,13483609
2903,"&gt; New view controllers continually being introduced by Apple and Google are not available in React Native. So if you want to get fancy with UX, you are out of luck. Or won&#x27;t get a net benefit when you start doing native development to get around the limits of React Native.<p>It looks like this problem is acknowledged and addressed by the React Native folks[1] : <i>React Native has several of the most critical platform components already wrapped, like ScrollView and TextInput, but not all of them, and certainly not ones you might have written yourself for a previous app. Fortunately, it&#x27;s quite easy to wrap up these existing components for seamless integration with your React Native application.</i><p>If your app has some innovative UI, but you can reuse most of the code from React Native for some basic parts of the app, wouldn&#x27;t you benefit from using React Native? Or is [1] not that &quot;quite easy&quot; ?<p>If you plan to have your app run on both iOS and Android (and Windows 10), what is the downside of React Native?<p>I wonder how React Native stands vs. Cordova and Xamarin, performance wise and ease-of-use. I&#x27;m thinking it falls somewhere in between Cordova and Xamarin, but I&#x27;d love to hear people&#x27;s experience on this.<p>[1] <a href=""https:&#x2F;&#x2F;facebook.github.io&#x2F;react-native&#x2F;docs&#x2F;native-components-ios.html"" rel=""nofollow"">https:&#x2F;&#x2F;facebook.github.io&#x2F;react-native&#x2F;docs&#x2F;native-componen...</a>",2017-01-27 02:09:23,13497176
2904,"Ugh, if you were linking against system sqlite you had problems RIGHT NOW before Android N.<p>sqlite.so isn&#x27;t part of public Android API surface, which means the OEMs will regularly replace it, break it, compile it with strange options and deal a lot of pain to you and your users.<p>So if you weren&#x27;t shipping your own native SQLite in NDK&#x2F;Xamarin you already had problems, you just maybe didn&#x27;t notice them.<p>Android N is now actually actively preventing linking against system libraries which aren&#x27;t part of public API surface, which is good - it&#x27;ll result in less developers doing dumb things which break on minor updates.",2017-01-27 11:43:47,13499174
2905,"But the point is that you ship your own copy of SQLite you still have a problem. You need to make sure that a database is never accessed both through the android wrapper and you own sqlite copy, or you will face corruption. Seems trivial, but when you take into consideration things like Xamarin and third party libraries, it&#x27;s not so clear-cut.",2017-01-27 15:57:41,13500496
2906,"Hmm, I dunno, I kinda thought that not mixing sqlite versions would be a pretty obvious thing.<p>Xamarin, Cordova and others are pretty much a cesspool of catastrophically poor libraries so I&#x27;m not sure why Google has to take the blame for that.",2017-01-27 16:48:35,13500836
2907,"React Native is gaining a lot of traction for cross-platform mobile development. My company has started to transition to RN over Xamarin for our enterprise app development.<p>Functional languages have begun to gain popularity and coverage as well.<p>On the frontend Elm is excellent. On the backend Elixir and the web framework Phoenix offer top notch developer experiences.<p>If you have experience in the dot net world... Dot Net Core is shaping up to be a revolutionary rewrite of the dot net ecosystem. It&#x27;s fast and lean, as well as cross-platform.<p>If you are into lower level languages, Rust &amp; Go have picked up a ton of steam in the past few years. Until recently they have been stuck in the systems level programming niche, but Go especially is beginning to take hold for API and more &quot;front side of the backend&quot; development.",2017-01-27 18:25:31,13501504
2908,Mind if I ask why you chose RN over Xamarin? I&#x27;m currently going a similar decision and would love to hear your thought process.,2017-01-27 19:06:38,13501789
2909,"Iteration speed is the main reason. Our devs can develop, test, and push tweaks absurdly fast with RN. Most of our applications are CRUD apps shooting the data to web.<p>There&#x27;s nothing wrong with Xamarin. We have a few apps still maintained in Xamarin. But I find developing UIs and even the general data flow to be better in RN. Perhaps I just prefer JSX and the Redux pattern.<p>I find that Xamarin is still better documented and it&#x27;s easier to find help than with RN. But we tend to live on the bleeding edge a bit.",2017-01-27 19:29:31,13501943
2910,"Generally I would go with .NET Core - it is still in its infant stage, but by the time you have MVP it will be OK - Microsoft are throwing a lot of efforts in this direction.<p>For the mobile apps - Xamarin. You will still write C#, just use a different way of thinking.<p>Having the same technology stack in web and mobile will allow you to reuse skills one day when you build a team.",2017-01-28 07:49:53,13505404
2911,"I think that&#x27;s about right. I think I just started doing work that sounds very much like SRE work to me: I&#x27;m building a CI pipeline, E2E tests and &quot;Dockerizing&quot; an existing Java-based project management product (currently only deployed as SAAS, but on-site deployment is in the backlog).<p>I&#x27;m trying to fully automate the testing side of the product, while making the process transparent enough to be amenable to manual intervention&#x2F;quick tweaking.<p>After that, I&#x27;m hoping to move to automating the  deployments, putting the server behind a load balancer, rollbacks, backup testing, all that good stuff that makes sure things only break where it can&#x27;t hurt. Luckily the product is already pretty stable with the current dev&#x2F;dogfooding-as-staging&#x2F;prod model.<p>It&#x27;s the most enjoyable work I&#x27;ve had so far. I think it mostly boils down to:<p>* I have clearly defined tasks, which I mostly plan in&#x2F;negotiate with the product owner myself, so I have a large share of &quot;ownership&quot; of the dev&#x2F;QA infrastructure improvements<p>* I work fully remotely and part-time, which gives me plenty of free time to socialize and decompress (we mainly communicate via Slack). I also have the option of working more hours, but I already doubled my<p>* I&#x27;m not currently on the critical path, so work feels low-stress<p>* I don&#x27;t have to deal with under-defined business logic and product owners that do not want to commit to specifying (the product owner has transitioned from building the Java software to managing and subcontracting it, so is very knowledgeable about the product, and besides he&#x27;s a great guy)<p>* I&#x27;m learning the tooling around the product through automating its development, testing and deployment (vs. learning it through adding crufty new features to it in a completely un-repeatable way, I&#x27;m looking at you never-again crashing Visual Studio Community and randomly-failing-builds Xamarin Forms).",2017-01-28 10:15:56,13505686
2912,"I&#x27;m thinking more about what people use Mac Mini&#x27;s for.<p>Apple clearly aren&#x27;t interested in the Mac Mini anymore, so why not license macOS on a superior machine in the same category instead?<p>Similar to how they no longer make their own monitors, and now recommend an LG 5K monitor.<p>For example, I use a Mac Mini for Xamarin. When it dies, I don&#x27;t want to spend money on a new one because they are really overpriced, would rather buy a NUC and a copy of Mac OS and use that instead.",2017-01-28 14:40:23,13506465
2913,"There&#x27;s also Mono AoT which is used by Xamarin for iOS. But it would have been nice to have an official .NET Core project that targets LLVM, hope they revive it at some point - the project got abandoned without any announcements from what I can tell.",2017-01-30 13:34:32,13520968
2914,"&gt; Object-Oriented programming doesn&#x27;t have a place in our hearts,<p>Go is object oriented.<p>&gt; I hate to say it, but I just don&#x27;t trust Microsoft.<p>But you trust Google? well known for discontinuing products or abandoning them ( GWT?,... )<p>&gt; It&#x27;s a statically typed language that treats functions as first class citizens<p>Without some form of generics&#x2F;type classes you can&#x27;t fully take advantage of Go first class functions to do  classical functional programming.<p>&gt; It&#x27;s not object oriented<p>it&#x27;s completely object oriented, it has methods on values,composition through struct embedding and implicit interfaces for polymorphism. It ticks every box of a OO language.<p>&gt;  is easy to deploy (compiled &amp; doesn&#x27;t depend on a runtime like JVM or .NET core)<p>Go actually has its own runtime, it&#x27;s just included in the binary resulting from the compilation.<p>&gt; doesn&#x27;t have exceptions (yay)<p>Go has panics which are exceptions.<p>I personally find Go useful but don&#x27;t like the limitations of the language. And they are showing already with more and more untyped API ( context.Values(interface{})interface{} ). Go relies way to much on runtime behavior like type assertions for a so called statically typed language. Go basically asks the developer to do the compiler&#x27;s job. Because the compiler doing its job would make it slow (?!?). So you find yourself doing a lot of copy paste, writing your own parsers, code generators and manifests to use go gen, use tricks that make code ugly, or just say &quot;fuck&quot; to types and use &quot;interface {}&quot; when you are tired of all that.<p>.net core isn&#x27;t ready for production, but when it does it will support both F# and C# + a vast ecosystem of libraries useful for web development, gaming (unity), mobile and desktop apps (Xamarin GUI libs ...), while Go users will be stuck with that poor type system writing extremely verbose code because they believe that generic programming is bad.",2017-01-31 02:20:34,13526966
2915,"San Francisco | Full-time | C++&#x2F;C#&#x2F;Xamarin<p>Genomics it&#x27;s good stuff. 
We made some tools that are better than what academics&#x2F;gov&#x2F;big companies make.<p>Desktop applications, not web or &quot;cloud&quot;-- b&#x2F;c you make video games and movies with desktop applications, so maybe when lives depend on it skip the web browser.<p>Anyways you&#x27;ll get paid market-rate and get to work with fun technologies.<p>You can email me: mo_r [at] me.com",2017-02-01 18:22:09,13543361
2916,"That seems like a lot of confusion.<p>Microsoft has always been a polyglot corporation. Just because not all of their code is&#x2F;will ever be managed code&#x2F;.NET doesn&#x27;t mean that Microsoft would abandon all of the good work that has gone into the .NET platform, its languages, managed code, the CLR platform...<p>.NET is still the &quot;third pillar&quot; of modern application development on Windows devices in the UWP and .NET is also more cross-platform than ever with big investments into Xamarin tooling (now a first party part of the Visual Studio team&#x2F;Developer Division) and the open source, cross-platform .NET Core runtime.",2017-02-01 21:56:47,13545714
2917,Can this be integrated into a Xamarin app? Is there anything similar for Xamarin?,2017-02-01 22:14:07,13545911
2918,"Gatecoin (<a href=""http:&#x2F;&#x2F;gatecoin.com"" rel=""nofollow"">http:&#x2F;&#x2F;gatecoin.com</a>) | Hong Kong ONSITE | Multiple Positions | Fulltime | (INTERNS also welcome, VISA sponsor)<p>We&#x27;re a regulated exchange for bitcoin, ether and other blockchain assets based in Hong Kong, with many projects in our backlog!<p>We&#x27;re looking for technical folks to join our growing international team of blockchain technology specialists:<p>a) Devs: Backend, Fullstack, Mobile (soonish via Xamarin)<p>b) QA (using NUnit, canopy, etc)<p>c) DevOps (using Ansible+Linux+GitLabCI)<p>d) Hybrid roles of the above<p>Our production environments are Debian, using technologies such as Redis and MySQL.<p>Our codebase is leaning more and more towards functional programming, in particular F#.<p>Get in contact to know more at andres at gatecoin dot com, using the subject &quot;Interested in Gatecoin roles&quot;.<p>We help with sponsorship&#x2F;relocation to Hong Kong.<p>Some nice perks we have:<p>- 10% of &quot;free to tinker&quot; time<p>- 10% of remote work time allowed<p>- International (more than 10 nationalities in same office), friendly work environment<p>Want to make a difference in the blockchain space? Join like-minded people and work together to bring about the decentralized financial revolution!",2017-02-02 04:22:58,13548091
2919,"Microsoft seem to have learned a lot from Java in designing their new .NET Core CLR. It has gotten almost everything right:<p>* a small and fast CLR (JVM)<p>* a class library that defaults to almost nothing but primitive classes<p>* proper and standardized version, platform and package management (NuGet)<p>* open source and MIT license[0]<p>* a patent promise[1]<p>* arguably the best dev IDE available (Visual Studio) and one of the best up-and-coming dev text editors (VS Code)<p>* Native ORM, templating, MVC, web server so there is one way to do things<p>* open source middleware standard (OWIN)<p>* they left out, for now, attempting the hard ugly stuff like x-platform GUI<p>* all platforms are equal citizens, they acquired Xamarin for dev tools and release their own Docker containers.<p>* it&#x27;s already getting good distribution (on RedHat) even tho it&#x27;s only 6 months out from a 1.0 release.<p>Java may have missed the window for fixing some of these issues in their platform - I feel that if Android were being developed today, they&#x27;d almost certainly take .NET Core as the runtime.<p>I&#x27;ve yet to commit to using .NET Core anywhere, but from what I know about it so far it is impressive.<p>[0] <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;coreclr"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;coreclr</a><p>[1] <a href=""https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;dotnet&#x2F;coreclr&#x2F;master&#x2F;PATENTS.TXT"" rel=""nofollow"">https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;dotnet&#x2F;coreclr&#x2F;master&#x2F;PATE...</a>",2017-02-02 09:10:34,13549159
2920,"well, some options for mobile<p>- xamarin works with f# and support it: <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;fsharp&#x2F;fsharp_support_overview&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;fsharp&#x2F;f...</a><p>- use react native (with fable to transpile f# -&gt; js): <a href=""https:&#x2F;&#x2F;github.com&#x2F;fable-compiler&#x2F;fable-react_native-demo"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fable-compiler&#x2F;fable-react_native-demo</a><p>for web you can use:<p>- suave (<a href=""http:&#x2F;&#x2F;suave.io"" rel=""nofollow"">http:&#x2F;&#x2F;suave.io</a>)<p>- aspnet core (or aspnet core mvc)<p>both works with .NET, .NET Core and Mono",2017-02-02 13:38:55,13550384
2921,"I&#x27;m aware of all that options, and have tested them. In fact, I have tried to use xamarin+f# for mobile for a year.<p>Now is a better (even have F# templates!) but is clearly a second class citizen.<p>--<p>Is not the case of Core that F# integration is black magic, or this has changed in last release?  All apis work now for F#? For web I try like 6 months ago and only suave was more or less usable (however, is hard to find how solve some stuff. NOTHING (in the open source options I test) is close to Flask&#x2F;django in this case, and asp.net was sub-par when I test it.)<p>--<p>I also agree that F# need more push from MS. My complaints, like much others, are about things that just need more polish and tooling - and if it get more competitive in performance with C#, better -. So I think is good to see this .NET strategy and think F# have a good future, to the point that F# <i>is the only reason</i> I come back to .NET.<p>Is only, I wish not just a good future. I want a AMAZING future!",2017-02-02 15:31:45,13551152
2922,"Not sure LinqPad is the right way to go.<p>What I would like to see is a dedicated REPL application (likely based on the scripting dialect of C#) with IntelliSense and support for NuGet packages (if you want to have those features in LinqPad, you have to pay).<p>Kind of similar to Xamarin Workbooks, but better, and without all the &quot;it&#x27;s for documentation and inspecting applications&quot; cruft.",2017-02-02 17:53:52,13552696
2923,"This sounds like one of those karma-fishing Reddit posts that start off with, &quot;<i>I know I&#x27;m going to get downvoted for this, but...</i>&quot;, but then go on to state a popular opinion and receive thousands of upvotes for it.<p>No matter which programming language is mentioned here, there will ALWAYS be a few people commenting, &quot;<i>I like &#x27;X&#x27; better!</i>&quot; (where &#x27;X&#x27; is usually an emerging language that they tinker with in hobby projects and haven&#x27;t used professionally yet).<p>That caveat aside, C# has generally been one of HN&#x27;s darlings in recent years.  People who crap on Java turn around and praise C# in the next breath, because:<p>(1) There are some syntactical niceties that make C# feel &quot;lighter&quot;,<p>(2) MS has developed a more &quot;open&quot; and even &quot;cool&quot; reputation over the past few years, at least in comparison to Oracle, and<p>(3) In many cases, it&#x27;s again people who have started tinkering with it in personal projects, and haven&#x27;t yet hit the inevitable pain points of using any language for real professional work in a team setting.<p>C# certainly isn&#x27;t Haskell, but it checks off enough functional checkboxes to have some cred, while still being approachable and familiar enough for non-academic mortals out in industry.  Xamarin and Unity aren&#x27;t perfect, but they give C# a solid foothold in mobile and gaming (which, along with web dev, are the holy trinity of domains that drive hype among young devs.<p>I really haven&#x27;t heard much negative chatter.  There will always be the people holding on to MS&#x27;s propriety brand image from the 90&#x27;s, who always want to comment on it from their Apple devices today.  But on the Internet hype spectrum of &quot;cool&quot; (Rust, Go, Elixir) to &quot;uncool&quot; (Java, PHP)... I&#x27;d say C# is at least 10% off the middle, in the direction of &quot;cool&quot;.  It checks the checkboxs of:<p>* &quot;mildly interesting&quot;,<p>* &quot;low learning curve&quot;,<p>* &quot;ease of actually finding an employer who uses it&quot;, and<p>* &quot;not likely to fade away because people don&#x27;t migrate to version 3, or because Mozilla can&#x27;t find another sponsor after Yahoo, or because yet another Ruby-successor comes along next week and sucks up all the hype, or whatever&quot;.<p>Really, the only people who criticize it a lot are the people in Microsoft shops who <i>actually use it for a living today (!)</i>, but isn&#x27;t that pattern usually true for everything?",2017-02-03 12:55:47,13559437
2924,"Pingman Tools | Boise, ID | ONSITE | Full-time | Senior Software Developer, C#, ASP.NET, Win, macOS, iOS, Android, Xamarin, Cloud<p>You love building and architecting great products, playing with new technologies, and learning something new every day. You can find several solutions to any problem. You love to celebrate accomplishments - and you live to celebrate often. You are &quot;one&quot; with C based languages (C#, C++, Java, Objective-C, Perl, Python, JavaScript) and are ready to embrace C# as your tool of choice. You&#x27;re eager to turn your knowledge into a user experience that everyone admires. You&#x27;re currently looking for more challenge, more flexibility, more responsibility or more fun at work.<p>We&#x27;re a small team based in downtown Boise, ID (near the river, greenbelt, 10 great lunch spots, and as many great bars), and we&#x27;re looking for a quick, mentally energetic software developer to join our growing team. We&#x27;ve been building great network troubleshooting tools for years, and have a whole pile of new releases and great projects that need your help. We have earned thousands of happy and enthusiastic customers from every major aerospace and broadband provider to gamers worldwide. We&#x27;re taking a proven product and scaling it to meet the needs of more users on whatever platform they use. There&#x27;s a lot of territory to cover and lots of places for you to contribute based on your strengths.<p>If you think you&#x27;re a fit with us then check out more about us at:<p><a href=""https:&#x2F;&#x2F;www.pingman.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.pingman.com</a><p>Then send a brief resume with an introduction letter to:<p>ednamode@pingman.com<p>You will receive a simple e-mail challenge, then we will have &quot;get to know each other&quot; phone call which is followed by a on-site interview and code test for the best candidates.  And we hope you are one!<p>About Pingman Tools
At Pingman Tools, our goal is to make network troubleshooting suck less. We help individuals and companies &quot;See the network, pinpoint the problem&quot;, including gamers, VoIP users, stock traders, ISPs, ASPs, and anyone that uses or provides network service. We have a fun and focused gang of sharp, diverse, hard-working individuals growing our brand and tools in an environment of respect, passion, and ongoing amusement.
We are a Boise, Idaho-based company, growing with new products, services, and team members. If you&#x27;re looking to help make a difference in a company, architecting and developing existing and new software in .NET&#x2F;Xamarin (in addition to a host of other technologies), our downtown Boise, ID office may be a great place for you.",2017-02-03 18:08:38,13561809
2925,"Location: Bulgaria, EU<p>Remote: No<p>Willing to relocate: Yes (preferably)<p>Technologies: .Net, C#, MVC, Xamarin (iOS &amp; Android), Web Api, Web Forms, Win Forms, jQuery, KnockoutJS, Entity Framework<p>Resume: <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;gkolev"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;gkolev</a><p>Email: wiraste[at]gmail[dot]com<p>Looking for opportunity to relocate to any of number countries like Ireland, Switzerland, UK, Luxembourg, Scotland, Canada to name a few. Used to work solo and as well in teams, fullstack. Interested in big data manipulation projects and front end heavy solutions (Angular, React ..) or mobile apps with Xamarin. 5+y exp with 20+ projects.",2017-02-04 06:21:04,13565911
2926,"A GNU&#x2F;Linux distro + vim usually, with some Docker and shell scripts&#x2F;make for the build process. Very transparent and everything can be versioned in Git.<p>Kinda the opposite of IDE-centric development, but the available Xamarin tooling didn&#x27;t support that way of working.",2017-02-04 18:03:37,13568064
2927,"in less than 48 hours Martijn van Dijk made this:
<a href=""https:&#x2F;&#x2F;github.com&#x2F;martijn00&#x2F;LottieXamarin"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;martijn00&#x2F;LottieXamarin</a> Check it out!",2017-02-04 20:00:09,13568726
2928,"To me as a web developer, the most exciting new development is react native (not react itself) - it&#x27;s redefining the border between web and native apps in a way that cordova and xamarin never did.",2017-02-05 12:06:46,13572021
2929,"With tools like Xamarin, Ionic and React Native, it takes a lot less work to build mobile apps.<p>I strongly believe that we&#x27;ve reached peak mobile apps, and that we&#x27;re going to see a lot less apps as time goes.",2017-02-05 20:52:00,13574569
2930,"Why do you assume the correlation that he wrote this kind of articles to be hired be Microsoft? Isn&#x27;t it much more likely that he had the posed point of view for all the time, but it did not become accepted in the GNU&#x2F;Linux world. On the other hand Microsoft wanted to expand their .net ecosystem to Linux and mobile devices, so they bought Xamarin and hired Miguel de Icaza.",2017-02-06 00:48:31,13575697
2931,"I have, and most of what is written there I find correct. Wouldn&#x27;t go as far as the Flash stuff. Mostly, it&#x27;s down to the terrible web ecosystem and JS. Feds love it, but they don&#x27;t know better. Native developers do, and most of the ones I&#x27;ve worked with have suffered a mental toll on having to work with RN. Now, is it an understandable from a management standpoint? Sure, especially at a company like Facebook, where there is a lot of fed experience. Does that make it a good technology? Not at all. It&#x27;s a terrible compromise that has only one purpose - allow feds to develop on mobile. If only cross-platform mobile development was a concern, something like Xamarin is a lot more technologically sound, but still a big compromise.",2017-02-07 00:39:30,13585858
2932,"How is React running natively in React Native? The most basic things are reimplemented (quite badly) in JS, such as controller navigation (for the lack of a better term), buttons, gestures, animations. Most of them run on the JS stack, which is run on a JavaScriptCore VM instance, the same VM running when using a web view. How is any of that native? For me, &quot;native&quot; means using only OS-native components for navigation and views, gesture handling, animations, interactions, etc., and also, do not run in additional VMs. If you are willing to let go of the last requirement, NativeScript and Xamarin are a lot more sensible &quot;native&quot; choices than React Native.",2017-02-07 00:55:41,13585963
2933,"Feds?<p>Dude, I&#x27;ve been developing on the iOS platform since 2011 and Android not much later than that. I&#x27;ve developed in Xamarin, and RN has a MUCH better development toolchain and dev experience.<p>I really don&#x27;t understand the JS hate. I&#x27;m using typescript for RN development and I have had 0 problems so far. JS&#x2F;TS dev velocity is just so much better than ObjC&#x2F;Java. Swift is a huge step in the right direction.",2017-02-07 00:58:34,13585987
2934,"Do I really deserve the &quot;dude&quot; treatment?<p>Not sure how you developed with Xamarin, or how long ago, but it most definitely does not have worse toolchain development. Starting with a proper IDE, to compilation, to native-interop, to performance, to actual base library that exists.<p>As a side note, it seems <a href=""http:&#x2F;&#x2F;subvertapps.com"" rel=""nofollow"">http:&#x2F;&#x2F;subvertapps.com</a> is down.",2017-02-07 01:18:05,13586083
2935,"Thanks for pointing that out, forgot my old site was still in the profile.<p>What do you mean by feds? That&#x27;s still a very confusing statement. Switched off of Xamarin about 8 months ago and haven&#x27;t looked back. My organization had a ton of problems with Xamarin, without honestly that much gain at all. We still needed specific devs for Android and iOS. Sharing component and state code has been an absolute boon in productivity and speed in getting a world class suite of apps out. That plus a React stack for Web means I can help out on Web with no ramp up, and vice versa.",2017-02-07 03:17:45,13586693
2936,"Let me explain the &quot;fed&quot; thing. React Native&#x27;s number one &quot;feature&quot; is that web developers are able to join in development, or even start a &quot;native&quot; app where it would not have been possible before due to no native development teams. In the web dev world, &quot;fed&quot; &#x2F;front end developer&#x2F; is usually the term for the front end web developers - this is what I meant. (While iOS and Android is also front end, it seems &quot;fed&quot; is almost exclusively used for front end web developers.) So, normally, anyone that has extensive (or even some) experience with web development, would already be familiar with the ecosystem and concepts, while for many native developers, there is quite the cultural shock from a bad ecosystem, no base library support, very uncomfortable debug tools and a flamboyant community behavior (many ridiculously terrible click-bait Medium articles a la &quot;why I switched from [X] to [Y] and it is the best thing ever&quot; and &quot;How [Z] changed the way I write code and it will change the way software development is done&quot;).<p>I am not sure why you have had bad experience with Xamarin. To me, using .NET for shared business logic sounds like a real winner, but I will give you the fact that it helps with web dev. However, as a purely technological observation and no interest in management considerations, I can only argue against using RN at this stage.",2017-02-07 03:41:17,13586804
2937,"We are using Xamarin for our mobile apps and around 90% of .NET code is shared between both platforms. The platform specific code is basically just UI related, which makes sense given the different approaches to some UI mechanics in iOS vs Android. Also leveraging the huge .NET Ecosystem which in general has quite high quality and superb tools for development and debugging is a big plus.<p>We are also starting to use .NET Core for Backend Microservices which would allow more code sharing and Backend devs could in theory chime in on the mobile codebase quite easily.<p>With all the cross compiling&#x2F; web assembly stuff going on it will probably soon be possible to use a .NET lib in JS frontend code as well.<p>I agree that RN is a good alternative to this if your team is very JS dev heavy and while i did a lot of nodeJS and Angular in my life, i just loathe the JS ecosystem of today.",2017-02-07 07:11:57,13587712
2938,"That is my solution as well.<p>Although I am now eyeing on Xamarin, because I got tired of having to deal with JNI all the time.",2017-02-07 07:57:09,13587859
2939,"Sure, but I would use anything over Xamarin. So buggy, so many crashes, so little support, such slow apps.<p>And I have tried MVVMCross and forms.",2017-02-07 10:13:48,13588378
2940,"can some1 explain why i get downvoted for what i think was a constructive comment describing my personal experience ?
Is it just Xamarin&#x2F;MS hate ?",2017-02-07 12:27:26,13588882
2941,The problems are different. RN is not using a web view. It&#x27;s not comparable at all to Cordova&#x2F;Phonegap.<p>It&#x27;s really more like Xamarin with code running in a JS engine and with somewhat easier native code integration.,2017-02-07 15:19:23,13589871
2942,"My project (the weather sensor) is using React Native for the Mobile end. I would still like to work on a professional project to really see how well or bad RN is in an enterprise type project. Having used Titanium Appcelerator on a personal project, I find RN much better than Titanium. I assume it&#x27;s much better than Xamarin as well.<p>I think learning RN is a good bet because, it is coming from Facebook. I&#x27;m not sure if people remember, but FB on mobile was originally built using Webviews and had notoriously bad reviews because it was slow and laggy. It&#x27;s because of this lesson that they are in a good position to create a competent platform.<p>I also think as web developers, we should try to understand more of the tooling&#x2F;language in one of the mobile platforms of our choice.",2017-02-07 15:49:22,13590089
2943,"Different strokes, I think.<p>In our organization, it ended up being UI code that was the 90% number. The actual business logic code wasn&#x27;t extremely extensive in the same way that we had to know Android and iOS, and then basically transpile mentally what we know into C#. Though almost all of the core SDK methods are named the same, so it wasn&#x27;t too huge of a mental switch.<p>At this point with react-native, almost everything is shared. UI code, business logic, app state, etc. I think the node ecosystem opens our organization up to a lot more possibilities as well.<p>I&#x27;ve found that 3rd party react-native libraries are about the same quality as Xamarin Nuget packages. Some are good, most are meh.<p>Also, I upvoted you. Thanks for sharing your experiences.",2017-02-07 16:29:18,13590437
2944,"I think you&#x27;re conflating a BS web dev culture (which is amplified extensively through the internet and feedback-loopy sites like HN) and actual development technologies.<p>There&#x27;s always articles like you&#x27;re mentioning. I mean, go look at articles when Swift was first announced - or even iOS tutorials and forums ca. 2011.<p>Sharing business logic is a good thing. But it&#x27;s hardly the number one feature of react-native. We share almost everything, and have almost no problems doing so. It&#x27;s been a very good thing for our org, while Xamarin was the opposite.<p>It&#x27;s also worth noting that we ramped everyone up from being C# front-end to React&#x2F;React-Native front-end. So nobody really came in as cutting-edge web dev experts, but our developer velocity now is insane. I think React&#x2F;RN are good things.",2017-02-07 16:35:46,13590487
2945,"&gt; <i>without the app ecosystem to back them, it doesn&#x27;t matter that the phones are great</i><p>Is this true? It sounds true but I wonder if it actually is.<p>(I for one don&#x27;t care about apps -- at all. I want a &quot;smartphone&quot; because I want the ability to browse the web, and that&#x27;s it. I can&#x27;t be the only guy like this.)<p>And even if it were actually true that apps are important, if you&#x27;re MS, can&#x27;t you jump start the app ecosystem? Android being opensource, how hard would it be for MS to make a phone capable of running Android apps (and yet be a different phone with a different OS of course)? (Also, they have Xamarin).<p>&gt; <i>Microsoft is basically waiting...</i><p>Well, yes, they don&#x27;t seem to be trying very hard. This is quite strange.",2017-02-10 22:28:08,13619481
2946,"My team was assigned to test react native and native script.
We found react native is able to meet our requirements.
Building the same application in nativescript however, we stopped within 2 weeks.
A simple application with 2 pages takes 5s to load on android. The CLI tool is buggy and there is no debug information provided at all if something goes wrong.
There is no community support either so if anything goes wrong, praying is your best approach.
Also due to the super poor community support, a ton of UI requirements couldn&#x27;t be accomplished.<p>Overall I wouldn&#x27;t recommend nativescript. It is 2 years away from where react native is currently.<p>If you cannot accept reacts patent issue, I recommend you look at xamarin or Cordova. Avoid nativescript, it&#x27;s a complete waste of time at this moment",2017-02-11 12:00:08,13622244
2947,"I&#x27;ve seen so many projects like this over the years that claim that they&#x27;re the one that will allow for true cross platform app development, and they&#x27;ve developed a simple abstraction for doing so.<p>I&#x27;ve never seen any succeed at anything more than the most basic apps.<p>I put more stock in projects like Xamarin or MOE (and even they aren&#x27;t perfect).",2017-02-13 17:31:53,13637045
2948,"Awesome. IMHO to really &quot;take off&quot; fsharp is going to need a super smooth .net core story including .net core ionide support. It&#x27;s not a sure thing, but I can&#x27;t stress enough my belief in these two things:<p>* Seemless x-platform with dotnet core<p>* ionide working with dotnet core(and ideally on par with at least xamarin fsharp support)",2017-02-14 01:26:21,13640466
2949,"There&#x27;s so much going on that it&#x27;s almost making me hesistant about taking on the new strategies like .NET Core or where to go with user interfaces. For the long term, is it better to lock myself into UWP and Windows Store, or reap the benefits with Xamarin?<p>Much would be easier if UWP was open and DirectX accelerated on Windows and OpenGL accelerated on Linux or macOS, and uploading these apps on Windows _could_ be to Windows Store but wouldn&#x27;t be so architecturally tied to it. I know there are ways to dodge their store even with UWP apps, but it feels like you&#x27;re hacking their intented model and on thin ice for whatever will come or change in the future.<p>I never really liked platforms where application development is tied to distribution methods, especially not when .NET has it in its history to not be that (other than maybe a very slight nudge towards ClickOnce). I felt like a part of the .NET philosophy died with UWP.<p>I applaud Microsoft for where they have come and their latest developments are intriguing but I see many quite major annoyances remaining. I work almost full time with .NET though, simply because that&#x27;s where my money is for now. But I&#x27;m not touching UWP either at work or at home. It&#x27;s still also receiving a mixed response at best by developers, from what I&#x27;ve heard. It&#x27;s like... &quot;OK, so here&#x27;s this limited UWP app compared to WPF on desktop, because we have to build it on an API with Windows Phone in mind which no one uses and then upload it to this single store out of our control, with the excellent company of scam apps tarnishing our trademark&quot;. I feel like this is Microsoft&#x27;s unfortunate reality of where things stand which they should move from. &quot;How do we best fix these concerns?&quot;",2017-02-14 09:13:05,13642279
2950,"Drupal, wordpress, docker, xamarin, unity. and mono",2017-02-14 11:03:22,13642667
2951,"There&#x27;s no money in devtools for general desktop app development. Embarcadero knows that the only way to grow the delphi userbase is to make it free, so they&#x27;re instead trying to milk it for all it&#x27;s worth on the way down.<p>I had a bit of hope for delphi with mobile app support, but the pricing really killed it now that microsoft offers xamarin for free.<p>Plus, object pascal is too weird for js coders. C-style syntax is a must, even though object pascal is in many ways a better language.",2017-02-15 16:45:44,13653314
2952,"Is it a trap?<p>So a team I&#x27;m advising is deeply invested in Xamarin. They&#x27;d ultimately like the dream of a single code-base for both Android and iPhone. However, Xamarin is organised such that the device specific libraries quickly out-strip the functionality of the device agnostic library, so a large portion of the code is now device specific.<p>A spot of research reveals that the popular advise is move from MVC to MVVM, and attempt to isolate the device specific code in views thereby minimising device specifics.<p>My question is does it actually work given realistic time pressures and business priorities, or is it a trap?",2017-02-16 12:29:47,13659370
2953,"Well, I&#x27;ve been using React Native for mobile development for 3 months and everything is working well, the platform specific code can be easily written with a simple if statement or, of course, the same way as you do on Xamarin, it&#x27;s up to you<p>Even being javascript in the end, you still can access all the native stuff with ReactBridge without any headache in the case you have some specific functionality that you might and haven&#x27;t found in the lots of available packages out there :)",2017-02-16 17:36:41,13661847
2954,"Yes, in some places, but does it matter? Pick the best tool for the job. I use Unity(hobby), Xamarin  and ASP.NET but also Java, PHP, Clojure, Python, Haskell, Purescript, Q, Lua, C&#x2F;C++, assembly and others in the same quantity. Depends on the task.<p>.NET is easy to defend when you need to integrate with traditional enterprises; Java and&#x2F;or .NET. We work with banks a lot and &#x27;modern&#x27; sounding tech is not all too popular with most IT deps &#x27;in the basement&#x27;. That would be fine if it would stay put on our systems but as they need to host internally and work with the source code, Java or .NET are the tools for the job. C# and F# are great languages anyway and now open source. Note that F# or Clojure.NET etc are also not always options as big corps usually have (old style) C# and&#x2F;or Java guys.<p>Guess depends on the location and the market; I would suggest .NET for a b2c social media startup for instance even though it would work well. Everything works well but then I would guess you might have issues finding your next gig in the same horizontal.",2017-02-18 23:45:44,13677319
2955,"What is it with all the language picking and language wars? Maybe I just grew up in a good learning environment because I had to, computers were simply not fast and had very little memory; on my first home computer it only had built-in Basic so I started with that, but it was slow, so went to assembly but that was annoying for anything but games so went to Pascal and later C but that was annoying for business software, so I went to DBase&#x2F;Clipper etc etc. I would say that &#x27;a good programmer&#x27; is not that bothered by switching languages when it is the right thing to do for the job at hand. Whatever language that is, easy or hard is not very interesting in my opinion and experience.<p>Like I said in another thread; I picked C# for a project because the software needs to run in banks and deal with bank IT departments. That&#x27;s Java&#x2F;.NET and, because we needed apps as well and we were already proficient in Xamarin, we chose C#.NET. Not because I like the language (I do, especially for later versions) or think it is hard or easy, but because it fitted.<p>We wrote a prototype in Python before that and the first bank we worked with had the CTO looking very puzzled and then, after some research on their side, said they cannot have that in their infrastructure; Windows servers with Java&#x2F;.NET they had. And the IT staff to manage that, not other &#x27;esoteric&#x27; stuff. However, already before that, we started rewriting that prototype to C#, this was just an extra sign we did the right thing.<p>I do a lot of coding in PHP ; not because I particularly like it, but my clients ask for it, I have 100s of 1000s of lines of legacy code in it going back the end 90s. For my embedded work I would not (and cannot) use either C#&#x2F;PHP so I would not try; assembly or C&#x2F;C++ (or a Java subset).<p>Programming languages are tools; they are fun to play around with, but when doing real work (which includes side project), just pick something you can get shit done with the fastest&#x2F;best (some balance between those) (that can be Haskell, Coq or Prolog as well; they do not have to be &#x27;traditional&#x27; languages).",2017-02-19 04:03:45,13678133
2956,"As a (former) backend contractor, I decided to switch to mobile app development with aim to create some passive income.<p>As a solo developer who doesn&#x27;t wish to expand and employ people (except odd help with graphics, etc) I want to focus on products, which can be delivered by one person and to create some income for myself.<p>From monetary point of view, I wonder whether it&#x27;s better to focus on utility apps or games.<p>At the moment I&#x27;m playing with Unity and published few simple games. So far it didn&#x27;t bring enough income, but then I accept my games aren&#x27;t great and need to improve before any of my games will get some attention.<p>Nonetheless, I was thinking about switching to Xamarin and try to develop some utilities apps to see whether there&#x27;s a better market response.<p>I can be equally passionate about games or tools development, so I&#x27;m not a type of person &quot;I can do only games and it&#x27;s all my life&quot;, so profit here is deciding factor where to go.<p>Please share your experiences.",2017-02-19 14:01:14,13679716
2957,"The best way to build native iOS applications is in Visual Studio with Xamarin IMHO.<p>It pulls in the UI designer from XCode, and you get all of the advantages of Visual Studio which is hands-down just a better IDE than XCode.",2017-02-19 18:46:54,13681180
2958,"I&#x27;ve been using Xcode for many, many years now. In the past (~8+ years ago) I&#x27;ve used Visual Studio.<p>From my perspective Xcode is a really nice IDE. I prefer the lean UI compared to Visual Studio and Xamarin. The only thing that annoys me is that since Swift the syntax colouring and autocompletion breaks multiple times a day. This is a slight annoyance for me, but otherwise I personally think it&#x27;s a decent IDE.<p>I don&#x27;t experience the crashes like you do. And I&#x27;ve never really used much refactoring tools in the past, so I guess I don&#x27;t know what I am missing out on.<p>But you might want to consider AppCode from Jetbrains. Apparently it supports both Objective-C and Swift and it&#x27;s refactoring support -at least- should be good.",2017-02-19 22:07:58,13682340
2959,"How does one define `native`? To me, native is using the platform API&#x27;s exactly - 1:1 - with zero abstractions. With Xamarin you do exactly that, in either csharp or fsharp. When using Xamarin a UIViewcontroller still is a UIViewController, you&#x27;ll be directly interacting&#x2F;pinvoking the underlying APIs that you already know and potentially hate :p (cough Android).<p>See <a href=""http:&#x2F;&#x2F;continuous.codes&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;continuous.codes&#x2F;</a> for an example of what can be done with F# and Xamarin.",2017-02-21 01:35:00,13692524
2960,"That is one way to define native. Another is to use the platform native source code and provide access to that. E.g. on Android Xamarin includes an overhead due to constantly passing thru the slow JNI bridge when it needs to communicate with the native UI widgets. It also includes a relatively large overhead because of standard C# libraries that need to be included on iOS&#x2F;Android.<p>OTOH Codename One ( <a href=""https:&#x2F;&#x2F;www.codenameone.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.codenameone.com&#x2F;</a> ) has a very different interpretation of &quot;native&quot;. They use their own widget toolkit like QT which makes them &quot;less native&quot; in that regard. But they are native to Android (being Java based) and translate directly to C&#x2F;Objective-C which means you can literally write OS native code and use native widgets within the hierarchy.<p>I think native is a worthless word in that regard as it doesn&#x27;t properly convey meaning in these sort of complex situations. Once PhoneGap started billing itself as &quot;native&quot; this all went out of the window...",2017-02-21 04:57:18,13693393
2961,"Would also seem that Travis doesn&#x27;t have Xamarin support, or so it appears.",2017-02-22 18:38:48,13707907
2962,"Good question!<p>The main differentiator might be that our platform is more open compared to Buddybuild&#x27;s enclosed ecosystem approach. That means we allow much more customizability while having the same, fast initial project setup. Bitrise grows with the community, both by helping each other and developing extensions, like new steps&#x2F;integrations and other tools.<p>We feel that Buddybuild is great for smaller projects, but Bitrise can provide more for more complex apps with more rigorous development cycles and needs, which is the feedback we get back from these type of companies as well.<p>We also have Xamarin support, which may or may not be interesting for you.",2017-02-22 23:15:21,13710181
2963,"Check out Xamarin Workbooks* for the C# equivalent.<p>(*): <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;workbooks&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;workbook...</a>",2017-02-23 04:56:53,13711765
2964,"&gt; I haven&#x27;t seen anyone say that they prefer Android Studio over XCode or Visusl Studio.<p>I&#x27;ll say it, I <i>vastly</i> prefer Android Studio over XCode. And I&#x27;m an Android Developer who uses Android Studio every single day.<p>I do like Visual Studio a lot as well, it has been a nice experience for all of the times I&#x27;ve used it. But I prefer to develop in the languages and environments supported by IntelliJ + Android Studio (Java, Android, Ruby) over Xamarin-based .NET work available in Visual Studio.",2017-02-23 18:35:15,13716416
2965,"I wouldn&#x27;t lay the blame solely on the fact that Java is a compiled language. The loop is way faster both in iOS with their simulator and even with C# on Windows Phone&#x2F;UWP, even though all those platforms use compiled languages as well. Like everything else with Android, the build process is a bit of a convoluted rube goldberg machine and compilation is just one of many steps that eat time.<p>Also, check out Xamarin Workbooks for a good demo of how developing with a compiled language can actually be interactive.",2017-02-23 19:36:31,13716981
2966,"There&#x27;s also Kivy (<a href=""http:&#x2F;&#x2F;kivy.org"" rel=""nofollow"">http:&#x2F;&#x2F;kivy.org</a>). Not with a sizeable sponsor like React or Xamarin, but it&#x27;s Python :D",2017-02-23 22:01:53,13718228
2967,"&gt; I struggle to see where you would prefer Qt for frontend code if you don&#x27;t need a native app.<p>Specially on mobile. their decision to go with QML for mobile OS support, requiring devs to replicate native widgets, means it is a bigger effort to create multiple QML frontends, than it is to follow a MVVM architecture with as much code as possible in C++, while using native support directly, even if in different languages.<p>Also for those targeting mobile OSes, Xamarin has a much support for the respective OS APIs than Qt, that usually requires the extra effort of manually wrapping many of them.<p>As someone that prefers working on native apps to web ones, I kind don&#x27;t understand their current roadmap, it appears that they are trying to spread between C++ and JavaScript devs in an attempt not to lose mind share.",2017-02-27 16:37:19,13745423
2968,"I tried Qt 5.4 and wasn&#x27;t happy with the result, ended up settling on a mix of Java, C++&#x2F;CX and C++ for my mobile side projects.<p>From your link it seems that by Qt 6, they might eventually get something that I already have with such setup today.<p>Also I am planning to switch to Xamarin in future side projects.",2017-02-27 18:46:18,13746669
2969,"I recently got a Surface Pro after two cycles (~7 years) of MBP 15 inchers. I wanted something lightweight I could draw on, and did think about the iPad Pro with Pencil for a while, but in the end having the flexibility to install any app won out (currently I&#x27;m using Aseprite and Manga Studio).<p>I&#x27;ve been using both Mac and Windows OSes since the last millennium, so I&#x27;m not precious about either one. But I do personally prefer explorer over finder in most aspects.<p>Visual Studio is a beast, and it&#x27;s absolutely ridiculous that MS now give away so many features for free in the community version.<p>I had no expectations for the type cover keyboard, but it turns out it is fantastically comfortable and productive.<p>I have no plans to get a new Mac, but my 2014 MBP is still proving useful to do remote iOS builds from Xamarin. I&#x27;ll probably keep it around just for that but if I never have to open Xcode again it will be too soon.",2017-02-28 05:08:31,13751391
2970,Whoever wrote this doesn&#x27;t seem to have much experience with the .NET ecosystem.<p>Referring to F Sharp as &quot;#F&quot;; saying Visual Studio is in the &quot;growth&quot; phase; no mention of IIS under web server or SQL Server under database or Xamarin under any of the relevant mobile sections.<p>Overall I like the visualizations though,2017-03-01 14:46:56,13763998
2971,"There&#x27;s Urho3D (<a href=""https:&#x2F;&#x2F;urho3d.github.io"" rel=""nofollow"">https:&#x2F;&#x2F;urho3d.github.io</a>) which seems to be mostly a clone of OGRE. I don&#x27;t know if any of the same people work on it.<p>Xamarin have a C# wrapper for it, UrhoSharp (<a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;urho&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;urho&#x2F;</a>). I&#x27;m working with it now and I like it a lot better than Unity so far; but I strongly prefer to work in code rather than doing everything in Unity&#x27;s IDE.",2017-03-01 16:27:56,13765075
2972,"SEEKING WORK - Remote, based in Spain until summer and then back to SF<p>I&#x27;m Q, a mobile developer with experience at SpaceX, working on the Enterprise Information System team (i.e. internal tooling), and Uber, working on the iOS Driver Growth team.<p>Technologies I&#x27;ve worked with include: iOS, Android, Node.js .NET, Xamarin, Firebase, AWS.<p>Feel free to contact me regardless of your product&#x27;s stage! (email works best)<p>LinkedIn:
<a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;qkalantary&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;qkalantary&#x2F;</a><p>Email: 
qkalantary@gmail.com",2017-03-01 16:52:46,13765436
2973,"SEEKING WORK - Remote (Netherlands)<p>I&#x27;m an expert in all things .NET &#x2F; C#. I can build web applications with ASP.NET (Core&#x2F;MVC), Azure, mobile apps with Xamarin, Windows Store apps, WPF, distributed systems, etc.<p>Contact me at leoncullens at gmail.",2017-03-01 17:04:25,13765594
2974,"Arthrex Inc. | Developer &amp; DevOps Engineer | Naples, FL | Full time, Remote, Onsite<p>Software Developer
----------------------------
We are looking for developers with either web or mobile experience to join our growing team in southwest Florida. Arthrex is a global medical device company and a leader in new product development and medical education in orthopaedics. As the software development team, we create innovative products to help support the company in education and research opportunities for our customers. Some projects that need immediate assistance include:<p>- Our main company website that serves as an education portal for our customers with tools and resources on our products
- A research registry that is being used by surgeons to track their patient&#x27;s progress both pre and post surgery
- Patient engagement software facilitating communication between the surgeon and the patient
- Several innovative mobile applications that further educate surgeons on best practices and new techniques<p>Some of the technologies&#x2F;patterns we work with:
- Golang, Ruby, Objective-C, Swift, Java, Xamarin&#x2F;C#
- Amazon Web Services
- Postgres
- Microservices<p>DevOps Engineer
----------------------------
We are looking for an experienced DevOps engineer to join our team and take ownership over of multiple production deployments and supporting services across our deployment
- Experience with AWS services
- Experience with Docker and orchestration of containers in a production environment
- Hands on experience developing, deploying, and maintaining Rails, Go or similar technologies required. We expect DevOps engineers to work closely with the development team, and pitch in and help where needed.
- Experience with running microservices, and architecture around microservices is a plus<p>Please email dbeard at arthrex.com if you have any questions or interest!
Arthrex was voted one for the top 100 places to work in 2016! Read more here: <a href=""http:&#x2F;&#x2F;fortune.com&#x2F;best-companies&#x2F;arthrex-62&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;fortune.com&#x2F;best-companies&#x2F;arthrex-62&#x2F;</a>",2017-03-01 17:34:10,13766009
2975,"F# is high on my list of things to dive into when I get time.<p>I&#x27;ve also got <i>Seven Languages in Seven Weeks</i> in my queue of books to go through.<p>Do some DirectX or OpenGL graphics work.<p>Play with mobile development, either native or Xamarin.",2017-03-02 04:14:51,13771352
2976,"&quot;Play with mobile development, either native or Xamarin.&quot;<p>Another very interesting development in the mobile space is Exponent, based on React Native...",2017-03-02 07:50:32,13772385
2977,"It goes to show that several factors influence the performance, memory usage, and real hardware requirements of a platform. I&#x27;ll gladly admit that my original, simplistic assumptions were wrong.<p>ObjC, as typically written (i.e. more object-oriented than C), is also pointer and allocation heavy. so that might make compaction more of a benefit for Android. I wonder what proportion of memory in a typical Android application process is on the C heap rather than the garbage-collected, compacted heap. For example, where does image data usually end up?<p>To throw in another complication, are there any significant problems that come with layering a garbage-collected runtime on top of a high-level framework based on C heap allocation and reference counting? That&#x27;s what Xamarin, React Native, and AOT Java runtimes (e.g. Multi OS Engine) do on iOS, and what .NET (even .NET Native) does on UWP. Or how about two garbage-collected runtimes in one process, e.g. Xamarin and React Native on Android?",2017-03-02 22:49:51,13779055
2978,There are thousands of Apple and Android C# apps (see Xamarin).,2017-03-05 21:12:57,13798681
2979,"This looks like a language designed for use with a commercial product &#x2F; development environment (<a href=""http:&#x2F;&#x2F;creolabs.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;creolabs.com&#x2F;</a>).<p>I&#x27;m curious how well that works - I know that <i>used</i> to be fairly common in the &#x27;80s and &#x27;90s, but it feels like that hasn&#x27;t been happening much of late. The only very similar examples I can think of are Swift and Xamarin; Swift had the advantage of a large customer base (everyone writing iOS apps), and Xamarin was based on an existing, well-established language (C#). And all the older big examples that come to mind, VB, Delphi, Objective-C, etc., were variants of an existing language (Basic, Pascal, C, respectively), not a brand new language.<p>Creo folks, are you finding that customers &#x2F; potential customers are excited about picking up the new language? I&#x27;d love to live in a world where there&#x27;s more work on programming languages (clearly, none of our existing languages are optimal) but I&#x27;m not super optimistic.",2017-03-06 16:30:23,13803719
2980,"Generics just bake a little bit more into the runtime; there&#x27;s already a lot of the type system there. And it increases interop potential. I don&#x27;t understand your point about Scala - they could always choose to use type erasure instead of any runtime-provided generics. F# implemented generics with erasure on the 1.x CLR, and used the runtime when on CLR 2.<p>And this is the first time I&#x27;ve heard that the JVM is easier to target for non-Java languages. .NET has had multi-language support an official design goal, the JVM is just for Java. Even simple stuff like pointers, so you can do ref&#x2F;out parameters. Or unverified instructions. The CLR is simply more all-around capable.<p>I am pretty sure the CLR always supported variance, it was just unused up until C# 4.0. AFAIK, there haven&#x27;t been any changes to the runtime bytecode since CLR 2.0, when generics were added.<p>The performance benefits of specialization are pretty nifty. The Mono guys ported Android to C# and got quite the performance improvement on some code: <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;</a> - so that&#x27;s existing code that got a perf benefit &quot;for free&quot; due to not using type erasure.<p>Edit: A quick skim of the specialization proposal for Java[1] makes no mention of other languages. Just the general pain of integrating it in a compatible way.<p>1: <a href=""http:&#x2F;&#x2F;cr.openjdk.java.net&#x2F;~briangoetz&#x2F;valhalla&#x2F;specialization.html"" rel=""nofollow"">http:&#x2F;&#x2F;cr.openjdk.java.net&#x2F;~briangoetz&#x2F;valhalla&#x2F;specializati...</a>",2017-03-06 17:57:51,13804525
2981,"I think you could add a UI project using Xamarin without much trouble and make the whole thing cross-platform with Linux, Mac and potentially Android&#x2F;iOS support. From what I&#x27;ve seen the WPF-specific code is restricted to the AlephNote.App project in the WPF namespace. It should not be difficult to reuse the non-WPF code in a separate UI project.<p>I&#x27;ve been dying for an open-source replacement for Evernote and I&#x27;ve been looking for an opportunity to learn Xamarin so I&#x27;m willing to contribute this if you&#x27;re interested.",2017-03-06 20:11:22,13805661
2982,That sounds - actually - pretty interesting.<p>But isn&#x27;t Xamarin.Forms only for mobile platforms? I can&#x27;t find any information about building desktop apps with it (but also my only experience with Xamarin is currently MonoGame).,2017-03-06 21:34:09,13806262
2983,"Yes you&#x27;re right, Xamarin Forms seems to be targeted at Windows&#x2F;iOS&#x2F;Android portability with a common XAML codebase. For cross-platform desktop apps the best choice seems to be something like [Gtk#](<a href=""http:&#x2F;&#x2F;www.mono-project.com&#x2F;docs&#x2F;gui&#x2F;gtksharp&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;docs&#x2F;gui&#x2F;gtksharp&#x2F;</a>] But I think the same principles would apply: the UI projects would utilize the non-platform specific code in AlephNote.App and the plugin framework etc. It would probably be necessary to have a separate Mobile UI project anyway, but it still would reuse a lot of the existing C# code.<p>I&#x27;m totally a beginner with Xamarin and Gtk# but I&#x27;d be willing to give this a shot. I really like how multiple backends are supported via plugins in AlephNote.",2017-03-06 21:44:43,13806328
2984,"I am on bazel learning curve and was searching to integrate Bazel build system with visual studio (xamarin) project, apparently Bazel support for windows is still too nascent. I home something comes up on this lines.",2017-03-07 16:05:01,13811436
2985,"It&#x27;s not GA yet (only Visual Studio 2017 for Windows is GA today) but we have shipped an update so Visual Studio for Mac Preview 4 is now available.<p>Details: <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;better-apps-visual-studio-2017&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;better-apps-visual-studio-2017&#x2F;</a>",2017-03-07 16:24:35,13811636
2986,"So this is full, 100% Visual Studio for Mac (soonish), or is it Xamarin Studio rebranded?",2017-03-07 16:28:35,13811675
2987,"Visual Studio for Mac will be our Mac IDE going forward and will grow in features, sure its past is Xamarin Studio but its future will have A LOT of investment so its worth checking out in Preview 4.",2017-03-07 16:30:34,13811694
2988,"&gt; So this is full, 100% Visual Studio for Mac (soonish), or is it Xamarin Studio rebranded?<p>No isn&#x27;t an answer to that question.<p>&gt; Visual Studio for Mac will be our Mac IDE going forward and will grow in features, sure its past is Xamarin Studio but its future will have A LOT of investment so its worth checking out in Preview 4.<p>Is a good answer to that question.",2017-03-07 17:03:43,13812122
2989,"They&#x27;d need to port at least COM, .NET, and XAML&#x2F;WPF to Mac to do that, so I&#x27;d say that is never going to happen. Also, you&#x27;d have a very un-mac like experience.<p>OTOH, Microsoft is the one company I&#x27;d trust with refactoring a gordian knot if neccessary. Look what they&#x27;re doing to the console subsystem, the windows system DLLs, the ~25 year old C compiler, and so on (granted, some are different teams, but still...).<p>Maybe they&#x27;ll be able to salvage some cool parts (the extention API, Intellisense, ...) and make them modular or put them into VS code or Xamarin Studio. I don&#x27;t know, they probably don&#x27;t have a complete plan themselves :-).",2017-03-07 17:45:49,13812675
2990,I had the same 40.8 GB surprise. ~34 GB was Xamarin.,2017-03-07 19:08:03,13813556
2991,I was under the impression that mobile Qt and Xamarin were practically native apps with a thin Java display layer.,2017-03-07 20:06:38,13814219
2992,"Generally, it seems that the success and failure of a language depends on libraries, and most android libraries are written around Java rather than native.<p>But if you want, you can write libraries which will allow you to write Android Apps in C, C++, C#, Rust or Go (as people have already done, see Qt and Xamarin for example). The thing is that it&#x27;s much easier to write a simple CRUD app in Java than in C++.",2017-03-07 20:11:46,13814280
2993,"Nope. Two remarkably different approaches.<p>QT has its own widget system on top of low level rendering.<p>Xamarin wraps native OS widget API&#x27;s so it&#x27;s not write once run anywhere but more of a porting solution.<p>See this: <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;pulse&#x2F;how-pick-right-cross-platform-solution-shai-almog"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;pulse&#x2F;how-pick-right-cross-platform...</a>",2017-03-07 20:14:15,13814315
2994,"This may not be <i>quite</i> the direct answer you expect, but yes there are multiple ways to create cross-platform UIs with F#:<p>1. Xamarin[0].  It supports F# for everything aside from UWP targets.<p>2. WinForms on Mono[1].<p>3. FABLE[2] to compile your F# into JavaScript.  It&#x27;s a <i>very</i> good tool and it produces really nice JavaScript as well.  From there, you can run the code on the web, Electron, or React Native[3].<p>[0]: <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;fsharp&#x2F;fsharp_support_overview&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;fsharp&#x2F;f...</a><p>[1]: <a href=""http:&#x2F;&#x2F;www.mono-project.com&#x2F;docs&#x2F;gui&#x2F;winforms&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;docs&#x2F;gui&#x2F;winforms&#x2F;</a><p>[2]: <a href=""http:&#x2F;&#x2F;fable.io&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;fable.io&#x2F;</a><p>[3]: <a href=""https:&#x2F;&#x2F;github.com&#x2F;fable-compiler&#x2F;fable-react"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fable-compiler&#x2F;fable-react</a>",2017-03-07 22:22:25,13815646
2995,I am struggling to understand why xamarin supports F# but not VB...,2017-03-07 22:28:34,13815712
2996,"But, to repeat another comment I made below, are you satisfied with this solution? Would you expect to have to go to a package manager to use tuples in python? The power of .net, and of visual basic in particular was its simplicity. What I am seing is Microsoft going into the opposite direction, with an ever more fractured ecosystem, .net, .net core, .net portable and .net standard running in parallel. Asp.net and asp.net core running in parallel, winform, wpf, winRT apps, uwapps, xamarin, etc running in parallel. And now when a new feature is introduced in the syntax it requires to add some external dependencies, which can be simplified by changing some default deep into the IDE...<p>My opinion is that simplicity matters a lot to the success of a platform. And by the way nothing in the error that you display when using tuples in VS2017 suggests a nuget package or an assembly name that can be searched.",2017-03-08 00:28:56,13816694
2997,Is there any news on when .NET Native&#x27;s stupid AOT compiler (i.e. UWP store apps) will support F#? It is becoming scandalous now. We have a circa 800k LOC F# Xamarin codebase working on iOS and Android but cannot spin up the UWP variant for this reason.,2017-03-08 08:43:46,13818919
2998,"Through P&#x2F;Invoke, sure. But WinForms, WPF, and UWP (and Silverlight, and XNA) are not part of .NET Core by-design. Though I assume someone will port Xamarin over, if they haven&#x27;t done already.<p>I&#x27;d love to see SDL support so OpenRA can have another build target.",2017-03-08 08:51:49,13818948
2999,"There&#x27;s not much to prevent that scenario from happening. There&#x27;s now a &quot;why&quot; section in one of the app&#x27;s descriptors where you need to describe what you&#x27;re doing with the permission. So it&#x27;s not enough to say &quot;I want access to the photos&quot;. It&#x27;s now &quot;I want access to the photos so that I can put them on the screen and let you draw funny pictures on them.&quot;<p>But there&#x27;s little to prevent you from lying about it, and there are so many iOS platform technologies out there now (native, PhoneGap, React Native, AIR, Xamarin) that there&#x27;s probably no way for Apple to see what you&#x27;re doing in an automated way.",2017-03-08 13:25:24,13820047
3000,"WinForms is, unfortunately (in my opinion), a hack on top of Win32&#x2F;hWnds, the fact that every Control wraps a top-level hWnd window is a source of performance issues. It needs a fundamental re-thinking... but Xamarin Forms is a better concept, it just needs a Win32 target.",2017-03-08 18:25:52,13822335
3001,I thought Xamarin Forms was for phones?,2017-03-08 19:09:39,13822716
3002,"Not quite what you are asking, but if it&#x27;s written in React-Native or Xamarin, then it can be pretty close to the same codebase from Android to Windows Phone (or I guess they like it called Windows 10 Mobile)",2017-03-12 02:21:03,13848544
3003,"Imagine you want to find a job around the world and you need to learn the stack that is more or less in demand everywhere.<p>Would you choose Java? ( runs good almost everywhere (linux,windows, others) and can be used for Android development.
Would you choose C# ? ( with .net core while being immature also can run anywhere + xamarin for mobile development. 
Would you choose JS ? ( increasingly becoming also adopted by larger companies due to its flexibility and large pool of developers.+ react native and only viable option for frontend)<p>All of them require significant investment and i would say have similar learning curve. 
I have seen java being occasionally used in MS &quot;only&quot; shops but i have rarely seen C# being used at small &#x2F; mid sized companies running on Linx and developing with java.<p>We all can agree that learning algorithms and concepts is way better than just stick to a single language.
But the objective is to stick to a widely used platform and get a job almost anywhere.",2017-03-12 12:51:48,13850443
3004,"Always interesting to see how cross platform is evolving (this and also Xamarin update recently), wonder how the Google and Apple regard this. 
Anyway, I just tried out the Expo App on iOS and noticed that the back swipe animation does not seem to be native in the examples. Is there a reason for that? (that&#x27;s something I always try out of I want to check if an app is native).",2017-03-13 19:40:00,13861568
3005,"To my knowledge, making cross-platform performant listviews is quite the challenge. I remember listening to a lot of xamarin engineers talk about the fickle performance gotchas with using them.<p>The platforms have different ways of exposing various attributes about list and list-items. The API designers then must focus on the trade-off of user friendliness vs control and performance. Thus far it&#x27;s been about user friendliness, but now they are wading in the waters of control&#x2F;performance.<p>That&#x27;s the reason why there are multiple list views being added, instead of just a single one.",2017-03-13 20:49:29,13862201
3006,"Not JS&#x2F;webdev friendly, but things like Xamarin or Kivy (or Qt or whatever) come to mind for cross-platform native-esque user interface building.",2017-03-13 22:18:52,13863021
3007,Xamarin with Xamarin Forms Xaml,2017-03-13 23:04:31,13863384
3008,"All of those comparisons are missing the point.<p>RN is not perfect, but it&#x27;s leagues ahead of Cordova, Xamarin, and etc in a combination of performance and easiness of UI development.",2017-03-14 01:24:24,13864172
3009,How is this more productive than Cordova variants? It seems that the re-use of a web app to mobile app is not great. And that I can use designers that code in Cordova alternative. Or even xamarin.<p>Asking for a friend.,2017-03-14 10:22:36,13866332
3010,"Now that Xamarin is open source, a reasonably stable Java bytecode -&gt; Xamarin-compatible CIL cross-compiler could be pretty useful. It would also solve the problem of varying VM quality between Android versions (especially around the Dalvik to ART transition).",2017-03-15 09:47:04,13874963
3011,"I don&#x27;t feel the pain of lack of modern Java support that much, because I spend most of the time on NDK, but there the tooling support also leaves a lot to be desired, like partial STL support or the whole story regarding build infrastructure.<p>Xamarin looks a nice proposal out of this mess and as a JVM&#x2F;.NET&#x2F;C++ consultant, with focus on native apps, I have been looking into it as possible alternative.",2017-03-15 10:13:31,13875063
3012,"&gt; You&#x27;ve just made my day - discovering someone on HN actually used my app is a nice achievement, even if it didn&#x27;t take =)<p>Glad to read that
:)<p>&gt; The end goal...<p>End goal sounds AWESOME.<p>Microsoft&#x27;s decision to provide cut down versions of their office suite on mobile would have me a lot more interested in Poe.<p>Given Microsoft&#x27;s purchase of Xamarin it might be a lot easier to port to Android and iOS.",2017-03-15 12:34:40,13875631
3013,"Thanks for this detailed answer.<p>But is WASM set in stone already? I would have thought there would be a strong interest in seeing higher level languages made available through the browser. Are there fundamental reasons why WASM would never implement the features required to run a CLR (not necessarily a file system but for instance the threading model you mentioned).<p>The case for using c#&#x2F;vb&#x2F;java in WASM is I think strong.<p>First this would allow developers to write truly cross platform apps, using a lot less hacks than a solution like Xamarin.<p>The UI could be HTML but I would think that a CLR would ship with a version of WPF (think silverlight).<p>In a intranet&#x2F;corporate environment, it would make the deployment of internal applications trivial.<p>You could have webapps with the same code base that run on mobile and desktop. The download time is not necessarily relevant. The code would be stored on the machine like any other webapp.<p>I think there is a reason why c#, python or java are so widely used over c++ outside of performance critical code. It is a lot easier, faster and safer to develop. I don&#x27;t think c++ is a reasonable alternative to c# or java. As for rust, I don&#x27;t have an opinion on its merit as I am not familiar enough with it, but its developer base is a small fraction of each of the vb&#x2F;c#&#x2F;java developer base.",2017-03-16 07:34:26,13883213
3014,"Not to mention it&#x27;s something that when making custom components etc., you will be able to do if so desired. A good component structure and composition enables you to handle Android versus iOS, but still have a large amount of sharing available.<p>I consider this similar to the Xamarin structure of Apps where you have Android and iOS projects, and then a shared common library.",2017-03-23 04:18:51,13937344
3015,"C? C++? QT? Java? Any language with GTK hooks? Xamarin? Juce framework? Delphi??<p>You say 4K and 480p screens like that&#x27;s hard. Design once, scale forever?",2017-03-23 17:10:40,13941730
3016,"C is unsafe and is too low level.<p>C++ is possibly the only language with more bad parts than Javascript :)<p>Java ok, but how would you run it on iOS? The last viable option for that (RoboVM) was taken behind the shed and shot by Xamarin&#x2F;Microsoft.<p>GTK doesn&#x27;t run on mobile and it&#x27;s barely supported on Windows and MacOS.<p>Xamarin is ok, but it used to be closed source and cost $1000 per year for any serious project.<p>I don&#x27;t know Juce, but from what I can see it&#x27;s a C++ framework, so see C++ :)<p>Delphi? Zombies don&#x27;t count ;)<p>The most viable contenders for modern cross platform software were marred by bad corporate ownership: Java, C#. They&#x27;ve kind of gotten back on track recently but I&#x27;m not sure they can catch up to the web-train.",2017-03-23 17:20:15,13941822
3017,Depends on if Xamarin emerges from the ashes or if they disappear along with the rest of Microsoft.,2017-03-24 23:02:16,13952935
3018,"I&#x27;ve been struggling with finding a good cross-platform C#&#x2F;.NET framework that can tie into Visual Studio.<p>So far, you&#x27;re making your entire UI in code (Like WxWidgets), having to use an app like XamarinStudio to even get fully packaged OSX apps, along with requiring an external framework such as <a href=""https:&#x2F;&#x2F;github.com&#x2F;picoe&#x2F;Eto"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;picoe&#x2F;Eto</a>, (its official package is broken in Xamarin though)<p>I understand that win forms may not be great when you start to build a bigger application with a lot more presentation and data, but it makes building simple apps easy and convenient. We need something like that cross-platform.<p>If anyone knows more about re-creating windows form apps cross-platform in a nice manner, I&#x27;d appreciate the info.",2017-03-25 02:51:04,13953847
3019,"Nobody mentioned Xamarin?
You can target Windows, macOS, Linux, iOS, Android.<p><a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;platform"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;platform</a>",2017-03-25 18:53:09,13956991
3020,"As an employee, I can tell you that the company culture has completely changed.  I came in to MS a few months before Windows 7 released.  I was just about to quit, when Nadella took over.  I decided to wait it out and see.  I am glad I did.<p>EEE died a long time ago.  It was pretty much gone under Balmer, although we still didn&#x27;t really play nice with others.  Nadella on the other hand came in, started mending fences with other companies that we had previously ignored, or even had some hostility towards.  Let me contrast some differences.<p>Balmer -&gt; Gave all employees a Windows Phone and got pissed if he saw an employee with a competitors phone.  I even saw him pretend he was stomping on an iphone at a Company Meeting.
Nadella -&gt; Put out a video from himself stating &quot;Unless you work on certain parts of the Windows team, use whatever device want.<p>Balmer -&gt; Had Office for IOS and Android mostly feature complete and wouldn&#x27;t release it.
Nadella -&gt; Released it quickly after becoming CEO.<p>You are insane if you think EEE is still going on.  That was over like 10.  I&#x27;m going to skip Balmer as I am sure you can imagine, these are not things he would have done.<p>Right now Visual Studio for Mac is in preview.  We purchased Xamarin and as far as I know it is now free for everyone except Enterprise.<p>In the last release of Visual Studio, we shipped Chrome as an optional addon.<p>Released Visual Studio code which is open source, built on open source products from GitHub and Google Chromium.<p>Open sourced .NET and made it cross platform.  This also enabled us to release PowerShell as open source.<p>Added Bash on Ubuntu on Windows to Windows 10 by collaborating with Canonical.  Seriously?  Let that sink in @wiredearp.  You can now run native command line tools in REAL linux running on Windows.<p>Invited the Angular team from Google to get a sneak peek at future plans for TypeScript. After the saw it they dropped AtScript and used TypeScript to build Angular (formally known as Angular 2).  It is now the preferred language to consume it as well.<p>SharePoint, the product I work on will soon open source our new app model which now runs on a standard open source web stack.  Webpack, gulp, React, all accounted for.<p>The static types in TypeScript add value, they weren&#x27;t added as part of some scheme so later we can...  what?  I can&#x27;t even imagine a nefarious end game.<p>No disrespect intended at all, but if you think this is the Microsoft of the Netscape era, you seriously haven&#x27;t been paying attention.",2017-03-29 05:32:38,13983704
3021,"Tizen is a joke, they seem to want to beat Microsoft in how many times one reboots the SDK.<p>Latest change of mind is that future Tizen apps will be written in .NET Core with Xamarin Forms for the UI.",2017-04-02 10:27:46,14016667
3022,"Neat series.  There was another recent post on using a C# version of Redux as well, at <a href=""https:&#x2F;&#x2F;spin.atomicobject.com&#x2F;2017&#x2F;03&#x2F;13&#x2F;adapting-redux-c-sharp-xamarin&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;spin.atomicobject.com&#x2F;2017&#x2F;03&#x2F;13&#x2F;adapting-redux-c-sh...</a> .  It&#x27;s nice to see Redux&#x27;s concepts spreading outside the Javascript world.  I&#x27;ve had similar thoughts regarding some of the Python services I work with.<p>If anyone is interested in learning Redux (or React), I keep a big list of links to high-quality tutorials and articles on React, Redux, and related topics, at <a href=""https:&#x2F;&#x2F;github.com&#x2F;markerikson&#x2F;react-redux-links"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;markerikson&#x2F;react-redux-links</a> . Specifically intended to be a great starting point for anyone trying to learn the ecosystem, as well as a solid source of good info on more advanced topics.<p>I also maintain a catalog of Redux-related addons, utilities, and tools, at <a href=""https:&#x2F;&#x2F;github.com&#x2F;markerikson&#x2F;redux-ecosystem-links"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;markerikson&#x2F;redux-ecosystem-links</a> .",2017-04-02 20:30:27,14018884
3023,"Just to throw out the obvious: it should be trivial to get some old Node code up and running, particularly if you don&#x27;t mind using an old runtime version. If you&#x27;ve run npm shrinkwrap you have a log of the exact versions of each package used. You don&#x27;t have to use ES6 or Typescript, you can keep on trucking the same as you ever did.<p>It sounds like the author was an ASP.NET developer, dabbled a little in Node, then worked with Xamarin (also .NET) then moved to ASP.NET Core. Nothing wrong with any of that, but it only stands to reason you&#x27;ll find ASP.NET easier to work with than Node when you&#x27;ve used it extensively and Node not very much at all.",2017-04-02 21:42:25,14019187
3024,"SEEKING WORK || REMOTE || Portland, Oregon<p>I am a Salty Dog: the sturdy, weather beaten crew member who stands at the prow of your ship, guiding you safely through the rocks.<p>Mobile Development, Design, QA.  Back-end Architecture. Java, C#, Objective-C, Xamarin, C&#x2F;C++, Azure. 20+ years experience, 7 years mobile development<p>saltydogtechnology.com&#x2F;blog<p>Some work:<p>Kickback Points  Xamarin iOS&#x2F;Android<p>Fas Rewards  Xamarin Android&#x2F;iOS<p>Harts Gas and Food  Xamarin Android&#x2F;iOS<p>Noco Energy Corp  Xamarin Android&#x2F;iOS<p>Tone Tip  Used Fourier Transforms to detect audio codes embedded in audio broadcasts. Android&#x2F;iOS&#x2F;Xamarin<p>Garage 529 Android - <a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.project529.garage.production&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.project529...</a><p>Nike + Running - Nike&#x27;s premier running application. <a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.nike.plusgps&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.nike.plusg...</a><p>Caller Dashboard  (Android Tablet, Android Phone, Ultrabook) <a href=""http:&#x2F;&#x2F;tangorguild.com&#x2F;caller-dashboard&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;tangorguild.com&#x2F;caller-dashboard&#x2F;</a><p>Ease into 5K Android - <a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper.c25k&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.runhelper....</a>",2017-04-03 16:30:42,14024221
3025,"I am working on an app to organize the passport information. Like visas associated with it, expiration, date of leaving&#x2F;entering a country. 
Idea is to make it easy to get certain information of your passport when you need it without having the passport handy.
For now targeted towards immigrants in USA. Using xamarin to build the app. Plan is to finish development by April end.",2017-04-04 21:27:53,14037378
3026,With xamarin or visas? ;),2017-04-04 21:29:59,14037396
3027,"To be honest UI dev tools just plain suck, making everything move more slowly that it needs to. If I&#x27;m on the web it&#x27;s the HTML + CSS clusterfuck, If I&#x27;m in C# I&#x27;m writing color converters for WPF, if it&#x27;s Java I have to use the outdated looking Swing, if it&#x27;s C++ it&#x27;s QT which I need to doll out cash for. Additionally every smart phone OS has it&#x27;s own groundbreaking GUI layout concepts and ideas too.<p>Then you get the layers on top, Xamarin or Eto.Forms or X, that convert down to the native widgets or just create their own entirely. These usually come with a healthy dose of missing functionality, such as mouse drag detection.<p>And then there are the languages with no UI libraries at all. As if this is even acceptable in 2017.<p>All in all, whoever decided GUI frameworks were a good idea got it very very wrong indeed. This stuff should have been standardized long ago, stored in some universal data format, and then every programming language could add support for it. They would <i>want</i> to add support for it. Closest to this is HTML of course... but, well, I think everyone would hope for something more elegant.",2017-04-04 22:09:50,14037706
3028,"I think we&#x27;re arguing different things here. I fully agree that from a design perspective, things need to look distinctive (MacOS vs Windows vs Android etc). But implementation wise, the only actual difference is the images used and the colour of the gradient brushes.<p>The only shake-up UI-wise in the last 10 years was the introduction of smart phones, which meant the need to design for smaller screens, as well as work with gesture commands. Instead of adding to what we had, we spawned Bootstrap on the Web, Android has it&#x27;s own custom widgets, as does IOS and so does Windows Mobile. This is the divided state of technology we live in. A smaller screen somehow communicated to people we need four new GUI frameworks.<p>This result stifles design, because if I design for IOS, I have to re-make everything again for android (including any custom controls, themes and so on). This has a cost, I can&#x27;t support android UI controls if there doesn&#x27;t exist the same on IOS, or other platforms. So people might choose to layer Xamarin on top, essentially throwing another framework into the mix. Why do we need so much abstraction?<p>Recently I&#x27;ve switched my desktop project from WPF to Eto.Forms, so it can also target Mac and Linux. But the result is I now have no mouse drag functionality, because that isn&#x27;t implemented yet. These are real limitations I face everyday. What exactly is the problem I wonder? We are literally talking about squares with text&#x2F;images on here. It is mind boggling.",2017-04-05 09:53:49,14040927
3029,"Tizen is a joke, they already rebooted the SDK multiple times.<p>1 - GTK+ based<p>2 - Took Bada OS C++ SDK with its Symbian C++ like flavour<p>3 - Rewrote the C++ API into something more appealing<p>4 - Thrown everything away and replaced with EFL, plain C API with C++ will come soon<p>5 - Now they are adopting .NET Core with Xamarin Forms<p>How can anyone invest time developing for them?",2017-04-05 21:16:45,14045704
3030,"&gt;&quot;C# look like a dead end&quot;<p><a href=""http:&#x2F;&#x2F;statisticstimes.com&#x2F;tech&#x2F;top-computer-languages.php"" rel=""nofollow"">http:&#x2F;&#x2F;statisticstimes.com&#x2F;tech&#x2F;top-computer-languages.php</a><p>&gt; &quot;you need just a good bridge to OS UI language&quot;<p>For moblie apps, Xamarin is that bridge (can always build web apps too):<p><a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a><p>Plus, .NET Core is cross-platform, good cross-platform tooling becoming available (VS Code, etc...), and you don&#x27;t have to use C#.<p>If you&#x27;re interested in writing games, Unity uses .NET (Mono in particular):<p><a href=""https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Unity_(game_engine)"" rel=""nofollow"">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Unity_(game_engine)</a>",2017-04-05 21:22:06,14045743
3031,"Blitzm | Docklands Melbourne Australia | Senior Software Engineer | Full-Time, Onsite | <a href=""https:&#x2F;&#x2F;blitzm.com.au"" rel=""nofollow"">https:&#x2F;&#x2F;blitzm.com.au</a><p>Blitzm is looking for a Senior Software Engineer to join our Engineering team in Docklands. We develops web and mobile applications for companies around Melbourne and beyond.<p>We are increasing our number of active projects and we need an additional senior member to take the lead on some of them. You will be responsible for designing and delivering software development projects. You must have 3+ years relevant experience including scoping projects for client organisations.<p>What we often work with: AWS, Heroku, Azure, Django, REACT, Grails, .NET, Xamarin, Native iOS&#x2F;Android.<p>Your responsibilities will include:
* Software architecture design
* Estimating engineering effort
* Client communication
* Project management
* Software development<p>Further skill sets which would be highly valued:
* DevOps and infrastructure management
* Software test planning
* User experience design
* Continuous integration and automated testing<p>Current job details: <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;jobs&#x2F;view&#x2F;307625266&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;jobs&#x2F;view&#x2F;307625266&#x2F;</a>
Email us at jobs@blitzm.com if you are interested.",2017-04-05 22:15:55,14046154
3032,"I appreciate your sentiment here, we do our best to ensure the software quality stays high while at the same time we also try to deliver these smaller updates faster to customers. The world is changing very quickly and the software we use to build software in this world also needs to try and keep up.<p>Specifically in this release were adding support for Windows Creators Update, an updated Xamarin and RedGate tools, and, yes, were also fixing customer-reported issues.<p>With that said we know we are not perfect, but we really are trying to build the best tool. We also listen to our community a lot, it doesn&#x27;t mean we can fix every issue or implement every feature suggested but the team is committed to our customers and I hope we can win you over.<p>Related links:
- VS Feedback center: <a href=""https:&#x2F;&#x2F;connect.microsoft.com&#x2F;VisualStudio&#x2F;Feedback"" rel=""nofollow"">https:&#x2F;&#x2F;connect.microsoft.com&#x2F;VisualStudio&#x2F;Feedback</a>",2017-04-05 23:00:08,14046483
3033,Interesting to see if this will co-exist with xamarin or will target different type of apps.,2017-04-08 07:02:30,14065728
3034,Like Xamarin for .NET Core?,2017-04-08 08:28:26,14065955
3035,"There is Xamarin.Forms, which is essentially cross platform XAML with a base set of widgets. It supports Android, iOS, UWP, and they are working on MacOS. No Linux yet.",2017-04-08 10:23:22,14066260
3036,"So Microsoft now have -2- cross-platform application-frameworks they offer:<p>- Xamarin with .NET. Mobile apps only.<p>- ReactXP. Which also supports regular web-applications<p>It will be interesting to see if these two end up competing, or if one will be ditched in favour of the other.",2017-04-08 10:29:47,14066274
3037,Forms is the only real selling point for Xamarin. Too bad it doesn&#x27;t have a good reputation.,2017-04-08 13:01:19,14066693
3038,"AS a C# programmer, I hope MS can be more focused on Xamarin. Have tried react kind of staff, just can&#x27;t get into javascript.",2017-04-08 13:44:11,14066854
3039,Last summer was a long time ago in Xamarin world. Works pretty well now.,2017-04-08 14:20:26,14067032
3040,"Visual Studio is not native, large parts of it are built in .NET. Hence the slowness.<p>Note: native means the platform&#x27;s native toolkit, running with the best performance on that platform. 
E.g: Java or C and C++ for Android, C and C++ for Linux, C and C++ and Obj-C for macOS, C and C++ for Windows, etc.<p>Things that are not native: Python, .NET, Xamarin, JavaScript, Java on anything except Android, etc",2017-04-08 14:29:13,14067067
3041,"The OS API integration, C# and F# are also selling points.<p>Qt doesn&#x27;t support even half of the OS APIs that Xamarin does.<p>As for JavaScript based solutions, I don&#x27;t intend to ever use it outside the browser.",2017-04-08 14:32:01,14067084
3042,I beg to differ. The xamarin stack on Android without forms is much preferable to whatever confused iteration of java+toolchain Google is currently offering.,2017-04-08 16:06:53,14067566
3043,"I think it depends on the type of application, and how much code you want to reuse. Assuming this a fairly large scale app and long term maintainability is a consideration:<p>* If some of the code is likely to be reused with an associated website I would go for Electron. Using ReactJS.<p>* If an associated mobile app is also possible, I would take a look at React-Native, which have some embryonic desktop technology counterparts. This option can be combined with a webview.<p>* Worth also looking at Xamarin, especially if there&#x27;s existing investment and skills in .NET (e.g. existing Windows app being migrated).",2017-04-08 16:09:01,14067574
3044,"Building desktop (or mobile) apps in JS is not compatible with craftsmanship, nor is it compatible with excellence.<p>To those that truly care about excellence and don&#x27;t merely pay lip service to it, there is only one way of building: using that platform&#x27;s native toolkit. For project or ideological reasons one can make a compromise and use something like Qt, Xamarin or wxWidgets, etc.<p>This leaves JS native-like apps for those that care about doing things fast by only using the knowledge they already have. 
That would perhaps be understandable, if they admitted that it&#x27;s a big quality and performance compromise. Yes, we tried our best, but this is the only thing we could do with this budget&#x2F;team&#x2F;whatever. Totally fine.<p>Instead we get uppity devs claiming that desktop apps will be killed and bragging about how they&#x27;re delivering the best experiences. It&#x27;s this toxic cocktail of arrogance and lack of ability that is intolerable.",2017-04-08 17:32:02,14067974
3045,Is xamarin free?,2017-04-08 18:43:59,14068311
3046,"Why not? People do native mobile apps despite those platforms being more or less at parity, while desktops are overwhelmingly just one platform. The tools to write cross platform mobile apps that aren&#x27;t just a browser with lipstick (like xamarin) exist for both desktop and desktop.",2017-04-11 14:18:34,14087979
3047,"This issue is so furiously divisive, and I feel like it brings out the worst in HN. 
I&#x27;m from a web dev background. Some of the comments here make me feel like I should be ashamed of that fact.<p>I can see both sides of this argument (every time it comes up)<p>As a consumer of apps, I want the leanest, most minimalist, fastest thing going. I want native apps on my devices (If you think slack is a hog on the desktop you should try it on Windows Phone).<p>But as a <i>developer</i>, I know that electron is a shortcut that means my app will take less time to build. I can take my existing skills, take work I&#x27;ve already done on a WinJS app and publish it on Mac OS, Linux and Win 7. I can spend more time with my family, instead of spending all my evenings learning py+qt, or xamarin, or react native, or whatever the new fangled thing is. And I know people will use it.<p>Hell, I&#x27;ve even got better odds of pushing an electron app than a native one, as I can submit a pull request and maybe have it appear on <a href=""https:&#x2F;&#x2F;electron.atom.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;electron.atom.io&#x2F;</a><p>Obviously, seeing the Electron hate always gives me pause for thought, but at the end of the day it feels like the hatred is from fellow coders (if a dribbling front-end-js writing low-life such as myself can call you writing-assembly-on-a-napkin-while-you-quote-stallman-types fellow coders) and my apps user-base is overwhelmingly non-technical.",2017-04-11 15:51:33,14089184
3048,"Eto.Forms is nice for this. It targets WPF, Xamarin.Mac, and GTK, so you get Windows, macOS, and Linux support with a single codebase.",2017-04-12 19:12:52,14100814
3049,"Don&#x27;t want to add fuel to the acquired-by-microsoft rumor fire, but when Xamarin was being acquired they had a hiring freeze in place for the duration of the process. I understand that is standard practice for acquisitions, but might be wrong on that.",2017-04-13 11:14:22,14105832
3050,Iirc Omnisharp comes from the Mono&#x2F;Xamarin-team and is used as the backing technology behind Monodevelop&#x2F;Xamarin Studio.,2017-04-18 10:34:07,14137648
3051,"First of all, clearly the advice I&#x27;m giving is a bit too early for where you are at presently. I think that&#x27;s giving credit to you for the quality of the work you are producing. Basically, I want this app. You might want to dial back <i>just a tad</i> on the intricate details, out of fear you may wind up never shipping an initial version. Being a software dev myself, I understand that you could spend another year (hell, even 2-3 years) completely hashing out every minute detail. However I think that what you have is getting to the point of being &quot;above and beyond what is necessary&quot; that you need to stop tinkering so much, and find a way to ship something sooner rather than later.<p>When you get around to desktop clients, ignore the seemingly negative consensus regarding Electron[1] if you think it&#x27;s the right fit for you. All the negativity I&#x27;ve read about it is from &quot;purists&quot; who aren&#x27;t specifically singling out Electron; rather they are hating on <i>all</i> non-native implementations. I noticed the mention of Xamarin on your site; never heard of it, but I&#x27;d be weary as they seem to be oriented more towards mobile whereas you&#x27;re looking for a cross-platform <i>desktop</i> solution which is where Electron shines.<p>If your goal were to be the gold standard for apps, you <i>should</i> be developing using native OS X APIs; the performance you get from a native implementation on OS X is astounding. However, if you do native OS X you&#x27;re putting yourself in a position to do native Windows and possibly Linux apps, and the collective work required for native-everywhere obviously does not come easy or cheap - particularly if you are doing this as a solo project without assistance from a team.<p>Electron is a perfectly fine balance for most UIs that are fairly simplistic, which is going to be true even for the most advanced todo-type app. Extra bonus being that if you put in the effort to plan out the Electron app side-by-side with your web&#x2F;browser-based app, you can share the frontend development between the two, resulting in less overall work.<p>[1] <a href=""https:&#x2F;&#x2F;electron.atom.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;electron.atom.io&#x2F;</a>",2017-04-20 19:45:17,14160153
3052,"<i>Being a software dev myself, I understand that you could spend another year (hell, even 2-3 years) completely hashing out every minute detail.</i><p>I won&#x27;t do that :) I stopped working on the spec the moment I handed it down to coders, and my total time spent on the spec since then is around one week. When the spec is written well, and you simulated all important situations in your head before encountering them in the wild, you actually don&#x27;t need much extra time.<p>There&#x27;s almost no tinkering happens on the app right now. I&#x27;m fixing critical bugs and smoothing out rough details that manifested after months of my dogfooding.<p>Regarding the desktop solutions: yes, going native would be perfect, but that is not feasible for a 4-man team. We&#x27;ll go with Electron or Xamarin or, less likely, Qt - we haven&#x27;t decided on the exact technology yet.",2017-04-21 06:02:12,14163409
3053,"Something I know has been a big roadblock for IKVM is the fragmentation of .NET with all the different profiles. The main branch of IKVM only works with the full .NET framework versions, not WinRT&#x2F;Silverlight&#x2F;Xamarin etc. There was a fork that supported Xamarin iOS but it was <i>very</i> rough and there hasn&#x27;t been much interest in it since RoboVM and Multi-OS Engine came onto the scene.",2017-04-22 23:56:21,14175600
3054,"My main grief again .net now is rather that it has lost its simplicity. There are multiple frameworks to do the same things. For desktop you have winform, wpf, windows 8 apps, universal windows apps, xamarin, etc. For interoperability you have pcl, .net core, .net standard, mono&#x2F;xamarin, etc. For web development you have webforms, mvc, mvc core. When they introduce a new language feature like tuples, you need to load some external libraries to be able to use it, it doesn&#x27;t work straight out of the box. And I fear that as they will try to integrate all of this while keeping backward compatibility it will create yet even more fragmentation.<p>Simplicity is I think why python is so popular and why it is even used in all sort of odd places (like doing computationally intensive maths).",2017-04-23 05:30:31,14176693
3055,"&gt; That&#x27;s some impressive graphics fetishism on display there.<p>More like compatibility and stability fetishism.  nVidia and AMD can&#x27;t even agree on how to compile the same GLSL shader - I&#x27;m much more confident about my ability to ship working D3D9 or D3D11 than OpenGL without a QA team with a wide range of hardware and driver revisions.  D3D?  Uniform bytecode.  Uniform debug layers.  Nice.  Being indie just makes it easier - simpler rendering pipelines, easier to port.<p>For Android dev, where I have no choice about using e.g. OpenGL ES 2, the compatability mess is so bad that even for solo dev, I&#x27;ve been eyeing AWS Device Farm and Xamarin Test Cloud.  Maybe AAA studios can afford the QA time - but I can&#x27;t even afford enough phones to test to my satisfaction.  And in my heart of hearts, I blame OpenGL, even if it&#x27;s really the fault of mobile GPU vendors.  I have a much weaker urge for a PC device farm, where D3D <i>mostly</i> just works.  It&#x27;d be a much stronger urge if you threatened me with the prospect of supporting desktop OpenGL.<p>Biggest company I&#x27;ve worked for had about 50 people, usually on a much smaller team.  I don&#x27;t think that&#x27;s AAA.  Wasting milliseconds left and right, we didn&#x27;t need much per-platform tuning - still lower hanging fruit around.  Still almost agree with euos.  Aside from compat - getting OpenGL working on a console or in the WinRT sandbox is probably more work <i>and</i> worse results than just doing a straight up port.  Worst of all worlds.<p>&gt; The idea that somebody who chooses to do this is therefore not &quot;competent&quot; just boggles the mind. No point in deriding engineers who decide not to use the latest bells and whistles in the graphics pipeline. Maybe they just have other priorities.<p>Agreed - competent engineers and managers may decide that competent 3d support not worth their time.  I welcome this restraint when it comes to Excel&#x27;s pie charts and the good fight against scope creep.  If you&#x27;re targeting the holy trifecta of Windows, Linux, OS X, and little else - OpenGL might be right for your MVP and your launch window.<p>Yet I&#x27;d still be eyeing that OpenGL on Windows as possible technical debt.  Hell, I basically look at OpenGL ES on Android as <i>unsolvable</i> technical debt.  I&#x27;d have a hard time labeling it &quot;competent 3d&quot;.  And I&#x27;d be wondering if it was really better than D3D9 + Wine.<p>Metal <i>might</i> be a little flavor-of-the minute.  I need to give it a shot sometime...",2017-04-24 10:17:41,14183130
3056,"How come Xamarin tag exists, but there is no python?",2017-04-25 11:11:41,14192420
3057,"I really can&#x27;t echo this sentiment enough.  You listen to Hanselminutes or .Net Rocks, and you hear about all these great things people are doing.  Did someone build a cross-platform game using Xamarin Forms and Azure Service Fabric? That sounds cool, sign me up! Then you walk into your day job, and it&#x27;s building yet another &quot;textbox over database site&quot; with ASP.NET 4.5.2 and Bootstrap.<p>Where can one find these .NET shops that strive to make use of the latest developments?",2017-04-27 12:09:08,14210835
3058,"To be fair, I have tried to use Xamarin every half a year for the course of the past 2.5 years and have never succeeded in compiling even the most basic Android examples.",2017-04-27 12:44:25,14210994
3059,"Personally, I&#x27;m very happy with VS and feel the performance focuses in the last three major versions continues to pay off.<p>SharpDevelop still exists, though I&#x27;m not sure I&#x27;d recommend it as it seemed to get stuck in a time warp somewhere around 2012.<p>MonoDevelop forked from SharpDevelop. Xamarin Studio forked from MonoDevelop. In an interesting twist of fate, Xamarin Studio is now Visual Studio for Mac and looks to be integrating a lot more of Visual Studio in future releases.",2017-04-27 17:53:07,14213421
3060,Actually rebranded MonoDevelop rebranded Xamarin Studio. But with support for .net core which brings amazing power to non-windows.,2017-04-28 18:41:55,14221957
3061,"It&#x27;s not what you think. It&#x27;s not about Windows or Windows Phone development on Mac, it doesn&#x27;t support MSVS plugins... it&#x27;s basically just Xamarin for Mac, iOS and Android development on Mac using Mono&#x2F;CLR.",2017-04-29 02:04:32,14224634
3062,"ADS Environmental | Front-End Developers, Mobile App Developers | Huntsville, AL | Remote or Relo, US, Contract Part-Time or Full-Time, www.adsenv.com<p>ADS is helping create a cleaner and safer environment by bringing exceptional insight and intelligence to municipalities around the world through our hardware and software products. We&#x27;re very passionate about the products we create because of the positive effects it will have on millions of people around the globe.<p>Tech Stack:<p><pre><code>  Front End: Angular, TypeScript, Google Material Design

  Backend: ASP.NET Core (C#), SQL Server, Redis

  Public Cloud: Azure
</code></pre>
Interview Process: We&#x27;ve hired from HackerNews successfully before. Phone call first, remote coding session, then if all goes well, we&#x27;ll bring you on-site for interviews and to meet the team.<p>Positions We Need:<p><pre><code>   -Someone who is strong in Angular2&#x2F;TypeScript and can lead a front-end team

   -Someone who is strong at developing cross-platform mobile apps in Xamarin.

</code></pre>
Interested?:<p>Email ADSDeveloperJobs .a.t. idexcorp.com or check us out at idexcorp.com&#x2F;careers.  Sorry, no sponsorship available.  Every submission reviewed by a human.",2017-05-01 15:47:40,14238513
3063,"SEEKING WORK :: REMOTE :: Portland, Oregon<p>I am the Salty Dog: a sturdy, weather beaten crew member who stands at the prow of your ship, guiding you safely through the rocks.<p>Full Stack Mobile Development, Design, Coding, QA, Back-end. Java, C#, Objective-C, Xamarin, C&#x2F;C++, Azure, AWS. 20+ years experience, 7 years mobile development.<p>Better outcomes through communication, risk management, and experience.<p>saltydogtechnology.com&#x2F;blog
<a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;</a>",2017-05-01 16:31:45,14238985
3064,"Location: US
  Remote: Yes
  Willing to relocate: No
  Technologies: Swift, C#, Xamarin.Forms, Objective-C, Realm, SQL, Ruby, HTML&#x2F;CSS, PHP
  Rsum&#x2F;CV&#x2F;Email: See link below<p>Seeking work - US, Remote<p>Mobile and desktop app developer with a passion for implementing great UI&#x2F;UX<p>Experience:<p>* 8 Years experience in app development.
* Mac and iOS using ObjC and Swift.
* Cross-platform Android and iOS using Xamarin.Forms and C#.<p>* Also experienced in CI, unit testing, Git, Cocoapods, XML, Realm, SQL
* Somewhat experienced in HTML&#x2F;CSS, Ruby, PHP, XSLT<p>Major Past Projects:<p>* Several top 100 education apps, including a top 10 ranked app with 5k reviews averaging 5 stars.
* Mac and iPad practice management and electronic medical record system.
* Freelance: Streaming audio app for a Radio program.
* Freelance: Cross-platform daily publication app using a new toolset.<p>For more information see mountainbranchsoftware.com",2017-05-01 17:13:04,14239370
3065,"Seeking work - US, Remote<p>Mobile and desktop app developer with a passion for implementing great UI&#x2F;UX<p>Experience:<p>* 8 Years experience in app development.
* Mac and iOS using ObjC and Swift.
* Cross-platform Android and iOS using Xamarin.Forms and C#.<p>* Also experienced in CI, unit testing, Git, Cocoapods, XML, Realm, SQL
* Somewhat experienced in HTML&#x2F;CSS, Ruby, PHP, XSLT<p>Major Past Projects:<p>* Several top 100 education apps, including a top 10 ranked app with 5k reviews averaging 5 stars.
* Mac and iPad practice management and electronic medical record system.
* Freelance: Streaming audio app for a Radio program.
* Freelance: Cross-platform daily publication app using a new toolset.<p>For more information see mountainbranchsoftware.com",2017-05-01 17:13:18,14239374
3066,"It&#x27;s such an utter shame that Microsoft got to buy out and then abandon RoboVM (presumably because they felt it a threat to their recently acquired Xamarin). The one issue the author considers the most valid, was pretty decently solved almost a year ago-- I had made a couple little games that worked incredibly well out of the box in both iOS and Android on the same Kotlin codebase, it was a pleasure.<p>Luckily, RoboVM was forked after a while and it is being actively maintained by MobiDevelop [1], so give it a try if you&#x27;re into Kotlin, that scene deserves a lot more love.<p><a href=""http:&#x2F;&#x2F;robovm.mobidevelop.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;robovm.mobidevelop.com&#x2F;</a>",2017-05-01 17:59:11,14239860
3067,"Faithlife | Android Software Developer | Bellingham, WA | ONSITE, full-time, <a href=""https:&#x2F;&#x2F;faithlife.com&#x2F;jobs&#x2F;AndroidSoftwareDeveloper"" rel=""nofollow"">https:&#x2F;&#x2F;faithlife.com&#x2F;jobs&#x2F;AndroidSoftwareDeveloper</a><p>Faithlife is looking for an Android developer to join the Bible Study Products Mobile Team. As a Software Engineer on the team, you will develop Logos Bible and other apps, playing a key role as we enrich the way that our users experience and study the Bible. You will primarily work with Java in Android Studio, occasionally work with C# in Xamarin Studio, and infrequently work with C++ and the NDK.<p>This is a full-time position at our office in Bellingham, WA. Please email your rsum, GitHub profile, StackOverflow profile and other contact information to devjobs@faithlife.com.<p>Find out more about the interview process here: <a href=""http:&#x2F;&#x2F;faithlife.codes&#x2F;blog&#x2F;2017&#x2F;02&#x2F;getting_hired_at_faithlife"" rel=""nofollow"">http:&#x2F;&#x2F;faithlife.codes&#x2F;blog&#x2F;2017&#x2F;02&#x2F;getting_hired_at_faithli...</a>.<p>Please note that Faithlife will not sponsor applicants for work visas.",2017-05-02 21:01:43,14250543
3068,"Is there any reason you&#x27;re only asking about those three languages? I&#x27;d say cater to the teenager&#x27;s interests.<p>Do they like PC games?
Maybe look into C# scripting for Unity.
Lua is used for scripting&#x2F;modding in tons of games. Minecraft I believe is one of the big ones.<p>Do they like mobile apps?
Java, Swift, Xamarin, NativeScript all come to mind.<p>JavaScript, Python, and Ruby are all wonderful, but I&#x27;m just  wondering if there&#x27;s a reason to limit it to those three. I&#x27;d say whatever technologies fall in line with the kids interests are best.",2017-05-06 15:07:44,14280553
3069,"This is what Scott Hanselman wrote, please read that first:<p>==<p>I can see why this is initially a scary WTF moment. Let me explain because its less freaky than it seems.<p>You said .NET customers are going to need to interoperate. Totally agree.
We can share netstandard libraries between ASP.NET Core 2.0 and EVERYWHERE.
We can even reference many net461+ assemblies from ASP.NET Core 2.0 because of typeforwarding and netstandard20
You said WebApps may need to use:
AD  Totally, this is a gap IF you want to call LDAP directly. You can certainly auth against Windows Auth NOW. We plan to have specifically the DirectoryServices namespace for Core 2.0 around summer timeframe
Drawing  Totally, this is a gap. We plan to have this for Core 2.0 around summer timeframe. Until this, these netstandard options also exist ImageSharp, ImageResizer, Mono options, etc
COM Automation  This has never been possible under Core 2.0, but you can certainly PInvoke if you want to hurt yourself. You could also local WebAPI to a net461+ process if you really want to hurt yourself.
Sharing code with WFP Apps  YES. Totally possible with netstandard2.0.
This is a weird change to make.
Feels like it but
Think about it this way. WPF isnt netstandard2.0, it knows its on net461+ and thats OK. Its optimized, but it can reference netstandard libs. ASP.NET Core 2.0 is optimize for Core 2.0 but it can reference shared libraries. Xamarin is the same.<p>.NET Core is side by side and its moving fast. Its WAY faster than .NET (Full) Framework can move which is good. By building ASP.NET Core 2.0 on top of .NET Core 2.0 (which, remember, is a SUPERSET of .NET Standard) that means stuff can be built faster than NetFx or even Netstandard.<p>NetCore &gt; Net Standard &gt; NetFx when it comes to development speed and innovation.<p>Point is, if you are doing new work, netstandard20. If you have older net461+ libraries, MOST of those can be referenced under ASP.NET Core 2.0.<p>ASP.NET Core 1.1 which runs on .NET Framework will be fully supported for a year after we release 2.0. That workload is fully supported thru at least July of 2018.<p>The remaining large gaps missing in .NET Core 2 are System.DirectoryServices and System.Drawing. We are working to have a Windows compat pack which would enable both of those on .NET Core on Windows this summer.<p>What we need from you all is a clear list&#x2F;understanding of WHY you think you need ASP.NET Core 2.0 to run on net461+. Be specific so we can close those gaps and let everyone be successful.",2017-05-09 07:25:27,14298302
3070,Is this more than just Xamarin? I&#x27;m sorry -- I tried last time and that was the impression I got. I know it says it has asp.net core but can I truly build .net web services based apps now without parallels?,2017-05-10 15:37:40,14308975
3071,&gt; Xamarin<p>Isn&#x27;t this just MonoDevelop? Or have Microsoft added secret sauce to the mix?,2017-05-10 15:38:03,14308977
3072,"Nope. Windows Forms is a UI technology tied to Windows itself.(It&#x27;s implemented as wrapper over WndProc and Windows Common Controls.)<p>Windows Forms is not cross platform, and VS for Mac doesn&#x27;t change this.<p>VS for Mac is intended to build cross platform web apps, console apps, and mobile apps with Xamarin.",2017-05-10 15:44:55,14309066
3073,"More than that, if they&#x27;re willing to deliver a port of Xamarin&#x2F;MonoDevelop to Mac and call it VS, it&#x27;s at least funny that they won&#x27;t do that for Linux. There is no actual need for that, but since they&#x27;re refactoring Xamarin...",2017-05-10 15:45:03,14309069
3074,The only problem I have with MS&#x27;s ecosystem is their love to have a lot of concepts and name for everything. I am literally lost and I do not know what .NET&#x2F;&lt;whatever&gt; is what and how it is used.<p>So is this just Xamarin repackaged ?,2017-05-10 15:45:57,14309083
3075,"Not Windows Forms, no. But it is pretty easy to make cross platform .Net apps using Xamarin Mac. Business logic can share code, though UI likely needs its own code for each platform.",2017-05-10 15:47:15,14309099
3076,So this Visual Studio for Mac is Xamarin studio repackaged as Visual Studio with tools and compiler&#x2F;transpilers for .NET Core and the rest so you can do your usual stuff (in any other language) + apps on iOS&#x2F;Mac&#x2F;Android with C# with the Xamarin magic. Or ?,2017-05-10 15:48:04,14309107
3077,"I find the naming &quot;Visual Studio for Mac&quot; pretty deceptive, since apparently it is not anything like the win32 VS environment, but instead based on Xamarin Studio. Even the tagline is deceptive: &quot;The IDE you love, now on the Mac&quot;.<p>I would guess this won&#x27;t let you build&#x2F;debug win32 or winforms or wpf applications, or install any .vsix extensions from the visual studio marketplace (of which there are lots of useful ones, such as this one to manage translations - <a href=""https:&#x2F;&#x2F;marketplace.visualstudio.com&#x2F;items?itemName=TomEnglert.ResXManager"" rel=""nofollow"">https:&#x2F;&#x2F;marketplace.visualstudio.com&#x2F;items?itemName=TomEngle...</a> ) - correct me if I&#x27;m wrong, but if I can&#x27;t install my .vsix extensions, this is not &quot;the IDE you love, now on the Mac&quot;.",2017-05-10 15:49:59,14309127
3078,"I can&#x27;t really understand the full depth from the announcement, but to me this looks like something that already existed for a few years, Xamarin.<p>What are the diferences between this product and Xamarin for MacOS (something that already existed)?",2017-05-10 15:51:18,14309135
3079,"It&#x27;s not really VS on Mac, though. It&#x27;s just a rebadged Xamarin Studio. I can&#x27;t really call that amazing.",2017-05-10 16:11:46,14309331
3080,Is this VS? Or just Xamarin? Could I do Python development on it like I can with Win VS?,2017-05-10 16:12:55,14309341
3081,Check again. It&#x27;s not the same Visual Studio that&#x27;s on Windows. It&#x27;s just a rebadged Xamarin Studio.,2017-05-10 16:14:07,14309355
3082,Scott wouldn&#x27;t be able to help... I don&#x27;t believe he has any influence at all with the VS Team. (or team that works on VS for Mac since it&#x27;s a different team because it&#x27;s built with Xamarin),2017-05-10 16:14:26,14309358
3083,"Again? I&#x27;ve seen the announcement for its release three times on HN.<p>And before someone mentions it, no I&#x27;m not confusing it with VS Code. I mean &quot;Visual Studio for Mac&quot;, the Xamarin Studio fork.",2017-05-10 16:20:43,14309419
3084,"Hi, Rajen Kishna here, Product Manager on Visual Studio for Mac. Our goal with Visual Studio for Mac is to create a native IDE for Mac users with workloads that make sense on macOS. That means &quot;desktop app&quot; development will target macOS and Visual Studio (on Windows) can be used to target Windows.<p>The core of the IDE definitely has a heritage in Xamarin Studio, but this release has brought in so much more with .NET Core&#x2F;ASP.NET Core development for web apps&#x2F;services, Unity support for game development and cloud integration with directly publishing your web apps&#x2F;services and previews of Docker and Azure Functions coming very soon.<p>Extensions is definitely another area we&#x27;re looking to align more over time. Currently, there is an extensions framework, but you&#x27;re right that it&#x27;s different from the one used on Windows.<p>Definitely keep the feedback coming, we&#x27;re listening and looking to act and prioritize accordingly!",2017-05-10 16:42:21,14309580
3085,"Hi, Rajen Kishna here, Product Manager on Visual Studio for Mac. It definitely is more than Xamarin, we brought in support for creating web apps and services with .NET Core&#x2F;ASP.NET Core, game development with Unity and C#, and cloud integration with publishing your web apps&#x2F;services to Azure directly from within the IDE. We&#x27;re also announcing some preview features coming very soon, including Docker and Azure Functions support, as well as targeting IoT devices like Android Things. Lots of goodies to be had!",2017-05-10 16:49:50,14309627
3086,My primary IDE is Xamarin Studio for both mobile and asp.net development.<p>Is there a roadmap for Xamarin Studio?,2017-05-10 17:06:44,14309768
3087,More good news from the MS &#x2F; Xamarin camp. A few years ago I &#x27;bet the farm&#x27; on using Xamarin for Mac to develop a Mac version of our PC application (with shared code in a PCL); since that time Xamarin (and then MS&#x2F;Xamarin after the buyout) have rarely failed to impress. Kudos to the team.,2017-05-10 17:13:41,14309818
3088,"<i>Where</i> do we speak up about this? I remember when Xamarin Studio was released on Mac, and I tried to look for a Linux build, there wasn&#x27;t a place where I could ask about it, except a Reddit AMA. Hacker News discussions around release time of a non-Linux product don&#x27;t seem like a good place to ask about Linux support either.<p>And I&#x27;m pretty sure I&#x27;m one of few who even hopes for it anymore.",2017-05-10 17:18:25,14309847
3089,"Hi there! Rajen Kishna, Product Manager on Visual Studio for Mac here. Visual Studio for Mac is a full-featured IDE to create apps, games, and services for mobile, web, and cloud. Creating mobile apps with Xamarin and C# is definitely one of the workloads available, but there&#x27;s a lot more with .NET Core, Unity, and Azure. You can view .NET Core as the cross-platform implementation of .NET you can code against and share code across apps and web on Windows, Linux, and macOS. Hope that helps clear things up!",2017-05-10 17:27:43,14309921
3090,"Hi there, Rajen Kishna here, Product Manager on Visual Studio for Mac. If you haven&#x27;t tried it out yet, I would definitely say check out the released version of Visual Studio for Mac. It has support for mobile apps with Xamarin, but adds so much more to build web apps and services with .NET Core and even games with Unity. We also announced preview support coming very soon for Docker and Azure Functions and are definitely planning on adding more over time.",2017-05-10 17:29:50,14309945
3091,Same strategy as always. Rebrand current products and call it new. This is not Visual Studio as known from Windows but Xamarin Studio rebranded. Title should be Microsoft release Xamarin update...,2017-05-10 17:32:07,14309958
3092,Xamarin Studio users will be upgraded to Visual Studio for Mac ;-),2017-05-10 18:06:52,14310242
3093,"Why? UWP is the future of application development on Windows. That&#x27;s like saying Cocoa will never be a success. Also if you can make UWP apps, you can make Xamarin apps which are cross platform (for mobile at least).",2017-05-10 18:26:32,14310405
3094,"Crashes during install process for me.  :\<p>Looks like during Xamarin installation: &#x2F;Users&#x2F;USER&#x2F;Downloads&#x2F;Install Visual Studio.app&#x2F;Contents&#x2F;MacOS&#x2F;Install_Xamarin - Terminating app due to uncaught exception &#x27;NSInvalidArgumentException&#x27;, reason: &#x27;-[NSScrollView heightAnchor]: unrecognized selector sent to instance 0x6080003c0870&#x27;<p>Bummer.",2017-05-10 18:26:39,14310407
3095,It&#x27;s not even based on the same IDE. It&#x27;s based on MonoDevelop&#x2F;Xamarin Studio and really all that&#x27;s different is the name.,2017-05-10 18:44:20,14310557
3096,"Check out Xamarin.Forms! <a href=""http:&#x2F;&#x2F;xamarin.com&#x2F;forms"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;forms</a>",2017-05-10 18:55:50,14310649
3097,"(for context, @migueldeicaza is the founder&#x2F;CTO of Xamarin and the creator of Mono)",2017-05-10 19:19:02,14310837
3098,"I think the name Visual Studio for Mac is another bad decision like all the rest. They say it&#x27;s using a lot of code from Visual Studio, but to me that seems like an implementation detail and I don&#x27;t care. In fact, if it feels like Visual Studio, then they&#x27;ve failed. It should feel like a Mac application.<p>My first choice would have been to stick with Xamarin Studio. On the other hand, this sounds like a significantly new product, and so if it deserves a new name I would have seized the opportunity to launch something new that&#x27;s going to get developers attention. Visual Studio for Mac does the opposite. It makes me feel like I know what it is and I&#x27;m not that intrigued.<p>I also would have called Visual Studio Code something else. It&#x27;s almost like they don&#x27;t want attention from developers.",2017-05-10 19:58:18,14311112
3099,"Xamarin.Forms support for macOS is in preview:<p><a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;preview-bringing-macos-to-xamarin-forms&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;preview-bringing-macos-to-xamarin-f...</a>",2017-05-10 20:26:55,14311339
3100,"And the offline media build failed, just after 18GB download:<p><pre><code>    [Exception] System.AggregateException: One or more errors occurred. ---&gt; System.IO.FileNotFoundException: &#x2F;Users&#x2F;&lt;username&gt;&#x2F;Library&#x2F;Caches&#x2F;XamarinInstaller&#x2F;Universal&#x2F;downloads&#x2F;repository-10.xml does not exist</code></pre>",2017-05-10 20:32:05,14311397
3101,"Coincidentally I was just using this &amp; Xamarin Studio on mac today. I didn&#x27;t realize VS Mac had released, I already had the beta.<p>So far I don&#x27;t like it as much! Not sure what features are here I actually care about as I&#x27;m just using Mono. The pads no longer make sense in VS for Mac. I just have debug pads open all the time. I can&#x27;t really tell when I&#x27;ve stopped debugging. There&#x27;s weird buttons on the pads that do nothing. Not sure why all the clutter is here, Xamarin Studio had this stuff figured out.",2017-05-10 20:32:18,14311399
3102,This is the most unbelievable thing. Even WSL was kinda okay to imagine. But Microsoft and Gtk?<p>I thought after buying Xamarin they would replace Gtk part.,2017-05-10 20:49:53,14311580
3103,"Visual Studio for Mac is based on Xamarin Studio, which is MonoDevelop. You have to port over everything to support C++ projects to Mac before you can use C++ projects in Visual Studio for Mac. The libraries may be packaged up, they may be portable code, but it&#x27;s nontrivial. The work is &gt;0. You can argue how close to 0 it is, but it&#x27;s not like they don&#x27;t have other work to do.",2017-05-10 23:53:11,14312806
3104,"Is anybody doing professional development on .NET using VS for Mac? All this time i thought it was just Xamarin tools, but it looks like it actually has .NET Core project templates too. This has been the only thing that kept me away from Macs as a .NET dev.",2017-05-11 00:46:36,14313071
3105,"Many people don&#x27;t seem to understand the internals of all this... MonoDevelop is the core of XamarinStudio and Visual Studio for MAC, so essentially when these guys add features they are in reality adding them to monodevelop. So think of it as:<p>Visual Studio Mac = MonoDevelop + macOS extensions<p>Xamarin Studio = MonoDevelop + extensions<p>MonoDevelop = Libraries, ASP.Net, GTK#, Xwt, Console Apps, etc.<p>What&#x27;s important here is that porting over the real VS to Mac or even Linux is not practical. You won&#x27;t also see mfc&#x2F;win32 support on mac or linux (on the foreseeable future) because those are extremely tied to the windows architecture which is far from being compatible with unix, most people just don&#x27;t get it. Same case for developing say, iOS applications, you just can&#x27;t do that without macOS because you need the tooling, so its not really up to Microsoft.<p>What I think could be accomplished relatively easy is a XamarinStudio&#x2F;VisualStudio&#x2F;Monodevelop on Linux with support for Android development since you already have the tooling available there, the IDE would just wrap up the core code&#x2F;tools. Also, there is no truly multiplatform desktop framework as each platform has its intricacies but there&#x27;s an actual toolkit (poorly named, btw) called Xwt which is what monodevelop uses in some parts and draws native widgets depending on the platform is running, something like what Qt does.",2017-05-11 05:59:39,14314109
3106,"Deployed apps are compiled to ARM assembly. Bit of info here:<p><a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;application_fundamentals&#x2F;building_cross_platform_applications&#x2F;part_1_-_understanding_the_xamarin_mobile_platform&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;applicat...</a>",2017-05-11 19:00:03,14318600
3107,"more accurately: Microsoft now lets Xamarin developers deploy, run and test their iOS apps on Windows",2017-05-11 19:00:48,14318607
3108,"You got it, the relevant piece:<p>&quot;OS  C# is ahead-of-time (AOT) compiled to ARM assembly language. The .NET framework is included, with unused classes being stripped out during linking to reduce the application size. Apple does not allow runtime code generation on iOS, so some language features are not available (see Xamarin.iOS Limitations ).&quot;",2017-05-11 19:03:05,14318621
3109,"Yeah, they left that part off didn&#x27;t they? Xamarin != Native iOS.",2017-05-11 19:07:27,14318651
3110,"Are there any examples of solid, stable, cross-platform apps developed with Xamarin?  I tried looking at their website, but it doesn&#x27;t seem possible to tell the difference between apps being tested using Xamarin Test Cloud, and apps developed using the Xamarin Platform.",2017-05-11 19:13:29,14318702
3111,"How is Xamarin not native? It&#x27;s compiled right, not some web view hybrid?",2017-05-11 19:15:39,14318713
3112,"I&#x27;ve worked on a number of Xamarin apps. You can definitely make stable cross platform apps, it&#x27;s just very tedious; sometimes it requires more effort than developing 2 separate native apps.",2017-05-11 19:34:51,14318814
3113,"re:more effort
Did you have the freedom to recommend going native or was Xamarin a requirement or was it too late to switch?",2017-05-11 19:39:00,14318839
3114,"Probably most notably the Slack App: <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers&#x2F;tech"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers&#x2F;tech</a>",2017-05-11 19:41:08,14318853
3115,I would imagine xamarin is faster when you have a complicated domain.,2017-05-11 19:43:15,14318873
3116,"According to the App Store guidelines, applications can&#x27;t download code, and must use the built-in Javascript interpreter for Javascript execution (those are the two rules in the App Store review guidelines that are relevant to the execution of downloaded code).<p>In <i>practice</i>, though, Apple has generally accepted applications that pass user-supplied code to an interpreter, as long as that code is actually user-generated:  see Pythonista (embedded Python interpreter), Continuous (embedded .NET CIL interpreter, akin to what Xamarin&#x27;s doing here with Live Player), Ruby for iOS, etc.<p>You won&#x27;t find any compiled languages (which compile down into native machine code) in the App Store, though; even ignoring the review process, there are technical restrictions in place in sandboxed iOS apps that prohibit applications from running arbitrary code.",2017-05-11 19:45:05,14318889
3117,"There&#x27;s nothing in that description that indicates the Slack app is written using Xamarin.  From that link:<p>&quot;Slack&#x27;s friendly, easy to use messaging platform is the future of work. Given its preeminence in the enterprise and among mobile workforces, mobile is critical to Slacks success. Over three million daily users rely on Slack to communicate with their teams, and Xamarin Test Cloud helps Slack make sure customers are productive in all scenarios. Its mobile quality engineers view test reports to see how features look and behave on devices  and can quickly solve customer issues.&quot;<p>Sounds like they just use Xamarin Test Cloud.<p>Here&#x27;s a list of decent looking Xamarin apps:<p>- BitWarden (it&#x27;s made the rounds recently on HN)[1]<p>- Microsoft Pix [2]<p>- A bunch of games that look pretty slick (I&#x27;ve downloaded a few and flipped through some of the screens) [3]<p>[1] <a href=""https:&#x2F;&#x2F;github.com&#x2F;bitwarden&#x2F;mobile"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;bitwarden&#x2F;mobile</a><p>[2] <a href=""http:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;product&#x2F;microsoftpix&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;product&#x2F;microsoftpix...</a><p>[3] <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers&#x2F;gaming"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers&#x2F;gaming</a>",2017-05-11 19:47:30,14318907
3118,"I don&#x27;t think you are correct.  For a proper release, yes, the C#&#x2F;F#&#x2F;VB is AOT compiled.  For this &quot;Live Player&quot; app, the IL in the DLLs is interpreted.  Basing this off of this:<p>&quot;Microsoft believes its Live Player system is entirely compatible with Apple&#x27;s rules and regulations for App Store apps. Behind the scenes, the Live Player includes an interpreter for .NET code. This means that running an app through Live Player is slower than it would be if natively built on a Mac, but that&#x27;s not such a big deal for many aspects of user interface development.&quot;<p><a href=""https:&#x2F;&#x2F;arstechnica.com&#x2F;information-technology&#x2F;2017&#x2F;05&#x2F;xamarin-live-player-almost-takes-the-mac-out-of-ios-development&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;arstechnica.com&#x2F;information-technology&#x2F;2017&#x2F;05&#x2F;xamar...</a>",2017-05-11 19:56:30,14318984
3119,"Normal deployed apps are.  Here though, the app that&#x27;s actually running is the Xamarin Live Player which comes with an IL interpreter.  In the normal cycle of Xamarin iOS development from Windows, the DLLs are compiled, and then there&#x27;s another step where they are AOT compiled to ARM assembly on the Mac.  In this case though it avoids the step of compiling on iOS, it just builds the DLLs and sends them to the device.<p>This is my best guess of what&#x27;s happening based on this article: <a href=""https:&#x2F;&#x2F;arstechnica.com&#x2F;information-technology&#x2F;2017&#x2F;05&#x2F;xamarin-live-player-almost-takes-the-mac-out-of-ios-development&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;arstechnica.com&#x2F;information-technology&#x2F;2017&#x2F;05&#x2F;xamar...</a>",2017-05-11 19:59:24,14319006
3120,"It&#x27;s cool to see xamarin growing after the microsoft acquisition. Replicating good existing features that other environments have (like exponent, etc) is a good sign that things are progressing.<p>Building apps with Xamarin however is still not a pleasant experience whether it be Native or Forms.<p>Although Microsoft has built some cool apps with forms (check the microsoft github and you can find them), it&#x27;s still a pain to work with things visually. Odd bugs and restrictions that require dense workarounds occur if you deviate from the standard application uses (tables and forms). It makes sense it being a targeted API so I&#x27;ll leave it at that.<p>Native was something I really wanted to like. I built 2 PoC apps that later got translated into swift&#x2F;java and react-native respectively. Building your own libraries and widgets is fun, but not when you have a deadline. For non-visual libraries, it&#x27;s awesome. I&#x27;ve worked with the .Net ecosystem for a while, and while the way libraries are written isn&#x27;t my favorite (OverkillOOP sometimes), everything is consistent. Visual Libraries are rough. Quite a few I wanted to use were abandoned with no source code and just a link to download the nuget from the xamarin store. I could spend the time building the 10 custom widgets that the client REALLY wants (even though the app could work fine without it), or I could use native&#x2F;RN UI libraries to wow the client giving them what they wanted and a little bit more in the same visual&#x2F;design style.<p>To sum it up: it&#x27;s more work to write a xamarin application when I&#x27;m more than capable of handling 2 similar languages (most app requirements are just applying known patterns and library gluing anyways) or using Exponent&#x2F;ReactNative.<p>As a side note, I prefer F# and while the Xamarin team says they &quot;like it&quot;, it is a pretty 2nd class system and definitely not something you want to use with a deadline.",2017-05-11 20:12:26,14319098
3121,"Yes, Xamarin produces a compiled executable, as you would get in Swift or Objective-C. It is not a web view hybrid.<p>I work for Microsoft",2017-05-11 20:15:05,14319120
3122,We have a team that wanted to use Xamarin but it seems after working on it for half a year they seem to prefer native.,2017-05-11 20:28:02,14319217
3123,"Look here <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;application_fundamentals&#x2F;building_cross_platform_applications&#x2F;part_1_-_understanding_the_xamarin_mobile_platform&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;applicat...</a><p>&quot;iOS  C# is ahead-of-time (AOT) compiled to ARM assembly language. The .NET framework is included, with unused classes being stripped out during linking to reduce the application size. Apple does not allow runtime code generation on iOS, so some language features are not available&quot;",2017-05-11 20:39:33,14319299
3124,"rdio had award-winning iOS, Android, and Windows Phone apps based on Xamarin, with around 70% of the code shared across all platforms.  The remainder was all platform-specific code, but still in C#.<p>Sadly, they went bankrupt, though not because of their app quality!",2017-05-11 20:45:44,14319355
3125,"Right, that&#x27;s how it works if you compile your app and then deploy it to the device. It&#x27;s not how Xamarin Player works, though.",2017-05-11 20:48:56,14319378
3126,"To be honest, that page about limitations in their docs is a huuuuuge let down<p><a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;live&#x2F;troubleshooting&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;live&#x2F;tro...</a><p>- Android user interfaces designed with AXML files are not currently supported.<p>- Some iOS storyboard features are not supported.<p>- iOS XIB files are not supported.<p>Well, let&#x27;s see how this evolves over time...",2017-05-11 20:54:50,14319424
3127,Xamarin uses Cocoa Touch.  It gets compiled to the same thing as something written in Swift.  So definitely iOS Native.,2017-05-11 21:04:29,14319510
3128,I imagine it goes faster to make the domain complicated with Xamarin. Make of that what you will...,2017-05-11 21:27:35,14319686
3129,"I have been working on a huge Xamarin app for weeks now and both Xamarin Studio and Visual Studio for Mac are horrendous. There are so many bugs and quirks in those things. Almost always when I think I found an issue with the underlying libraries (we use the native Android &amp; iOS libs as well as Forms and a mix of both), it is an issue with either of the IDEs. I have a solid Macbook Pro and yet it comes to a halt and requires reboots after a bit. I even currently do parts with Vim and only compile&#x2F;run with the IDE. I tried Rider but that&#x27;s even worse. VS for Windows with this release might be worth a try. Did anyone try?",2017-05-11 21:41:48,14319773
3130,"We have done several high profile cross-platform applications with Xamarin. As a user you can&#x27;t really see the difference while using it. The most noticeable difference is that the app startup time is couple of seconds slower and the application bundle steals at least 10MB of app size. As a programmer the Developer Experience is a little rough around the edges with casual bugs. But hey you get to write your core business logic only once and in C#.<p>Here are some of the more visually appealing apps we&#x27;ve made with Xamarin:<p>[1] <a href=""http:&#x2F;&#x2F;valopilkkutaksi.fi&#x2F;briefly-in-english&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;valopilkkutaksi.fi&#x2F;briefly-in-english&#x2F;</a><p>[2] <a href=""http:&#x2F;&#x2F;www.upmmetsani.fi&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.upmmetsani.fi&#x2F;</a><p>[3] <a href=""http:&#x2F;&#x2F;fair.online&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;fair.online&#x2F;</a>",2017-05-11 21:43:19,14319794
3131,"I&#x27;m Chris Hardy, a program manager at Microsoft working on the Xamarin Live Players. Yup, you will still need a Mac, to deploy to the app store, to work against different APIs that require special provisioning (such as Push Notifications, etc.), sign and provision applications to share via TestFlight. The goal for Xamarin Live Player is to provide an easier and faster way to work and iterate on applications with C# and Xamarin without the need to commit to downloading and provisioning different devices to get up and running.",2017-05-11 22:25:32,14320008
3132,I believe the cococa touch API is exposed like for like in xamarin.,2017-05-11 22:43:26,14320124
3133,"<a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers</a><p>Each example across multiple industries says whether they&#x27;re using test cloud, or the app was developed with the platform :)",2017-05-12 00:42:10,14320651
3134,"Ive only dabbled in Xamarin briefly before, but I can imagine the numerous ways it could complicate things.  If you have ever been deep into Windows Forms or the windows API in general, even native has its own unpleasant experiences, though I cant speak for Apple stuff.<p>We recently went the hybrid route using Cordova, and while it too had its share of shenanigans, I think it was much faster&#x2F;better than separate apps.",2017-05-12 01:21:34,14320800
3135,I haven&#x27;t used Xamarin yet but I&#x27;m really enjoying Ionic framework for multiplatform development with JavaScript.,2017-05-12 03:52:27,14321305
3136,"Visual Studio for the Mac is a re-branding of Xamarin Studio, so it doesn&#x27;t actually share any code with Visual Studio for Windows. I doubt that VS Windows plugins will ever work with it.",2017-05-12 22:00:58,14328268
3137,"Bitrise can do that too, and has Xamarin support as well - <a href=""https:&#x2F;&#x2F;www.bitrise.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.bitrise.io&#x2F;</a><p>(I&#x27;m the CTO there)",2017-05-13 05:44:43,14329697
3138,"I am on 8.1, problem is I tried upgrading to windows 10 a year ago. I was one of the &quot;early adopters&quot;. I cant remember properly but there was incompatibility with Visual Studio with Xamarin on. I was reliant on developing an app at that time and could not afford downtime, so I reverted back to 8.1.<p>I will try upgrading again when I get time.",2017-05-13 10:30:34,14330258
3139,"VS for Mac is a rebranded MonoDevelop IDE (former Xamarin company)  <a href=""http:&#x2F;&#x2F;www.monodevelop.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.monodevelop.com&#x2F;</a>",2017-05-14 10:52:05,14335078
3140,You are correct.  They actually have a tool that scans the Cocoa libraries and generates API bindings for Xamarin to use.  Source: Miguel De Icaza on the .NET Rocks podcast.,2017-05-16 15:03:34,14350123
3141,React Native vs Xamarin?,2017-05-16 16:01:29,14350619
3142,"lol, I doubt that.. Microsoft doesn&#x27;t support internet explorer anymore and would only recommend edge if you&#x27;re on windows..<p>People are asking for these services.. just because you don&#x27;t run them doesn&#x27;t mean no one does. Skype is still the largest voip network, bing is slowly still growing against goole, onedrive is huge for private and corporations, Cortana ins on over 600 million devices..<p>As for office on OSX, it is updated all the time and feature comparable if you bother to run 2016 with updates enabled..<p>THe hate is far from deserved, its misguided.<p>Microsoft is so cross platform Visual studio for OSX is full RTM, Visual studio code runs great in Linux&#x2F;windows&#x2F;OSX, they&#x27;re writing Linux drivers, they have the Linux subsystem for windows that runs native windows apps, they&#x27;re a core supporter of the Linux foundation.  .net is cross platform now too and they&#x27;re starting to merge xamarin&#x2F;XAML&#x2F;xml forms so apps can be written once and run everywhere..<p>doing more for software and systems than google is but people will continue to have this misguided hate",2017-05-17 03:58:21,14355533
3143,"Well, I about that message loled too ;). Later it became annoying and a nice example how Microsoft really cares.<p>If you claim people are asking for these services, then what about not showing them down the throats of those who didn&#x27;t ask for them? Seem simple, right? If they are so popular, why piss off those who don&#x27;t care about them? Why do I have look after every Cmd-O at Onedrive file chooser, when I&#x27;m never going to use it and there&#x27;s no option &quot;do not bother me with this again?&quot;. I&#x27;m sure that Cortana might be on 600M devices, but there are not 600M active users... more likely users what resigned on looking for a new ways to turn it off. See the difference?<p>Office for Mac 2016 is updated every month indeed, but it is still missing features. For example, everything that starts with Power (PowerQuery, PowerPivot, PowerMap), or Inquire. The Mac version of Office does work with exactly 3 ODBC drivers. It doesn&#x27;t work with exactly the same ODBC drivers, that the Windows has no problem with (PostgreSQL, for example - it crashes).<p>There was a lot written about Visual Studio for Mac and it being a rebranded Xamarin. See past discussions here, at HN.<p>And let&#x27;s go back to the Office for Linux, shall we? That&#x27;s the Microsoft prime lock-in device for many. Drivers for Hyper-V or Linux subsystem for Windows help Microsoft, not Linux.",2017-05-17 10:33:18,14357147
3144,"Also, shortcomings in the mac version of office may be shortcomings in the Mac OSX platform.<p>VIsual studio for mac is a re-write of xamarin, that doesn&#x27;t change anything - xamaerin&#x2F;visual studio&#x2F;c# are all converging to offer a unified platform.<p>And i&#x27;m so glad you seem to know everything about everyone. THe same &quot;billion google now&quot; users probably only 1% USE it day in&#x2F;day out.. but we&#x27;re just going to be blindly bashing windows..<p>please, do us a favor and get over yourself. We get it, you don&#x27;t run&#x2F;don&#x27;t like windows... so just stop wasting energy hating something you really don&#x27;t have any clue about or care about.",2017-05-17 15:51:02,14359642
3145,"This post shows, how mis-informed the community can be. If you have been following up Google Cloud and Firebase, most of the questions regarding long term support, phasing out and Google turning rogue wouldn&#x27;t be asked. Firebase is one key aspect of Google&#x27;s cloud strategy. Pretty much everything on Mobile services is tied with Firebase, some way or the other. We have now built 2 products on Firebase and are reasonably happy. The real-time nature of FB makes it alluring to so many use cases.<p>Having said that, Google should surely address questions on pricing and supporting other key Mobile platforms like Xamarin. Tweeting to the Firebase handle on issues never get replied. With other bleeding edge services that Google provides, Firebase certainly has positioned itself nice. The teething issues should be small things to fix.",2017-05-18 04:44:20,14364863
3146,"Can someone compare their productivity with React Native or Xamarin to &quot;native&quot; Java&#x2F;Kotlin development? Having used RN, the whole state&#x2F;data layer can be shared across two platforms, and I guess the same is doable with C# and Xamarin. I get that both require bridges when interfacing with ObjC&#x2F;Java, whereas Kotlin seems to have great (but only) Java interop.",2017-05-19 11:19:34,14374513
3147,"I can only say I&#x27;m way more productive in Xamarin than I am in Android native with Java, I do a fair bit of both. I&#x27;m excited about Kotlin and will definitely give it a try, but Xamarin does still retain some advantages over Kotlin, even though it seems to be a slightly more advanced language than C#:<p>Xamarin allows you to target iOS, MacOS, and Windows in addition to Android. Though you have to rewrite the view layer for each platform. If your view layer is in HTML, then you mostly have WORA.<p>Xamarin converts a lot of crufty weird Android API to a slightly more modern form. So instead of int constants hanging off random classes all over the place, you have proper enums.<p>Coroutines and async&#x2F;await seem much more ready for primetime in C# than in Kotlin.<p>Xamarin builds seem saner and faster than Android native.<p>There&#x27;s some very advanced and battle-tested C# libraries that Xamarin opens up that I think are unmatched in native Android land. For full-application frameworks, ORMs, DI, databinding, and serialisation.<p>There&#x27;s way more C# devs in the world than Kotlin devs.<p>Though I have to say that Xamarin has one big disadvantage - it adds another layer of sometimes leaky abstraction, and a whole new source of framework bugs to Android. So you spend a lot of time asking yourself &quot;is this a Google bug, or a Xamarin bug, or my bug?&quot;",2017-05-19 11:42:45,14374642
3148,"The C# tooling is good but it&#x27;s partially closed-source and sold by a vendor (Xamarin). On that basis I don&#x27;t think it really &#x27;counts&#x27;. JS does, at least, since there are many ways to ship JS-based Android apps for free.",2017-05-19 11:43:18,14374647
3149,"If you write a C# app with Xamarin and have problems, then it&#x27;s Xamarin&#x27;s support problem.  If you write a JavaScript app with Qt (I assume?), then it&#x27;s Qt&#x27;s support problem.<p>Now, if you write an app with Kotlin, then it&#x27;s <i>Google&#x27;s</i> support problem.  I can see how that would change the game for a lot of shops.",2017-05-19 11:43:58,14374653
3150,I haven&#x27;t used Xamarin. React Native I have used. You can make some stuff really fast but I feel like some stuff is unfinished at this point. As an example simple navigation does not feel complete with React Native.,2017-05-19 11:56:16,14374726
3151,"Xamarin got bought by Microsoft, and they opened almost everything from Xamarin, except Xamarin Studio which got rebranded as Visual Studio for Mac.",2017-05-19 12:04:35,14374779
3152,That is my experience as well with Xamarin.,2017-05-19 12:31:47,14374946
3153,It is much easier to squeeze support out of Xamarin than Google.,2017-05-19 12:32:14,14374950
3154,"&gt; Though I have to say that Xamarin has one big disadvantage - it adds another layer of sometimes leaky abstraction, and a whole new source of framework bugs to Android. So you spend a lot of time asking yourself &quot;is this a Google bug, or a Xamarin bug, or my bug?&quot;<p>This the main reason why while I dabble in all interesting technologies to get a taste of what they bring into the table, production code is always written 100% with official SDK languages for the system being targeted.",2017-05-19 13:27:08,14375368
3155,"C# with XAML is your best bet for writing GUI apps on Windows. UWP is the present of Windows GUI app development and just glancing at documentation you can quickly see that C# and XAML are front and center. You can do C++ and XAML if you wish&#x2F;must, but C# is generally a better idea. (UWP supports .NET Native which AOT compiles C# UWP applications.)<p>C# and XAML can be used in WPF on versions of Windows prior to 10, if you need to support that. The C# is mostly compatible in both GUI systems, the XAML is very close, but subtly different, between the two.<p>(At Build last week, Microsoft announced the XAML Standard initiative to better standardize XAML across platforms. They also announced desktop support for Xamarin Forms, the XAML renderer for common subset of native controls across non-Windows platforms, to support macOS, Linux Gtk, and even WPF.)",2017-05-19 15:53:46,14376864
3156,"The just bumped to a new version in the newest betas. After Microsoft bought Xamarin those licensing issues appear to have gone, which makes sense given MS&#x27;s strategy.",2017-05-20 12:42:36,14382122
3157,"not anymore, new stuff coming now that MS owns xamarin",2017-05-20 12:44:30,14382132
3158,"&gt;<i>Mono actually works, today. It&#x27;s hype is not ~5 years ahead of an actual implementation. It&#x27;s not continuously waiting for one more generation of tooling to settle down, or one more standard to be decided or API to be implemented. Its &quot;Getting Started&quot; examples actually compile and run, consistently.</i><p>Funny, because &quot;it just works&quot; has never been the case for the entire existence of Mono. Always a little behind, always all kinds of obscure bugs and unfinished implementations, etc. Even the commercial Xamarin offerings suffered from those.",2017-05-20 12:54:12,14382161
3159,"The ideal comparison would be to run the exact same experiment on the exact same hardware on .net and see how it compares (ie, run Xamarin Studio on .net, open and build Xamarin Studio). But I would be interested in any quantitative comparison of Mono and .NET GC performance.<p>Basically it&#x27;s not obvious to me if this GC improvement widens Mono&#x27;s lead over .net GC performance, brings Mono close to matching .net&#x27;s lead, or brings Mono from terrible to merely bad in comparison to .net.",2017-05-20 15:52:30,14382927
3160,"&gt; C# moves fast because it mostly only Microsoft calling the shot, even if they are now taking input via Github.<p>Is Microsoft, RedHat, JetBrains, Unity, Samsung and Google (Also Mono and Xamarin - though they are now part of Microsoft) - as well as the wider community via GitHub etc<p><a href=""https:&#x2F;&#x2F;dotnetfoundation.org&#x2F;about&#x2F;tsg"" rel=""nofollow"">https:&#x2F;&#x2F;dotnetfoundation.org&#x2F;about&#x2F;tsg</a>",2017-05-20 17:07:14,14383289
3161,"This is false, Xamarin is focused on mobile. Mono has been focused on other use cases since it has existed. We successfully built Event Store on Mono and ported it to .NET and have hit surprisingly few issues. On .NET Core, our six separate attempts to port have not yet yielded anything usable.",2017-05-20 23:20:05,14384891
3162,"Honestly though, I think this is really more a result of the Android SDK team being drug kicking and screaming by the competition.  Solutions like React Native, Kotlin, Xamarin, RetroLambda, and of course Kotlin were starting to become very viable alternatives to the official SDK.",2017-05-22 01:17:29,14390284
3163,"Of course, there have been bumps in the road in the compatibility story between the two XAML environments. .NET Standard 2.0 will help a ton (in the very near future), deeply increasing the amount of .NET code that can be shared between the environments. XAML Standard 1.0 (in the slightly further future) will help a lot, in particular the fact that Xamarin.Forms is planning to implement a WPF renderer for sharing a much larger portion of XAML across every platform.",2017-05-22 16:29:20,14394891
3164,"I&#x27;m in love with the client-side model that you get with VueJS + VueX + TypeScript. I also need to work in native Android land (Java, Kotlin, Xamarin are all options), and want to get as close as I can to the VueJS feel there. I&#x27;m open to somewhat esoteric solutions that don&#x27;t do things the &quot;Google way,&quot; which I don&#x27;t value very highly anyway.",2017-05-24 13:50:28,14409964
3165,"Eto is very interesting but unfortunately there seems to be just 1 (very active) developer behind it, from what I can see.<p>On the other hand, Xamarin.Forms had an announcement recently, an announcement that Hacker News missed. I submitted the news a few days ago but it didn&#x27;t reach the first page:<p><a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=14383467"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=14383467</a> -&gt;<p><a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;</a><p>TL;DR:<p>Xamarin.Forms will support desktop environments:<p>- Windows (WPF)<p>- MacOS (Cocoa)<p>- Linux (GTK#)<p>This is on top of the mobile bits: iOS, Android, UWP.<p>As an added bonus, they&#x27;ve added Xamarin.Forms embedding into native interfaces.<p>It&#x27;s actually major news since Xamarin.Forms would become the first cross platform UI toolkit that:<p>1. supports both desktop and mobiles<p>2. is backed by a major vendor<p>3. is truly usable from a memory managed language as part of the core offering",2017-05-24 14:07:45,14410086
3166,"Apparently this is a hot topic.<p>The options I&#x27;m aware of are:<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;picoe&#x2F;Eto"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;picoe&#x2F;Eto</a> (OP - BSD)<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia</a> (MIT)<p>Currently only with a preview for Mac, Xamarin.Forms is roadmapped for desktop platforms &quot;Q3 2017&quot;: <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;</a><p>Licensing for Xamarin Forms was funky for a while (required paying for Xamarin prior to MS acquisition) but appears to be MIT now.",2017-05-24 14:10:54,14410106
3167,Is this still true of cross platform apps that supposedly &quot;compile to native&quot; like Reactive native and Xamarin?,2017-05-24 15:11:07,14410563
3168,"Great call out. Also, Xamarin Forms should be even more useful when XAML Standard drops.<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;xaml-standard"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;xaml-standard</a>",2017-05-24 15:35:23,14410775
3169,&gt; Needing a Mac to compile the app<p>I remember a recent announcement of Microsoft about using xamarin to generate an iOS app without xcode and with the ok of Apple. It was on HN but I can&#x27;t find it. I assumed that without xcode means without a mac.,2017-05-24 17:20:40,14411681
3170,I have never heard anything positive about Xamarin.Forms from people who have used it. Has this improved?,2017-05-24 17:31:47,14411795
3171,"I&#x27;ve never used Xamarin, but I&#x27;m curious what their complaints are?",2017-05-24 18:04:36,14412099
3172,"Believe me I thought about cross platform. If I had chosen that route I certainly wouldn&#x27;t have used web views, I would have probably used Xamarin.<p>But ultimately my plan was to try Kotlin, and full rewrite so it was as optimal as possible.",2017-05-24 18:17:53,14412192
3173,"I use it a fair bit, mostly for enterprise apps. It definitely has its quirks but overall it&#x27;s come a long way.<p>All depends on how polished your UI needs to be. Anything too polished and you&#x27;re better off going straight Xamarin or pure native.",2017-05-24 18:25:03,14412253
3174,React Native or Xamarin Forms.,2017-05-24 22:57:11,14414091
3175,"You can <i>develop</i> an app without a Mac using Xamarin Live Player, but you still need a Mac to build the standalone package to publish to the App Store",2017-05-25 10:04:25,14416318
3176,"ReactiveUI &amp; Xamarin: <a href=""https:&#x2F;&#x2F;reactiveui.net&#x2F;concepts"" rel=""nofollow"">https:&#x2F;&#x2F;reactiveui.net&#x2F;concepts</a>",2017-05-25 15:34:10,14417927
3177,"To be clear: &quot;Xamarin.forms&quot; is different than &quot;Xamarin&quot; and the following is based on my experience with &quot;Xamarin.forms&quot;.<p>Also note that my experience with this is building an extremely simple business-y app for internal users.<p>1. Its moving fast so documentation is lacking and the &quot;right&quot; way to do something, posted 6 months ago, is wrong\deprecated\wonky<p>2. The tooling leaves a lot to be desired. Although this has greatly improved, there are still tons of steps to publish (<a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;android&#x2F;deployment,_testing,_and_metrics&#x2F;publishing_an_application&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;android&#x2F;deployment,_tes...</a>).<p>3. Updates constantly breaking things. To be fair, this is also improving<p>4. There may still be instances where you have to drop into native code or split code based on platform. This means you sometimes will need to know: c#, xamarin.forms oddities, java\android stuff AND objective c\iOS. This may not be an issue for simple apps<p>5. UI builder is limited. The apps will be native looking but you won&#x27;t be winning any design awards. Some things also seem impossible so it helps if the customer\designer\stakeholder is really flexible. If someone asks for an app to collect and display data, you will probably be ok. If they give you pixel dimensions and other minutiae run.",2017-05-26 15:15:34,14424620
3178,"Shameless plug: My post[0] about how to call it from Xamarin<p>[0] <a href=""https:&#x2F;&#x2F;kipters.net&#x2F;post&#x2F;ios-debugging-overlay&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;kipters.net&#x2F;post&#x2F;ios-debugging-overlay&#x2F;</a>",2017-05-26 21:31:03,14427357
3179,"I feel as though I got burned a bit with AngularJS.<p>I went all out with it, learned it inside out, learned how to use Gulp, Bower, etc.<p>Then along comes Angular2 and it&#x27;s completely different. Bower is deprecated, Gulp isn&#x27;t widely used any more. It&#x27;s all WebPack and Yarn.<p>I have spent some time with Angular2 and it is good. There&#x27;s a lot to like, but it is exhausting having to learn everything I already know how to do in AngularJS again in a different framework, especially when I know I could just fire up AngularJS, get the old gang back together with Gulp&#x2F;Bower etc and be done in a fraction of the time, because there&#x27;s nothing new to learn.<p>So I&#x27;ve been learning Android development (in the context of Xamarin.Android) over the past year, and I am now at the point where I can do pretty much whatever I want to do in Android comfortably, and have shipped a couple of apps.<p>In the past month I&#x27;ve been learning Xamarin.iOS and it is starting to (slowly) <i>click</i> with me. I&#x27;m getting close to that <i>know enough to be dangerous</i> phase.<p>I feel as though these are better investments of my time. I am confident that Android and iOS will still be around in five years. Even if Xamarin isn&#x27;t, Xamarin maps so closely to native development that if Microsoft gets bored of it, I could use Android Studio and XCode instead and still know what&#x27;s going on.<p>I can&#x27;t say the same for Angular, React, Vue, Webpack, Yarn, Aurelia, Ionic, etc etc. I have zero confidence that they will still be around in five years, and I don&#x27;t want to learn any more client-side JS frameworks until the industry settles down and matures a bit.<p>If I need to build a single page app, AngularJS it is for the next year or two, because even if it isn&#x27;t cool anymore, it&#x27;s still fine.",2017-05-29 14:05:38,14439127
3180,I thought PhoneGap is going to talk about their competitive offering to the likes of React Native\Xamarin but nope. Ecosystem have changed so unless they offer anything at par.... I am not sure how they are going to survive.,2017-05-30 04:19:42,14442985
3181,"Ah yes, the so called &quot;MVP&quot;; quick win by lazy developers at the expense of the user experience. Cordova is one of the worst offender here, making you even lazier than people using things like Xamarin Forms and React Native. I&#x27;m sure your users truly enjoy using your product.",2017-05-30 08:23:57,14443696
3182,"I&#x27;m an ex hobbyist Windows Phone developer and I have no plan to port any of my applications to UWP.<p>First because I don&#x27;t like Windows 10 itself: its UI, the Store, the builtin ads, the forced updates, the invasive telemetry. Should the LTSB edition be available to anyone I would use it, but the Pro edition is a no go.<p>Secondly because I don&#x27;t like the closeness of UWP. Silverlight was a good platform in my opinion because its runs apps out-of-browser on various editions of Windows <i>and</i> Mac OS. UWP apps on the other side doesn&#x27;t even run on the most deployed edition of Windows!<p>Finally because I didn&#x27;t have enough trust in Microsoft on the consumer side. Since the launch of WP7 Microsoft consistently breaks its promises and the expectations of its users and developers base. It doesn&#x27;t motivate me to invest time to learn APIs and a framework that will be ditched for another one in a few years for no obvious reason.<p>However I still like a lot C# and F#. I&#x27;m building &amp; experimenting with Xamarin for front-end applications. MonoGame is portable solution for games but there is no portable UI framework for application. And the investment in UWP is in the total opposite direction of providing or supporting from Microsoft.",2017-05-30 19:51:07,14448007
3183,"Secondly because I don&#x27;t like the closeness of UWP. Silverlight was a good platform in my opinion because its runs apps out-of-browser on various editions of Windows and Mac OS. UWP apps on the other side doesn&#x27;t even run on the most deployed edition of Windows!<p>If it helps, Microsoft&#x27;s Xamarin team announced macOS, Linux, and WPF (Windows 7+) support for Xamarin.Forms (expanding it to full desktop support beyond just Android and iOS mobile support). Admittedly, Xamarin.Forms is a subset of the full UWP, but it hopefully should with XAML Standard 1.0 alignment converge to be more of a proper subset of UWP than Silverlight ever was for WPF.<p>These enhancements to Xamarin.Forms and the development of the XAML Standard 1.0 are all in open source development on GitHub.",2017-05-30 20:15:37,14448189
3184,"As a long-time advocate of functional programming, I was once asked after a talk what is the &quot;best&quot; FP language to learn. Since I&#x27;m known as a Haskell&#x2F;Scala&#x2F;ML person, I surprised much of the audience by answering that I thought F# was the best entry point. What I did not say, however, was that I think that Windows is a challenging environment for anyone who is used to Linux&#x2F;Mac -- and this includes the &quot;open source&quot; world in general. I think that Microsoft is a leader in language design, but their platform relevance was slipping for many years. I believe it may be on the upswing (with Xamarin etc). I would encourage you to stick with F# as you will be further along in not only understanding FP, but other modern programming languages, including ones that haven&#x27;t been invented yet.",2017-05-31 12:24:32,14451898
3185,"Is there a good explanation somewhere as to what someone can and cannot make&#x2F;sell&#x2F;open&#x2F;close with Qt? Last I saw, platforms that allow precompiled dynamically-linked libraries (i.e. everything but iOS) could have the LGPL stuff in a separate binary file. But if you linked the code in directly, you couldn&#x27;t distribute your application without the source.<p>I wish there was a FAQ with easy answers like &quot;If you write an iOS app with Qt, you can close the source if you pay us a license fee&quot; or something along that line.<p>IIRC, Xamarin had similar problems, but that went away when they were purchased.",2017-05-31 13:57:53,14452524
3186,"Space Engineers isn&#x27;t made in Unity, it uses their Custom VRAGE engine.<p>Unity can do far better graphics than KSP has e.g. <a href=""https:&#x2F;&#x2F;unity3d.com&#x2F;pages&#x2F;adam"" rel=""nofollow"">https:&#x2F;&#x2F;unity3d.com&#x2F;pages&#x2F;adam</a>. The fact that there are numerous mods which vastly improve the graphics of KSP is pretty good evidence of this!<p>Where Unity can be blamed for KSP problems is the constant stutters due to GC - Unity uses an ancient garbage collector. Hopefully that&#x27;s going to get better soon - apparently there was some licensing problem keeping Unity on an ancient version of Mono, now that MS own Xamarin that&#x27;s probably not a problem.",2017-05-31 16:07:49,14453568
3187,"Faithlife | Android Software Developer | Bellingham, WA; Tempe, AZ | REMOTE, full-time, <a href=""https:&#x2F;&#x2F;faithlife.com&#x2F;jobs&#x2F;AndroidSoftwareDeveloper"" rel=""nofollow"">https:&#x2F;&#x2F;faithlife.com&#x2F;jobs&#x2F;AndroidSoftwareDeveloper</a><p>Faithlife is looking for an Android developer to join the Bible Study Products Mobile Team. As a Software Engineer on the team, you will develop Logos Bible and other apps, playing a key role as we enrich the way that our users experience and study the Bible. You will primarily work with Java in Android Studio, occasionally work with C# in Xamarin Studio, and infrequently work with C++ and the NDK.
This is a full-time position at our office in Bellingham, WA, at our office in Tempe, AZ, or remote.<p>Please email your rsum, GitHub profile, StackOverflow profile and other contact information to devjobs@faithlife.com.
Find out more about the interview process here: <a href=""http:&#x2F;&#x2F;faithlife.codes&#x2F;blog&#x2F;2017&#x2F;02&#x2F;getting_hired_at_faithlife&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;faithlife.codes&#x2F;blog&#x2F;2017&#x2F;02&#x2F;getting_hired_at_faithli...</a><p>Please note that Faithlife will not sponsor applicants for work visas.",2017-06-01 15:46:27,14461278
3188,This actually seems to be more aimed at hurting the ipad for business than hurting intel. You can write your business apps in .Net and roll them out to users who are currently using ios and save pain and cost from using tools like Xamarin to try to use your .Net team to write ios apps with c#.,2017-06-01 16:36:34,14461824
3189,"I see this as an attack on ipad for business. I worked for a company that had to support ipads for business, we were using Xamarin and it was a slow and painful, expensive process but the systems were easy to manage, although using an onscreen keyboard was limiting. Imagine the same benefits of ipad for business without having to license a private app store from Apple. Imagine the cost per unit is lower and you can use .Net without the pain of Xamarin involved to roll out software as regular win32 binaries instead of jumping through hoops to produce an ios app in a .Net based business.",2017-06-01 16:39:42,14461863
3190,"SEEKING WORK :: REMOTE :: Portland, Oregon<p>I am the Salty Dog: a sturdy, weather beaten crew member who stands at the prow of your ship, guiding you safely through the rocks.<p>Full Stack Mobile Development, Design, Coding, QA, Back-end. Java, C#, Objective-C, Xamarin, C&#x2F;C++, Azure, AWS. 20+ years experience, 7 years mobile development.<p>Achieve better outcomes through communication, risk management, and experience.<p>saltydogtechnology.com&#x2F;blog
<a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;</a>",2017-06-01 16:52:11,14461991
3191,"Fun fact: the mobile app for associate delivery was written in F# using Xamarin.<p>Source: I work at Jet, but not on this product.",2017-06-01 18:02:36,14462767
3192,"I am Andrs, and I&#x27;ve mostly worked on Windows desktop applications.  I&#x27;ve worked a bit with web technologies and bash commands, mostly to create and maintain my own website.  I also have experience in phone and email-based tech support.  I&#x27;m currently looking for either a software development job or an IT-related customer service job.<p><pre><code>  Location: Mexico City, Mexico
  Remote: Yes
  Willing to relocate: No.
  Technologies: Xojo (for Windows desktop development).  Ruby, bash shell scripting, C, PHP, SQLite, MySQL, CSS.  Recently redesigned my WordPress-based website using the Divi framework.  I&#x27;m just getting started on Android development with Xamarin.
  Rsum&#x2F;CV: https:&#x2F;&#x2F;www.dropbox.com&#x2F;s&#x2F;c7ki8epa0162o5r&#x2F;Andr%C3%A9s%20Cabezas%20Ulate%20-%20R%C3%A9sum%C3%A9%20-%20EN%20-%202017.pdf?dl=0
  Email: andres.cabezas@domador.net</code></pre>",2017-06-01 23:46:20,14466086
3193,"RedRainCorp | Startup | RedView &amp; other products | 80-120k | Sydney, Australia ONSITE OR part-time REMOTE<p>Description: You will be one of the first 10 hires of a company who is disrupting the law space. We have been growing rapidly over the last 3 years. Our products cross a range of platforms - HTML5&#x2F;React&#x2F;Typescript&#x2F;Xamarin&#x2F;C#&#x2F;SQL Server&#x2F;Rx&#x2F;Event Sourcing<p>Apply if:
1) You are fluent in spoken&#x2F;written English. We are looking for a culture fit first and foremost.<p>2) Know C# and have a willingness to learn&#x2F;reserve engineer&#x2F;work autonomously but be part of close kit scrum team.<p>This is a true startup, you will be interviewed by founders just as your hands will get dirty across the stack.<p>We dont care if u dont know a library, we care that you get excited by the technology and by our angel investors (NOT VC) &#x2F; founders who have grown successful law tech companies before.<p>Roles:
-Senior C# 1x Backend focused (SQL&#x2F;elasticsearch&#x2F;ML focus)
-Junior C# ^^^
&amp;
-Senior C#&#x2F;Typescript UI&#x2F;UX focus
-Junior C# ^^^<p>Contact: jcaptanis[AT@]redraincorp[dot]com[DOT]au with a few paragraphs on why we appeal to you and what you could bring to the company.
Website: <a href=""http:&#x2F;&#x2F;redview.com.au"" rel=""nofollow"">http:&#x2F;&#x2F;redview.com.au</a><p>Our process is short and sweet with NO HR involvement. Skype -&gt; interview -&gt; offer.",2017-06-02 02:44:38,14467048
3194,"Finally launched a native macOS app (AirText) that syncs Android text messages to Mac. It&#x27;s built with Xamarin. If you have an Android phone but love your Macbook (like myself) give it a try and let me know what you think.<p>URL: <a href=""https:&#x2F;&#x2F;www.airtextapp.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.airtextapp.com&#x2F;</a>",2017-06-02 15:19:55,14470519
3195,"Fun fact: the mobile app for associate delivery was written in F# using Xamarin.<p>Source: I work at Jet, but not on this team.",2017-06-02 16:55:41,14471398
3196,"<a href=""https:&#x2F;&#x2F;tech.jet.com&#x2F;blog&#x2F;2015&#x2F;03-22-on-how-jet-chose&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;tech.jet.com&#x2F;blog&#x2F;2015&#x2F;03-22-on-how-jet-chose&#x2F;</a><p>The app for associate delivery was written by Jet developers.  Pretty much all of Jet&#x27;s code is written in F#.<p>Edit: Actually I think it was written mostly by a contractor who had experience writing Xamarin apps in F#, possibly with contributions from full-time Jet developers.",2017-06-02 17:01:12,14471460
3197,"On a technical level, it&#x27;s easy to see how someone might ship a Kotlin compiler that targets LLVM the same way you can e.g. C# via Xamarin.<p>Practically, though, any solution like that is going to be a second-class citizen in a world where Apple jumps and you ask how high. Xamarin&#x27;s a great example here, even if Kotlin might be sexier as a language: there are certainly teams building good native iOS apps using Xamarin &#x2F; C#, but it&#x27;s hard to see it ever being anything more than a niche tool.",2017-06-03 15:55:54,14476949
3198,"Nothing wrong with swift but the build tool team.  I can tolerate method name convention that always changing. And also still not support async await.<p>Xcode build tool is the worst. Compiler time is the most hurt. Very slow. Android, react and xamarin already support hot swap compile.<p>Migration tool is not working. I&#x27;m not sure this year xcode able to refactoring rename method",2017-06-03 20:41:21,14478375
3199,"Hi all<p>Ok I need to try get an idea of which direction to go as I am dithering between decided to focus purely on iOS or Xamarin (iOS and Android).<p>A little background as to what brought me to ask this.<p>I am primarily a web developer but have built a few commercial apps natively and with Xamarin. I did a commercial enterprise Android&#x2F;iOS app about 5 years ago. Built natively using XCode and Android Studio. I then built another fairly large commercial app for my current employer using Xamarin (Xamarin.iOS and Xamarin.Droid).<p>I enjoyed both processes equally. Xamarin I last used in 2016 I did a PCL build with about 30% of the code been shared. Wish I had known about MvvmCross back then.<p>Anyway, 1 year on I made the decision to try move into mobile app development full time as my current job I am finding totally boring. So I started applying for work. Two lengthly interview processes later I had both get to the point of last interview and then for them to fail due to my slight lack of commercial experience.<p>So now I have figured I need to hold on looking for positions and simply work at gettings some of my own apps out and published and hence I need to make a decision on specializing because I cannot do both right at this point.<p>Read quite a bit of the post located at: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=12948611.<p>So What I want to know (And I realize 99.9% of answers will be biased one way or another) is anyones OBJECTIVE (as objective as possible :-) ) view on the future of Xamarin versus simply Native. I Looked at several jobs sites and there are nearly 4 times as many positions available in the UK for iOS native than Xamarin. Is Xamarin growing enough that companies are switching to Xamarin over native?<p>Anything else I should consider before making a decision and blazing a trail down a given path?<p>Cheers for any of your views&#x2F;tips&#x2F;advice
John",2017-06-06 09:59:27,14496029
3200,"&gt; it&#x27;s a solution that can&#x27;t be fully cross platform.<p>I call B.S. on that. There&#x27;s nothing stopping Apple from creating an API that anyone can register with, or even providing an XMPP gateway to allow completely non-Apple platforms to connect.<p>Apple is choosing to keep their walled garden isolated. It&#x27;s absolutely a choice.<p>&gt;  Large companies can afford to spend the resources on a custom, more cross platform-y solution.<p>On scale: Cross platform is <i>cheaper</i> than coding twice. Small companies &quot;dedicated to iOS&quot; are Doing It Wrong. In 2017 it should be considered a best practice to use cross platform development environments for any app development. Between React Native, NativeScript, Xamarin, and yes, even Ionic&#x2F;Cordova, there are a ton of great options, and there&#x27;s no compelling reason for 95% of apps to go completely platform-native. And it&#x27;s worse: Environments like React Native make it cheaper to create for a single platform, much less two platforms. And additional features and ongoing maintenance are also half as costly. It&#x27;s a win-win-win situation.",2017-06-06 19:11:52,14500220
3201,"Plus you have cross platform solutions that are as good if not  better.<p>From game engines such as Unity which have plenty of AR plugins, to SkiaSharp (port of Google&#x27;s Skia) using Xamarin.",2017-06-07 04:42:27,14503818
3202,"My experience has largely been the same, the whole mono, xamarin, vs studio, etc of tooling (whatever it all is) is a tragedy of good technology made useless. The licensing, tooling, and runtimes are such a mess I give up before I begin. There needs to be one canonical way to do things on every platform, this &quot;band-aid&quot; approach might&#x27;ve worked when you first open sourced but surely no longer does the job.<p>I&#x27;d love to use .NET but the overhead of getting started isn&#x27;t worth it when I can use any number of other truly free languages&#x2F;platforms that are much easier to understand. And are truly cross platform because they have been so for years.<p>For reference languages I use regularly or on occasion which don&#x27;t suffer from any degree of the issues .NET has: ruby, swift, elixir, java, scala, JavaScript, and Elm.<p>CLR and .NET seem very awesome but so far have turned me off in a big way. Please fix &lt;3",2017-06-07 22:47:34,14510457
3203,"Owning and managing software business we develop using multiple technologies<p>Mobile objective c, swift, Android java, xamarin.net, phone gap<p>Web asp.net Mvc , php, java<p>Etc...<p>Using Asp.net Mvc requires using 3rd party ui libraries and 
Depends on size of team and experience in .net, usually we assign.net developers with at least 4 years experience in .net and front-end currently mvvm js libraries<p>If you starter in .net you have learning curve but this is reducing as technologies improve",2017-06-08 22:53:49,14517797
3204,"Check out Xamarin <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;mac&#x2F;getting_started&#x2F;hello,_mac&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;mac&#x2F;getting_started&#x2F;hel...</a> .",2017-06-09 07:05:51,14519642
3205,"WPF is still the primary UI tech on Windows, UWP is built on top of it.<p>Anyone that knows their way around WPF, can make use of XAML, MVVM and all related UI concepts, regardless of the API differences between WPF, Silverlight, UWP and Xamarin.Forms.<p>For me they are all the same.",2017-06-09 21:32:44,14524758
3206,"One problem is that they are still on Gtk 2.x. There is so much work that was done in 3.x over the last 7 years that improves things.<p>Visual Studio for Mac is also Gtk 2.x, but they (Xamarin at the time) invested heavily in a custom Gtk fork as much of the hacks were not suitable upstream.",2017-06-12 03:46:38,14535112
3207,Thanks for the compliment! Vexlio itself is written in C# (the Mac version in development uses Xamarin.Mac). I&#x27;m using the open-source NLua library to provide Lua hooks to call into the application.,2017-06-14 18:59:55,14555132
3208,"The next version Xamarin.Forms will have Linux support, from what I&#x27;ve read.",2017-06-15 09:46:23,14559000
3209,"No dilemmas on my side.<p>My approaches are C++ using a MVVM architecture with native views, Xamarin, or just focus on a single platform.<p>Depending on what I want to implement.",2017-06-23 07:46:53,14617603
3210,Xamarin?,2017-06-23 08:33:24,14617765
3211,"At this point we should probably make a framework for implementing the native features in these systems, so the next Cordova&#x2F;Ionic&#x2F;Xamarin&#x2F;React Native&#x2F;Flutter doesn&#x27;t have to start from scratch every time and take 2 years to re-build nearly the exact same ecosystem for native features.<p>As a plus we could consolidate all that brainpower spread across different cross platform native feature libraries to make these native features less buggy, more featureful and more maintained.",2017-06-23 09:34:04,14617981
3212,"Only if you want to have fun writing your own bindings for the majority of OS APIs.<p>Qt for mobile devices requires the use of QML (not C++ widgets) and many APIs aren&#x27;t wrapped, or even fit into the OS application lifecycle.<p>It is easier to use standard C++ and do your own bindings to Java and Objective-C, than QML (one version for each device) + Qt&#x2F;C++ + wrappers into not support APIs.<p>Xamarin teams take the effort to create .NET bindings for all new iOS and Android APIs, on each OS release.",2017-06-23 10:52:22,14618224
3213,"Slack really doesn&#x27;t make sense as they already make native apps for mobile devices in Xamarin (.Net), but small projects like this do make sense, as the amount of human resources justification is clearly there.",2017-06-25 18:55:17,14631524
3214,"To be fair, Google, Netflix, FB, Amazon, etc are some of the companies on a very short list of places where you would actually need to have an in depth knowledge of this type of stuff to do your job well. If your job is scaling or optimization at Google, yes you should definitely know this stuff. If your job is building the latest CRUD app in Xamarin, you probably don&#x27;t need to know how to implement your own bubble sort in pseudo code (without access to any resources, at that).",2017-06-26 12:05:36,14636058
3215,"It&#x27;s absolutely laughable that Apple forces people to buy a Mac in order to compile iOS applications. My company recently started using Xamarin, and to our surprise we can&#x27;t run automated builds for iOS on our Linux servers. It&#x27;s really weird. We don&#x27;t have any macs anywhere, so it looks like we&#x27;re going to have to get an overpriced mac just for this single build.",2017-06-28 14:18:49,14654308
3216,"We use Xamarin. For most code changes the iOS testing is absolutely trivial, since it uses the exact same code running against other platforms. All I want is to compile, it&#x27;s understandable that they want to keep their IDEs mac-only.",2017-06-28 23:02:50,14659339
3217,"My paranoid brain often thought that Microsoft not only acquired their stake in Nokia for Windows phones but also to control some aspects of Qt as it was quickly unloaded from Nokia after Microsoft entered the picture. A sort of power play which we all saw later on with Xamarin without the feel-good outcome that Xamarin eventually had. Qt Creator is a joy to work with for open source software in my opinion for even just non-Qt projects. Back then I was using it on my BSD desktop before switching to XCode for vanilla C++ projects. Anyhow, it was extremely portable I could code with MinGW on Windows and then move the same project to BSD and then move it into XCode with minor changes. I would imagine Nokia at that time would seem extremely unique to Microsoft for just Qt alone. Just some food for thought...I still have Qt built ANGLE libs in my GH repo I think. Yeah, it was also an OpenGL ES 2 emulator that ran on DirectX which you could optionally run Qt Creator on top of and I remember Nokia&#x27;s name was all over it. It was possible to do cross-platform Windows and Android code this way with just a JNI wrapper. It was a hot mess and I loved it! Here are a couple links that back up this strange tale:<p><a href=""https:&#x2F;&#x2F;wiki.qt.io&#x2F;Qt_5_on_Windows_ANGLE_and_OpenGL"" rel=""nofollow"">https:&#x2F;&#x2F;wiki.qt.io&#x2F;Qt_5_on_Windows_ANGLE_and_OpenGL</a><p><a href=""https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Qt_(software)"" rel=""nofollow"">https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Qt_(software)</a>",2017-06-30 02:36:42,14668315
3218,"Even in 2017, with several uses across Symbian, Blackberry, Ubuntu and Jolla SDKs, Qt is lacking in regards to mobile OS API support.<p>Unless one is doing GUI apps required without integration with OS APIs or their native UIs, replicating everything in QML (C++ widgets are not supported) and writting JNI and Objective-C++ wrappers isn&#x27;t that much fun.<p>Xamarin gets more love from app developers, because even before Microsoft&#x27;s acquisition they had a whole set of teams dedicated to doing nothing else other than achieving parity with iOS and Android native APIs.",2017-06-30 06:41:51,14668972
3219,"I don&#x27;t see how Dart wins at anything, really.<p>It&#x27;s an extremely conservative language, offering little to nothing interesting that would make anyone switch from other solutions.<p>The ecosystem doesn&#x27;t help it either:<p>For the frontend, it&#x27;s stuck in a middle ground where it requires a JS interop layer (unlike TS, where it&#x27;s typings are just an extra) but doesn&#x27;t offer anything significant like Elm, BuckleScript, F#, ClojureScript and so many other great languages do when it comes to expresiveness. It doesn&#x27;t even have algebraic data types, something TS does.<p>For the backend, it competes against almost all the frontend languages (due to node or native) as well as the big boys with huge ecosystems, variety of paradigms and amazing performance.<p>For mobile it has Flutter, which competes with Xamarin, Kivy, Qt and other bring-your-own-widgets solutions (deal-breaker for some apps and teams). In this case, Flutter is something I wanted to try out since those other solutions left me wanting and so did React Native, but Dart being such a lackluster language completely put me off of it, now having to turn to native with Kotlin after all this time looking at (and somewhat helping develop) the x-plat ecosystem.<p>I don&#x27;t doubt that Dart will remain healthy for a long time due to Google&#x27;s investment in it, but honestly, even if Fuchsia ends up being Android&#x27;s succesor and Flutter ends up as its graphical toolkit, I&#x27;d instantly start looking for languages targeting the Dart VM or native interop.",2017-07-01 01:09:53,14674676
3220,"I am Andrs, and I&#x27;ve mostly worked on Windows desktop applications. I&#x27;ve worked a bit with web technologies and bash commands, mostly to create and maintain my own website. I also have experience in phone and email-based tech support. I&#x27;m currently looking for either a software development job or an IT-related customer service&#x2F;technical support job.
  Location: Mexico City, Mexico
  Remote: Yes
  Willing to relocate: No.
  Technologies: Xojo (for Windows desktop development).  Ruby, bash shell scripting, C, PHP, SQLite, MySQL, CSS.  Recently redesigned my WordPress-based website using the Divi framework.  I&#x27;m just getting started on Android development with Xamarin.
  Rsum&#x2F;CV: <a href=""https:&#x2F;&#x2F;www.dropbox.com&#x2F;s&#x2F;c7ki8epa0162o5r&#x2F;Andr%C3%A9s%20Cabezas%20Ulate%20-%20R%C3%A9sum%C3%A9%20-%20EN%20-%202017.pdf?dl=0"" rel=""nofollow"">https:&#x2F;&#x2F;www.dropbox.com&#x2F;s&#x2F;c7ki8epa0162o5r&#x2F;Andr%C3%A9s%20Cabe...</a>
  Email: andres.cabezas@domador.net",2017-07-03 15:29:47,14688948
3221,"SEEKING WORK :: REMOTE :: Portland, Oregon :: Full Stack Mobile Development<p>I am the Salty Dog: a sturdy, weather beaten crew member who stands at the prow of your ship, guiding you safely through the rocks.<p>Achieve better outcomes through experience, communication, and risk management.<p>Mobile: Design, Coding, QA, Java, C#, Objective-C, Xamarin, C&#x2F;C++, Azure, AWS. 
Back End: Azure, AWS, C&#x2F;Net, Node JS, DynamoDB, SQS, S3, Cloudfront, Cosmos DB, Azure Mobile Apps, Azure Functions<p>20+ years experience, 7 years mobile development.<p>saltydogtechnology.com&#x2F;blog
<a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;</a>
curtis@saltydogtechnology.com",2017-07-03 19:29:13,14690732
3222,"GLD | Software Engineers, Graphic Designers, Technical Writers | Los Angeles, CA &#x2F;&#x2F; Los Angeles-based Remote | REMOTE<p>Greetings HN, we&#x27;re assembling a team of rock stars to help build next-generation software products for the medical industry within a large, established network of healthcare providers and related professionals. Applicants must be experienced in one or more of the following areas with advanced or expert-level proficiency:<p><pre><code>  1. ASP.NET MVC 5 and 6
  2. PostgreSQL
  3. SQLite
  4. React
  5. React Native
  6. Xamarin (iOS&#x2F;Android)
  7. Javascript and jQuery
  8. Automated testing (in conjunction with any of the above)
  9. Applied cryptography
  10. HTML, CSS, LESS&#x2F;SASS, Photoshop, and Illustrator
  11. Instructional documentation for novice users
</code></pre>
If this sounds like your cup of tea, let&#x27;s get in touch! Send your resume to gld@fastmail.com and include salary requirement.",2017-07-06 21:13:08,14714014
3223,Why not use Xamarin&#x27;s stuff to do it all in C# instead then?,2017-07-07 12:47:45,14717903
3224,Xamarin is a good choice indeed. Their constant work to create native mapping is very impressive.,2017-07-07 13:31:41,14718157
3225,"Because Xamarin and all the other cross-platform libraries are as bad or much worse.<p>Most apps don&#x27;t need native performance, and most that do only need it in a single component.  Really good software architects and devs know where a framework like RN is valuable.",2017-07-07 14:43:28,14718701
3226,"My stance is of quality software. I really don&#x27;t care what technology you use as long as that technology (and the mindset of the developers using it) allow for creating that quality software. RN, in my opinion, does not. Xamarin is a much better tool, from my limited experience with it. Xamarin Forms is just as terrible, though.<p>Any software that does not use the full benefit of each platform it is running on is mediocre at best for me, let alone something that is limited to a single thread, and reinvents the wheel for simple and&#x2F;or solved stuff, such as navigation, animation and OS widgets.<p>I do think that of all the cross-platform approaches, going the native UI and C&#x2F;C++ business logic approach is best.",2017-07-07 16:36:56,14719760
3227,"I&#x27;m 58, live in the country (UK) and found a programming job almost exactly suited to my skill set (Pascal mainly-i.e. Delphi along with C# plus a few years of C, C++). Add in 5 years of 6502&#x2F;Z80 assembly (games in the 80s), two years of Ada. The last three years was creating a mobile app in C#&#x2F;Xamarin. Plus lots of php, html, SQL.<p>To stand out from other candidates I prepared a 7 minute screen cast (using Camtasia which I bought a couple of years back) showing off programs I&#x27;d written and briefly mentioning programming aspects that made each program different. I uploaded it to Dropbox, emailed the link to the recruitment agent who forwarded it on. I got the job after two interviews and have just completed my first week. I was lucky, round here there aren&#x27;t that many programmers and most jobs are for C#&#x2F;ASP.NET MVC websites. It&#x27;s just a 30 minute drive away.<p>The job interviews included an online IQ test (not a problem), a logic test which was not my finest hour (4PM on a Friday is the worst time for me!) and a 10 minute stand up presentation on the subject of my choice. &quot;A trip to an Arctic Isle.&quot;",2017-07-09 13:25:03,14729620
3228,"Yes, compared to a Qt or Xamarin, I guess React or Angular is a walk in the park, hehe ;)",2017-07-12 18:25:37,14755135
3229,"Location: Riga, Latvia (EU)<p>Remote: Yes<p>Willing to relocate: Yes<p>Technologies: .NET Stack: C#, WPF, ASP.NET, Entity Framework, Windows Workflow Foundation, WCF; Xamarin, Javascript<p>Rsum&#x2F;CV: <a href=""http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous"" rel=""nofollow"">http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous</a><p>Email: philip.gaevsky@fastmail.com<p>I&#x27;m a fullstack developer with strong .NET background (over 8 years experience). 
Having an experience in developing large applications using Xamarin for iOS, Android and Windows store apps.
Fell free to contact me.",2017-07-13 13:45:13,14761123
3230,"&gt; There is a lack of a simple desktop app development environment.<p>Does anyone think that Xaml Standard + GTK + dotnet core might be a potential path forward? Supposedly Microsoft is working on a GTK implementation, and very much intrigues me.<p>edit: Discussion here
<a href=""http:&#x2F;&#x2F;www.xamarinpodcast.com&#x2F;41"" rel=""nofollow"">http:&#x2F;&#x2F;www.xamarinpodcast.com&#x2F;41</a>
21:30 - New &quot;backends&quot; for Xamarin.Forms - macOS, GTK#, and WPF",2017-07-13 23:31:30,14766189
3231,"It also helps that iOS is more welcoming to C++ devs than Android, although they might be using something else like Xamarin.",2017-07-15 14:57:01,14776942
3232,"Seems like the app is quite simple and should not grow too much in scope.<p>You are lucky, it seems like a case where hybrid apps are interesting.  
There seems to exist an inflexion point where hybrid frameworks become an hindrance and it is more productive to just go with native.<p>You should start by having a look at either Xamarin, Flutter or React Native.<p>They are rather good multi platforms solutions.",2017-07-16 10:10:34,14781350
3233,"You can definitely do ahead of time compilation with .net bytecode. That&#x27;s why you can write iOS apps in c# with xamarin&#x27;s SDK.<p>I think the performance differences between JIT compiled code and native code mainly come from the &#x27;convenience&#x27; features offered by languages such as Java or C#. I am thinking of garbage collection, (default) virtual functions or reflection.<p>In let&#x27;s say c++ you can do all of these things too, but the cost is not hidden from the developer.",2017-07-17 01:15:30,14785025
3234,"Change languages is the <i>only way</i> so far, to step-out serious blind-spots in the previous language. Is a shame that langs are rarely fixed, only added more and more features without learning anything in the process. Devs are so change adverse that is not even funny.<p>I have done a lot of business&#x2F;enterprise development (a very hostile space to innovation and working solo or with very small teams), and have done small-to-largeish (from my POV) rewrites in several languages.<p>From:<p>- Fox 2.6 to Visual FoxPro. A breaking change in a lot of ways, a total win in the process. Not just because the app was native windows now.<p>- From Fox to Delphi. Now I discover the beauty of Pascal and improve the app and deployment scenario. Static types is a net win overall. My other love is python, probable code faster on it, but have FAR LESS trouble with strong type systems.<p>(However take a me some years in note how bad all languages are aside the DBase Family in talk with databases, but other wins distract me from that...)<p>- Visual Fox to .NET (1.0, 1.1 with both Visual Basic and C#) was a <i>total net loss</i>. A Massive increase in code size, yet the (desktop) apps were way slower than Visual FoxPro, even more than Delphi (but my boss not let me use Delphi).<p>The web was also terrible in performance and complexity. Sadly back in the day I was unaware of how do web properly and drink all the MS KoolAid on this.<p>This sink the project and almost the company. Only saved returning back to full FoxPro.<p>- To Python. I move several things to python, mainly .NET stuff. How boy, how big was the win. The net reduction in code size and the clarity of the code!<p>Also, (web) apps way faster. Take .NET some years in learn the way here, so...<p>- To RDBMS (Heck, even sqlite): Still big wins when someone else try to use a nosql&#x2F;desktop datase (in my space, NOBODY is Facebook. With no exception, step-out of a RDBMS is one of the biggest mistakes)<p>- To F#: I return to .NET past year (because MS do a lot of the right moves to fix old mistakes!!!) and again a lot of reduction in code size, removing of problematic logic obscured by years of OO-only code. Still not happy about the way lower quality tooling, but enduring it even in Xamarin Mobile because I see the benefit.<p>I wish I could use swift for Android, so F#&#x2F;.NET is my only sane option left...<p>----<p>Mainly, move from a lang to another that is not similar, help in see the problems with the old one. Learn new or better ways to solve stuff, and get access to different toolsets and mindsets. This payback when returning back to the old, too, when this ideas are migrated.",2017-07-18 23:48:42,14801014
3235,"I really don&#x27;t see the point.<p>If you don&#x27;t need cross platform the best choice is native so you can leverage all the platform goodies.<p>If you do need cross platform and have the budget you will go with 2 native projects.<p>If you don&#x27;t have enough budget for 2 native apps you have a few options.<p>Cordova is good enough for a lot of apps. Even Apple uses Webviews in its own apps. Also check the Missive mail client all built with web technologies:<p><a href=""https:&#x2F;&#x2F;medium.com&#x2F;missive-app&#x2F;our-dirty-little-secret-cross-platform-email-client-with-nothing-but-html-aa12fc33bb02"" rel=""nofollow"">https:&#x2F;&#x2F;medium.com&#x2F;missive-app&#x2F;our-dirty-little-secret-cross...</a><p>We are building a universal app that will work on iOS, Android, Mac, Windows, and Chrome OS with a single code base.<p>If you need better performance you can always use React Native, NativeScript, or Xamarin.<p>Why go with this Fuse thing?",2017-07-19 01:27:02,14801452
3236,So it&#x27;s like Xamarin with less performs??,2017-07-19 03:22:41,14801828
3237,"Bent from Fuse here: I wouldn&#x27;t say so. Xamarin strikes us as something meant for people who want to code C# and work within the .NET ecosystem, while Fuse takes a completely different approach (to both how you develop your apps, and what you spend your time on while doing it). The choice of JS for business logic was also made to enable more people to find an easier path into app development. Our UX Markup (that compiles to native C++ code) is one thing that makes Fuse differ quite a lot from many other frameworks.",2017-07-19 10:17:52,14803228
3238,Xamarin,2017-07-19 11:05:04,14803415
3239,"C# (Xamarin) is probably #4 in mobile after Java, Swift and Obj-C. But yes, putting C in #1 is pretty absurd, although it&#x27;s based on a survey of IEEE Spectrum readers, who maybe are disproportionately working on drivers, 3D games or the mobile operating systems themselves.",2017-07-20 21:28:59,14816450
3240,"XAML&#x2F;WPF is close enough to XAML&#x2F;UWP that you could keep a codebase for both relatively clean and easy to support. (As someone that had to do a bunch of work to maintain a codebase with both XAML&#x2F;WPF and XAML&#x2F;Silverlight front-ends, I have very little sympathy to give to anyone that thinks otherwise.)<p>These days it&#x27;s getting even easier with Xamarin adding support for WPF, but even without that sort of hand-holding there have always been options.<p>XAML&#x2F;WPF is much better than &quot;no backwards compatibility&quot; if you needed to support a UWP-first application on Windows 7. Certainly there were more issues moving the other direction, but particularly&#x2F;mostly if you had skipped architecting for Silverlight as an intermediate step.",2017-07-24 16:15:54,14839716
3241,"I wouldn&#x27;t be at all surprised if they bring the UWP platform to MacOS and Linux in the near future.<p>Xamarin announced support for Linux and macOS at BUILD, and from what I hear most of the work is fairly far along (on GitHub).<p>So if Xamarin is the &quot;React Native&quot; to the UWP&#x27;s C#&#x2F;XAML platform, Electron and Cordova are still useful cross-platform runtimes for the UWP&#x27;s JS&#x2F;HTML stack.<p>I think the messaging from Microsoft seems pretty clear that web-based apps of all sorts (PWAs, Electron, Cordova, UWP JS&#x2F;HTML, etc) are still welcome on Windows as &quot;first-class&quot; apps and that it&#x27;s up to team productivity and preference which platform to use. It shouldn&#x27;t be a surprise to see a bunch of Microsoft-built Electron apps now, because JS&#x2F;HTML has always been in the UWP &quot;big tent&quot;.<p>(There has even been some cool work done to bring more of the Electron apps more directly into UWP containers, and making them more directly first class UWP citizens, and I hope that work continues.)",2017-07-24 16:24:39,14839802
3242,"The cross platform apps arguments can easily being applied to all the {&quot;React native&quot;, &quot;Xamarin&quot;, etc} bullshit. IMHO.",2017-07-25 20:27:51,14851559
3243,"https:&#x2F;&#x2F;www.apple.com&#x2F;hotnews&#x2F;thoughts-on-flash&#x2F;<p>I guess Steve&#x27;s Jobs comments on cross platform development tools can be easily extended to &quot;React native&quot;, &quot;Xamarin&quot;, etc.<p>Doesn&#x27;t?<p>P.S. Yes, I&#x27;m duplicating my comment from the Flash EOL Announcement.",2017-07-26 15:02:20,14856742
3244,"I partially agree...but...
I would say that Ruby&#x2F;RoR usage is really regional and that is visible in the US,UK,Japan and bunch of other places. Remember that Java&#x2F;C# were really popular even before Android and mobile platforms. Java was the obvious choice in the Android era, C# slowly caught up with the Xamarin and new initiatives like .NET CORE and CoreRT.
Javascript &#x2F; NodeJS got really popular because of the low barrier and huge community and fast adoption rate by large corporations.<p>Ruby(VM) is unfortunate for not attracting critical mass of users and capital. I mean cmon you can&#x27;t really compare jvm.clr,v8 and ruby vm. It really is unfair. Ruby supports a lot of magic,different paradigm and the runtimes mentioned earlier received billions in funding over decades. Of course they are &quot;fast&quot;.<p>I mean you need really expensive ingredients to succeed in 21st century in tech. You can be fast and elegant (Crystal,Nim) but what does it matter if you are not mature enough (java,c#,js). Or you are mature enough (ruby and its ecosystem) but you are not fast enough and you did not try enough to cover other markets (adoption by big companies was fairly low, Rubymotion was a poorly executed project so no Android&#x2F;iOS coverage because of the high costs and lack of interest from community)",2017-07-27 10:02:13,14863902
3245,"Well the UI can be changed per platform, and as I said, it&#x27;s a matter of budget. I implemented a solution like that with xamarin but it&#x27;s not like web. It&#x27;s way more complicated and the real problem is many things are not supported and so on... React Native? No desktop support. Qt? Oh no, it doesn&#x27;t feel native... Give me a break! I&#x27;m really sick of everyone being a perfectionist and making no compromises. There are too many users, too many platforms and not many developers (at least, quality ones). Facebook can maintain 100 platforms, that doesn&#x27;t solve my problem of having something &quot;usable&quot; (not perfect) on X platforms.<p>- Yeah we don&#x27;t support offline mode on iOS, sorry.<p>- How much would it cost to implement that?<p>- Hmm, a rewrite plus more devices to test and licenses and... hmm. Just 50K for a start.<p>- What, are you kidding? I just want to enter this order when offline?!",2017-07-27 12:41:13,14864701
3246,PWA&#x27;s use Web Technologies to build Apps. Remember jQuery Mobile? It&#x27;s more like that than React Native or Xamarin.<p>WebRTC is an API&#x2F;Protocol that enables Real Time Communication between browsers.,2017-07-27 19:05:20,14868353
3247,"Is GUI programming in C++ still a thing, though? On Mac, you&#x27;re better of with Swift&#x2F;ObjC, on Windows, there&#x27;s C#, and Gtk has binding to about any language. On mobile, C++ isn&#x27;t even an option.<p>The only thing coming to my mind is Qt, but development of Qt Widgets has basically stopped in favor of Qt Quick, and for cross platform GUIs there&#x27;s other options like Xamarin or Electron (not that I&#x27;d prefer either).",2017-07-28 06:48:37,14872458
3248,"On Windows you might have C#, but WPF and UWP lower layers are actually written in C++ and based on COM.<p>Xamarin uses C and C++ to bind the nice .NET code into the platforms they support.<p>Qt Quick is just the layout engine, many important parts of the stack keep being C++.<p>Apple&#x27;s Metal shaders are C++14.<p>On Android Vulkan is only exposed to the NDK and SurfaceFlinger and hardware compositor are in C++.<p>Plus if you compare compare Rust with Objective-C, Swift, C#, Java, the productivity story regarding GUI programming doesn&#x27;t get better than when comparing with C++, on the contrary.",2017-07-28 06:54:24,14872476
3249,"Practical example, we use C++ as systems language for projects done in Java (Standard, Android), .NET (WPF, UWP, Xamarin), Swift&#x2F;Objective-C (iOS).<p>There isn&#x27;t much Ada tooling available for those environments, and even using GNAT would be increasing project costs regarding having to implement ourselves stuff that we get for free with the SDK tools that support C++ out of the box.",2017-07-28 13:53:59,14874261
3250,"It is called Qt, wxWidgets, JavaFX, Xamarin.Forms,....",2017-07-30 09:08:27,14885113
3251,"I love(d) Delphi, but commercial considerations - most significantly being the availability of alternative developers if I (as the sole developer for my customers) - mean I no longer start any new applications in Delphi and for two clients converted their applications to C# &#x2F; .NET. The .NET ecosystem these days is an amazing thing in terms of development by MS &#x2F; Xamarin, blogs, tutorials, SO replies, libraries; the Delphi ecosystem is tiny by comparison.",2017-08-01 07:21:13,14898520
3252,I know this affects Xamarin apps.,2017-08-01 15:54:44,14902064
3253,"SEEKING WORK :: REMOTE :: Portland, Oregon :: Full Stack Mobile Development<p>I am the Salty Dog: a sturdy, weather beaten crew member who stands at the prow of your ship, guiding you safely through the rocks.<p>Achieve better outcomes through experience, communication, and risk management.<p>Mobile: Design, Coding, QA, Java, C#, Objective-C, Xamarin, Typescript, C&#x2F;C++, Azure, AWS. 
Back End: Azure, AWS, C&#x2F;Net, Node JS, DynamoDB, SQS, S3, Cloudfront, Cosmos DB, Azure Mobile Apps, Azure Functions<p>25+ years experience, 7 years mobile development.<p>How can we help?<p>saltydogtechnology.com&#x2F;blog
<a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;</a>
curtis@saltydogtechnology.com",2017-08-01 16:06:50,14902203
3254,"The appstore model is almost that.<p>---<p>We know the old model will not apply here. That is clear. That is not what we have tell them.<p>What we have tell them is that the tool must have a opensource compiler, and free tier and a reasonable pro tier. Xamarin was a good sample.<p>Also, take in account that the millon loyal customer is not that unreasonable to find:<p><a href=""https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;2418435&#x2F;how-many-delphi-users-over-the-world"" rel=""nofollow"">https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;2418435&#x2F;how-many-delphi-...</a>",2017-08-01 16:46:04,14902689
3255,"Location: Woodland Hills, CA<p>Remote: Yes, Experienced and Prefer to work remotely<p>Willing to relocate: No<p>Technologies: C#, F#, ASPNET(Core), Python, Django, Typescript, Koa, SQL, Linux, DevOps, Xamarin, Docker, HTML&#x2F;CSS&#x2F;JS<p>Rsum&#x2F;CV: <a href=""https:&#x2F;&#x2F;github.com&#x2F;Banashek&#x2F;banashek.github.io&#x2F;blob&#x2F;master&#x2F;resume.pdf"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Banashek&#x2F;banashek.github.io&#x2F;blob&#x2F;master&#x2F;r...</a><p>Email: jbanashek(at)gmail(dot)com<p>Website: banashek.com<p>Full-stack engineer working up and down the stack for several years now, and have acquired quite the skillset such that I am able to provide a healthy amount of business value.<p>I&#x27;ve worked in various languages, and research more in my leisure time. I&#x27;ve held titles from Sysadmin to DevOps to Backend to Frontend, and have worn the hat of most roles found in the technical teams of today.<p>I take pride in being a productive and collaborative member of a team. My communication skills have been lauded in the past and I enjoy being able to break down complex technical designs into a manner more consumable to non-technical stakeholders.<p>I am currently open to interesting opportunities and am primarily focused on remote positions.",2017-08-01 18:50:38,14904033
3256,"Location: Medellin, Colombia
Remote: Yes
Willing to relocate: Yes
Technologies: .Net, Asp.net MVC, C#, XAML, Xamarin.Forms, NodeJS, Angular, React, HTML, CSS, Javascript, bootstrap
Resume&#x2F;CV: <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;achirinos&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;achirinos&#x2F;</a>
email: see profile",2017-08-01 21:28:45,14905536
3257,"The popular telling of the story is that the team behind Mono asked for too much money to allow the Unity3D team to have a commercial license exception to newer versions of Mono.<p>(This comes from the Unity team&#x27;s explanation to the Unity community about why their runtime remains out of date.  It&#x27;s since become a meme to paint the Mono folks as a bunch of jerks over this.  This endured for a few years.  In the meantime, however, Microsoft has released .NET under permissive terms that would allow Unity to use Microsoft&#x27;s own runtime royalty-freeno need for a commercial license exception.  Despite the opportunity it presented, an upgraded runtime failed to materialize from Unity.  Maybe the transition from Mono to .NET Core was too big of a leap?  Fair point.  Thing is, Mono itself is now <i>also</i> relicensed under MIT, by way of Microsoft&#x27;s acquisition of Xamarin, so Unity is free to make commercial use of newer Mono versions on proprietary platforms, just like Unity always wanted.  Still, no upgrade to the Unity runtime.)",2017-08-04 19:15:32,14931198
3258,It is an experimental option for Xamarin. Though haven&#x27;t played with it.,2017-08-04 19:53:12,14931589
3259,"Ola, Lucas from Unity here,<p>Xamarin and Unity never did a renewed licensing deal. That doesn&#x27;t make the lovely xamarin people nor us jerks :)<p>Licensing issues aside, for an ecosystem like Unity to upgrade its runtime, c# language, and base class libraries is an enormous undertaking. While we are not perfect, we take backward compatibility very seriously.
All of mono and coreclr has been available under MIT licensing for a very long time now. In Unity2017.1 we now ship an experimental option to use modern .net. this uses a new mono (not using sgen), new c# compiler (still mcs for now, so c#6, not c#7, and .net4.6 class libraries).<p>In a future unity version (won&#x27;t burn my fingers on exactly which one) this new .net experience will become default. (depends on how many problems you find! :)<p>the xamarin (and microsoft .net) team are wonderful folks, and it&#x27;s great to work closely with them to make .net in unity, and .net in general solid.<p>next up on the list is improving the garbage collection story, which is in the works, but we&#x27;re first focussing on shipping a new runtime+c#+.net base class libraries.<p>While there are some very valid areas to point out that make c# challenging to be &quot;the language of an entire game&quot;, we believe that c# is a great controlling language for Unity. We&#x27;re working on some really interesting (imho) compilation pipeline for a restricted compute subset of c# that I think will completely turn around people&#x27;s expectations and opinions of c# in gaming. stay tuned, this is one of the most interesting projects happnening inside of Unity today.",2017-08-04 20:18:11,14931868
3260,mono has been around but was very buggy outside of Xamarin based apps. .net core is a first class .net implementation using lots of the same code code from .net framework and works much better in high stress server workloads.,2017-08-08 21:09:11,14962722
3261,"The &quot;.NET Spec&quot; doesn&#x27;t have the name &quot;.NET&quot; in it anywhere - .NET has always been the name of Microsoft&#x27;s implementation of the Common Language Infrastructure spec (<a href=""https:&#x2F;&#x2F;www.ecma-international.org&#x2F;publications&#x2F;standards&#x2F;Ecma-335.htm"" rel=""nofollow"">https:&#x2F;&#x2F;www.ecma-international.org&#x2F;publications&#x2F;standards&#x2F;Ec...</a>).<p>Now that Microsoft itself (and Mono + Xamarin) has multiple implementations of the CLI, it&#x27;s spec&#x27;d the API surface area that is to be expected across the multiple implementations (since this is explicitly not covered in detail in ECMA335) - hence the name, .NET Standard.",2017-08-09 17:08:28,14971303
3262,"So just so I&#x27;m clear,<p>.NET ECMA Spec  .NET Standard  (.NET Core  Mono  Xamarin  Unity)  .NET Core  .NET Framework<p>Correct?",2017-08-09 17:24:16,14971476
3263,"Microsoft&#x27;s Xamarin Forms 3.0 (stable release later this year) allows you to target Linux and Mac[1] and is very similar to UWP conceptually - UI written once, run anywhere.  It&#x27;s just that Xamarin&#x27;s &quot;anywhere&quot; is much larger :)<p>Disclosure: I work on Xamarin team at Microsoft<p>[1]<a href=""https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;85747&#x2F;xamarin-forms-feature-roadmap"" rel=""nofollow"">https:&#x2F;&#x2F;forums.xamarin.com&#x2F;discussion&#x2F;85747&#x2F;xamarin-forms-fe...</a>",2017-08-09 17:25:36,14971489
3264,"For people confused about what .NET Standard is and how it relates to .NET Core:<p>Here&#x27;s an FAQ: <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;standard&#x2F;blob&#x2F;master&#x2F;docs&#x2F;faq.md"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;standard&#x2F;blob&#x2F;master&#x2F;docs&#x2F;faq.md</a>
Here&#x27;s a series of short videos from the product team explaining it: <a href=""https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLRAdsfhKI4OWx321A_pr-7HhRNk7wOLLY"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLRAdsfhKI4OWx321A_pr-...</a><p>Short excerpt from the FAQ:<p><pre><code>  .NET Standard is a specification that represents a set of APIs that all .NET platforms have to implement. This unifies the .NET platforms and prevents future fragmentation. Think of .NET Standard as POSIX for .NET.

  Having a standard solves the code sharing problem for .NET developers by bringing all the APIs that you expect and love across the environments that you need: desktop applications, mobile apps &amp; games, and cloud services.
</code></pre>
Conceptually, I think of it in terms of browsers and browser standards. The relationship between .NET Standard and the various .NET platforms (.NET Core, .NET Framework, Mono, Xamarin, UWP, etc.) is similar to HTML specifications (e.g. <a href=""https:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html5&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html5&#x2F;</a>) and individual browsers. Newer HTML features are available on newer browsers, and some browser feature implementation is contextualized (e.g. some web features don&#x27;t make sense on a mobile phone browser). I know there are rabbit holes to #wellactually on that, so if it doesn&#x27;t work for you don&#x27;t worry about it, but as an analogy I&#x27;ve found it helpful.<p>Having a defined feature matrix makes it easier to see which APIs are available for a given platform and version.<p>(Microsoft employee, .NET team member, Nazgl)",2017-08-09 17:30:36,14971535
3265,"Question for you - I have created a few (okay, two) UWP apps, but the limited success of the store has made me look to using Xamarin. Only thing is, Xamarin&#x27;s XAML is sufficiently different from UWP&#x27;s XAML that I got disoriented and gave up.<p>If I want to target cross platform apps (including Linux and Mac), should I wait for Xamarin Forms 3 or will UWP eventually expand to cover Mac &amp; Linux?<p>I&#x27;m only a hobby programmer so I don&#x27;t want to waste hours learning something that will be a dead end.<p>Any insight you might have would be very useful! thanks",2017-08-09 17:40:40,14971665
3266,"ECMA spec is for the CLI, essentially the specification for runtime like type system and GC and all the other things that make an environment work at all<p>Net Standard is a specification of APIs.  So in order to be compliant to the standard you must have a class named X with parameters string Y, int Z.<p>&quot;Net Framework&quot; is the name for the Windows &quot;full .net framework&quot; -- this doesn&#x27;t have a descriptive name since it was before all the rest, but basically its an SDK that is a superset of the Net Standard (and therefore is .Net Standard compliant &#x2F; interoperable)<p>Mono is a open source implementation of &quot;Net Framework&quot; that runs on multiple platforms (linux, etc).  It attempts to treat full .NET Framework&#x27;s surface area as a spec but re-implement it cross platform.  It is _also_ a open source CLI implementation.  So in common speech &quot;mono&quot; like &quot;.net&quot; can refer to either the &quot;basic sdk&quot; _or_ the runtime environment.<p>Xamarin is forks of mono for iOS, Android and Mac platforms plus libraries that include full support for interacting with those platforms Native SDKs<p>Unity is a fork of Mono plus gaming tooling and runtime tools.  Microsoft does not maintain this, it&#x27;s a separate company.",2017-08-09 17:41:28,14971672
3267,"<i>IF</i> UWP will expand to do that it&#x27;s not in any announced roadmap (and if it&#x27;s being discussed internally I&#x27;m not privy to such things :) )  whereas Xamarin is doing it now(ish). You are right, the XAML is a bit different, the syntax is the same, but we use different class structures.",2017-08-09 17:45:07,14971719
3268,"Not quite. See this comment for the relationships of the specs: <a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=14971769"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=14971769</a><p>.NET Framework, .NET Core, Mono, Xamarin, and Unity are all implementing all the .NET specs. They are share many aspects, but each also bring specific capabilities that the others don&#x27;t have, so its not very useful to think of these having a superset&#x2F;subset relationship.",2017-08-09 17:53:29,14971818
3269,"I can totally share the sentiment around complexity. We&#x27;re working hard towards reducing it though and .NET Standard is one piece of the puzzle. Let me try to explain:<p>If you&#x27;re a typical .NET customer, then you&#x27;re used to the .NET Framework, which also means you&#x27;re probably only used to doing development on Windows. That was no longer a viable strategy for .NET, so we&#x27;re now pursing a cross-platform strategy. A good chunk of the complexity you see today is a result of the changed dynamics of software engineering: the PC is no longer the only relevant form factor, server applications have to be rethought as scalable cloud services, and the UI paradigm is no longer a sequence of dialogs but has to be tailored to multiple clients, and on top of that you now also have to deal with multiple different operating systems.<p>.NET has a long standing history of embracing the underlying platform (hello COM, hello P&#x2F;Invokes) while also providing a ton of conveniences on top that make it approachable (hello WinForms). We can&#x27;t really shield you from all the complexities that result from the changed dynamics. But what we can do is making it more consistent and productive.<p>Over the last years, various different .NET stacks were created, several of them outside of the Microsoft bubble (Mono, Xamarin, Unity). So in order to build modern experiences, you often have to use various different stacks to get the job done. We understand that this isn&#x27;t free of challenges, which is why we try very hard to reconcile the differences. For instance, we acquired Xamarin to fully embrace the mobile support they offer and make it a fully integrated part of the .NET development platform. We changed the license on Mono to enable Unity to use the latest version and pick up innovation instantaneously. And we&#x27;ve created the<p>.NET Standard is a way to achieve API consistency between different .NET stacks. This makes it much easier for application and library authors to share code between different .NET implementations.<p>Our goal is to empower .NET developers to build any kind of app, for any kind of operating system. That&#x27;s the world we live in now and we&#x27;re fully committed to make this experience as productive as possible.",2017-08-09 18:08:01,14971962
3270,".Net Standard isn&#x27;t an implementation, it&#x27;s a specification. Code that targets .Net Standard is guaranteed to run on any compatible runtime that supports it.<p>.Net Core has API&#x27;s that aren&#x27;t applicable to the Windows full-fat Framework, Mono or Xamarin - you don&#x27;t need or want them there.",2017-08-09 18:55:16,14972437
3271,"I believe that .NET Core is not a subset of the .NET Framework; e.g. .NET Core might have things that are not yet in .NET framework.<p>I believe that the things that go into .NET core eventually go into .NET Standard (and thus the framework), but at a slower pace.<p>Thus it would be:<p><pre><code>  .NET ECMA Spec  .NET Standard  (.NET Core  Mono  Xamarin  Unity  .NET Framework)</code></pre>",2017-08-09 19:21:05,14972655
3272,"I don&#x27;t think .NET Framework is a supper set of all other implementions of .NET. For example, Mono&#x27;s SIMD types are not in .NET Framework. It is even possible for types to exist in .NET Core that don&#x27;t exist in .NET Framework.<p>I think you could say the following:<p><pre><code>    .NET ECMA Spec  .NET Standard
    .NET Standard  .NET Core
    .NET Standard  Mono
    .NET Standard  Xamarin
    .NET Standard  .NET Framework</code></pre>",2017-08-09 19:28:11,14972717
3273,"In a sense, that&#x27;s what we have been doing. But the challenge is that .NET Core is an actual implementation and the other .NET stacks have their own (i.e. the code base isn&#x27;t shared, Mono&#x2F;Xamarin&#x2F;Unity are on a different train than .NET Framework&#x2F;.NET Core).<p>For newer .NET implementations we push folks to start with .NET Core and adding their specific technologies on top. That is, for instance, what Samsung has been doing with Tizen. So if the open source community innovates in .NET Core, Samsung can just move to a later build of .NET Core in order to benefit from it. They are a pure superset of .NET Core, by construction. However, for all other cases someone needs to port the changes from .NET Core to Mono which makes it consumable by Xamarin and Unity. .NET Framework is in a similar boat, although porting is somewhat easier as the .NET Core code base originated from .NET Framework.<p>Since we can&#x27;t (easily) move Mono&#x2F;Xamarin&#x2F;Unity&#x2F;.NET Framework on top of .NET Core, we need a way to standardize the API set so that it&#x27;s not all chaos. And that&#x27;s where .NET Standard comes in.",2017-08-09 21:09:38,14973638
3274,"Also, another question.<p>I have looked for xamarin.forms to be ready for years now, but still is very limited&#x2F;inmutare. I&#x27;m building the most simplistic crud app with zero-care for good looks and good UI, yet every step requiere a workaround (for example, you can&#x27;t have a Password EntryCell, you need to create it from code using a ViewCell).<p>Exist a lot of functionality available in the base controls not exposed in forms.<p>Now, with regret I&#x27;m thinking in use react native (that destroy the ability to use F#) or use HTML.<p>How much better will 3 be? Some place where I can talk about this?",2017-08-09 21:58:44,14974101
3275,"Great to see Mono increasing reach. I bet that Xamarin team with MS backing will slowly make it the default tool for decent cross-platform development. C# is amazing, AoT performance rocks, there are bindings to all the native UIs.<p>It&#x27;s also mature enough nowadays, so I&#x27;m going to use Mono for future projects.",2017-08-10 04:44:11,14976454
3276,Xamarin really need this. Two reason i switch from xamarin to react native. Slow compile and and cannot develope on web platform.,2017-08-10 05:57:20,14976859
3277,"&gt; It even does iOS and Android without any recajiggering<p>Not really, it is a pain to use versus Xamarin.<p>All you get is QML and the freedom to implement all your bindings to Android and iOS APIs.",2017-08-10 09:10:59,14977871
3278,"I find it weird that you consider it a workaround to put a Password Entry field inside a cell rather than using a &quot;PasswordEntryCell&quot;, that&#x27;s just simply nesting a control, in what platform don&#x27;t we have have to do that?  Might this platform or that one _have_ &quot;passwordEntryCell&quot; sure, but I fail to understand why such would be a first class citizen in your mind.<p>I also can&#x27;t imagine jumping ship to React Native.  If you&#x27;re going to jump off Xamarin Forms and already like f# &#x2F; .net then native Xamarin.IOS and Xamarin.Android are more easy, powerful and expressive than React Native.",2017-08-10 17:43:40,14982170
3279,Don&#x27;t forget Visual Studio for Mac (improved MonoDevelop improved Xamarin Studio),2017-08-14 10:22:24,15007641
3280,"Not confidential -- Vexlio&#x27;s written in C#, and uses Xamarin.Mac for the bindings to the Mac world. PDF and PNG are both generated by the Skia library (skia.org).",2017-08-14 11:55:37,15008022
3281,"Not specificly .NET Core, but Xamarin is already available for macOS and is, afaik, actively working on Xamarin.Forms coming to desktop, including Linux.",2017-08-14 18:09:44,15010956
3282,"Blog post announcing this feature <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;</a>",2017-08-14 18:25:18,15011109
3283,"With GTK, QT, Tk, etc we used to have a fairly good near-native cross platform story before mobile happened. Apple&#x27;s reluctance to accept non-native code, Google&#x27;s pick of Java for Android and early smartphone resource limits made native code a necessity. Meanwhile the web developed into a universally supported application platform which made it inevitable that JavaScript made its way to mobile as processing power increased.<p>The desktop became just another platform to target. Few cross platform apps can afford to not target the web with all of its benefits like instant, no install required delivery. A whole generation of developers is growing up on Webpack, Babel and React.<p>Who can fault Electron for existing?<p>As a user I mourn the cost at which this new wave of desktop apps come. If it were only memory I could buy more  up to a limit  but many of these apps put us back a good 10 years in responsiveness and even screen real estate. My workstation feels like a two year old phone. Who thought unchecking Show window contents while dragging would ever make sense again?<p>Luckily, to get to the original question, we are getting new options. I&#x27;m quite excited about Xamarin, which lets us provide a good experience on mobile, against the native toolkit if we like, but also a fast, familiar desktop app.<p>This isn&#x27;t worth anything as long as we can&#x27;t target the web and this is where I hope WebAssembly will bring us.<p>I remain hopeful. We must be able to do better than ship web browsers to our desktop users, but maybe we&#x27;re not quite there yet.",2017-08-14 19:48:03,15012145
3284,"Xamarin makes this separation work pretty well. Not Xamarin.Forms but a core business logic project with custom UI projects for each platform.<p>I&#x27;m hoping this will turn into a good solution. Xamarin already supports Mac (in addition to iOS and Android) and when it aligns more with UWP (XAML Standard etc.) that could cover a large slice of the platforms you&#x27;d want to target.<p>React native could be another option. I hear Android support has gotten better and you can supposedly also target UWP: <a href=""https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;react-native-windows"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;react-native-windows</a><p>I wrote this a while ago but it&#x27;s still fairly relevant: <a href=""https:&#x2F;&#x2F;unop.uk&#x2F;cross-platform-native-mobile-app-development-options&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;unop.uk&#x2F;cross-platform-native-mobile-app-development...</a><p>You could also look at <a href=""https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia</a> or <a href=""https:&#x2F;&#x2F;github.com&#x2F;picoe&#x2F;Eto"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;picoe&#x2F;Eto</a>.",2017-08-14 21:34:19,15013161
3285,"The first things you should do is identify what it is you&#x27;re trying to create, what your skills are, and what your options are.  Also, what platforms you need to support.<p>The more platforms you need to support with the fewer people, then the more web-based options may appeal to you.  Electron works well enough for a lot of applications, and gives you the big three desktop environments.  Judicious use of Cordova gets you the two big mobile options.  It won&#x27;t run as buttery smooth as native, and is very easy to let bloat if you don&#x27;t keep on top of your dependencies.<p>Java is a bit less liked for desktop applications, mainly because they tend to look clunky, or are otherwise requiring a larger runtime as a prerequisite.<p>.Net has similar issues.  For desktop applications the Xamarin tooling, now in the box, is a decent option, but you will get a few headaches.  While I personally prefer C# as a language to Java, the latter is definitely got a bigger community.<p>QT, etc, are non-starter if you also need a mobile platform.<p>In the end it really depends on what you need to accomplish and what skills&#x2F;tools are brought to the table.  I&#x27;d lean towards using Electron&#x2F;Cordova for any proof of concept just because it&#x27;s easy to move fast on that side.  I also happen to like Node a lot.  You may also want to consider ReactNative as a first or second pass depending on your targets, again.",2017-08-14 23:09:25,15013856
3286,"I read the business case section and... I got the rationale right up to the point where it says &quot;You can just pass the cost down to your customers&quot; and compared it to my feelings regarding delivering quality solutions.<p>Electron is a crutch. A crutch that people resort to because it&#x27;s effectively impossible to write quick and dirty cross-platform desktop apps in anything else, but, worse still, a _debilitating_ crutch that, unless you know what you are doing (and I daresay that is something people should be looking into) delivers overly bloated, resource-guzzling apps that wreck usability, battery life and (most visibly) RAM in _any_ OS.<p>I don&#x27;t have 16GB of RAM everywhere. Statistically, NOBODY does, in the sense that the average user (who is not, usually, a developer or a power user) is probably using a Windows PC with 4GB of RAM where a _single_ Electron app can take up over half of system resources.<p>And I find the initial premises laughable. Whenever I ran Slack on my 16GB MacBook Pro, battery life took a nosedive - visibly so. JavaFX apps like Nightcode are far more efficient (but I digress and am probably summoning a few trolls).<p>So no, I don&#x27;t think Electron is defensible. It is _marginally_ defensible if you want to get an MVP out, or if your real desktop app is still in the works. Excusing it by saying it will cost you more to hire someone who knows how to do cross-platform development in something like Qt or Xamarin and deliver a more efficient, higher quality product is not an excuse, it&#x27;s a cop-out.",2017-08-17 18:01:25,15039180
3287,"Sorry, but the alternative to using Electron isn&#x27;t JavaFX or Qt or Xamarin. It&#x27;s nothing. People weren&#x27;t writing cross-platform desktop apps before Electron. For that reason alone, Electron is great.",2017-08-17 19:42:23,15040144
3288,"Can you think of a Qt or, heaven help you, Xamarin-whatever based app that is really that much strikingly better than something like VS Code, as user interface and experience? OS X app, to narrow it down a little. I can&#x27;t.",2017-08-17 19:59:55,15040308
3289,"I can&#x27;t think of any acceptable Qt or Xamarin apps period, which is the real point of comparison here.  The fact that VS Code is acceptable is truly surprising and represents a victory not only for Electron but the whole concept of cross-platform apps.",2017-08-17 21:13:52,15041072
3290,"Then you&#x27;re not thinking very hard.  I&#x27;m too bored of this discussion to look at Xamarin, but for Qt, just looking at the Wikipedia page and cross-referencing with my experience with them, we have: VLC, Stellarium, VirtualBox, Telegram, Google Earth, LyX...",2017-08-17 21:21:28,15041138
3291,MonoDevelop aka Xamarin Studio aka Visual Studio for Mac<p>It&#x27;s a powerful and memory-efficient IDE written in C#&#x2F;Mono.,2017-08-18 04:37:55,15043597
3292,"I guess it depends on the app. Google&#x27;s own apps on iOS don&#x27;t strike me as feeling very native. I would think they&#x27;ll get closer to nailing the Android behaviour. In a way these toolkits fill a space like Electron on the desktop where the developer won&#x27;t, or can&#x27;t, for all in on a native experience.<p>As someone who built some mobile apps with web technology I can see how Flutter would have an appeal because going into the project you&#x27;ve already given up on the native experience. There are still (unfortunately?) a world of marketing-driven apps  with the brand overriding design choices which would be suited to this. Tools like Xamarin probably have a lead for line-of-business apps inside companies due to the MS ecosystem integration, but I could see people choosing Flutter for these apps if it&#x27;s easy to build and maintain apps.<p>None of this changes the fact that for best-of-breed apps in a  public store you&#x27;ll need to use the native toolkits.",2017-08-19 14:55:45,15053711
3293,Xamarin.Forms is another option to consider in this space.,2017-08-19 15:03:30,15053760
3294,"A problem is the author doesn&#x27;t seem to care that much about portability, how can you even say that Swift is an alternative to RN?<p>Was curious about counter arguments and came upon this : <a href=""https:&#x2F;&#x2F;medium.com&#x2F;@reicheltp&#x2F;dev-diary-4-why-i-left-xamarin-behind-35817ccd07b2"" rel=""nofollow"">https:&#x2F;&#x2F;medium.com&#x2F;@reicheltp&#x2F;dev-diary-4-why-i-left-xamarin...</a><p>A little old but I think I prefer RN&#x27;s disadvantages over Xamarin&#x27;s",2017-08-19 19:19:26,15055080
3295,"So, you&#x27;d rather use Xamarin than React Native, in short. Xamarin has excellent tooling and arguably works with saner languages (with better type systems), but <i>it doesn&#x27;t work on GNU&#x2F;Linux</i>. We&#x27;re using RN right now, since it allows us to use ClojureScript, which means we can share code between our Clojure sever and our client. This means we&#x27;re limited to the JS environment though, which means no good access to multi-threading and a really wonky target language. Performance implications aside.<p>If Xamarin worked on GNU&#x2F;Linux, we likely would&#x27;ve built our app using it and F#. Until it comes to the Linux world and stops doing things the MS way (open sourcing is a good start), Xamarin is going to be missing out on a number of developers.",2017-08-19 19:44:25,15055192
3296,"Xamarin is given as an example of a better alternative why exactly? You develop a single layout in React Native, while in Xamarin you just share the C# code, so separate platforms need separate UI code (unless you want to rely on their weak Xamarin.Forms API), and at that point you can just write common code in C or C++ and not rely on any third party. It&#x27;s hardly comparable.",2017-08-19 19:47:17,15055210
3297,"When i move to RN, Swift 3 is very slow on build time. Xamarin not support instant run. So i move to rn, although it feel not complete product",2017-08-19 19:55:33,15055249
3298,"I found funny to say Javascript moves slowly when a lot of people is using async&#x2F;await, generators, destructuring, etc <i>everywhere</i> right now. And then it dismisses Flow and even Typescript right away, yeah sure<p>And the conclusions seem to favor Phonegap, really? Xamarin might not be that bad but doing really nice UI on both platforms require two separate projects (or modules at least).<p>My bets are still on Javascript :)",2017-08-19 20:26:44,15055395
3299,Is truly hard. And not even thing in use it for Xamarin or something else.<p>I love to have a react-native-like for just the UI and do my code on swift&#x2F;F# for the rest.,2017-08-19 20:38:41,15055458
3300,"I come from a bit old school, C world, so excuse the naive question. Is it possible to build both a desktop (Linux&#x2F;MacOS&#x2F;Windows) and mobile (tablet and phone, android and IOS) application from same codebase (with slightly different codepaths for UI specifics) with React Native or something similar? I see Xamarin is almost there, but no Linux.<p>I have a need for an app that is mostly word-processing oriented in nature with some interactive graphing and drawing, some displaying, creating and drawing on top of PDFs too. I&#x27;m looking for easiest path to create something crossplatform AND performant (and possibly easy on the battery).",2017-08-19 20:52:03,15055528
3301,"There is Mono on Linux, and it works quite alright. Xamarin can be made to work with Linux, it&#x27;s jut not officially exposed in the UI by default.",2017-08-19 21:12:29,15055637
3302,"Right, much better to have a terrible UI on both platforms using React Native. A great bet.<p>If you insist, you can use Xamarin Forms and have an equally terrible UI on both platform as RN.",2017-08-19 21:14:46,15055650
3303,You can use Xamarin forms if you insist on sharing the layout and have a terrible lowest common denominator fisher-price UI.,2017-08-19 21:16:05,15055657
3304,"Do you think this is a better option than Apache Cordova? I&#x27;ve been starting to look at Cordova to build some pretty simple apps for business applications.<p>Does anyone have an opinion on whether Flutter would be a better choice? Why?<p>I also looked at Xamarin but that seems a little in-depth for what I need, which is basically some data-input screens (using standard Web-style controls) and then to upload the data to an API.",2017-08-19 21:54:56,15055835
3305,You have tons of well established platform tools that will give you way more power at your fingertips if you wish so.<p>Have you tried QT or Xamarin?,2017-08-19 22:47:24,15056063
3306,"Xamarin and Mono are not the same thing. Also, Xamarin Studio may work through WINE or something similar, but it doesn&#x27;t have any native GNU&#x2F;Linux builds.",2017-08-20 00:24:09,15056338
3307,"&gt;<i>Have you tried QT or Xamarin?</i><p>These are for desktop&#x2F;mobile apps right? If so, yeah, there are other options as well.<p>Was thinking more something like this, but for SPAs.",2017-08-20 02:02:02,15056624
3308,"Just an update: I almost gave up on react-native today because the navigation story seemed so broken. I actually spent a few hours checking out Xamarin.Forms at one point. Then I took a break and I was about to play some Rocket League when I had a eureka moment - I finally understood the simplest way to make react-navigation work the way I needed it to and within an hour I had a working implementation!<p>(The trick that worked for me: Don&#x27;t nest navigators directly within each other, instead wrap each one in a component class, get a ref to the wrapped navigator and then use that ref to handle navigation requests from a global navigation service that other components and services can use.)<p>So, my opinion of react-native has softened a bit this evening as I&#x27;ve gotten over my biggest hurdle yet. After trying Xamarin out and also comparing it with my previous Ionic&#x2F;Cordova&#x2F;PhoneGap experience...I&#x27;m glad to be back with react-native.<p>Also, Expo XDE has been a pleasure to work with - discovery of that tool is the reason I decided to re-investigate RN about 2 weeks ago. The first time I tried RN was like 6 months ago and I had spent a few days the first week just trying to get the environment working properly. This time everything just worked (and on multiple operating systems!)",2017-08-20 02:42:25,15056759
3309,You can use 5 line of code to push uiviewcontroller from xib or storyboard. Easier than encapsulate native code to library rn. Xamarin cannot do that,2017-08-20 05:50:22,15057137
3310,"C, that is more C++ kind of is my choice (QT namely). I was wondering if there is a faster approach with JS, since I don&#x27;t care about what I work with in this case, as long as it doesn&#x27;t take me much time to do it. Xamarin seemed like a good direction, but no linux yet. Electron, while heavy, seemed like almost a perfect choice - but no mobile.",2017-08-20 10:34:08,15057833
3311,To be used with Xamarin.,2017-08-20 14:00:33,15058419
3312,"I would rather use RemObjects Elements then Xamarin :) Allows me to share code between Android, iOS, macOS, web. Quite lovely, UI can never me 100% the same for each platform so there is where the main cost will be.",2017-08-20 14:15:18,15058471
3313,"I think that React-Native or similar combined with a control kit based on, for example Material Design could work very well.  I know there&#x27;s some effort from the Xamarin guys at MS towards this end.  I also think that React-Native itself could become a better option for more platform-friendly implementations.",2017-08-22 17:30:05,15074590
3314,"I really like the idea of React Native... similar JS engine constructs, but a leaner UI layer... though, really need a bit more unity in UI controls across platforms.<p>Another bit seems to be some work in progress from the Xamarin guys at MS.<p>In the end, an XML based UI combined with a JS runtime engine seems to be a very powerful combination... getting similar points of integration with other languages could be equally nice.<p>Something resembling Material Design, or Bootstrap as a cross platform UI toolkit with an XML interface would be a great place to start.  Electron really seems to be as close as it gets for the most part, with the least cross platform effort.",2017-08-22 17:39:08,15074680
3315,"Senior C++ Developer
Since 2004 my client has been developing a wide range of digital sales tools for Media Markt and other software solutions for retail customers from all over Europe. Currently, the company employs 80 qualified, ambitious and fun-loving professionals! Having recently opened a new office in Berlin, they are on the lookout for a number of Agile Senior C++ Developers to join their team
My clients App Team is developing front end solutions for a next generation multimedia platform (eBooks, music, videos and games, etc).
As a new member in their international team, you will build new features and improve existing ones using a cross-platform technical stack (no Xamarin, yes, C++).<p>Your Background: 
	Experience work with at least two languages (C++ and Java&#x2F;Swift&#x2F;C#) 
	Min. 4 years of practical work experience as Software Developer in an agile environment
	Experience in understanding large and complex code bases, including API design techniques to help keep them clean and maintainable
	Strong coding abilities with C++ (Java or Swift is a plus)
	Open to use several languages
	UI tests and unit tests (Espresso, Robolectric, Jtests, Gtests)
	Fluent in English (its their corporate language)
	Team player and willing to work with Agile procedures, preferably with scrum experience.<p>Location Berlin &#x2F; Mitte
Our client site is situated right in the vibrant heart of Berlin. The office is just outside the Spittelmarkt underground station. The rear courtyard provides a peaceful place to work, whilst city life pulsates right on the doorstep. With bistros, restaurants and street cafs on every corner and Kreuzberg within walking distance for after work. The River Spree is just opposite the entrance and there is a park around the corner.
You cant get more Berlin than this.<p>If interested in the role please apply and we will be in touch to discuss further. 
To apply: email sam.woolley@tehkrec.com",2017-08-25 05:24:11,15096310
3316,"I work with both.<p>Extending a bit iainmerrick&#x27;s answer, it depends on what you want to do.<p>C# is stronger on the desktop when focusing on Windows or game development.<p>Thanks to .NET Native, the UWP teams now are doing most of their demos on C#, even when many of the performance critical COM componentes are actually written in C++.<p>For web related development, usually only companies with focus on Microsoft software tend to pick ASP.NET solutions.<p>Now .NET Core might change that, but until 2.0 it was mostly a thing for early adopters. Currently enteprise class databases like Oracle are yet to support .NET Core drivers.<p>For mobile development C# is also a good option, thanks to Xamarin.<p>Another area where .NET is strong is on life sciences, integrating .NET with COM&#x2F;OCX drivers for medical devices or laboratory robots.<p>Java&#x27;s support is stronger on the web, distributed computing, big data, embedded devices and of course Android.<p>Swing and JavaFX can be quite usable, but require a bit of graphics programming skills, so they got the fame of not being easy to produce nice results.<p>For web applications there are lots of stacks JEE, Spring, Netty, Tomcat, JBoss, Jersey,....<p>Also all mainframes also support Java, companies like Gemalto, Ricoh and Cisco have Java OSes on their devices.<p>IBM, PTG, Aicas, MicroEJ, Skelmir are a few exemples of companies selling commercial JDKs for embedded development.<p>Regarding language features C# and F# are more enjoyable, but the open source culture is stronger on the Java side, and there are also alternative languages on the JVM.<p>However on the Java projects I usually work, the customers are very conservative and tend to only accept straight Java code.<p>Also both stacks tend to copy ideas from one another, so it is possible to kind of keep on track with both.<p>The hard part are those areas that are different like lack of values in Java or the way equality works.<p>I love Visual Studio, my favourite Java IDEs are Netbeans and Eclipse. InteliJ and Android Studio need to be tuned to run on my hardware.",2017-08-25 20:31:41,15101955
3317,"Let&#x27;s make .NET hip again... Rise4fun, f# and yes, f* are seriously cool. For any self professed language freak. The framework is robust, fast and now available everywhere. I write and compile large projects on Linux and working on a tool chain to compile iOS Xamarin on Linux.<p>It is very nice. And Bridge.Net is very mature as well; all our core libraries compile with only a few injects and it is not too big either compared to what I see most people doing online.<p>I do a lot of JS because legacy but it really hurts when you have such nice languages and tools.",2017-08-26 07:22:49,15104466
3318,"Fun fact, the Mono Linker project started 10 years ago during the second edition of the Google Summer of Code!<p>It was originally used to reshape the entire Mono class library into a subset to expose the Silverlight class library API surface for Moonlight.<p>It was then used to link iOS and Android applications in MonoTouch and Mono for Android, and Xamarin continued to use and improve it.<p>The Mono Linker has an open architecture making it reasonably easy to customize how it processes code , and detect patterns specific to each platform to link them away. Xamarin added linker steps to do more than tree-shaking, and remove dead code inside methods. For instance:<p><pre><code>  if (TargetPlatform.Architecture == Architecture.X64) {
    &#x2F;&#x2F; ..
  }
</code></pre>
The entire if body can be removed if the linker knows that TargetPlatform.Architecture will not be X64.<p>And now, it&#x27;s the base for the .NET Core linker. Quite a journey!",2017-08-30 20:05:02,15135501
3319,"Sure it does, how do you think Xamarin creates native executables for Apple devices?",2017-08-30 21:23:37,15136163
3320,"&gt;If .NET (using C#) can produce a native binary I&#x27;ll switch to that for as many projects as I can.<p>We&#x27;ve been compiling our large C# games to native code for some years now because iOS only supports signed code. The main problem is you can never JIT; this creates all sorts of limitations with generics, dynamics, expressions and reflection.<p>Xamarin has become better and better at handling generics but there are still a couple of things they just can&#x27;t do anything about.<p>&gt;Memory<p>Yes, the memory looks bad because it will not get completely collected until needed. The framework code is big, but that&#x27;s a flat cost. It might take a little more memory for the runtime up keeping, but it is not 10x. However, memory profiling is a breeze compared to native, so it becomes easier to optimize on a large complicated project.<p>&gt;Performance<p>If you don&#x27;t want to bound check there are a lot of solutions, from simple to advanced. Most of the time we end up just iterating the whole array anyway, and in those case, there are no bound checks.<p>In the rare case where we really need raw power (graphics, path finding, physics, large file access), we use native code and thin wrap it with P&#x2F;Invokes.",2017-08-31 02:57:25,15137854
3321,"MS&#x2F;Xamarin is working on XAML Standard implementations for Win&#x2F;Mac&#x2F;GTK.<p><a href=""https:&#x2F;&#x2F;blogs.windows.com&#x2F;buildingapps&#x2F;2017&#x2F;05&#x2F;19&#x2F;introducing-xaml-standard-net-standard-2-0&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blogs.windows.com&#x2F;buildingapps&#x2F;2017&#x2F;05&#x2F;19&#x2F;introducin...</a>",2017-08-31 08:05:28,15138892
3322,"SEEKING WORK Manchester (UK)&#x2F;Remote<p>C#, MVC, SQL Server, Winforms, WPF, Xamarin.<p>15 years experience with the .net stack, building relevant solutions for clients. Also offering mentoring for junior team members on clean coding.<p><a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;stuart-quinn-consultant&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;stuart-quinn-consultant&#x2F;</a>
<a href=""http:&#x2F;&#x2F;quinnconsulting.co.uk"" rel=""nofollow"">http:&#x2F;&#x2F;quinnconsulting.co.uk</a>",2017-09-01 17:55:53,15150852
3323,"Microsoft has not killed Mono. Mono runs today on more devices than ever (do not think Linux, think Unity3D and Xamarin Apps) and has a unique factoring compared to .NET Core. It is currently very valuable to MS. Yes, Mono&#x27;s class library implementation and Compiler are dead. But who cares. The better implementation won there. But the factoring, the runtime and e.g. the linker are all major assets MS will not easily throw away.<p>Mono is no longer the dominant Open Source .NET version but more an alternative runtime for special use cases. And for server use cases, .NET Core is by many factors better than Mono (stability, performance, ...).",2017-09-04 18:19:41,15169906
3324,"I&#x27;m at a small, dying startup doing Xamarin mobile development and I&#x27;m looking to pivot out of xamarin&#x2F;mobile and into web and data. I am learning online and doing a side project on github, but I don&#x27;t have experience making this kind of transition. I&#x27;ve thrown on an infrequent job application not expecting much and gotten 0 responses. So I am curious what others who have made that sort of transition do to get noticed.
My previous job I found through a local meetup, but it was a framework&#x2F;language I was familiar with so they wanted&#x2F;needed me badly.",2017-09-05 01:55:44,15171987
3325,"<p><pre><code>    Location: Indonesia
    Remote: Flexible
    Willing to relocate: Yes
    Technologies: Ruby, Rails, Java, Mobile Xamarin Android (MvvmCross)
    Rsum&#x2F;CV: linkedin.com&#x2F;in&#x2F;mufid
    Email: d2F6YUBmYXN0bWFpbC5qcA== (base64 encoded. decode it by pasting it into base64 decoder)
</code></pre>
I design platform-agnostic software, construct software, help people write software better and more effective. It is very thrilling for me to build high performance, maintainable, and scalable software. I&#x27;ve worked on high traffic systems with $1B+ monthly revenue and maintaining it at very high uptime.<p>Time wise, my experiences include 5+ years software development and leading a team in various platform. My experience fields include Fleet Management software, geography mapping, remote device tracking, credit card payment, SEA payment, commerce (promotion, discount, voucher).<p>In my spare time, i love to leverage developer communities by sharing some insights. You can see my talks here: speakerdeck.com&#x2F;mufid.<p>I open to any new opportunity, including going abroad (I need visa sponsor to work outside).",2017-09-05 02:06:21,15172027
3326,"What made you want to pivot from Xamarin? Did you find there is a lack of opportunities, or do you dislike the technology? As someone who is looking into moving to Xamarin development I&#x27;d be interested to hear your thoughts.",2017-09-05 08:15:28,15173344
3327,"Xamarin Forms is a dead end in my opinion. I enjoyed writing non-Forms with a shared MVVM framework, but my job was in Forms. I also find mobile development to be too cornered. I was doing both platforms by myself with no room to grow as a developer. I spent too much time in Forms chasing down Forms bugs and trying to figure out why the latest version of Forms broke something new. So a bit of burnout as well. Hope that helps.",2017-09-06 04:45:58,15181284
3328,"Android, UNIX and embedded devices (Ricoh printers and medical devices, factory controls for exemple) prove otherwise.<p>The only problema with Swing (JavaFX not so much) is developers coding away withouth bothering to learn how to use them.<p>Yes, out of the box they are harder to use than Windows Forms, but anyone that bothers to read books like &quot;Filthy Rich Clients&quot; is able to tame Swing.<p>When .NET Core starts supporting a standard GUI (eventually Xamarin.Forms) than runs in all platforms that Java GUIs run today, then you can complain.",2017-09-06 18:31:06,15185978
3329,Maybe someday xamarin can use this compiler,2017-09-07 07:27:41,15189755
3330,"Good article.<p>I definitely think that for a cross platform app, going all out with something like Cordova or React Native isn&#x27;t particularly smart.<p>Sooner or later, you are going to reach a point where you need to use a feature of the underlying OS which your abstraction layer doesn&#x27;t support well (or at all) and will end up having to make a horrible compromise.<p>Also, apps build with these frameworks usually don&#x27;t look or feel native, I can generally tell that I&#x27;m using something built with Javascript (not always, sometimes the developers nail it, but a lot of the time).<p>However I feel that developing completely separate native versions of the same app with zero overlap in code isn&#x27;t smart either.<p>It&#x27;s definitely good to find a middle ground.<p>I personally like Xamarin. Xamarin.Android and Xamarin.iOS get you as close to native as you can get, while still allowing you to share a fair amount of code between the platforms.<p>I&#x27;m using this approach on a project at the moment and it&#x27;s working well.<p>I would love to try Basecamps approach here on a project, it seems very smart.",2017-09-11 11:45:53,15217754
3331," definitely think that for a cross platform app, going all out with something like Cordova or React Native isn&#x27;t particularly smart.<p>Sooner or later, you are going to reach a point where you need to use a feature of the underlying OS which your abstraction layer doesn&#x27;t support well (or at all) and will end up having to make a horrible compromise<p>I cant really speak for Cordova but one of the strengths of React Native is that you can drop to native code relatively easily. Ive done this in the past for projects and its not been a problem.<p>Can you give a specific example of such a compromise?<p>I personally like Xamarin. Xamarin.Android and Xamarin.iOS get you as close to native as you can get, while still allowing you to share a fair amount of code between the platforms<p>Id say the biggest problem with xamarin, aside from debugging, is that all your developers need to learn c# right?<p>At least with the other approaches (article, Cordova, react native) mentioned they can use languages used by the target platforms (web, mobile).",2017-09-11 12:03:14,15217831
3332,Can you also share between iOS&#x2F;Android and Web with Xamarin? Because that&#x27;s what Basecamp&#x27;s approach helps with.,2017-09-11 12:04:40,15217841
3333,"You&#x27;re comparing cordova with RN, and then you&#x27;re saying xamarin is totaly different. It&#x27;s not. RN are native components.
In NativeScript it&#x27;s the same + you get easy access to native apis",2017-09-11 12:39:28,15218044
3334,"Not in terms of UI, no.  If you write your non-UI code in shared libraries that are PCL or .NET Standard and have your web-server use them too, Xamarin enables that scenario, but doesn&#x27;t really bring anything else to the table for a web app.",2017-09-11 18:35:11,15220912
3335,"That&#x27;s not 100% true, there is Visual Studio Mac which is based off Xamarin Studio but has a lot of the internals from Visual Studio in it like InteliSense and Roslyn",2017-09-12 22:47:52,15233699
3336,"C# reflection is also slow, and even slower in Unity3D with the IL2CPP ahead-of-time compiler, where there is no just-in-time compiler or System.Reflection.Emit to dynamically generate code at runtime (which is impossible and prohibited on iOS, for example).<p>Here are the limitations of the Mono runtime:<p><a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;advanced_topics&#x2F;limitations&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;advanced_topics&#x2F;lim...</a><p>However, there are ways of compiling the little snippets of the code you need ahead of time, then plugging them together with delegates at runtime, which avoids much of the overhead.<p>Much of the cost is the overhead of converting from unknown types to specific types. So you can pre-compile loosely typed adaptor thunks that take generic &quot;object&quot; arguments, convert them to the required type, and directly call strongly typed delegates (which you can plug into the adaptor, so adaptors can be used for any number of compatible delegates).<p>Check out how the following code uses FastInvoke, ToOpenDelegate, Delegate.CreateDelegate, Expression.GetActionType, and 
 Expression.GetFuncType.<p>It may be that some of these general techniques could be applied to Java.<p>Faster Invoke for reflected property access and method invocation with AOT compilation:<p><a href=""https:&#x2F;&#x2F;web-beta.archive.org&#x2F;web&#x2F;20120826100615&#x2F;http:&#x2F;&#x2F;whydoidoit.com&#x2F;2012&#x2F;04&#x2F;18&#x2F;faster-invoke-for-reflected-property-access-and-method-invocation-with-aot-compilation"" rel=""nofollow"">https:&#x2F;&#x2F;web-beta.archive.org&#x2F;web&#x2F;20120826100615&#x2F;http:&#x2F;&#x2F;whydo...</a><p>The bane of the iOS programmers life, when working with reflection in Mono, is that you cant go around making up new generic types to ensure that your reflected properties and methods get called at decent speed. This is because Mono on iOS is fully Ahead Of Time compiled and simply cant make up new stuff as you go along. That coupled with the dire performance of Invoke when using reflected properties lead me to construct a helper class.<p>This works by registering a series of method signatures with the compiler, so that they are available to code running on the device. In my tests property access was 4.5x faster and method access with one parameters was 2.4x faster. Not earth shattering but every little helps. If you knew what you wanted ahead of time, then you could probably do a lot better. See here for info.<p>You have to register signatures inside each class Im afraid. Nothing I can do about that.<p>So to register a signature you use:<p><pre><code>    static MyClass()
    {
         &#x2F;&#x2F;All methods returning string can be accelerated
         DelegateSupport.RegisterFunctionType&lt;MyClass, string&gt;();         
         &#x2F;&#x2F;All methods returning string and taking an int can be accelerated
         DelegateSupport.RegisterFunctionType&lt;MyClass, int, string&gt;();    
         &#x2F;&#x2F;All methods returning void and taking a bool can be accelerated
         DelegateSupport.RegisterActionType&lt;MyClass, bool&gt;();             
    }
</code></pre>
Then when you have a MethodInfo you use the extension method
FastInvoke(object target, params object[] parameters) to call
it. FastInvoke will default to using normal Invoke if you havent
accelerated a particular type.<p>myObject.GetType().GetProperty(&quot;SomeProperty&quot;).GetGetMethod().FastInvoke(myObject);<p>myObject.GetType().GetMethod(&quot;SomeMethod&quot;).FastInvoke(myObject, 1, 2);<p>You can download the source code for FastInvoke from here.<p><a href=""https:&#x2F;&#x2F;web-beta.archive.org&#x2F;web&#x2F;20120826100615&#x2F;http:&#x2F;&#x2F;www.whydoidoit.net&#x2F;Downloads&#x2F;DelegateSupport.cs"" rel=""nofollow"">https:&#x2F;&#x2F;web-beta.archive.org&#x2F;web&#x2F;20120826100615&#x2F;http:&#x2F;&#x2F;www.w...</a><p>Newer version from unityserializer-ng:<p><a href=""https:&#x2F;&#x2F;gitgud.io&#x2F;TheSniperFan&#x2F;unityserializer-ng&#x2F;blob&#x2F;master&#x2F;Assets&#x2F;Plugins&#x2F;OpenUnityTools&#x2F;unityserializer-ng&#x2F;Radical&#x2F;System&#x2F;Delegates&#x2F;DelegateSupport.cs"" rel=""nofollow"">https:&#x2F;&#x2F;gitgud.io&#x2F;TheSniperFan&#x2F;unityserializer-ng&#x2F;blob&#x2F;maste...</a>",2017-09-14 11:58:50,15247021
3337,Also Xamarin,2017-09-19 17:55:26,15287024
3338,"Tizen has had multiple UI reboots since the Meego days.<p>The latest one is .NET Core + Xamarin.Forms.<p><a href=""https:&#x2F;&#x2F;developer.tizen.org&#x2F;development&#x2F;tizen-.net-preview&#x2F;introduction"" rel=""nofollow"">https:&#x2F;&#x2F;developer.tizen.org&#x2F;development&#x2F;tizen-.net-preview&#x2F;i...</a><p>I really don&#x27;t thrust anything useful will ever come out of it, given how Samsung has managed it thus far.",2017-09-20 11:27:04,15292531
3339,"I&#x27;d love to know this as well, as we&#x27;re currently evaluating making the leap between RN and Xamarin for our startup.<p>(ideal world, I favor just using the native stacks for iOS and Android but we are short staffed)",2017-09-20 13:58:39,15293757
3340,"I&#x27;ve never used React Native, but I&#x27;ve had negative experiences with Xamarin at my current company. It&#x27;s buggy as heck and the development experience isn&#x27;t great.<p>Most teams are committing to native development after trying Xamarin.",2017-09-20 14:25:15,15294044
3341,"I found Xamarin development to be about 30% faster on average, than native.  But, even with Xamarin Forms, one often needs to customize the UI and code to target android or iOS specific features.  And that is when it&#x27;s a pita, b&#x2F;c now you need to know native and the Xamarin platform.  And it&#x27;s all on you to figure out.. b&#x2F;c the community and resources available are much smaller than the native community.<p>Even with the 30% development savings, I prefer native.  It&#x27;s just less hassle and more enjoyable.",2017-09-21 22:08:46,15307774
3342,C# things : xamarin &amp; mono,2017-09-26 18:46:13,15341468
3343,It crashed every debug deployment. Xamarin on the other hand never does.,2017-09-27 13:49:43,15347752
3344,"Specially irritating is what is still left out of .NET Standard 2.0.<p>Apparently Xamarin.Forms alongside XAML Standard is going to be the UI story for .NET Core, as communicated at .NET Conf 2017 sessions.",2017-09-28 13:42:28,15357047
3345,"I am referring to those. If someone just tries to make Swift the platform, I think they will have to put as much thought into their tooling as xamarin, cordova, etc.",2017-09-28 19:45:55,15360134
3346,"When correcting someone on Internet be sure to know what you are talking about.<p>ExcelsiorJET, JamaicaVM, Aonix PERC, IBM Websphere Real Time, Xamarin on iOS, .NET Native, Bartok.",2017-09-29 12:59:14,15364800
3347,"From the testing we&#x27;ve done internally, not much difference between React Native, Xamarin, Native and Cordova. Was it scientific? Nope. But most couldn&#x27;t tell.",2017-10-01 21:12:43,15379834
3348,"SEEKING WORK :: REMOTE :: Portland, Oregon :: Full Stack Mobile Development<p>I am the Salty Dog: a sturdy, weather beaten crew member who stands at the prow of your ship, guiding you safely through the rocks.<p>Achieve better outcomes through experience, communication, and risk management.<p>Mobile: Design, Coding, QA, Java, C#, Objective-C, Xamarin, Typescript, C&#x2F;C++, Azure, AWS. 
Back End: Azure, AWS, C&#x2F;Net, Node JS, DynamoDB, SQS, S3, Cloudfront, Cosmos DB, Azure Mobile Apps, Azure Functions<p>25+ years experience, 7 years mobile development.<p>How can we help?<p>saltydogtechnology.com&#x2F;blog
<a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;</a>
curtis@saltydogtechnology.com",2017-10-02 16:30:39,15385241
3349,"Sure. The current problem on iOS is that you can not replace the web-rendering engine, thus you have to send messages or call callbacks into the web engine api. You have no guarantees as to when they will be actually executed and you have to serialize your data.<p>In my application I needed to display data incoming from a sensor. I can only access this data using the native functions and it comes at around 500Hz from 16 sensors.<p>For comparison, in Electron, when you call a function defined in a module written in C++, you can get the answer in under 1 ms. When using something like Cordova, you have to serialize the data which can take a seriously long time and then you have to wait for the callback to execute. On Android I suppose it is quite possible to write a V8 native plugin and achieve this performance, but not on iOS where you are limited to included webkit.<p>As for the Android responsiveness, the problem lies with the single threaded nature of JavaScript. CPUs on android phones _suck_ in single core performance. When I was looking for a good solution for multi platform development, I have found of a tech meeting that was supposed to present solutions taken by several different companies. It turned to be a huge complaint-fest about Android javascript performance and the only happy people were those using Xamarin (which is native).<p>Edit: Note that I think that using web views for applications like banking or chat and so on is perfectly fine. My issue is with apps that eat a lot of incoming data and&#x2F;or have to change what is displayed very often.",2017-10-03 17:03:52,15393929
3350,"&gt;  ... went with RN over ObjC&#x2F;Swift, is I can just Cmd+R and boom, my changes are live in a second).<p>As someone with experience in Delphi, C++ Builder, Smalltalk having younger developers rediscovering this looks funny.<p>Have a look at Flutter and Xamarin.",2017-10-03 17:09:30,15393984
3351,"I actually remember Delphi and C++ Builder (though I spent most of my time in Visual C++), and React Native certainly wasn&#x27;t my first exposure to hot reloading, but if your only exposure to iOS programming was via XCode, having hot reloading (whether that&#x27;s React Native or Flutter or Xamarin) can seem like a revelation in how much more productive you can be, when you&#x27;re not waiting for your app to rebuild and install. So from that perspective, it is kind of like rediscovering the old. (And I didn&#x27;t mention it, but React Native can reload while preserving state, it&#x27;s just not the default).<p>Flutter looks very promising btw, I probably can&#x27;t use it yet though for the same reasons as Matcha, which is my current project depends on too many external libraries (for which React Native and the larger JavaScript community has been great).",2017-10-03 18:04:00,15394552
3352,"The official native UI for .NET Core being discussed at .NET Conf 2017 was Xamarin.Forms, as they are adding macOS, Linux and WPF support as well.",2017-10-03 18:58:33,15395050
3353,For business&#x2F;database apps Xamarin Forms can work really well.,2017-10-04 00:13:03,15397338
3354,"That doesn&#x27;t seem to fit with what OP wants, being able to deploy to Windows, macOS and Linux. According to Xamarin&#x27;s website[1] Xamarin.Forms is:<p>&quot;Xamarin.Forms is a cross-platform UI toolkit that allows developers to easily create native user interface layouts that can be shared across Android, iOS, and Windows Phone.&quot;<p>[1]<a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;xamarin-forms&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;xamarin-forms&#x2F;</a>",2017-10-04 20:23:23,15404242
3355,They just rebooted the SDK once more by going .NET Core with Xamarin.Forms.,2017-10-04 23:44:39,15405754
3356,Nor is Visual Studio for Mac - it&#x27;s just repackaged Xamarin Studio.,2017-10-05 20:17:43,15412265
3357,"=================================================<p><pre><code>  Location: Buffalo NY
  Remote: No
  Willing to relocate: Yes
  Technologies: Java, Python, SQL, Android, Xamarin
  Rsum&#x2F;CV: https:&#x2F;&#x2F;drive.google.com&#x2F;open?id=0B_-dDmh6LhISekN5TlB5QlBwbUk
  Email: gourabmi@buffalo.edu
</code></pre>
=================================================<p>I have 4 years of industry experience.
 I would be with an MS in Computer Science from SUNY Buffalo in January 2018.
 Available for full-time work starting February 2018.
 Have F1 STEM OPT work authorization in US.<p><pre><code>  Find out more details at https:&#x2F;&#x2F;about.me&#x2F;gourabmitra</code></pre>",2017-10-06 03:55:36,15414312
3358,"Life is hard for cross-platform environments. Cross-platform apps, never mind runtimes and sdks, don&#x27;t have wide use. React Native is the only notable exception. While tools like Xamarin can make a living, that&#x27;s mostly outside of mass market apps.<p>Web apps on JS are the most compelling example of an app ecosystem that has come unmoored from underlying OSs, but iOS and Android have brought back the dominance of native apps, because the underlying platforms and their capabilities are interesting and useful.<p>Maybe Flutter is a good UI stack for Fuchsia, and maybe easy Web app compatibility would be a boost to both Flutter and Fuchsia, but it will be tough sledding to get Flutter apps accepted by Android and iOS users. Flutter needs to find a place where it is essential, not a compromise for developers searching for a panacea.<p>The reason Java is the most widely used language is that Android turned Java into a platform-specific, UI-stack-specific app language.<p>The irony is that, because of the mountain of highly capable modern mobile apps, I&#x27;d bet that the Android runtime on ChromeOS quickly becomes the most widely used cross-platform runtime, in terms of the number of apps actually used by people and running on multiple platforms.",2017-10-06 21:01:51,15420460
3359,"As some one who has written cordova apps they often times are also good enough. There are cordova apps in the 4.5 range with 100&#x27;s of reviews.<p>Life rpg was one that I remember (now its down to 3.9).<p>The alternative isn&#x27;t writing two native apps, the alternatives are cordova, react-native and xamarin.<p>Frankly I haven&#x27;t other people&#x27;s compatibility issues with react native.",2017-10-07 04:32:01,15422290
3360,"Are you referring to free provisioning? My understanding [1] is that it is only for temporary testing an app on the device, you can&#x27;t leave the app permanently, you have to reinstall it regularly.<p>And you still have to pay a yearly fee, which creates a high barrier to entry for non professionals.<p>[1] <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;getting_started&#x2F;installation&#x2F;device_provisioning&#x2F;free-provisioning&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;ios&#x2F;getting_started&#x2F;ins...</a>",2017-10-07 06:06:25,15422489
3361,"Datumprikker.nl | Full(-ish) stack engineers | Full-time + Onsite | Amsterdam<p>As a developer youll be working in a small Agile team responsible for both backend and&#x2F;or frontend systems, depending on your interests. Youll be working with graphic designers, user experience experts and data scientists. Product changes are driven by metrics, Growth Hack findings and user feedback, so that we can build the best platform for our end users.<p>We offer great coffee, lunch, flexible hours, an awesome office with a great view and an open team culture.<p>Youre smart, open minded and passionate about bringing the best possible experience to our end-users. Youre willing to make mistakes and learn from them. You have an excellent eye for detail and you aim to deliver a high-performance and bug free product, by embracing best practices and working in rapid release cycles. You value quality code and like to create the simplest solution.<p>The stack were working with<p><pre><code>  - A Mac, with the keyboard of your choice (not the noisy DAS keyboards though)
  - Git
  - Docker, k8s
  - Go, C# (.net Core), JavaScript, Java, Xamarin, iOS
  - Postgresql, MSSQL
  - Azure and GCP
</code></pre>
Required Skills and Experience<p><pre><code>  - Full professional proficiency in English
  - A background in Computer Science or similar
</code></pre>
<i>Desired</i> Skills and Experiences<p><pre><code>  - Professional experience with writing (unit-)tests
  - Good understanding of HTTP concepts
  - Good understanding of RPC &#x2F; REST style web-services
</code></pre>
What we offer you
In return for your commitment, we offer you; a friendly environment where we celebrate our achievements, many product related challenges, room for personal growth.<p>We love to hear all about you! Interested? Drop us a line (link on our HN profile).",2017-10-09 12:15:44,15433164
3362,"This surprises no one.<p>I&#x27;m more interested in: what&#x27;s the future for UWP apps now? Another dead end like silverlight?<p>A cross platform UI library that runs on .Net core (ie. windows, mac, linux, android, ios), some kind of hybrid of ??? and Xamarin forms could potentially be quite a nice tool... but its pretty hard to be excited about the prospect with their track record of killed off UI frameworks so far.",2017-10-09 13:30:02,15433586
3363,"That&#x27;s just part of growing pains. I imagine that when Microsoft finishes their long term plan for .NET the layers will basically be:<p>.NET Core - implements .NET Standard.<p>Everything else is layered on top of .NET Core: .NET Framework (Windows), Xamarin (Linux, MacOS GUI, Android, iOS).<p>So basically everything in use will support .NET Standard.<p>Retconning is a bitch :p",2017-10-09 13:39:34,15433655
3364,"Apparently Xamarin.Forms, from the .NET Conf 2017 roadmap talks.",2017-10-09 14:18:04,15433962
3365,"Xamarin.Forms is currently available for iOS, Android, UWP.<p>At .NET Conf 2017 they announced support for macOS, Linux and WPF. And demoed macOS and Linux current status.<p>While previously at BUILD 2017 they announced XAML Standard for interoperability between WPF, UWP and Xamarin.Forms.<p>Which kind of implies it is the way forward.",2017-10-09 14:30:31,15434062
3366,"Windows Forms is a thin wrapper around the Win32 API and GDI+. Which is good if you want to customize things on a low level, but bad if you want to run it anywhere else. But cross-platform compatibility for a UI framework was probably a very low priority in 1999 or 2000. You could port it to .NET Core, but then you could only run it on Windows, since pretty much <i>everything</i> is a P&#x2F;Invoke into user32.dll.<p>Generally, having something cross-platform either means you&#x27;re terrible <i>everywhere</i> (Swing), terrible on non-primary platforms (GTK), or have to invest a lot of work in making things work well and <i>still</i> don&#x27;t quite feel native (Qt). Or you go the Xamarin Forms route and have a few core controls that have to be implemented natively on every platform, which reduces their features to the lowest common denominator, often doesn&#x27;t expose or enable low-level platform details that may sometimes be needed for customization, and means that you have to invest thrice as much effort into making everything work.<p>In my experience UI frameworks either are bound to a specific platform, or suck. Or both. But a cross-platform WPF would be awesome, but I&#x27;d rather expect UWP to become cross-platform instead of WPF.",2017-10-09 15:15:03,15434479
3367,&quot;.NET apps on Android&#x2F;iOS&quot; are actually a very popular thing - the framework is just named Xamarin instead of .NET.,2017-10-09 16:02:15,15435004
3368,"Windows phones themselves are fine. But two things were massive failures:<p>1. Microsoft created development tools that are not appropriate for real-world use cases and tried to push that on devs and companies, which failed spectacularly. The demand for apps which work on Windows desktop and Windows phone literally doesn&#x27;t exist. It doesn&#x27;t matter that Microsoft would have loved it if people built apps like that. If there is no demand for such apps they don&#x27;t get built (and they didn&#x27;t). You get garbage (compared to WPF or even WinForms) &quot;metro&quot; or whatever you call them now desktop apps that are intensely hated by Windows users and you get a WP app that you can&#x27;t reuse to build an iOS or Android app... The UI was also completely different so you couldn&#x27;t even really reuse much of the design. So no code sharing, no design sharing.<p>What .NET devs wanted was a way to build apps using C# that work on all mobile platforms (we never cared about a mobile app working on desktop). If you had given us that you would have had your apps purely by virtue of piggybacking on iOS, Android and .NET popularity. We complained about the retarded &quot;multiplatform within the Windows ecosystem&quot; approach from day 1 yet Microsoft released several iterations (not backwards-compatible, of course, so they were losing some devs each time) of this garbage before finally listening to the market and embracing Xamarin at which point it no longer mattered as WP was a joke. A LOT of people love C# and are willing to jump through hoops to develop multiplatform apps with it. XAML is also very cool. Microsoft had that part in the bag, yet completely failed to use this to their advantage. Imagine if when WP7 (or even WP8) was released Microsoft was able to say &quot;here, you can now develop mobile apps in C# and they will also build for iOS and Android!&quot; .NET devs would have jizzed in their pants.<p>2. Microsoft threw the existing WP users in the trash with WP7 -&gt; WP8. My iPhone updated for like 7 years through god knows how many iOS versions. When I bought a new one, it felt almost exactly the same except faster due to better hardware. People were wary of buying a WP because they got burned once.",2017-10-09 17:35:59,15435801
3369,"But then, if there are bunch of .NET developers, there&#x27;s Xamarin.",2017-10-09 17:57:22,15435986
3370,"Disclosure: I work at Microsoft, I have worked for Microsoft before and quit, and come back. I love the company, but I am no zealot (tried to standardize a company on Macs during my six years away, because it made sense). I never worked on Windows Phone, but I know the company and the tech well.<p>Here is where we fucked up:<p>1. We were, for a long time, a company, where every product&#x2F;business group had to pay for its own right to exist. Everyone had their own P&amp;L, contribution margin targets, marketing. You had to make money by yourself to stay alive. KT made sure we all understood this.<p>2. We had a history of &quot;fast follower&quot; successes - Windows, Word, Windows Server, SQL Server, Exchange, IE, even Intune nowadays, and many many others got successful not by disrupting the current market leader or by hardcore innovation, but by leveraging either an open or standard platform and always getting better, without trying to rewrite the rules of the game. OK, maybe Office rewrote them when it came out, but it was packaging.<p>3. Balmer (whom I love as a leader) got trolled by Apple&#x27;s and Google&#x27;s success, and Microsoft graduating from not really cool to quite uncool. So he decided to tackle them the way it had worked before (point 2.). Simultaneously, he tried to correct point 1, but, as radical as his 2014 reorganization to break org barriers was, he did not get rid of KT (Kevin Turner). KT brought in the money, KT defined the culture. Everyone had to keep making their own money.<p>We could have:
Offered the mobile OS for free from day one. 
Given Office on Mobile for free from day one. 
Bought or OEMed Xamarin a lot sooner. 
Returned 100% of app revenue to app devs who sell through the Windows Store. 
Made dev tools (Studio CE) free earlier. 
Guaranteed no data collection (remember the Scroogled campaign?)<p>All those have either been done, or are irrelevant now, while the stock is still at a record high, after we lost the game... We could have done all of the above and fare better than we have, and we have fared well.<p>Instead, we comp hardware sellers on MARGIN, as if it makes a bloody difference. We monetize the post install experience. All bullshit for pennies. Everyone had to make money on their own so we missed the bigger picture.<p>Satya fixed this, and it hurt, as it was the only way left to go. I gave up on a phone I really liked, as I saw no future.<p>I don&#x27;t know if I should hope for us bringing new phones out, but I sure hope we never again let our Operating Mechanisms kill our ability to see the big picture and disrupt the market.",2017-10-09 19:44:38,15436831
3371,"&gt; We could have: Offered the mobile OS for free from day one. Given Office on Mobile for free from day one. Bought or OEMed Xamarin a lot sooner. [...]  Made dev tools (Studio CE) free earlier.<p>Quoted for emphasis. It&#x27;s remarkable in hindsight that Microsoft didn&#x27;t try to leverage it&#x27;s own already successful products with their inherent network effects, to buy market-share.",2017-10-09 21:52:51,15437789
3372,"It&#x27;s the same problem that you have, isn&#x27;t it? You don&#x27;t want to support two codebases, you just want to build your app once and have it run in two places. It costs time and development budget to maintain two different codebases, and you have to prioritize. Can you really blame Microsoft that they don&#x27;t want to maintain both a modern codebase and a completely separate fork&#x2F;back-port of it for a much older branch?<p>That said, it has been possible to share a lot of code (if not almost all of it) between a WPF and UWP app for a while now with PCLs, or after that targeting .NET Standard. That gets even easier once UWP support for .NET Standard 2.0 ships soonish. There&#x27;s also been work recently on Xamarin.WPF for Xamarin&#x27;s cross-platform code sharing, and the XAML Standard 1.0 work trying to converge much of the XAML across all the platforms Xamarin supports and UWP to get rid of a some of the dialectal nuances.",2017-10-10 14:02:26,15441821
3373,"* .NET Standard is a set of APIs that all .NET platforms have to implement. This unifies the .NET platforms and prevents future fragmentation.<p>* .NET Standard 2.0 is implemented by .NET Framework, .NET Core, and Xamarin. For .NET Core, this added many of the existing APIs that have been requested.<p>This seems to support the narrative that windows is really fickle in what is &#x27;the thing we are definitely going to support from now on&#x27;.",2017-10-10 19:05:25,15444443
3374,"Hello world!<p>Developers Ultimate Dream: Kick-start Your App on ANY framework (Angular, React, Vue, Ionic, Electron, Xamarin, .NET )<p>INTRO
NinjaCodeGen aims to disrupt the software development industry by
1. making it easy to generate apps based on any framework
2. incentivizing app-template creators with profit-sharing
Think of it as a Software-factory marketplace to kick-start apps.
VISION
The worlds shared software department to delight developers by making it easy to kick-start apps in multiple frameworks.<p>https:&#x2F;&#x2F;medium.com&#x2F;ninjacodegen&#x2F;developers-ultimate-dream-kick-start-your-app-on-any-framework-angular-react-vue-ionic-43325f5e6cf1<p>Any feedback welcome! Thanks! Let&#x27;s go play with some code!",2017-10-10 20:55:51,15445244
3375,"I know the feeling; several years ago my mom bought a Windows Lumia phone for $30 new, the hardware specs were nice, but the apps were just non existent, and though it&#x27;s gotten 1000 times better its still very lacking. Also the camera is surprisingly high quality and fast.<p>My 5S is going to cost $50 for a new battery and screen - and it&#x27;s still worth a few hundred more new; however her phone&#x27;s HW specs are still mostly better than mine, except I think the RAM which is the same.<p>A year ago I remember thinking If microsoft wanted to save windows 10 mobile&#x27;s life I think they should have put a large amount of that cross-platform smartphone programming effort into trying to make Win10 Mobile capable of running some android apps, the desktop version has a linux subsystem after all. that way they could have expanded their user base and made it a more attractive platform, especially with the lower cost.<p>Making 10 Mobile decently Popular for any reason would have given developers a good reason to switch to xamarin for developing native apps on every platform, win-win.<p>Alas they didn&#x27;t do anything encouraging enough to grasp that potential double benefit...",2017-10-11 08:35:49,15448189
3376,"Hello world!<p>Any feedback welcome! Thanks!<p>Developers Ultimate Dream: Kick-start Your App on ANY framework (Angular, React, Vue, Ionic, Electron, Xamarin, .NET )<p>INTRO 
NinjaCodeGen aims to disrupt the software development industry by 1. making it easy to generate apps based on any framework 2. incentivizing app-template creators with profit-sharing Think of it as a Software-factory marketplace to kick-start apps.<p>VISION 
The worlds shared software department to delight developers by making it easy to kick-start apps in multiple frameworks.<p><a href=""https:&#x2F;&#x2F;medium.com&#x2F;ninjacodegen&#x2F;developers-ultimate-dream-kick-start-your-app-on-any-framework-angular-react-vue-ionic-43325f5e6cf1"" rel=""nofollow"">https:&#x2F;&#x2F;medium.com&#x2F;ninjacodegen&#x2F;developers-ultimate-dream-ki...</a><p>Let&#x27;s go play with some code!",2017-10-11 11:30:57,15448881
3377,"I assume there&#x27;s plenty of options... Qt or gtk bindings, electron, etc<p>Looks like Xamarin is building full cross-platform support via XAML<p><a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;</a><p>Avalonia seems like a straightforward reimplementation of WPF that is already usable.<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia</a><p>DotVVM is working on electron support, and I work with it already. I like it.<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;riganti&#x2F;dotvvm-electron"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;riganti&#x2F;dotvvm-electron</a>",2017-10-12 14:47:19,15458341
3378,"Oh yes for sure, but that&#x27;s always been there. .NET has always been used widely for business internal stuff and that&#x27;s what kept it alive. But the recent C# renaissance seems to be about app building stuff like Xamarin or Unity.",2017-10-13 11:09:07,15464592
3379,"If Java and .NET produced executables like C and C++, there would be less need for them.<p>Instead, one is forced to deliver the VM with the application or buy a third party AOT compiler like Excelsior JET, while depending on another language for implementation.<p>This made everyone that cared about writing native executables focus on C and C++, with the respective increase in unsafe code.<p>This is finally changing thanks to D, Go, Swift, Rust, but slowly.<p>So we have .NET Native on UWP, Xamarin on iOS and Android and IL2CPP on Unity.<p>Java now started a long road that will take several years until Project Metropolis will finally deliver some kind of results.",2017-10-17 13:53:51,15490876
3380,"I guess you never bother to actually program on it.<p>Tizen already went through these reboots:<p>1 - Replaced Meego SDK with Bada OS SDK<p>2 - Replaced Bada OS SDK with EFL + C++ SDK<p>3 - Dropped C++ SDK and replaced a new pure C API alongside EFL<p>4 - Currently adopting .NET Core + Xamarin.Forms<p>Then there is the whole issue of code quality.<p><a href=""https:&#x2F;&#x2F;what.thedailywtf.com&#x2F;topic&#x2F;15001&#x2F;enlightened"" rel=""nofollow"">https:&#x2F;&#x2F;what.thedailywtf.com&#x2F;topic&#x2F;15001&#x2F;enlightened</a><p><a href=""https:&#x2F;&#x2F;www.theregister.co.uk&#x2F;2017&#x2F;07&#x2F;12&#x2F;samsungs_tizen_no_longer_worst_ever&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.theregister.co.uk&#x2F;2017&#x2F;07&#x2F;12&#x2F;samsungs_tizen_no_l...</a>",2017-10-19 08:34:07,15506347
3381,"The main reason i move from c# to typescript js because c# not working on client side web. I love c#, maybe if dotNetAnywhere is ready for production, i start using c# again. Keep the good work. Maybe someday aspcore, xamarin and dotNetAnywhere. It would be awesome",2017-10-20 17:08:58,15517381
3382,"It is a valid bragging point for Godot that probably doesn&#x27;t have much to do with Unity which had been trapped in an old version of mono for licensing reasons (not because of the toolchain - it was the other way around). Unity has been able to start updating now that Microsoft opened up and bought Xamarin), and is now offering Mono&#x2F;.Net 4.6 and C#6 and I assume will continue to modernize.",2017-10-22 02:43:26,15524871
3383,"You don&#x27;t have to use the C# features of Godot. You can still use GDScript to code your game in, or GDNative with any extending language like D, Go, or Rust, so long as you find bindings for them. I wouldn&#x27;t worry about Microsoft being owed favors, I&#x27;d worry more about actual licensing, and if it wasn&#x27;t for Microsoft (or so I suspect) Mono would still not be as openly licensed as it is now[0].<p>[0]: <a href=""http:&#x2F;&#x2F;www.mono-project.com&#x2F;news&#x2F;2016&#x2F;03&#x2F;31&#x2F;mono-relicensed-mit&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;news&#x2F;2016&#x2F;03&#x2F;31&#x2F;mono-relicensed-...</a><p>Note how Microsoft was mentioned for their license change (why would that be if Microsoft had nothing to do with the change, wondering if buying out Xamarin gave them power over making Mono more open), and it was announced at the annual big Microsoft event no less. I&#x27;m all for yelling at Microsoft when they screw up, but they&#x27;re doing good things with .NET and C#.",2017-10-22 03:50:52,15525074
3384,"Mono, .NET Framework, .NET Core, Xamarin.&lt;Platform&gt;, etc are all just different implementations of .NET Standard.  I believe .NET Framework is a superset of Core.<p>They can all run code targeted at Standard but all have slightly different libraries on top of Standard.  Mono was originally was intended to be a cross platform stand-in for .NET Framework which is why they can mostly run the same code.  I believe Mono and Framework are slowly merging together.",2017-10-22 05:47:30,15525348
3385,"It wasn&#x27;t licensing reasons but monetary ones, rather Unity did not want to pay Xamarin what they asked for.",2017-10-22 13:36:04,15526756
3386,"The sad fact of life is that large corporations often dictate the platform. If you&#x27;re a mobile app developer, for example, you&#x27;re only native options are Swift, Java and Kotlin unless you&#x27;re prepared to settle for a less efficient end product (Xamarin, Scala&#x2F;Android, Clojure&#x2F;Android).",2017-10-22 17:27:16,15527865
3387,"I do Android dev in Visual Studio with Xamarin.<p>Your app is structured the same as a native one (Activities, Receivers, Services, Layouts, etc) and the XML for your layouts is identical, but you get to work in C# and dont have to deal with Gradle etc.<p>I like it.",2017-10-26 13:54:30,15558788
3388,"Hey, I work with AWS Serverless Stack (Lambda, DDB and API) along with Angular 2. I also do work with Xamarin.",2017-10-26 15:21:07,15559637
3389,"Cordova in Visual Studio right now.<p>(On very lean teams that don&#x27;t have the resources to build bespoke UI for every platform, even with Xamarin or React Native, and the web platform is a good compromise for the simple data collection apps we are building.)",2017-10-26 15:33:07,15559786
3390,"What downsides does it have compared to a more traditional environment? I&#x27;m a C# developer so Xamarin sounds really tempting, it&#x27;s just that I don&#x27;t want to break my head on &quot;simple&quot; stuff I could easily avoid with a traditional environment",2017-10-26 16:00:59,15560097
3391,"You still have to learn the underlying story platform and API, thats not abstracted. Also choosing between Xamarin Forms and Xamarin Native for the UI (not compatible between them). Obscure errors sometimes.<p>But from my (little) experience on it, getting to an app running and start working on it is way mire easy than with the Java approach. Give it a try :)",2017-10-26 16:41:47,15560522
3392,"I cannot decide between these two:<p>C# Pros:
- Is more popular therefore easier to find a job
- Is more general purpose as it allows for the creation of games on any platform with unity or similar, for mobile apps with Xamarin and it also does web,desktop stuff pretty well<p>C# Cons:
- While we can now develop apps on any platform it still kind of locks you into windows since that&#x27;s the only OS for which it offers superb tooling<p>Kotlin pros:
- Modern language supported by google
- Removes a lot of the boilerplate
- Has the best tooling<p>Kotlin cons:
- Isn&#x27;t as general purpose as C#
- Isn&#x27;t mature
- Not as popular so it&#x27;s harder to get a job<p>Anyway which one would you guys use?",2017-10-28 10:54:04,15574694
3393,"&gt; there is no sign of UWP going away anytime soon<p>Except for Windows Phone getting killed, which was the _main_ device type for UWP. The Windows app store is the same graveyard that it was in late 2015 when the announcements around new Windows Phones piqued my curiosity. It looks like that&#x27;s simply not a thing anymore. I&#x27;m betting my money on Xamarin and the browser for a client application, not UWP. There&#x27;s just no point to it.",2017-10-30 01:42:00,15582600
3394,"What the hell is taking up all that RAM? Slack is using over 800MB of RAM on my computer right now, and it&#x27;s completely idle. I&#x27;ve got a C# process on my computer right now handling thousands of messages <i>per second</i> and consuming 1&#x2F;20th the RAM. If you rebuild Slack in Xamarin you&#x27;d probably drop your RAM consumption to under 50MB, just a guess. JS fiends are gonna tell me C# ain&#x27;t JS, and I agree. TypeScript ain&#x27;t JS either, and it&#x27;s a hell of a lot closer to C# than it is JS.<p>I&#x27;m a big JS guy, believe me, but I wouldn&#x27;t call a chat app using &quot;only&quot; 800MB of RAM a &quot;win.&quot; Sorry to the guys who worked hard on this.",2017-10-30 18:18:19,15587503
3395,"Even if it was done in Xamarin, you&#x27;d still need some kind of web client &#x2F; browser to fetch and render the actual slack workspaces",2017-10-30 21:19:38,15588993
3396,".NET Framework | Proprietary | Windows 98 or later<p>.NET Micro Framework | Apache 2.0 | Win+Bare Metal<p>.NET Core | MIT License | Win+macOS+Linux(x64+armhf)<p>Xamarin | Proprietary | Android, iOS, and Windows<p>mono | MIT License |
    Linux
    Mac OS X, iOS, tvOS, watchOS
    Sun Solaris
    BSD - OpenBSD, FreeBSD, NetBSD
    Microsoft Windows
    Nintendo Wii
    Sony PlayStation 3
    Sony PlayStation 4<p>Of course &quot;having a runtime&quot; is not the same thing as &quot;having a good way to write cross-platform applications&quot;.",2017-10-30 21:30:28,15589064
3397,"Why slack desktop use electron? Slack mobile app using xamarin. Why they not porting from mobile app to desktop? U must learn electron, and also not running on native",2017-10-30 21:44:35,15589183
3398,"Nope but few (if any) platforms will accommodate such a demand. Xamarin will produce different bytecode from mono, for example.",2017-10-30 22:21:02,15589491
3399,"I mean Im not recommending it for production, but wasm is right around the corner, perhaps C# Xamarin on the web is closer than we think.",2017-10-31 02:10:32,15590659
3400,Xamarin + native UIs,2017-11-01 15:05:58,15601794
3401,"SEEKING WORK - REMOTE - Portland, Oregon<p>Full Stack Mobile Development<p>Android&#x2F;iOS&#x2F;Xamarin&#x2F;Cordova. Serverless back-ends Amazon&#x2F;Azure&#x2F;Google. Website integration Node&#x2F;PHP&#x2F;ASP. App Design.<p>25+ years experience, 7 years mobile development. I am the Salty Dog: a sturdy, weather beaten crew member who stands at the prow of your ship guiding you safely through the rocks.<p>How can we help?<p>saltydogtechnology.com&#x2F;blog
<a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;</a>
curtis@saltydogtechnology.com",2017-11-01 17:57:51,15603785
3402,"Xamarin is the obvious choice (C#, F#).",2017-11-01 18:04:12,15603844
3403,"I have more than +20 years of experience building software. Mostly, as contractor and &quot;ghost&quot; developers. Apps for Government, private sector and other startups&#x2F;software companies. Hired to do refactoring, tech upgrades and rewrites in the same or another language. Full stack. Competent english.<p>Location: Envigado&#x2F;Colombia (close to medellin)
Remote: YES!<p>Willing to relocate: No<p>Technologies:<p>Python (django, django rest framework, flask), F#, C#, iOS (swift, objective-c, xamarin), windows&#x2F;osx native apps (delphi, .net), RDBMS (PostgreSQL, Sql Server, Sqlite, Firebird, others...)<p>Rsum&#x2F;CV:<p><a href=""https:&#x2F;&#x2F;stackoverflow.com&#x2F;story&#x2F;mamcx"" rel=""nofollow"">https:&#x2F;&#x2F;stackoverflow.com&#x2F;story&#x2F;mamcx</a><p>Email: mamcx@elmalabarista.com &#x2F; www.elmalabarista.com",2017-11-01 18:42:42,15604251
3404,I&#x27;m a non-designer developer that&#x27;s developing mobile applications in Xamarin.  I&#x27;v read the Android and iOS style guides and can mock up decent UIs using Adobe XD.<p>Where I&#x27;m having a problem is translating the mock UIs into XAML.  Is there a better XAML design tool than Visual Studio?<p>What approaches can I use to improve my XAML layout skills?,2017-11-01 18:48:53,15604323
3405,"Hodei (<a href=""http:&#x2F;&#x2F;hodeitech.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;hodeitech.com&#x2F;</a>) | Senior Software Engineer&#x2F;Ops | Indianapolis, IN| REMOTE or In-office, Salary: &gt; $90K + equity<p>We are a Google Glass Partner:<p>Access to quality healthcare in remote and rural settings is now a reality! Hodei Technologys unique hands-free HIPAA-compliant telepresence solutions allow medical experts to provide real-time remote oversight and task direction from&#x2F;to anywhere around the globe through the integration of their first-person POV technology, featuring Glass Enterprise Edition.<p>Stack: .net &#x2F; C# &#x2F; MVC &#x2F; WPF&#x2F; MSSQL &#x2F; Xamarin (hosted on AWS)<p>Interested in Video streaming (h264-h265) or TCP&#x2F;UDP communications? Its a fun project that can really change how healthcare is delivered around the world.<p>-- Senior Software Engineer (C#)<p>-- Senior DevOps Engineer<p>Email me at mark.gamache [at] hodeitech.com",2017-11-02 08:51:03,15608788
3406,"<p><pre><code>    Location: Indonesia
    Remote: Flexible
    Willing to relocate: Yes
    Technologies: Ruby, Rails, Java, Mobile Xamarin Android (MvvmCross)
    Rsum&#x2F;CV: linkedin.com&#x2F;in&#x2F;mufid
    Email: d2F6YUBmYXN0bWFpbC5qcA== (base64 encoded. decode it by pasting it into base64 decoder)
</code></pre>
I design platform-agnostic software, construct software, help people write software better and more effective. It is very thrilling for me to build high performance, maintainable, and scalable software. I&#x27;ve worked on high traffic systems with $1B+ monthly revenue and maintaining it at very high uptime.<p>Time wise, my experiences include 5+ years software development and leading a team in various platform. My experience fields include Fleet Management software, geography mapping, remote device tracking, credit card payment, SEA payment, commerce (promotion, discount, voucher).<p>I have experience with various programming languages, such as C, Java, and Ruby, but i code mainly in Ruby and Java. In fact, i am a fast learner and i can grasp new concept in short time. By platform-agnostic, it also mean I can learn current codebase rather quick.<p>In my spare time, i love to leverage developer communities by sharing some insights. I was speaking in latest Ruby Conference in Jakarta about one of important parts about software stability: understanding and preventing race condition. The conf was here <a href=""http:&#x2F;&#x2F;ruby.id&#x2F;conf"" rel=""nofollow"">http:&#x2F;&#x2F;ruby.id&#x2F;conf</a><p>Going anywhere is fine for me. I need visa sponsor to work outside.",2017-11-02 23:13:14,15615234
3407,Please use Xamarin.Forms or Avalonia instead.,2017-11-03 07:51:41,15617364
3408,"Can&#x27;t we just make a proper, easy to use portable desktop application framework please? I really don&#x27;t care what language is used so log as JS is avoidable (It can still be a compilation target so it could even be JS), and I can make a snappy desktop app that takes 10 not 100mb.<p>I&#x27;m not even sure which one I&#x27;m hoping for at the moment. Xamarin seems to have bet fully on mobile. Avalonia looks nice but feels like it would need some enterprise backing.",2017-11-03 08:38:41,15617573
3409,"According to the latest Windows Developer Day, Xamarin.Forms is that framework in what concerns Microsoft.<p>As for the rest, sorry for being so blunt, but it is just not wanting to learn.<p>We we were writing applications across multiple OS and hardware architectures for ages now.<p>It is easy, no, as it requires actually putting some effort into a proper architecture and OS&#x2F;hardware abstractions, but it is surely doable.<p>It feels like devs now want to write apps without spending any real effort on them.",2017-11-03 10:05:10,15617936
3410,"I&#x27;ve had good luck so far with Xamarin.Mac + traditional WPF for macOS and Windows respectively, with a PCL containing 90% of the shared code. Xamarin.Mac doesn&#x27;t seem neglected to me, and the forums are decently active for support.",2017-11-03 11:56:09,15618433
3411,"Maybe non-Xamarin-employee interest has declined sine the announcement of Xamarin Forms coming to the desktop?<p><a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;</a> (2017May)",2017-11-03 12:28:10,15618594
3412,"<a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;forms</a><p>Mac desktop support is in preview (<a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;preview-bringing-macos-to-xamarin-forms&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;preview-bringing-macos-to-xamarin-f...</a>), and Linux and WPF backends are in development. So ... almost there!",2017-11-03 13:15:50,15618920
3413,"Maybe I&#x27;m confused, by Xamarin.Mac do you mean Visual Studio for Mac?",2017-11-03 13:29:59,15619019
3414,"Xamarin.Mac is the project emcompassing bindings from Cocoa (i.e. native macOS) to Mono&#x2F;.NET, the interface with Xcode for building Cocoa UIs, and Visual Studio for Mac (previously called Xamarin Studio). Essentially, Xamarin.Mac allows you to build C# applications that run on macOS with native macOS user interface elements. See e.g. <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;your-app-on-66-million-macs-c-sharp-on-mac&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;your-app-on-66-million-macs-c-sharp...</a>",2017-11-03 13:34:28,15619063
3415,"That&#x27;s good point.<p>But one big difference between Xwt and Xamarin Forms is that Xwt supports Linux via GTK (GTK1, GTK2 &amp; GTK3) whereas Xamarin Forms does not.<p>Xamarin Forms also requires different code for different targets, such as:<p><pre><code>   &#x2F;&#x2F; Android
   Forms.Init(this, null);
   var androidFragment = new MyFormsPage().CreateFragment(this);
 
   &#x2F;&#x2F; iOS
   Forms.Init()
   var iosViewController = new MyFormsPage().CreateViewController();
 
   &#x2F;&#x2F; UWP
   Forms.Init(e);
   var uwpElement = new MyFormsPage().CreateFrameworkElement();</code></pre>",2017-11-03 14:19:47,15619364
3416,"Xamarin and C# are great, I will use them for the next desktop + mobile project. I was looking at this option for a long time and the acquisition by Microsoft added enough confidence in the future of the stack.",2017-11-03 14:35:16,15619458
3417,"From the roadmap linked in that blog post:<p>Xamarin Forms Gtk# Backend - <a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms&#x2F;pull&#x2F;1174"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms&#x2F;pull&#x2F;1174</a><p>It&#x27;s all floating out there right now but maybe by end-of-year (&quot;Q4 2017&quot;) there will be something solid. This uncertainty promises enough to keep people like me from evaluating alternatives.",2017-11-03 15:16:36,15619793
3418,"Location: Dallas, TX<p>Remote: OK<p>Willing to Relocated: Yes!!<p>Technologies: AWS, Xamarin, Angular 2+, C#, Node.js, Python, Apache Spark<p>Resume&#x2F;CV: <a href=""http:&#x2F;&#x2F;www.heyraviteja.com&#x2F;resume.pdf"" rel=""nofollow"">http:&#x2F;&#x2F;www.heyraviteja.com&#x2F;resume.pdf</a><p>Email: rlingineni97@gmail.com<p>Github: <a href=""https:&#x2F;&#x2F;github.com&#x2F;rlingineni"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;rlingineni</a><p>---
New Grad Here.<p>I have a simple goal, its to solve many problems within the little time that we have. Thats what I love doing, is solving problems. I&#x27;m a self-motivated individual that loves working on weekend projects. I want to work for a company that values high-quality work and is able to offer me autonomy in doing my work. I can spec, design and implement projects end to end whether they&#x27;re websites or mobile-apps. I even do hardware projects, so working with BLE or Networks is no problem for me.",2017-11-03 16:00:28,15620156
3419,"&gt; _It_ makes apps expensive and slower to develop across platforms<p>Can you clarify specifically what you mean by _It_ there? Maybe (working backwards up the comment chain...) C++, Qt, MVC, &quot;writing apps without spending any real effort&quot;, duplicating &quot;applications across multiple OS and hardware architectures&quot; (my vote for most likely), Xamarin.Forms, &quot;easy to use portable desktop application framework&quot;, or something else?",2017-11-03 17:26:51,15620805
3420,"Yes, it&#x27;s called Kotlin Native: <a href=""https:&#x2F;&#x2F;github.com&#x2F;JetBrains&#x2F;kotlin-native"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;JetBrains&#x2F;kotlin-native</a><p>Kotlin right now is a serious competitor for a full stack, any device language. An alternative may be F# which has Fable for Browser, Xamarin (mobile) and .net core for server. But Kotlin looks more integrated to me.<p>Coming from a C#&#x2F;F# background, Kotlin is really a joy to use.",2017-11-04 19:27:09,15626477
3421,"It is a well-known fact that logistics brands deal with massive amounts of complexities in their operations everyday. UPS, a leader in logistics and transportation, delivers 19+ million shipments every day, in 220+ countries and territories. They serve real-time tracking requests of more than 100 million per day. It is very evident that managing such complex operations is impossible to be achieved manually.<p>The UPS mobile app has been able to help their customers immensely in real-time tracking of shipments, estimating delivery times and understanding pricing. With Xamarin, they were able to allow their customers to use the app on different types of mobile devices. Using Xamarin, they also created the UPS Bot to provide their customers another communication channel.<p>PSI has extensive experience in developing enterprise mobility solutions for leading logistics service providers. They have worked on cutting-edge technologies such as Xamarin and Azure in developing solutions for the logistics industry.<p>These solutions are capable of providing real-time tracking of vehicles and customer notifications, efficient resource management, reduction in errors, and instant and accurate invoicing.<p>In order to understand how these solutions can benefit a logistics service provider, let us look at some of the common challenges being faced by them today.<p>Use this link to read full article ==&gt; http:&#x2F;&#x2F;www.thepsi.com&#x2F;de&#x2F;the-changing-face-of-logistics-brands-with-mobility&#x2F;",2017-11-10 08:38:44,15668696
3422,"I think a lot of the Mono Team worked for Xamarin. As Microsoft acquired Xamarin and by that act, opened up most of the Xamarin&#x2F;Mono codebase that had previously been licensed to ensure a commercial fee could be generated.<p>Miguel posted the article and he&#x27;s a Microsoft Employee for sure.<p>I think the runtimes are slowly converging. The main issue at the moment is that Core is more focused on Web and back-end targets. To replace Mono, it needs to support UI targets such as desktop Windows, Mac and Linux, as well as mobile targets such as Android and iOS. It&#x27;ll happen. Most of the .Net platforms seem to use the Roslyn compilers these days. Next step is to converge at a library level, then at a VM level I think.",2017-11-13 16:50:35,15687812
3423,"No, Core happened before Mono integrated in to the Standard platform. I believe Mono started to use the open sourced components of Core&#x2F;.Net framework to replace some of their components.That might be where the confusion lies. Then at some point after that, Microsoft acquired Xamarin and opened the Mono&#x2F;Xamarin platforms fully (the Mono runtime used to have tricky licensing that meant that embedding it required a commercial license.)",2017-11-13 16:55:29,15687853
3424,".Net Standard is the standard. There is only 1 standard.<p>.Net Core is one implementation of the standard. .Net 4.6 is another implementation of the standard. Mono, Xamarin, Universal Windows Platforms are other implementations.<p>The idea is that any code written for .Net standard, will work across the different implementations.",2017-11-13 17:38:31,15688223
3425,"That sounds like the right answer. (I don&#x27;t imagine Mono&#x2F;Xamarin are to blame, as they were independent until recently. This is a big self-inflicted mess by MS.)",2017-11-13 17:52:02,15688345
3426,"Great to hear that you&#x27;re excited by it, we&#x27;re too :)<p>This blog post has a few more details and examples of the WebAssembly work: <a href=""http:&#x2F;&#x2F;www.mono-project.com&#x2F;news&#x2F;2017&#x2F;08&#x2F;09&#x2F;hello-webassembly&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;news&#x2F;2017&#x2F;08&#x2F;09&#x2F;hello-webassembl...</a><p>Disclaimer: I&#x27;m working on Mono for Microsoft&#x2F;Xamarin (primarily class libraries and tools).",2017-11-13 18:46:23,15688897
3427,"The .NET Standard spec has multiple _versions_, each of them adding more APIs: <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;standard&#x2F;blob&#x2F;master&#x2F;docs&#x2F;versions.md"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;standard&#x2F;blob&#x2F;master&#x2F;docs&#x2F;versions...</a><p>It&#x27;s true that .NET Standard 1.0-1.6 had a lot of gaps but these should be rectified with 2.0 now so you shouldn&#x27;t run into these problems anymore (otherwise there&#x27;s usually a good reason why a method&#x2F;API is missing from the standard).<p>Disclaimer: I&#x27;m working on Mono for Microsoft&#x2F;Xamarin, primarily class libraries and tools.",2017-11-13 18:57:46,15689046
3428,The performance is dramatically different (see TechEmpower benchmark) and the overall stability seems also a topic (the CoreCLR is pretty battle tested). Mono from it&#x27;s first origin as GNOME technology till its current peak now in Xamarin somehow always played in the UI field (which has consequences on e.g. garbage collection or jitting).,2017-11-13 19:10:06,15689178
3429,"Agree. But reverting this is really hard. Because it is crucial to .NET to play both fields right now for the next ten years :). Reworking Xamarin is not an option in a time when the race against Cordova, React Native, Node, Swift, Go and Python is fully ongoing. They are pragmatic here, how they should be.",2017-11-13 19:45:49,15689553
3430,"We now share a lot of code between the runtimes, it is an effort that we have taken seriously to improve compatibility, and capabilities.<p>Today, when you checkout the Mono source code, it brings CoreRT and CoreFX.<p>From a user perpective, we have worked to make a universal API surface that goes everywhere Mono, .NET or Xamarin go, it is called the .NET Standard, and last month we released a major upgrade to .NET standard that grew the API surface across the board.<p>As for the runtimes, they have different pros&#x2F;cons so they currently can not be unified into a single one, so we need to maintain different ones, but we are working to make the tooling work better across the board.",2017-11-13 20:49:22,15690100
3431,"The source code for .NET Core as on GitHub now powers .NET Core and UWP. It is a toolbox. We might not see .NET Core with a UI stack directly, but other factoring might happen. E.g. Samsung is using it for their Tizen platform in an own CoreCLR based factoring, including an UI Adapter between Tizen and the Xamarin.Forms abstraction. That is pretty much toolbox thinking. Now they can offer a .NET Standard 2.0 &#x2F; Xamarin.Forms based programming environment with &quot;little&quot; effort.",2017-11-13 21:09:11,15690265
3432,"Cross-platform capability is not the only possible motivation to use something like this. Personally, it interests me because I don&#x27;t see WinForms&#x2F;WPF&#x2F;UWP as viable, so right now the web stack is the only capable high-level UI toolkit on Windows. On MacOS, you can still get by with native.<p>For an app I&#x27;m working on, I&#x27;m exploring the possibility of a shared core in C#, with the UI layer rendered with the web stack on Windows, and with Xamarin.Mac (native binding for .NET) on MacOS.",2017-11-14 20:49:16,15698966
3433,Compiler errors are a daily issue with Xamarin unfortunately...,2017-11-15 08:56:18,15702413
3434,"Hi! We are very proud of what we&#x27;ve built here. Regardless of how you built your app (Swift, Java, React Native, Xamarin), we offer CI, releasing to your beta users and the app stores, Crash reporting, analytics, and even push messaging. Let us know your thoughts!",2017-11-15 16:22:16,15704866
3435,"Hi - author of the blog post here and PM on the team!<p>We are very proud of what we&#x27;ve built here. Regardless of how you built your app (Swift, Java, React Native, Xamarin), we offer CI, releasing to your beta users and the app stores, Crash reporting, analytics, and even push messaging. Let us know your thoughts!",2017-11-15 16:48:03,15705147
3436,"&gt; Regardless of how you built your app (Swift, Java, React Native, Xamarin)<p>Any word on Cordova support? All those Ionic apps (which uses Cordova in the background) would feel very at home at App Center...",2017-11-15 17:22:38,15705496
3437,"The team is extremely passionate about creating developer productivity tools. App Center&#x27;s creators include the founders of HockeyApp, Xamarin Test Cloud, and CodePush. This is something we were all iterating towards individually, and when we met up at Microsoft, we realized we now had the team and ability to make it happen.<p>Microsoft is very serious about creating amazing developer tool across any app, platform, and language for a variety of reasons. Making Azure the most productive place to power your app is part of it, of course. But, in the long run, the easier we make development, the more the world benefits.",2017-11-15 17:36:54,15705657
3438,"Thanks, that makes a lot of sense to see this from the background of HockeyApp, Xamarin Test Cloud, and CodePush coming together.  Ignore the non-answer guy, this is a totally sufficient answer in my opinion.",2017-11-16 00:07:11,15709219
3439,"For what language runtime are the calling conventions an issue? Even the most calling-convention dependent GC I can think of (GHC Haskell&#x27;s) can handle standard C ABIs and .NET is a good example of making this whole process relatively seamless. If you can export a C FFI with pinned pointers in both directions, I don&#x27;t see how it&#x27;s any harder than Rust or C.<p>The multiple GCs in a process issue is usually due to the collector not playing nice with signal&#x2F;exception handler installation when using safepoints, which is purely an issue of lazy implementations. There&#x27;s even ways to collect cross-heap cycles when working this multiple GCs (Xamarin on Android does this fairly well).",2017-11-16 15:49:26,15713606
3440,"Because it was no longer worth throwing money after. Instead they&#x27;re working to make sure Microsoft technologies - their accounts, their email, their Office products etc. - work well on iOS and Android devices. They&#x27;re also working to enable cross-platform mobile development using Microsoft technologies (i.e. they bought Xamarin), which helps with getting app developers using (and paying for) Azure backend services because of course Microsoft provide solid .NET SDKs for Azure services.<p>I suspect they&#x27;ll make another effort to break into the mobile device space in the future, but it probably won&#x27;t be for a while. Where&#x27;s the marketplace opportunity at the moment? At least until they can distance themselves from the current perception of their mobile experience.",2017-11-17 15:46:29,15722879
3441,Don&#x27;t give up. I see FP growing every day. I saw a Haskell job listing yesterday for $180k&#x2F;yrly. These skills are valuable and becoming more valued. I think the Xamarin purchase bodes well for F# which I have an intention of learning. My understanding is it is more popular in Europe btw.,2017-11-17 15:48:24,15722905
3442,"Our server library and framework software suite and Apps have been running cross-platform for several years and with the support of .NET Core 2.0 they now run fast and flawlessly on Linux which is a very popular deployment target for our Customers, in fact all our .NET Core Live Demos were developed on Windows and deployed to and running on Linux:<p><pre><code>  - https:&#x2F;&#x2F;github.com&#x2F;NetCoreApps&#x2F;LiveDemos
  - https:&#x2F;&#x2F;github.com&#x2F;NetCoreWebApps&#x2F;LiveDemos
</code></pre>
Each project can also be opened and developed on Linux or Mac with VS Code or Rider. Xamarin&#x27;s solutions has been making C# a popular language for developing native high-performance iOS&#x2F;Android Apps for several years and the stigma of C# server apps being confined to Windows should be eradicated with the advent of .NET Core.",2017-11-19 02:11:04,15731846
3443,"&gt; ... Coupled with dense and hard to find documentation that seems to be spread out over 14 different msdn domains and GitHub projects.<p>docs.microsoft.com is steadily improving this.<p>&gt;  I&#x27;ve tried no less than 10 times over the last few months to get &quot;intellisense&quot; working in emacs via roslyn and it has never worked.<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;OmniSharp&#x2F;omnisharp-emacs"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;OmniSharp&#x2F;omnisharp-emacs</a><p>Are you not using this? Works great for me.<p>If you want getting started to be less of a chore use VS Code, VS, Rider, VS for Mac, Xamarin Studio, or Monodevelop.",2017-11-19 10:25:14,15733238
3444,"i know this is a haskell thread but after trying to grok haskell for years (yes i understand monads) i&#x27;ve discovered F# and jesus christ what a dramatic difference in functional language ergonomics and tooling and ecosystem. it has everything that haskell does (ADTs, type inference, immutability [when you want it], lazy [or eager] eval, pattern matching&#x2F;destructuring, expression based, and partial application&#x2F;curried functions) but it doesn&#x27;t handcuff you to pure (side-effect free) code. say what you want but often writing code in haskell is monad acrobatics because you can&#x27;t write a simple for loop or do i&#x2F;o. the tooling is fantastic and cross platform (visual studio&#x2F;xamarin) with a real debugger, real breakpoints, lightyears better docs, readable compiler errors, enormous ecosystem by way of interop with c# libraries. it&#x27;s an eminently practical functional language. the `F# for fun and profit` series of blogposts is fantastic for not only introducing the language but explaining the value proposition of functional patterns. of course i wish ocaml had the same advantages (and it does have many) since it compiles to native binary but i&#x27;ll accept the CLI in exchange for all the tooling benefits.",2017-11-19 18:59:16,15735286
3445,"I didn&#x27;t know that. That&#x27;s beneficial for me to know and makes sense.<p>I recently made my career change to become a C# developer so I did a good indepth review on the overall landscape. Came down to Java and C# as my best bets, C# won because it fits a lot of my work history and I&#x27;ve heard multiple people that I trust say they just can&#x27;t find .Net developers. To me that&#x27;s a feature. I really like it and don&#x27;t understand all the hatred and fashion-oriented programming trends going on. Honestly, I&#x27;m more about maintenance and all the best tooling to help me get complex tasks completed without issue. Of course, maintaining employment is important too, has to be jobs around. I spoke with a few companies, one is switching from a .Net stack to Node and I think that&#x27;s insane. I&#x27;m not sure why you&#x27;d actually willingly accept a downgrade like that. Maybe if you&#x27;re starting from scratch, sure do what you will, but overall I expect the &quot;app&quot; side to JS to dwindle away as wasm takes over. I intend to build most of my webpages leveraging as much of the native browser functionality as possible, leaving apps to Xamarin and wasm for native code solutions.",2017-11-20 00:51:29,15736964
3446,"Let me know when Go has something comparable to Windows Forms, WPF, UWP, Xamarin.Forms, Avalonia.<p>Oh, and when I have to use Go, I find a chore to write generic code as if I was back in 1992 using Borland C++ 2.0 for MS-DOS, with pre-processor based code generation for BIDS or still using Java 1.4 (EOL in 2008).",2017-11-20 09:38:32,15738813
3447,"&gt;Sure, but the option of third party app stores opens also option of sideloading. In the case of Apple, when Apple says no, you are without the app, period.<p>This is a non-issue that people have brought up countless times. First of all, are we in agreement that app stores and other legal entities have to obey local laws? So your point is moot. Side loading is possible on iOS. You dont even need to own a Mac to develop for iOS. [1,2,3,4] There is also the open web to fall back on.<p>And you are incorrect about user tracking. Just a day ago Google was caught tracking users even when location services are turned off. [5] And please educate yourself about modern ad tracking [6]<p>[1] <a href=""https:&#x2F;&#x2F;www.outsystems.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.outsystems.com</a><p>[2] <a href=""https:&#x2F;&#x2F;www.xamarin.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com</a><p>[3] <a href=""https:&#x2F;&#x2F;cordova.apache.org"" rel=""nofollow"">https:&#x2F;&#x2F;cordova.apache.org</a><p>[4] <a href=""https:&#x2F;&#x2F;www.xojo.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.xojo.com</a><p>[5] <a href=""https:&#x2F;&#x2F;qz.com&#x2F;1131515&#x2F;google-collects-android-users-locations-even-when-location-services-are-disabled&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;qz.com&#x2F;1131515&#x2F;google-collects-android-users-locatio...</a><p>[6] <a href=""https:&#x2F;&#x2F;donttrack.us&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;donttrack.us&#x2F;</a>",2017-11-22 23:35:11,15761634
3448,Xamarin?,2017-11-23 03:01:14,15762440
3449,"As a full time web developer, I liked the idea of electron. Even if I dislike electron apps that I need to use at work (like slack memory glutton).<p>It gave me the impression that I can build desktop app faster by reusing my skills. When it was time to build some side project, I did them in electron.<p>Recently I decided to learn c#, for unity initially, but I decided to try xamarin. This change all my perceptions. Not only building the core was way more enjoyable that with js&#x2F;babel&#x2F;nameit. Prototyping the native interface was faster, and developing the final UI was also more productive. Not to mention the final product looked better.<p>Comparing developer productivity is hard, but based on my own experience, I would say that it would have taken twice the time on electron the finish the same app in the same time. Compare to my other similar electron project, it load faster, dont use cpu cycle on idle and consume  of memory.<p>Maybe there is better idea than xamarin, but at least is seems like a better idea than electron. Now I see more electron as a fast way to have a webapp on the desktop or a fad based excuse to not learn something new.<p>On the other hand, calling a &quot;cancer&quot; is quite absurd.",2017-11-23 16:07:21,15765874
3450,"Non UI code lives in a static&#x2F;shared lib that gets called from UI code. The non-UI code shouldnt be coupled to a UI at all, instead reporting progress&#x2F;completion via callbacks or other notification mechanisms.<p>If you must run on every platform for whatever reason, there is Rust, C, C# (Xamarin), etc.",2017-11-23 19:50:03,15767413
3451,"I may be biased since I&#x27;ve been working with Xamarin since 2013, but I fail to see how Flutter could be a better choice than Xamarin:<p>- the language is a niche compared to C# (which translates in &quot;it&#x27;s harder to hire devs&quot;)<p>- it&#x27;s less mature (both the framework and the language)<p>- most importantly, Flutter uses its own set of controls that look like the native ones, while Xamarin uses the platform&#x27;s native controls.<p>Can someone please fill in what are the advantages of Flutter?",2017-11-28 11:53:09,15796363
3452,Does Xamarin have native UI widgets not just basic components?<p>ReactNative has native controls but most are just basic. Flutter has material&#x2F;ios widgets built in which simplifies develpoment. I like flutters declarative syntax similar to reactjs. But its still in alpha hence can&#x27;t commit much time to it.,2017-11-28 12:22:07,15796545
3453,"Xamarin just binds the native UI framework and makes some tweaks to adjust it to C# conventions, so you can use the same APIs that native developers use.",2017-11-28 12:26:59,15796575
3454,"Xamarin, Adobe stuff. And I&#x27;ve found a Windows VM in a Linux host to be passable, though suboptimal. Especially because you only run it sporadically, so even though it&#x27;s a VM you still have to deal with its compulsive and compulsory updating, restarting, and whatever else it does that keeps it busy for 20 minutes when it hasn&#x27;t been started in a month.<p>Also Linux multi-screen&#x2F;multi-DPI support is still bad.",2017-11-28 19:43:46,15800701
3455,"SEEKING WORK :: REMOTE :: Portland, Oregon :: Full Stack Mobile Development<p>Better outcomes through experience, communication, and understanding risk.<p>Android&#x2F;iOS&#x2F;Xamarin&#x2F;Cordova. Serverless back-ends Amazon&#x2F;Azure&#x2F;Google. Website integration Node&#x2F;PHP&#x2F;ASP. App Design.<p>25+ years experience, 7 years mobile development. I am the Salty Dog: a sturdy, weather beaten crew member who stands at the prow of your ship guiding you safely through the rocks.<p>How can we help?<p>saltydogtechnology.com&#x2F;blog<a href=""https:&#x2F;&#x2F;www.reddit.com&#x2F;?count=25&amp;after=t3_7fx18m"" rel=""nofollow"">https:&#x2F;&#x2F;www.reddit.com&#x2F;?count=25&amp;after=t3_7fx18m</a>
<a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;</a>
curtis@saltydogtechnology.com",2017-12-02 01:42:31,15829558
3456,"Location: Toronto<p>Remote: No<p>Willing to relocate: yes<p>Technologies:
LANGUAGES: C, C#, Java, JavaScript, Python, TypeScript<p>BACKEND TECHNOLOGIES: ASP.Net Core, Django, Flask, NodeJs<p>FRONTEND TECHNOLOGIES: AngularJs, AurelliaJs, ReactJs, Redux, VueJs<p>MOBILE TECHNOLOGIES: Android, ReactNative, Xamarin.Forms<p>MISCELLANEOUS: AWS, Azure, elasticsearch, firebase, travisCI, OpenCV,MongoDB, Postgres, SQL Server<p>Resume: <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;shrey-mahendru-2b125a113&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;shrey-mahendru-2b125a113&#x2F;</a><p>Email: shreymahendru@gmail.com",2017-12-02 18:53:54,15833333
3457,"Congrats to the team, this has been a long time coming. No Python2 support which is unfortunate, my Python3 migration strategy was to move to C# for my main language instead. No regrets, I like it a lot. I describe it as industrial strength. Good IDE and granted me a larger job market with Xamarin for iOS coverage.<p>For web stuff, I&#x27;ll probably be using a C# framework, or Wordpress with one of the JITs. Still, a lot of hard work has gone into Django 2.0 and I&#x27;ll be keeping tabs on it, rooting for the team. It&#x27;s not likely but not barring the idea of using Django again.",2017-12-02 21:39:52,15834237
3458,"I do agree, but only if we emphasize the cross-platform requirement and a single monolithic code base.<p>Id much rather write a lightweight desktop app in any of the native toolkits, but especially Cocoa&#x2F;Swift, and do the heavy lifting parts outside of the GUI application. But youll still have to write a native Linux one, and QT is my front runner there. But I do recommend looking at the Xamarin stuff too. Depends on your needs and where youre coming from as a dev.",2017-12-07 14:34:07,15870235
3459,"Thats why your use case matters. If we are going down this path of thinking with no context, your application should not be a GUI application at all. But if you want easier future porting to iOS, thats different than if you want easier future porting to xbox, and different again if you want it to run on ChromeOS.<p>QT is awesome, dont hear me wrong. But if your target platform is distros running gnome, it might not even be the right choice for a native Linux desktop app. And again, none of this cross-platform compatibility discussion necessarily makes it a better choice than Xamarin stuff.<p>Im just saying, its not the option. Its just a very good choice.",2017-12-07 20:39:52,15873913
3460,"Hi HN, I have a request, I know it&#x27;s not stackoverflow, I checked but I haven&#x27;t found a solution to our problem yet. :&#x2F;
Basically we are a startup, started from scratch, and built a platform for tourism. We chose to work with xamarin (yeah I know bad choice). Here is how the app works : You see a map, with points to discover, and when you get near the point, there is a range setup to unlock a notification that gives you some information on the point of interest. Kind of a cultural and historic treasure hunt. Now we are hitting a wall as notifications on Ios get unlocked when you are very far from the point of interest. On android it works very well. If anyone has experience with this please help :)",2017-12-09 04:53:40,15884364
3461,"Hi Mike, sorry for the late reply, I&#x27;m in exam&#x27;s rush :P<p>here is what we are using de determine the range: <a href=""https:&#x2F;&#x2F;github.com&#x2F;domaven&#x2F;xamarin-plugins&#x2F;tree&#x2F;master&#x2F;Geofence"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;domaven&#x2F;xamarin-plugins&#x2F;tree&#x2F;master&#x2F;Geofe...</a><p>Thanks for reaching out.",2017-12-15 20:27:35,15934790
3462,It specifically mentions 2019 for Xamarin not 2018.,2017-12-19 05:45:21,15958063
3463,"This email is completely unverified. Apple certainly has its targets on app generators, but not Xamarin, React Native or other similar technologies, that I have seen. The email contains grammatical errors and has not been received by any other developer, that I know of. It is highly likely to be a fake.",2017-12-19 07:44:24,15958471
3464,"Whatever about flash a few years ago, it&#x27;s not like Xamarin contributes to that much worse an experience. These apps will end up just moving to webviews since cross platform is important to them, not native APIs.",2017-12-19 10:42:37,15959263
3465,Another option could be they&#x27;ll blanket ban only xamarin.forms apps and allow older xamarin.ios in a case by case basis.<p>I think that&#x27;s fair. Xamarin.Forms is mostly for internal corporate apps which I&#x27;m sure you can still deploy within your organization yourself.,2017-12-19 11:03:40,15959318
3466,"Well, it&#x27;s kind of an issue, because it&#x27;s a similar argument for platforms like Xamarin. A third party still has to keep up with mainline. That means another layer of support, maintenance, dependency which is not always an issue but practically speaking is one of the things you eliminate at scale and &#x2F; or in the rigors of production.",2017-12-19 21:14:25,15964341
3467,"Great to see another NoSQL DB on .NET landscape. In my UWP days I had to port LevelDB (<a href=""https:&#x2F;&#x2F;github.com&#x2F;maxpert&#x2F;LevelDBWinRT"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;maxpert&#x2F;LevelDBWinRT</a> shameless plug, it&#x27;s available as nuget package too). But it only works on UWP this seems more robust and it can work on Xamarin.",2017-12-20 16:03:42,15970705
3468,"I&#x27;ve written[0] and spoken[1] a lot about .NET Core, so I understand that it can be confusing. The similar naming certainly doesn&#x27;t help. To summarize (and oversimplify) there are three main varieties of .NET: .NET Core, .NET Framework and Xamarin.<p>The new open source and cross-platform one is .NET Core and it is currently suited to writing server-side web apps (e.g. ASP.NET Core) and command line applications. It is a reimplementation of .NET and more use cases are coming (UWP, CoreRT, native tool-chain etc.).<p>The Windows only one is .NET Framework and it is better for graphical desktop apps on Windows. WPF and Windows Forms are not open and are Windows only, so are not in .NET Core.<p>Finally, Xamarin is also open now and lets you build native mobile and desktop apps on Android, iOS and macOS. Full details of all these are on the official docs site[2] if you want to read more, or you could buy my book on ASP.NET Core 2 :).<p>[0]: <a href=""https:&#x2F;&#x2F;unop.uk&#x2F;book&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;unop.uk&#x2F;book&#x2F;</a><p>[1]: <a href=""https:&#x2F;&#x2F;unop.uk&#x2F;talks&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;unop.uk&#x2F;talks&#x2F;</a><p>[2]: <a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-gb&#x2F;dotnet&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-gb&#x2F;dotnet&#x2F;</a>",2017-12-24 11:56:00,15999171
3469,Xamarin is built on top of Mono. The same applies to Unity3D.<p>We&#x27;re sharing more and more code with .NET Core now so there&#x27;s convergence happening but there are still pieces that are unique to us.<p>Disclaimer: I&#x27;m working on Mono for Xamarin&#x2F;Microsoft.,2017-12-24 13:19:54,15999399
3470,"Mono is a reimplementation of .NET Framework. It supports most APIs and modules from the full framework, with one notable exception being WPF, the UI toolkit. They&#x27;ve been integrating code from .NET Core for better compatibility, but ever reaching 100% feature parity with the full framework is rather unlikely.<p>Mono used to have it&#x27;s own C# compiler in addition to the runtime, but since the official C# compiler is open source, well-engineered and cross-platform compatible, it now uses the same compiler as other runtimes.<p>Xamarin is based on mono, and Unity ships Mono as their .NET runtime. Mono supports the most platforms out of all .NET implementations, including all current and previous generation gaming consoles.",2017-12-24 13:35:25,15999441
3471,"&gt; <i>with a superior flagship language (C#)</i><p>and don&#x27;t forget VB.net, which is an excellent language for non IT professional novice programmers, particularly if they come form VBA. .net provides a good language for novices that gives access to most of the flexibility and power of the framework (outside Xamarin basically).",2017-12-24 14:14:15,15999598
3472,".NET core is lacking so many features it&#x27;s ridiculous, we&#x27;ve had to downgrade 2 projects recently because even MS Azure service APIs weren&#x27;t supported - if you have to work with .NET avoid core and save your self the hassle - it&#x27;s still alpha quality in many aspects after years since &quot;1.0&quot;. I regret pursuing .NET career at this point, all recent developments on the platform are a joke - despite the praise they get for OSS moves. I&#x27;m moving towards frontend these days just to get away from this mess (ironic considering how messy frontend is - should tell you enough about state of .NET core&#x2F;xamarin)",2017-12-24 15:20:23,15999867
3473,"A thing that will sell vue&#x2F;react native for me is the ability to only use them for UI. I don&#x27;t wanna use them for logic or heavy stuff. Just have them for render the UI.<p>This mean, easy way to embedb into iOS&#x2F;Xamarin.NET.<p>I have look at react native and NativeScript and both are very hack-ish for my taste.",2017-12-24 21:45:08,16001447
3474,"Im a .NET developer since 2004 but dont use Windows and VS anymore since five years or so.<p>Im using F# for some parts of a larger mobile app with Xamarin, and therefore have all three IDEs in use: VS for Mac, Rider, VS Code with Ionide. The ladder feels most lightweight for F# only. In a mixed solution with C# Rider probably provides the best experience at the moment. VS for Mac is not very usable, to put it friendly.<p>However, tooling is evolving but compared to other platforms not very mature yet. Refactoring for example feels like what most editors support for JavaScript.<p>But its not a show-stopper (for me).",2017-12-25 19:18:48,16005338
3475,"The APLs and especially, for me, j and k, are really interesting languagues. For one, I agree with Whitney, the creator of k, that you should not have to scroll to read your software. I think making sure at least every function points fits on a phone screen is a large boon for readability and maintainability. It is not the fact that it fits there, it is more so that if it does, you can work on that implementation mentally focused: without jumping pages or even files. I know a lot of people find j,k and even Forth unreadable, but that is really just practice. When I got used to it, I found, for instance, c# a lot more annoying to read. It is somewhat (this is a bit over the top, but you get the idea) the difference between reading Godel his original whitepaper (in German ofcourse) and Godel, Escher Bach explaining that whitepaper. Both are good reads, but the original paper, when you have the background context, is easier to read and debug that that enormous volume.<p>I hope to find more time to explore these avenues. For now, k and forth mixtures are my favorite to mess around with; I created a little language to do live coding on my phone for Xamarin and the forth&#x2F;k mix I use is actually the first thing that is not annoying to work with on a phone screen. Because most happens in your brain and what you type is a few hieroglyphs, the development is interactive, you can walk around doing it. I hope to clean it up enough to release it (I am old, I do not like this releasing of half baked stuff usually, unless it is game related): it saves me a lot hell doing edit&#x2F;compile&#x2F;wait&#x2F;test cycles.<p>For playing around, check out oK  : it is a k implementation in JS, it is slow but works everywhere and has some cool features for making graphics and little games.",2017-12-26 03:20:12,16006870
3476,"What about virtual hackintosh?<p>My use case is building multiplatform apps with xamarin, and so I need a machine running osx somewhere for the apple build, and to verify performance on an actual ios device.<p>I had a 2016 mbp but spilled wine on it, so now I&#x27;ve only got my shoddy older macbook that limps along at best. I do, however, have a 2017 NUC with plenty of storage and ram, but that&#x27;s my main dev box so I&#x27;d rather keep it linux...",2017-12-28 11:59:29,16021579
3477,"More Elixir. I would love to be writing Elixir full time by end of 2018.<p>Xamarin Forms, seems about time to start working on mobile. I have an idea and started the elixir server part of it but will start on the Xamarin Forms part soon.<p>React or Angular. I started learning Angular 1.x right before 2 came out but never actually kept up with it or moved to 2.<p>Embedded development. I have an R Pi that I want to use Nerves with but I would also like to get non embedded linux hardware too",2017-12-30 16:25:45,16035884
3478,"&gt;If the general public starts to believe that there is an Android successor in the works, many people will stop buying Android devices until further notice.<p>The bigger danger is the response by android developers. Will you invest in a soon-to-be-deprecated Android Native app written in a soon-to-be-deprecated API (because, at least according to the Internet rumors, Fuchsia will be using Dart instead of Java and will have a totally different API), rather than just write it in Xamarin, Cordova or React Native?<p>And once your apps aren&#x27;t written in Android API, how hard is it to port to, say, Windows Phone?<p>This damages their moat.",2017-12-31 20:45:03,16042838
3479,"I published my first book C# And XML Primer (<a href=""https:&#x2F;&#x2F;www.apress.com&#x2F;us&#x2F;book&#x2F;9781484225943"" rel=""nofollow"">https:&#x2F;&#x2F;www.apress.com&#x2F;us&#x2F;book&#x2F;9781484225943</a>) and wrote my second book Pro Windows 10 Development in C# 7 (<a href=""https:&#x2F;&#x2F;www.apress.com&#x2F;us&#x2F;book&#x2F;9781484229330"" rel=""nofollow"">https:&#x2F;&#x2F;www.apress.com&#x2F;us&#x2F;book&#x2F;9781484229330</a>).<p>I started learning Elixir and wrote Plsm (<a href=""https:&#x2F;&#x2F;github.com&#x2F;jhartwell&#x2F;Plsm&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;jhartwell&#x2F;Plsm&#x2F;</a>) which is my highest starred github repo with a whopping 86 stars (my previous highest was only 7).<p>Finishing up 2017, I&#x27;m working on my first mobile app using Xamarin Forms and Elixir + Phoenix for the server side. It is a simple train schedule app for the Chicago Metra but it is something that will help me and hopefully others.",2018-01-01 06:54:50,16045040
3480,"SEEKING WORK :: REMOTE :: Portland, Oregon :: Full Stack Mobile Development<p>25+ years experience, 7 years mobile development. I am the Salty Dog: a sturdy, weather beaten crew member who stands at the prow of your ship guiding you safely through the rocks.<p>Android&#x2F;iOS&#x2F;Xamarin&#x2F;Cordova. Serverless, AWS Lambda, Azure Functions. Website integration Node&#x2F;PHP&#x2F;ASP. App Design.<p>saltydogtechnology.com&#x2F;blog
<a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;</a>
curtis@saltydogtechnology.com",2018-01-01 17:01:23,16046802
3481,"The reason why I not fully believe in it is that there is no huge benefit to the parties for supporting a thing like themer. UIs are highly custom and if X companies make a product seperately you will have as many implementations of the theme keys and variables.<p>The comparison to mobile development comes to mind. There are cross platform options like cordova or xamarin but they are usually beaten by native implementations. Now, if the cost of doing things twice outweights by large the drop in quality it is still a viable option; hence their existance. However, with themes Id say the cost of redoing is most likely not outweighting developping in the native application option.",2018-01-01 20:18:52,16047822
3482,"No, there are other XAML variants, like Avalon and Xamarin.Forms.<p>JavaFX also follows the same design ideas.<p>And there is QML as well.",2018-01-02 16:29:09,16052881
3483,"AppCenter.ms has many similar features and supports iOS, Android, Windows, ReactNative, Xamarin, and others.<p>[Disclaimer: As I&#x27;m a PM on the AppCenter team I&#x27;ll leave evaluation of goodness to others :)]",2018-01-02 20:45:47,16055462
3484,"&gt; Are programs written in C# not native, even on Windows?<p>C# always had AOT compilation to native code via NGEN.<p>Just that few people bother to use it, because it only allows dynamic linking, the optimizer is tailored for fast startup time and requires an extra effort with application signing.<p>Windows 8 apps were always AOT compiled on the store via a &quot;cloud compiler&quot;, based on Bartok from Singularity project. Using a format known as MDIL.<p>Windows 10 apps are always AOT compiled via .NET Native, which shares the backend with Visual C++.<p>Mono always supported AOT compilation and it is the way Xamarin apps are deployed on iDevices.",2018-01-03 07:08:37,16059150
3485,"I rather use native UI code + C++ for business logic, use Qt or Xamarin than even bother with React Native.",2018-01-03 10:23:40,16059871
3486,"Xamarin.Forms is cool but still doesn&#x27;t work on Linux so it seems the same story as XAML to me - cool but of little use, unlike to HTML which is less cool but absolutely useful as it works everywhere. JavaFX - doesn&#x27;t work on mobiles&#x2F;tablets (there was a prototype in 2011, seemingly abandoned), sadly it seems to be about as dead as Flash and Silverlight now. As for QML - search results suggest it works everywhere but still hardly a popular choice for some reason, worth taking a closer look perhaps (but I still doubt it can compare to HTML as using Qt means producing binary builds for every platform to support AFAIK).",2018-01-04 05:34:39,16068287
3487,"TeaVM allows any Java application to be ported into WebAssembly, be it an applet or not.<p>As3-WebAssembly is a compiler for porting Action Script 3, Flash&#x27;s programming language, into WebAssembly. Already integrated into Flash Develop.<p>Microsoft and Xamarin efforts to port Mono into WebAssembly, will allow making Silverlight apps again.<p>You are free to believe this won&#x27;t turn out into anything, I rather think we will end up in WebAssembly + Canvas&#x2F;WebGL in a couple of years.",2018-01-09 11:47:41,16105401
3488,"For example xamarin&#x27;s fork of Cocos2D.<p>Or companies adding closed source features to open source software. You can&#x27;t do that with GPL unless you own all the code.<p>The classic business plan for software is to charge per license&#x2F;copy. But if you release your software for free, you have to sell something else. And anyone who come up with a good solution for this will be the next unicorn.",2018-01-11 10:59:29,16122868
3489,"I&#x27;m starting to feel that the day has finaly come for cross-platform development, but there are so many promising techs i&#x27;m wondering what the next big thing will be.<p>A new breed of Web assembly frameworks running everywhere from mobile to web ?<p>What about Flutter , or Kotlin native, or Xamarin ? Will any of them have their chance now ?<p>Is a new upcoming mobile plateform going to emerge ?<p>I&#x27;ve got my hopes and beliefs but i&#x27;m curious to know what the HN community thinks.",2018-01-12 21:54:58,16136669
3490,SkiaSharp on Xamarin is fantastic for some cross-platform graphical apps,2018-01-14 22:33:56,16146905
3491,"There is also a .NET binding for Windows and Xamarin: <a href=""https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;SkiaSharp&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;SkiaSharp&#x2F;</a>",2018-01-14 22:34:06,16146908
3492,I think it&#x27;s for Xamarin.,2018-01-14 23:27:18,16147204
3493,"We do lots of markup&#x2F;drawing&#x2F;overlay apps using Xamarin and SkiaSharp (SKCanvas&#x2F;SKCanvasView&#x2F;SKBitmap).<p>Skia is a great library.  Pretty fast across UWP, Android, iOS and nice to have a common cross platform one that works well across most platforms (UWP, Win, Mac, iOS, Android).<p>UWP combined with Windows Ink (InkCanvas) is fun stuff.",2018-01-15 09:20:12,16149463
3494,Xamarins wrapper for C# made it a breeze to use from C# at least - just add the package. The same is likely true for all ecosystems with reasonable package management. Its only ironic that C++ libs are hardest to use from...C++,2018-01-15 11:19:25,16149857
3495,"I&#x27;ll take the otherside, WPF was only useful on Windows desktops.  UWP apps can run on desktop, mobile even consoles.  Before UWP developing across all devices was much more difficult. Developing UWP with Xamarin you can get iOS, Android, Windows platforms with very minimal differences in many cases. With .NET Standard&#x2F;Core 2 even older .NET libs work in many cases except a key part of WPF, System.Drawing.<p>WPF was built on older non .NET Standard&#x2F;Core that doesn&#x27;t work for Microsoft anymore, Windows lock-in is dead and that is what the WPF&#x2F;Silverlight game was.  They tried to platform lock in at the Windows layer with WPF but it was too late, mobile hit soon after.<p>Microsoft has to be cross platform now and the lock-in has been moved up to Azure, their new OS for developers essentially.<p>I think UWP is a better platform than WPF even with less maturity. Lots of people liked WPF as it was better than the previous iteration in Winforms, and probably grew a liking to it, but UWP is now and trying to keep old Microsoft platforms alive is a lost cause.  Devs must move to what Microsoft is pushing just as you do with Apple, if not, feel the wrath of the future.",2018-01-17 02:30:44,16164979
3496,"&gt; UWP is: a platform so OS-locked it doesnt even run on Windows &lt; 10<p>True on the Win 10 point but they had to make a change, they do similar with new platforms all the time, WPF was pushed on Vista.<p>Basically UWP matches up nicely with other platforms under Xamarin especially.  Though most of Xamarin is iOS&#x2F;Android focused probably because of the market, it closely mirrors those so that it is easier to make a UWP app from one of those apps. Many business apps are going Android, Surface or even iPad&#x2F;iPhone Apple focused.<p>Microsoft had to make a hard change for this, UWP is actually a joy to work with on new projects but porting a WPF app may be difficult and you may have to make many custom controls outside touch friendly interfaces.<p>&gt; WPF &amp; Silverlight runs on multiple Windows versions and Silverlight was supported on Mac OS<p>True but not for long, Silverlight also no longer runs on any browser but IE.<p>UWP will evolve, WPF and Silverlight were very rudimentary on their first iterations.  Silverlight was solely js based on Silverlight 1 even. Winforms was more supported at the time when WPF came out as well, WPF was only for Vista when it launched, XP it runs slow.<p>Before .NET and Winforms it was Visual C++&#x2F;VB apps, MFC, COM+ etc.<p>Every once in a while things change enough that the old must be thrown out.  WPF was a pre-mobile toolkit and Silverlight was for the age of Flash, those times are in the past.",2018-01-17 04:57:16,16165579
3497,Xamarin is Microsoft :),2018-01-17 05:46:57,16165763
3498,I thought VS for the Mac was just a rebrand of Xamarin Studio?,2018-01-17 06:33:13,16165933
3499,"Initially yes, but they have been making the Roslyn tooling the same across both IDEs.<p>Visual Studio for Mac has many new features that weren&#x27;t present in Xamarin Studio, like .NET Core support, ASP.NET types of workflows. And all new Xamarin.Forms improvements are shared between both IDEs.",2018-01-17 07:22:59,16166113
3500,"Yeah, mac-books are one of the favorite choices of unix focused devs. So quite a few people at Xamarin are using that.<p>Also, they are a MacOS focused shop in some ways (Xamarin for iOS).",2018-01-17 09:27:37,16166624
3501,"Mobile and desktop are two different beasts, and all the effort in the world won&#x27;t make them equivalent. If you want to hit mobile devices, fine, use Xamarin. If youre building for desktop, use something that makes sense there, like WinForms or WPF. You&#x27;ve got wildly different screen sizes, form factors, and input devices between the two classes of devices, and always will. Cramming them together just gets lowest-common denominator garbage, like UWP.",2018-01-17 11:32:33,16167086
3502,"You&#x27;re both right. Yes, it&#x27;s WPF, and there are lots of parts written in C#. But the parent is right -- Visual Studio is C++ using COM and Win32 at its core, going back all the way to the Visual Basic IDE that shipped as part of Visual Studio 6. It would be a very difficult port to Mac, Linux, etc. As of this writing there is even no 64-bit version for Windows (although that&#x27;s just a matter of spending the time and money to do it.)<p>The brand name has been re-used for other software. Visual Studio for Mac is Xamarin. Visual Studio Code is on the Electron platform.",2018-01-17 12:41:41,16167404
3503,"The WinRT XAML control stack originates more from directly from &quot;Avalon&quot;, WPF&#x27;s precursor, than Silverlight. Windows Phone 7 was Silverlight-based as an interim stepping stone, and the .NET Core platform is closer in origin to Silverlight than the classic desktop .NET Framework (though not exactly <i>either</i>), which are sources of confusion there, but WinRT&#x2F;UWP doesn&#x27;t originate from Silverlight (it just inherits some insight&#x2F;lessons from it).<p>I&#x27;ve seen some great power user experiences with UWP, even ones that are happy being &quot;mobile first&quot; and &quot;touch first&quot;. &quot;Touch first&quot; is still great for mousing (especially as screen DPIs keep rising and more setups involve monitors in multiple DPI resolutions), even if you think it leads to lower information density (there are tricks to that).<p>At least in Enterprise environments I&#x27;ve worked &quot;mobile first&quot; is incredibly useful because people are happy being able to work from the device they already carry around at all times. It&#x27;s to my sadness there isn&#x27;t more Windows mobile devices as Cordova and&#x2F;or Xamarin continue to eat up more and more of my development time I could be spending more directly on the applications themselves.",2018-01-17 17:27:31,16169798
3504,"Xamarin has a WPF renderer in some state that is somewhat UWP interoperable.<p>Maintaining a UWP head and WPF head with .NET Standard libraries shared between them is a reasonable option in some circumstances.<p>But better still, maybe encourage your employers not to death race upgrades versus exploits all the way to the bitter end in April 2020 like they did with XP&#x27;s extended support period.",2018-01-17 17:31:30,16169844
3505,Xamarin.Android begs to differ. It provides full integration and all we use from Dalvik are gc handles and explicit GC control.<p>Full Disclosure: I work at MS and I am one of the original designers of it.,2018-01-17 18:27:04,16170376
3506,"All Xamarin apps are natively compiled on iDevices, and Unity uses their own AOT compiler, IL2CPP.<p>There is ongoing work on CoreRT, the UNIX version of .NET Native.",2018-01-17 19:30:30,16170957
3507,Microsoft it&#x27;s already working on Xamarin.Forms for Linux.,2018-01-18 00:39:31,16173573
3508,"Thanks for the pointers, I will definitely check both of these out. In my last attempt I got to the &quot;can compile &#x27;Hello World&#x27; from the command line and even debug it in VSCode&quot; stage but after that things quickly went off the rails IDE-wise.  I even tried MonoDevelop (did some C# work with it long ago) but IIRC the Xamarin stuff was barfing on one or more asp.net dependencies. Hopefully one of your links will be to an &quot;Idiot&#x27;s guide to F# on Linux&quot; and then I&#x27;ll be in good shape.  :-)",2018-01-18 19:33:35,16180518
3509,"Not underrated, but F# gets a lot of flack for what has proven an extremely usable and productive language.<p>* It is functional and succinct by default, but allows you to go mutable and fast when needed (see the alioth benchmarks).<p>* Open source culture<p>* The tooling (thanks to kcieslak and others) is fantastic<p>* Web story is covered well by suave&#x2F;giraffe on the backend, with fable-elmish as a personal favorite if I need complex front-end functionality (most stuff I have is just regular pages though).<p>* Mobile story through Xamarin(Forms is not my favorite, but Native works fine) or Fable<p>* To mention javascript again, I think Fable has a ton of well thought out features compared to other transpiled languages<p>* Testing via expecto (and just github.com&#x2F;haf in general)<p>* A whole wealth of libraries through .net integration<p>* I can compile a binary to execute on linux for easy deployments, or target osx to create convenience command line applications for my coworkers<p>There are some negatives (some C# interop gets inelegant, some tooling is left to the community as a responsibility, other minor things), but overall it has all of the important things.",2018-02-01 15:48:27,16282668
3510,Well C#? (and Android through Xamarin but I didnt use it so...),2018-02-01 15:50:48,16282696
3511,"Src_Code- http:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;developer-immersion-data&#x2F;tree&#x2F;master&#x2F;source&#x2F;sp-gda<p>ARM and Solution Document-http:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;developer-immersion-data&#x2F;tree&#x2F;master&#x2F;labs&#x2F;sp-gda<p>Build entire solution using Azure data services, Azure Functions, Data and AI. There are seven stages of development, please find the details here-<p>Stage 1: Build globally distributed applications using Azure Cosmos DB<p>Stage 2: Analyzing Data relationship using the Power of Azure Cosmos DB Graph API (Gremlin Query)<p>Stage 3: Developing Xamarin Apps with Azure Cosmos DB and Notification Services<p>Stage 4: Flight Delay analysis using Cosmos DB, Spark Cluster in HDInsight and Power BI.<p>Stage 5: Integrating Cosmos DB (SQL API) and Cognitive Services with Universal Windows Platform Application<p>Stage 6: Gate change notification to the user for specific flight using Azure Cosmos DB with Notification service<p>Stage 7: Building Intelligent Bot using Azure Bot Service and Cosmos DB",2018-02-09 20:49:18,16343702
3512,"&gt; It is an open platform. You are just as productive as a developer on Unix and Mac OS X as you are on Windows.<p>How is that any different from .Net core? Open platform, check (1) productive on those platforms, check (2)<p>&gt; buggled into a big IDE like it is on C#.<p>Nope. dotnet cli is fine standalone (3)<p>&gt; Deploying on Unix is a standard thing, not an experimental feature.<p>Um, it might be fairly new but I would not call that platform target &quot;experimental&quot; any more. It&#x27;s in version 2 now<p>&gt;  And finally there is Android.<p>Yes there is. I know teams that write in C# for Android and iOS. (4)<p>C# is late to the party in this regard. But what you are saying isn&#x27;t correct.<p>1) <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet</a><p>2) <a href=""https:&#x2F;&#x2F;code.visualstudio.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;code.visualstudio.com&#x2F;</a><p>3) <a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;core&#x2F;tools&#x2F;dotnet?tabs=netcore2x"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;core&#x2F;tools&#x2F;dotnet?ta...</a><p>4) <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a>",2018-02-11 18:51:43,16354099
3513,"I think the opposite is true.<p>First, the backwards compatibility is a key feature. You can open a project written several years ago, and add a new feature to it using the latest language syntax without being forced to rewrite all the old code.<p>I&#x27;m not quite sure about stock visual studio (since I don&#x27;t use it), but Resharper (and their new Rider IDE, which I&#x27;ve played with a bit) is pretty good at highlighting code doing things the old way and even automatically rewriting it for you. This seems to be getting better as they take advantage of what the Roslyn compiler can help with.<p>.NET Core, native, and the work of Xamarin only means more cross platform support, which allows broader use beyond just the Windows world.  The ecosystem is starting to get caught up now, and between most popular libraries being available and the feature parity reached with .NET Core 2.0, things are looking great for it to grow even more popular.",2018-02-11 22:46:15,16355275
3514,"They recently hiked up their prices b&#x2F;c now it includes a Xamarin mobile app but their back-end and middle-tier is free &amp; open source[1]. We opted for the paid version because our team is small and we are building a new multi-tenant SaaS.<p>It&#x27;s going well but the primary challenges we have are porting our existing data into their data model which right now uses SQL Server and some Redis. 
The paid version comes with descent support via their premium forum[2] but they have their own tag on StackOverflow[3]<p>[1] <a href=""https:&#x2F;&#x2F;github.com&#x2F;aspnetboilerplate&#x2F;aspnetboilerplate"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;aspnetboilerplate&#x2F;aspnetboilerplate</a><p>[2] <a href=""https:&#x2F;&#x2F;forum.aspnetboilerplate.com&#x2F;viewforum.php?f=5"" rel=""nofollow"">https:&#x2F;&#x2F;forum.aspnetboilerplate.com&#x2F;viewforum.php?f=5</a><p>[3] <a href=""https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;tagged&#x2F;aspnetboilerplate?sort=newest"" rel=""nofollow"">https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;tagged&#x2F;aspnetboilerplate...</a>",2018-02-13 20:19:19,16370363
3515,I run a development shop in Australia and work with a lot of startups to build their MVP. This puts us in a position to recommend our preferred stack:<p>- Django backend<p>- React frontend<p>- Native mobile iOS&#x2F;Android OR Xamarin (depends on project)<p>- PostgreSQL<p>- AWS (Elastic Beanstalk) OR Heroku<p>- S3,2018-02-16 10:22:53,16391320
3516,"I run server 2016 and I can run all my dev tools. VS Code, VS 20x, SSMS, MySQL, PostGres, Xamarin.<p>On top of that, I can run Rome 2 Total War which is not a simple game. It runs great.",2018-02-19 22:16:07,16416200
3517,"It is amazing that React and friends work as well as they do, and for certain applications they make a lot of sense. But there is a fundamental disconnect using web technologies for native apps.<p>The solution I am pursuing right now is Microsoft&#x27;s Xamarin. The C#\XAML stack supports iOS, Android, MacOS and Android. The only thing it is missing is web. But with a couple serious projects working on compiling C# to WebAssembly perhaps that will happen.",2018-02-22 07:43:16,16435927
3518,"XAML, QML, JavaFX, Android (since version 5), Cocoa all build exes, so I don&#x27;t know which single one you mean.<p>QML and JavaFX are cross-platform, XAML is cross platform via Avalonia or Xamarin.Forms.<p>Anyone using C++ on Windows for GUI development should use Visual C++, C++ Builder or the gcc toolchain integrated in the Qt installer.",2018-02-22 08:30:45,16436117
3519,"JavaFX doesn&#x27;t run on iOS. While your Electron app will be tweaked to make a Cordova app that runs on iOS.<p>Avalonia is at beta level at best, would you bet your startup on it? Xamarin.Forms ok, but XAML is not 100% the same everywhere, anyway. WPF is not Xamarin.Forms.",2018-02-22 08:56:21,16436247
3520,"Correct me if I&#x27;m wrong, but I think Xamarin just wraps Cocoa.",2018-02-22 09:02:13,16436269
3521,"Like the rest of Xamarin&#x27;s platforms, you can use modern XAML with MVVM patterns or you can use XCode&#x27;s Interface Builder to create your views.<p>Xamarin.Forms has no relationship to WinForms.",2018-02-22 13:26:59,16437357
3522,"So, how &quot;easy&quot; is to interface flutter with swift&#x2F;java&#x2F;xamarin or similar?<p>I could live with a &quot;small&quot; dls if is constrained to UI rendering and let me do the logic on a more native lang...",2018-02-26 20:04:33,16468480
3523,"There&#x27;s been a C dart FFI for years. Communicating with whichever other system shouldn&#x27;t be any harder than the next language. None of those would be my first choice though. The less platform specific code you write, the fewer platform specific issues you&#x27;ll be dealing with. Plus xamarin isn&#x27;t native anywhere.<p>With Flutter apps using the AOT, performance should already be good. Here&#x27;s an interesting real world comparison between libsass (a C library) and dartsass.<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;sass&#x2F;dart-sass&#x2F;blob&#x2F;master&#x2F;perf.md"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;sass&#x2F;dart-sass&#x2F;blob&#x2F;master&#x2F;perf.md</a><p>From the Flutter FAQ<p><a href=""https:&#x2F;&#x2F;flutter.io&#x2F;faq&#x2F;#"" rel=""nofollow"">https:&#x2F;&#x2F;flutter.io&#x2F;faq&#x2F;#</a><p>&gt; How does Flutter run my code on Android?<p>&gt; The engines C&#x2F;C++ code is compiled with Androids NDK, and any Dart code is AOT-compiled into native code. The app runs using the native instruction set (no interpreter is involved).<p>&gt; How does Flutter run my code on iOS?<p>&gt; The engines C&#x2F;C++ code is compiled with LLVM, and any Dart code is AOT-compiled into native code. The app runs using the native instruction set (no interpreter is involved).<p>&gt; Can I access platform services and APIs like sensors and local storage?<p>&gt; Yes. Flutter gives developers out-of-the-box access to some platform-specific services and APIs from the operating system. However, we want to avoid the lowest common denominator problem with most cross-platform APIs, so we do not intend to build cross-platform APIs for all native services and APIs.<p>&gt; A number of platform services and APIs have ready-made packages available in the Pub repository. Using an existing package is easy.<p>&gt; Finally, we encourage developers to use Flutters asynchronous message passing system to create your own integrations with platform and third-party APIs. Developers can expose as much or as little of the platform APIs as they need, and build layers of abstractions that are a best fit for their project.",2018-02-26 22:22:33,16469519
3524,"So it&#x27;s like Xamarin -- there&#x27;s UI for iOS, UI for Windows, UI for Android, but you can also use &quot;Xamarin Forms&quot; and have a similar appearance everywhere. But there&#x27;s nothing stopping there from being a &quot;React Forms&quot; or whatever that does the same thing, is there?",2018-02-27 16:34:07,16475026
3525,"Having a scripting layer is ok-ish, but then you can&#x27;t use your native lang (swift, .net&#x2F;xamarin, java, etc).<p>So this mean that to have &quot;cross-platform <i>UIs</i>&quot; you MUST commit to a inferior language glue. Js is bad, Dart is better, but Swift&#x2F;C#&#x2F;F# is WAY better.",2018-02-27 16:52:10,16475256
3526,"Flutter has MUCH better performance than Xamarin Forms though. React could theoretically have something just as good for a cross platform UI toolkit, but given that Flutter took several years to even get to a beta, I think that would probably be a long and expensive project for Facebook and they&#x27;re likely just not interested in it. That sort of thing sort of runs against the core philosophy of React Native anyways.",2018-02-27 16:52:24,16475259
3527,"Just a note: one of Flutter&#x27;s differentiators is that renders every pixel, straight to OpenGL &#x2F; Vulkan. It doesn&#x27;t do cross-platform the way RN or Xamarin does it. It&#x27;s more like Unity.<p>Since most featured mobile apps nowadays have very custom UIs, we hypothesize that this is a very important feature going forward.",2018-02-27 17:27:00,16475648
3528,Xamarin already does this. IMO the best choice currently if you need to go multi platform.,2018-02-27 17:32:29,16475706
3529,"Programming languages have killer apps that define how people engage with them. Perl was &quot;instead of using shell scripts with sed&#x2F;awk you can use a &#x27;real&#x27; programming language.&quot; Java was &quot;here&#x27;s C without so many footguns.&quot; C# was &quot;here&#x27;s Java without having to deal with Sun&#x2F;Oracle.&quot; Dart was supposed to have a killer app around web development and didn&#x27;t make it. Even something like Flutter has incremental improvements over stuff like React Native, Xamarin Forms and other cross-platform UI toolkits. There&#x27;s still no killer app there.",2018-02-27 17:37:00,16475757
3530,"I see Flutter the same as in React Native and Xamarin, cross platform mobile UI framework that provides native feel. PWA is an attempt to make web apps&#x2F;sites work as well as native, web app&#x2F;site by default is &quot;cross platform&quot;. Google is not going to replace PWA with Flutter or vice versa. Just two groups within Google with different ideas on PWA vs native dev. Similar to GMail vs Inbox, Polymer vs Angular Elements, Go vs Dart, Allo vs Hangouts etc.",2018-02-27 17:45:21,16475868
3531,Do you have a Xamarin vs Flutter benchmark you&#x27;d like to share?,2018-02-27 18:12:59,16476199
3532,"No, the efficacy of the direct GL canvas native bindings and the view composition architecture are why it&#x27;s efficient. Yes, there&#x27;s little runtime language overhead because it&#x27;s AOT compiled, but that alone wouldn&#x27;t cause it to win over another AOT compiled mobile device strategy, such as an AOT xamarin project. (And all the other points in that article apply equally to xamarin, for example; and some are just opinion like the xml vs code for layout debate) I&#x27;m sorry, but I don&#x27;t see how any of flutter&#x27;s real performance wins are truly tied to its&#x27; choice of language, and it&#x27;s a competitive market. I&#x27;ll be happy if I&#x27;m proven wrong in a year or two&#x27;s time, however.",2018-02-27 18:22:57,16476319
3533,"&gt; Nothing stopping it, nope. I&#x27;m surprised there isn&#x27;t something currently.<p>There is - ironically, by the owners of Xamarin:<p><a href=""https:&#x2F;&#x2F;microsoft.github.io&#x2F;reactxp&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;microsoft.github.io&#x2F;reactxp&#x2F;</a><p>Hadn&#x27;t heard of it practically at all since the initial announcement. It seems it&#x27;s a <i>very</i> small team: <a href=""https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;reactxp&#x2F;pulse"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;reactxp&#x2F;pulse</a>",2018-02-27 18:42:13,16476493
3534,"You missed Xamarin, which seems to be popular enough to have its API documentation prominently ranked in search engine results, suggesting there seems to be .NET programmers doing mobile development.",2018-02-27 19:47:42,16477163
3535,"Disclaimer: I work on Flutter<p>Xamarin currently manipulates OEM SDKs&#x27;s bundled widgets <a href=""https:&#x2F;&#x2F;visualstudiomagazine.com&#x2F;articles&#x2F;2017&#x2F;12&#x2F;04&#x2F;flutter-challenges-xamarin.aspx"" rel=""nofollow"">https:&#x2F;&#x2F;visualstudiomagazine.com&#x2F;articles&#x2F;2017&#x2F;12&#x2F;04&#x2F;flutter...</a><p>Though there is a proof of concept running Xamarin with portable custom widgets on Skia <a href=""https:&#x2F;&#x2F;xamarinhelp.com&#x2F;skixam-skiasharp-platform-xamarin-forms-proof-concept&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;xamarinhelp.com&#x2F;skixam-skiasharp-platform-xamarin-fo...</a>",2018-02-27 21:18:17,16478002
3536,"We&#x27;ve been building hybrid-apps at work for a couple of years (Cordova) and are now feeling the pain of those hybrid eco-systems. Unmaintained plugins, flaky behaviour between iOS and Android, difficult to develop and unit-test, etc.<p>Apps we made earlier started out pretty basic, but soon started to grow bigger with login functionality, placing orders and interacting with a community.<p>I&#x27;ve started looking at alternatives and found a few. What do you recommend&#x2F;use at work or for you personal projects?<p>Xamarin? NativeScript? React Native? Pure native (swift&#x2F;java)? And how do they compare?<p>Xamarin looks promising, code reuse is a big plus, but i&#x27;m wondering if it&#x27;s used in larger corporations&#x2F;apps?",2018-02-28 11:09:35,16482177
3537,"I&#x27;ve used RN for a few projects now. I can recommend it to the extent that the community is active and there&#x27;s a module for just about everything. I also am familiar with React so this was a big plus.<p>In terms of native vs. RN, it depends on the app and on you. For most projects, the result can be pretty good, and the RN components do compile into native ones so you would not notice too much of a difference in the final product.<p>Use it if you like React. If you don&#x27;t and like Angular, use Ionic. If you like new stuff try Flutter with Dart cause that&#x27;s heating up at the moment, and is blazing fast and efficient - Dart&#x27;s easy to learn if you know at least 1 language already.<p>I have not ever met anyone that uses Xamarin nor do I really know much about it. I try to avoid Microsoft&#x27;s ecosystem whenever possible so I can&#x27;t really speak to it too much.",2018-02-28 12:15:42,16482440
3538,"Why are so many apps these days glorified web pages running in a browser that pretends not to be one?<p>- There are much better way to target multiple platforms while sharing code: Xamarin, React Native etc. (and not so good ones like QT&#x2F;Swing and the like, I guess)
- Apps made this way are not native to any of the platorms they run on - best case scenario they replicate platform UI and conventions poorly and with great effort, worst case they look nothing like native apps. Not as bad as Java does but close
- HTML&#x2F;CSS was never meant to be used to create UIs, they are meant to describe and style (hyper)text. It&#x27;s a necessary evil when targeting browsers where there&#x27;s no alternative, masochism otherwise
- They are also slower and (much) more memory hungry than native apps - Slack happily eats 300+ megs of ram to do very little
- They mean having to use JavaScript, instead of a better language with better tooling support
- Many&#x2F;most of the time the use case can be served by an actual web site&#x2F;app - if you are making something that needs to connect to a database on a remote server to be of any use, why are you making an app to begin with?<p>Given the above downsides, why are Electron and the like so popular these days?",2018-02-28 13:54:35,16482940
3539,"Psiphon | Mobile App Developer | $100K-$130K | Toronto | corp:&lt;<a href=""https:&#x2F;&#x2F;psiphon.ca&gt;"" rel=""nofollow"">https:&#x2F;&#x2F;psiphon.ca&gt;</a> product:&lt;<a href=""https:&#x2F;&#x2F;www.psiphon3.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.psiphon3.com</a> &gt;| info+hn@psiphon.ca<p>We develop and operate Psiphon, an Internet censorship circumvention network that helps millions of people in freedom-restricted countries access uncensored Internet every day.<p>Psiphon Inc. is looking for an experienced iOS and Android mobile app software developer to join our Toronto team. This role will be focused on developing new and innovative apps that use the Psiphon Network to deliver exciting and engaging content to our millions of users around the world.<p># Qualifications and Skills<p>* Successfully shipped apps on both iOS and Android platforms.<p>* Cross-platform mobile app development, including: React Native, Cordova, Phonegap, Xamarin, Ionic, Java&#x2F;Kotlin, Swift&#x2F;Objective-C. (Or whatever has worked for you in the past.)<p>* Experience with all phases of mobile app lifecycle: design, development, debugging, deployment, monitoring, and troubleshooting.<p>* Familiarity with monetization strategies and integrating and configuring popular advertising and analytics SDKs.<p>* Self-organizing; strong communication skills.",2018-03-01 17:00:47,16493744
3540,"SEEKING WORK :: REMOTE :: Portland, Oregon :: Full Stack Mobile Development<p>Better outcomes through experience, communication, and understanding risk.<p>Android&#x2F;iOS&#x2F;Xamarin&#x2F;Cordova. Serverless back-ends Amazon&#x2F;Azure&#x2F;Google. Website integration Node&#x2F;PHP&#x2F;ASP. App Design.<p>25+ years experience, 7 years mobile development. I am the Salty Dog: a sturdy, weather beaten crew member who stands at the prow of your ship guiding you safely through the rocks.<p>How can we help?<p>saltydogtechnology.com&#x2F;blog
<a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;</a>
curtis@saltydogtechnology.com",2018-03-01 17:49:41,16494311
3541,"Diginex | Blockchain startup | Hong Kong | QA&#x2F;Security&#x2F;FullStack&#x2F;Blockchain devs | Fulltime ONSITE preferred, VISA sponsors<p>We are a blockchain start-up based in Hong Kong. Our business consists of cryptocurrency mining, Initial Coin Offering (ICO) services and blockchain technology consultancy. Among our products, we are developing a crossplatform multicurrency wallet app for desktop &amp; mobile devices and we have plans to build a cryptocurrency exchange in 2018. Our goal is to become a legitimate, regulated, go-to global blockchain service provider. Our core values are based on high professional standards, where the ability to work effectively and independently is a must-have.<p>We are looking for filling several vacancies for the following roles in the next few weeks:<p>Lead Smart Contract Developer (Solidity&#x2F;Simplicity, Ethereum&#x2F;Bitcoin, TypeScript, etc, more info: <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;jobs&#x2F;view&#x2F;133063378&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;jobs&#x2F;view&#x2F;133063378&#x2F;</a>)<p>Senior Full-Stack Developer (TypeScript, Node.js, F#+Xamarin desirable, etc., more info: <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;jobs&#x2F;view&#x2F;133065230&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;jobs&#x2F;view&#x2F;133065230&#x2F;</a>)<p>QA&#x2F;Security Developer (Selenium tests, blackbox testing, security monitoring)<p>Work onsite (relocation package is offered) is preferred but not a must. Please send CV and short cover letter to jobs@digitas.co",2018-03-02 04:02:29,16498895
3542,"For a long time, the set of collection classes, which had more variety, and parallel programming support.<p>Now .NET also has TPL, immutable collections.<p>Also regardless of what one might think of Swing or JavaFX, at least they are there.<p>On .NET side, there isn&#x27;t yet a GUI framework that will work without changes across all implementations, Xamarin might eventually be it, but only after 3.0 release.",2018-03-05 14:31:20,16521244
3543,"Rendering to native components is a dead end. It creates huge surface area for bugs to appear, and it&#x27;s slow.<p>I had a &quot;pleasure&quot; of working with Xamarin Forms and interactions between native UI, behaviour difference between Android manufactures and versions, etc. were a constant source of pain.<p>With Flutter, if something works on one device it will almost certainly work on all devices. You can also customize per platform.<p>It is also possible to run it on desktop (although not officially supported). IMO that&#x27;s a big deal and a potential Electron killer.<p>Dart is meh though.",2018-03-07 11:09:26,16535647
3544,"These exist.<p>* <a href=""https:&#x2F;&#x2F;aws.amazon.com&#x2F;device-farm&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;aws.amazon.com&#x2F;device-farm&#x2F;</a><p>* <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;test-cloud"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;test-cloud</a><p>* <a href=""https:&#x2F;&#x2F;bitbar.com&#x2F;testing&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;bitbar.com&#x2F;testing&#x2F;</a><p>* <a href=""https:&#x2F;&#x2F;saucelabs.com&#x2F;devices"" rel=""nofollow"">https:&#x2F;&#x2F;saucelabs.com&#x2F;devices</a>",2018-03-09 04:52:55,16549876
3545,"Depending on your background, and what you&#x27;re trying to do, something like Xamarin might make you happier.<p>If you&#x27;re not a JS person at all, getting thrown into the full-bore insanity of modern web development typically embraced by those who tout React and React Native as the silver bullet, you&#x27;re gonna have a bad time.",2018-03-10 22:10:12,16560425
3546,"I think react native is a good recommendation for a react dev who wants to do cross platform development on mobile.<p>If you&#x27;re not a web dev it&#x27;s not a great fit.  You&#x27;ll have to deal with learning web, learning mobile, and as well as all learning all of react-native&#x27;s leaky abstractions.<p>Sounds like a nightmare.  I&#x27;d go with either native(Java&#x2F;swift) dev or if you have c#&#x2F;wpf experience then maybe xamarin.",2018-03-10 22:38:52,16560537
3547,"Microsoft invests heavily in Xamarin, but I haven&#x27;t seen an amazing cross platform app written in it yet, even though it&#x27;s four years older than React Native.<p>React Native is really good, but I wounder how many developers will be able to move from OOP or Web development to Declarative Programming.<p>I think we&#x27;ll continue to see a lot of Kotlin and Swift developers for the next decade, as both languages are still attracting many new developers.  Android and iOS have been playing nicely with the compatibility layer, but could potential break it if they begin to lose control of the market place. Developing in React Native, while having lower costs, is still more risky than having two native development teams.",2018-03-12 14:56:27,16568523
3548,"Microsoft feels like it always is moving towards a grand unifying vision, but it is always taking longer than you&#x27;d expect. Xamarin is still one of many heads of the great .NET hydra. Microsoft&#x27;s been making big strides to tame them all under .NET Standard, but there&#x27;s still plenty of work to go.",2018-03-12 15:25:16,16568743
3549,"I think a lot of this is objectively wrong. Any of the Cordova-based platforms (including Ionic, Framework 7 and some others) were built to support every platform including niche players and it still never got much attention from developers. Xamarin as well was able to target Windows Phone and it didn&#x27;t help. There are already big investments from Android competitors like Samsung in their mobile platforms and they absolutely suck.<p>Even then, a solid cross-platform dev platform like React Native is actually a boon for Android which is second fiddle to Apple when it comes to premium apps. Right now, anyone looking to reach profitability will go iOS first, then web, then Android. Making the cost of bridging the gap to Android smaller will only increase adoption.",2018-03-12 15:30:18,16568776
3550,"They are pretty big in enterprise apps, usually targeted to employees.<p>Despite my opinions regarding native UIs, the fact is that we are yet to get pure native apps contracts, they are either Cordova&#x2F;Xamarin&#x2F;Qt or plain web based.<p>The majority of enterprise shops do not care about native UI&#x2F;UX.",2018-03-12 15:34:12,16568805
3551,I&#x27;m working on an enterprise app for Android using Xamarin and we are taking the UX semi-seriously. App looks and performs fine.<p>I find the concept of &quot;native look and feel&quot; to be extremely nebulous and not particularly valuable. Apps should look good and be responsive and I don&#x27;t notice or care when they look native.,2018-03-13 02:21:07,16573472
3552,"I find the &quot;native look and feel&quot; concept quite valuable, but my experience in enterprise, it that most departments either want a &quot;department&#x2F;corporate look and feel&quot; or &quot;whatever works look and feel&quot;.<p>Thanks for your Xamarin feedback.",2018-03-13 07:46:59,16574407
3553,"&gt; I am talking about full-scale replacements for Googles entire Android development stack. Microsoft has Xamarin, Adobe has Cordova, Facebook has React Native, I mean its crazy town. [...]<p>&gt; Its like everyone whos ever tried to do Android programming gave up and declared: This is so bad that I will do my own startup to make it better.<p>&gt; And Google, not to be outdone by their competitors, responded by saying, Oh yeah? Well you cant compete with us, because were going to compete with us! and they launched Flutter, which isI am not making this upa 100% serious Android development stack that competes with native Android, and whose existence the actual Android team simply refuses to acknowledge.<p>This is incorrect. Every one of these I&#x27;ve heard of (all the big ones) and probably the rest don&#x27;t exist because Android development is so terrible, they exist mostly to facilitate one codebase for both iOS and Android, or to allow the use of a different language.<p>I mean, that&#x27;s incredibly obvious, so I don&#x27;t know why he&#x27;s got this here.",2018-03-13 08:09:38,16574478
3554,"&gt; Android uses Gradle as its default build system. It gets extremely slow on large applications like Uber, Facebook, Nest, Snapchat, etc. The enterprise customers all complain to the Android tools team about it, and they throw a ton of work into trying to speed it up. And it gets more and more complicated.<p>Sure, this is why it&#x27;s adopting a structure similar to Blaze, Buck and others with smaller modules, not to mention sharded compilation with Instant Run. The whole reason for Blaze, Buck, etc. existence is that common build systems fail at huge applications used at Google &#x2F; FB &#x2F; Microsoft scale. And yet that doesn&#x27;t seem to stop adoption of build systems like Maven, SBT, Gradle and all others which are used by vast majority of developers not working at GooAmaBookSoft scale.<p>&gt; Meanwhile, Uber (their marquee Gradle customer) just switched to Buck -- I don&#x27;t think Google even knows this yet.<p>Tools team is certanly aware of it.<p>&gt; The build system in Android is a huge pain point for the dev stack. It&#x27;s a big part of why things like React Native are gaining traction.<p>Not sure how second follows from the first. React Native is gaining traction because it lets developers quickly develop for two platforms at once (just like Xamarin, Cordova, Ionic gained a lot of traction in enterprise before). Instant redeploy is very nice but hardly a huge deciding factor.<p>&gt; Your comparison to iOS is basically invalid&#x2F;irrelevant, because iOS doesn&#x27;t have the same legacy packaging issues (APK) as Android has. Android&#x27;s build is actually quite complicated, more so due to the device proliferation, and it&#x27;s getting worse over time.<p>Huh, lack of proper build system is a huge headache when doing iOS CI builds. The compiler is also comparably slow for Swift&#x2F;ObjC (especially if you add just a bit of C++ code) so I don&#x27;t know how can you just dismiss it. It has very similar issues and the adoption didn&#x27;t suffer.<p>&gt; Hope that helps. I&#x27;d be happy to answer more detailed questions about why it&#x27;s so bad, since I&#x27;ve worked on it extensively in the past.<p>Not sure what you worked on (I&#x27;m guessing Gradle itself?) but it doesn&#x27;t seem like you know all that much about building Android apps with Gradle in most companies out there.",2018-03-13 09:32:31,16574753
3555,"I am still waiting for EF 6 feature parity, including DB visual designers, and Xamarin.Forms support for all .NET Core platforms.",2018-03-14 15:28:57,16585419
3556,"Just to show how well this works, the attached GIF on that site uses OS X Mavericks, now 5 years old.<p>I also like how they only considered one real alternative, which is &quot;XCode&quot; (incorrectly capitalized). What about Xamarin &#x2F; Mono? What about qt? With those, they don&#x27;t even need to upgrade their outdated OS. Instead, they chose the worst of all worlds, both development and user.<p>The state of development in 2018 is ridiculous.",2018-03-18 10:12:33,16611212
3557,"Windows forms is based on decides old WinApi. There&#x27;s some support for styling there, e.g. owner drawn items, custom painted controls, but using it correctly is tricky as hell.<p>WPF is based on Direct3D 9,  and is easily stylable. I consider it is the gold standard. But it is Windows only. There are cross platform alternatives, xamarin, avalonia, but I don&#x27;t have hands on experience with them.",2018-03-18 15:23:11,16612345
3558,"qt, gtk and Xamarin &#x2F; Mono are also &quot;like&quot; Electron but faster and easier to use. Why is the Google fad somehow more important or impressive than those already proven technologies?",2018-03-18 17:46:49,16613152
3559,"Electron is popular because web &quot;developers&quot; can&#x27;t be arsed to learn anything other than JS. It&#x27;s as simple as that. They live in the lie they tell themselves that JS development is easy, when it really isn&#x27;t, tooling is disastrous, IDE is nonexistent, apps look bad, etc. They are just happy they manage to run something &quot;desktop&quot;.<p>All those things you mentioned are true of Xamarin.<p>qt uses actual native controls, so not sure what is a &quot;lie&quot; about it; if something is not behaving correctly, it&#x27;s a bug, and you open an issue. GTK does look bad and out of place, I agree with that, bug so does Electron. If it&#x27;s between GTK and Electron, I&#x27;ll take a proper GTK application.<p>Looks the same = looks bad on all platforms.",2018-03-18 18:31:44,16613444
3560,"You should use Flutter for a bit before you strongly opine how it&#x27;s no different than Xamarin or whatever.<p>Flutter is different. There&#x27;s nothing even close to it when it comes to writing mobile apps.<p>Flutter takes the best ideas about UI toolkits, layouts and has the benefit of really good engineers (most are Chrome&#x2F;WebKit veterans) working for a really long time to make a really good implementation of those ideas.<p>Hot reload of code is just one feature that is absolutely unique to Flutter, at least when comparing to alternatives viable today (I&#x27;m sure are smalltalk implementation that also allowed that but no-one is using them today).<p>It&#x27;s still a beta product so skepticism is warranted but I can see the writing on the wall. 2 years from now it&#x27;ll be crushing other technologies the way React&#x2F;Vue is crushing in web space because Flutter is just So Much Better.",2018-03-18 19:06:06,16613634
3561,"What is it about &quot;hot reload&quot; that is so appealing to people? Running an app takes less than a second on Xcode. And .NET had &quot;modify, recompile and continue&quot; in 2005 at the latest. I fail to see the revolution here.<p>Your nonchalant mention of &quot;Xamarin or whatever&quot; means to me you have little experience with that.<p>You say that Flutter takes the best ideas of UI toolkits, but then say it&#x27;s mostly web engine developers. So which one is it? Let me guess, they are using Flex as layout? So hardly the &quot;best ideas&quot;. Edit: Yes, flex [0]<p>On the other hand, I don&#x27;t need to use it to predict how bad quality apps will turn out to be. Just like Electron and React Native apps are bad, so will Flutter apps be, for the simple facts no native controls are used. (React &quot;Native&quot; is not native at all.) Even the best implementation (which Electron and React Native do not have) would still mean bad apps simply because they are not using native widgets.<p>You seem to only care about developer experiencewhich I disagree as well. I only care about user experience. User experience is king and developer experience is complimentary.<p>[0] <a href=""https:&#x2F;&#x2F;github.com&#x2F;flutter&#x2F;flutter&#x2F;blob&#x2F;master&#x2F;packages&#x2F;flutter&#x2F;lib&#x2F;src&#x2F;rendering&#x2F;flex.dart"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;flutter&#x2F;flutter&#x2F;blob&#x2F;master&#x2F;packages&#x2F;flut...</a>",2018-03-18 19:28:24,16613766
3562,"I did a project in Xamarin Forms. The toolkit kinda worked, but nothing great about it. Amount of bugs was amusing: bugs from Xamarin + bugs from iOS + bugs from Android. Certainly does not fill most of my points. Writing anything custom was pain in the ass, since you needed both Android and iOS knowledge to implement the renderers.<p>Sure it would be the best to go fully native and hire 3 iOS + 3 Android devs, but who will do this when they can have 95% of the same with 2 flutter devs?",2018-03-18 20:33:29,16614152
3563,"I still miss my Pre+ every day, the hardware and software worked together like magic - the slide-out portrait keyboard was by far my favorite feature, one that I miss with the current trend of all-screen slates. Ironically the small screen didn&#x27;t feel super-cramped BECAUSE of the keyboard, I&#x27;m really upset that I never got to experience the Pre 3 which should have hit a nice middle-ground.<p>I don&#x27;t know if there&#x27;s room in the market for WebOS to make any kind of significant resurgence, but considering how many people show interest in tools like React Native and Xamarin for mobile apps these days it might stand a better chance than 2-3 years ago.",2018-03-19 19:37:31,16622293
3564,"The article mentions a Xamarin application -- that sounds interesting. I&#x27;d like to hear more about how far this approach can be taken in a single-process application. Are they using an existing message bus, or did they build one?<p>I&#x27;m more familiar with the traditional (SmallTalk-style) MVC setup where the data model entities implement the observer pattern. In that case, observers subscribe to change events by attaching themselves to model values (event sources). I guess MOP differs from this by replacing centralised model value objects with some kind of identifiers used to key message bus subscriptions (?).<p>Related ideas for client&#x2F;server are:<p>Event Sourcing <a href=""https:&#x2F;&#x2F;martinfowler.com&#x2F;eaaDev&#x2F;EventSourcing.html"" rel=""nofollow"">https:&#x2F;&#x2F;martinfowler.com&#x2F;eaaDev&#x2F;EventSourcing.html</a><p>and<p>CQRS <a href=""https:&#x2F;&#x2F;martinfowler.com&#x2F;bliki&#x2F;CQRS.html"" rel=""nofollow"">https:&#x2F;&#x2F;martinfowler.com&#x2F;bliki&#x2F;CQRS.html</a>",2018-03-20 02:39:45,16625575
3565,"The article is written in the context of a Xamarin mobile app, not overly complex or distributed at all. So I&#x27;m not sure if the added indirection cost is worth it.<p>I totally agree that message&#x2F;event passing is better suited for a complex distributed system",2018-03-20 09:35:50,16627050
3566,"Xamarin.Forms comes with a basic message passing system built in, which is what I assume the author is using. I&#x27;ve used it myself for a client mobile app project. It makes more sense with an MVVM setup like what Xamarin.Forms and WPF expect for user interfaces, since viewmodels can listen for model state changes that need to be reflected in the UI without requiring loads of explicitly coded delegates&#x2F;events.",2018-03-21 15:32:10,16638926
3567,Awesome! C# love everywhere. Is Xamarin.Forms web using Blazor?,2018-03-23 06:20:48,16655558
3568,"Unity can use .NET 4.6 now. It wasn&#x27;t because they were slowpokes, xamarin would not license it to them until they were acquired by Microsoft.",2018-03-25 18:50:44,16673785
3569,"- Mono&#x27;s license prior to the Microsoft&#x2F;Xamarin acquisition was LGPL, which is open ended and doesn&#x27;t allow e.g. discriminating against Unity; Unity would not accept it under those terms<p>- Xamarin <i>did</i> offer a commercial license to Unity; Unity would not accept it<p>- MS began to release their own .NET implementation under the kinds of license terms that Unity wanted years ago, but Unity didn&#x27;t budge<p>- In the meantime, MS then relicensed <i>Mono itself</i>the .NET implementation that Unity actually wantedunder the kinds of terms that Unity wanted, but still Unity didn&#x27;t show signs of moving until very recently<p>The whole <i>it&#x27;s Mono&#x27;s fault that Unity sucks</i> was essentially a successful PR attempt for Unity to disclaim responsibility for their shortcomings, with the (maybe not unintentional) side effect of directing public ire towards Mono for not doing enough free work (to benefit what was already one of the industry&#x27;s most successful companies!)",2018-03-25 19:13:07,16673932
3570,"&quot;Its mono&#x27;s fault&quot; was told to me by one of the founders of Xamarin, in person, not by Unity. Perhaps they did offer Unity a license to their newer stuff, but at completely unacceptable terms.  Xamarin&#x27;s concern was that Unity would be a direct competitor with their own cross platform product.<p>I don&#x27;t consider this to be anyone&#x27;s fault, my point is that post-MS acquisition, it is easier to get access to the newest mono runtimes&#x2F;compilers, which is why we are seeing them appear in Unity and in Godot.<p>&gt;MS began to release their own .NET implementation under the kinds of license terms that Unity wanted years ago, but Unity didn&#x27;t budge<p>That one wouldn&#x27;t have targeted all of their platforms, right?",2018-03-26 03:55:30,16676475
3571,"There are also CLU, Ada, Modula-2, Modula-3, Eiffel, Sather, BETA as possible inspirations for implementing generics, all the way back to 1976 (CLU).<p>As for C#, people keep forgetting .NET always had a JIT&#x2F;AOT compiler since version 1.0.<p>Just because not everyone bothers to sign their applications and call NGEN at installation time, it doesn&#x27;t mean it isn&#x27;t there.<p>Also Mono always supported AOT compilation, it is the way Xamarin works on iOS and the deployment story on Windows Store since it was introduced on Windows 8.",2018-03-27 12:46:35,16687731
3572,"Something like <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;</a> ?",2018-03-27 16:06:22,16689824
3573,"Yes Mono has some limitations, but it isn&#x27;t 100% like the iOS Xamarin compiler.<p><a href=""http:&#x2F;&#x2F;www.mono-project.com&#x2F;docs&#x2F;advanced&#x2F;aot&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;docs&#x2F;advanced&#x2F;aot&#x2F;</a><p>In any case, a limited form of generics is better than not having any at all.<p>They don&#x27;t need to provide a turing complete implementation of generics, even a basic one like CLU had would already be an improvement.<p>Using <i>go generate</i> feels like the old days, writing generic code in C and C++ with pre-processor tricks.",2018-03-27 16:07:09,16689839
3574,"Someone flagged the comment before I could post my response, but here it was (re: Google didn&#x27;t save Java on the client):<p>Java on the server was not in decline, but Java on the desktop was declining, had declined. Applets were dead, very few success stories around Java Web Start. And the main three &#x27;consumer&#x27; success stories for Java on the frontend were Limewire, Minecraft, and IntelliJ&#x2F;Eclipse. As a consumer facing technology, Java was a complete failure. No sane person wanting to ship a commercial, consumer app to end users would consider Java as a first choice. I have been a Java developer from the day HotSpot Alpha was released, I say this as someone who loves the platform.<p>Personal Java failed. I worked for years on J2ME apps, Java on high end Nokia Phones, Java on Palm devices (Ghost VM), etc. All these platforms amounted to nada. Flash was far more widely used for front end user facing apps than Java. Ditto for Visual Basic.<p>The relevance of the Swing comment is the people complaining about the fragmentation of Java&#x27;s write-once-run-anywhere promise, which was always more of a promise than a reality. If you want to make a viable mobile Java, you had to remove Swing, Java2D, CORBA, JMX, and a ton of other JDK libraries, which is exactly what Sun did with the various profiles as well. But once you do that, you have &quot;fragmentation&quot;<p>If Google had not produced Android, I can bet the leading platform today for mobile development that is not from Apple, would either be Xamarin based C#, or some scripting language like Lua or Python on top of a Linux widget toolkit. Java would not be in the mix at all. Or perhaps it would FlashMX sitting on top of Linux (ugh)",2018-03-27 16:23:04,16690013
3575,"Basically targeting WebAssembly as if it was just yet another hardware architecture.<p>So expect the comeback of Flash, Silverlight, Applets, ActiveX, ....<p>What to do a Flash like game without anything related to JavaScript?<p>Pure C, C++, Rust with SDL, Unreal, Unity, ....<p>Miss Silverlight? Check Blazor with Ooui bindigs for Xamarin.Forms.<p>Go devs already have their design document for WebAssembly runtime (&quot;WebAssembly architecture for Go&quot;).<p>Qt already has a prototype for WebAssembly, with improvements planned on 2018&#x27;s roadmap.<p>And many other projects are ongoing.<p>The pandora box is open, the only back is if the browser vendors stop developing WebAssembly.",2018-03-27 17:00:45,16690476
3576,"Apple to me is not a software &#x2F; services company. They failed to make Swift popular and imho it will just artificially keep Swift alive while everyone else will be using RN,Xamarin and similar.",2018-03-30 07:18:35,16714335
3577,"&gt; One wonders what would have happened if they just sort of let Windows be Windows. I.e. if they had continued iterating on core stuff but left UI and general philosophy resembling Win7&#x27;s trajectory and not tried to force people into WinRT&#x2F;UWP&#x2F;store.<p>With Windows 8 they tried to do too much too quickly and not well, however their motivations and intention were spot on in my opinion.  Security has always been a pain point for Windows and it&#x27;s only been getting worse, the Store introduced a sandbox like that found on iOS and Android.  ARM, iOS, and Android showed that modern hardware and software can produce power efficiencies that put x86 and Windows to shame.  UWP introduced hardware independence and a modern development framework that would put Windows Apps on a level playing field with iOS and Android.<p>The problem was that Microsoft thought that merely by virtue of their existence, developers would adopt UWP&#x2F;Store despite the path forward being a huge pain in the ass.  We see how that played out.  With Windows 10 we&#x27;ve seen a course correction and a change in strategy.  You can have traditional Applications sandboxed in the Store, and you can have UWP Apps outside the Store.  Microsoft bought Xamarin and is folding it into UWP, the intent is to not just have hardware independence with UWP but also OS independence.",2018-04-02 15:04:40,16735054
3578,"KickBack Rewards Systems, Remote<p><pre><code>  KickBack Rewards Systems
  http:&#x2F;&#x2F;www.kickbacksystems.com
  http:&#x2F;&#x2F;careers.kickbacksystems.com
</code></pre>
KickBack Rewards Systems is a privately held company founded in 1999 that specializes in customer specific marketing and payments for over 1000 US clients. Our clients include a half-dozen Fortune 50 companies, one of them is an anchor partner in our national coalition loyalty program. This candidate will be joining a medium sized team of 13 developers who all commit to their projects as a labor of love and their lives work. If you are interested in any of these positions my contact information is located under my profile.<p>-
Lead Senior Software Engineer<p>We are seeking a Senior full-stack Developer with leadership experience to act as a technical team lead. Were looking for someone with a strong software development background who has deep JavaScript experience who can help the team develop better applications. The correct person must be a polyglot and should feel comfortable reviewing JavaScript, PHP, Python and have a willingness to learn C# (Xamarin) for mobile projects. Candidates with previous experience on Agile teams will be well suited for this position. This is a full-time remote employee position. If remote, candidate must be willing to work around regular MST (-0700) office hours. KRS will _not_ consider agencies, outsourced or software development contracts for tihs role.
-<p>To apply: Email me, my contact information is located under my profile, or, visit <a href=""http:&#x2F;&#x2F;careers.kickbacksystems.com"" rel=""nofollow"">http:&#x2F;&#x2F;careers.kickbacksystems.com</a>",2018-04-02 15:50:18,16735623
3579,"Location: Raleigh, NC (will be relocating from TN)<p>Remote: Yes<p>Willing to relocate: No<p>Technologies: C#&#x2F;.NET (MVC, Xamarin, WinForms), Python, C, C++, Java, Javascript, SQL, HTML&#x2F;CSS&#x2F;etc<p>Rsum&#x2F;CV: Shoot me an email.<p>Github: <a href=""https:&#x2F;&#x2F;github.com&#x2F;mbcrawfo"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;mbcrawfo</a><p>Email: mbcrawfo at gmail<p>I have more than a decade of programming experience (3 years professionally), with experience ranging from full stack web development in .NET&#x2F;js to low level embedded systems work in C and assembly.  Looking to relocate back to NC and find a full time position in the Raleigh&#x2F;Durham area.",2018-04-02 18:09:48,16737341
3580,"re: creating iOS Apps on an iPad - I&#x27;ve been using Continuous IDE for doing this. It includes Xamarin Forms, as well as native bindings. I&#x27;ve created a few non trivial apps in it. The benefit is that you can bootstrap the app really quickly in code and if you really want to scale it up, move it to the Mac to clean up. You can also <i>almost</i> take the code from a VS Mac projects and run it directly on an iPad.. it just needs a few hoops to be jumped through at the moment to get the files on the device.",2018-04-03 07:15:05,16742504
3581,"Windows 7 doesn&#x27;t have &quot;many years&quot; left. Windows 7 has less than two years left in its support lifetime. (2020 is when extended support ends.)<p>In the mean time, if you, in a corporate environment, must Windows 7 until the bitter end in 2020, you can use WPF as a bootstrap step towards UWP. The XAML is similar between them and a lot of the coding paradigms are same (MVVM patterns), and if you architect well (.NET Standard 2.0 libraries) you can share 100% of your business logic between a WPF application and a UWP application.<p>Xamarin.Forms also has an open source WPF renderer if you&#x27;d prefer to further go the cross-platform route. (Xamarin.Forms supports UWP, iOS, Android, macOS.)<p>I agree that I think Microsoft should have had the .NET Standard, XAML Standard, WPF Xamarin.Forms development stories in place sooner to better leverage developers that need to support older Windows, but many of those pieces are in place <i>now</i> if that is what corporate developers were waiting for.",2018-04-03 15:32:07,16745616
3582,"C# has been AOT compiled since the early days.<p>Just that only dynamic linking was supported on the regular .NET Framework.<p>Unity(with IL2CPP), Mono and Windows 8 store apps also support static linking.<p>So the approach is the same as Xamarin for iOS or .NETbon the Windows store.<p>There is an additional phase that generates the native code, using MSIL as just yet another compiler phase.<p>As for the runtime, yes there needs to be a minimal set of services.<p>But even C, C++, Go, ... need to have some kind of runtime if you want to use all language features.",2018-04-05 05:30:42,16762064
3583,"Yes, the approach is similar to all major AOT compilers on .NET space.<p>NGEN, .NET Native, CoreRT, Mono, Xamarin, IL2CPP, HPC#.<p>A minimal runtime is always needed, for some of the language semantics, FFI and memory management.",2018-04-05 05:34:15,16762075
3584,"In  C# you have Winforms, WPF versions x,y, z.... and now UWA stuff.<p>And with Xamarin, a slew of other ways.<p>Not that less confusing.",2018-04-05 21:51:17,16769085
3585,"Of course it is Microsoft&#x27;s fault. They could have chosen to put resources into making those projects work better on Windows Phone.<p>Microsoft made a bet on Xamarin instead.<p>Also you had to use their proprietary touch events in the webview browser, which (a) was buggy, (b) had little information about how to use it in practice, and (c) the webview was a branch of IE11 specific to Windows Phone. I think for Update 1 the webview supported the Apple touch event API but it was broken (disappeared in update 2).<p>The dumbest thing is that supporting Cordova properly would have immediately got them a whole heap of lesser known apps without having to give money directly to developers. Money multiplier investments are smart.",2018-04-07 21:47:13,16783190
3586,"So come to Europe. Plenty of WPF jobs here.<p>Not everyone is using Citrix, and there are many markets, like life sciences, ticketing systems, factory management and many other domains, using non networked devices with native UIs in WPF.<p>Of course MS is not supporting WPF on .NET Core, they already announced XAML Standard and Xamarin.Forms is going to support Linux and macOS as well.<p>Also they have big UI announcement planned for BUILD as discussed on .NET Rocks interview with Scott Hunter.",2018-04-09 19:32:44,16796192
3587,"CoreCLR will be nice for Unity with the 2x performance improvement.<p>I wish Microsoft had moved to it quicker and Unity wouldn&#x27;t have had that lull on Mono 2.x .NET and had to build IL2CPP.<p>When IL2CPP was being rolled out it was quite impacting to build size and actually making iOS builds for a while in 2015 from like March to summer was not workable for months. Now they have Android on it and it works well but keeping all that up to date is cumbersome for a smaller tech&#x2F;engine team.<p>I still would love a C++ engine&#x2F;lib like they were going to do back when Apple was forcing AOT instead of JIT languages around 2010 [1], but having a C# engine that can be comparable in performance is killer.<p>As long as this update is smooth and is truly faster that would be welcome. It was harder to trust Microsoft before during the Mono&#x2F;.NET disconnected period so Unity treaded carefully but after Microsoft bought Xamarin and went .NET standard&#x2F;core it seems like they are embracing and not extinguishing. Microsoft&#x27;s new focus is Azure and .NET core&#x2F;standard help expand that as well as its use by Unity (always a C# champion) and even Unreal Engine possibly which some have attempted [2]. If Unity switches to .NET core&#x2F;standard possibly Unreal Engine will be compelled to add it natively.<p>[1] <a href=""https:&#x2F;&#x2F;blogs.unity3d.com&#x2F;2010&#x2F;07&#x2F;02&#x2F;unity-and-ios-4-0-update-iii&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blogs.unity3d.com&#x2F;2010&#x2F;07&#x2F;02&#x2F;unity-and-ios-4-0-updat...</a><p>[2] <a href=""https:&#x2F;&#x2F;mono-ue.github.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;mono-ue.github.io&#x2F;</a> or <a href=""https:&#x2F;&#x2F;github.com&#x2F;xiongfang&#x2F;UnrealCS"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xiongfang&#x2F;UnrealCS</a>",2018-04-10 19:34:11,16804441
3588,Xamarin ships for iOS.  It does AOT compilation from CIL to native.,2018-04-11 02:57:31,16807689
3589,"I&#x27;ve been using Flutter for a year now, and I&#x27;ve loved it since the first time I gave it a try.<p>In my work, I&#x27;ve been using other cross-platform technologies, such as Xamarin and React Native briefly (actually currently doing a customer project with RN). In my experience, RN is not that bad and mostly gets the job done, but I&#x27;ve grown to like Flutter more. The tooling and documentation are top-notch (&quot;it just works&quot;), and since it custom renders everything, the UIs are consistent across devices and platforms. For example, with React Native I had to recently fight with a third-party library to have gradients (RN doesn&#x27;t support them), but couldn&#x27;t get the library working.<p>Another thing that I heard from colleagues was that React Native can introduce a lot of breaking changes between versions. I have a one-year-old hobby Flutter project and I was still able to run that without any pain when the first beta came out.<p>Being a native Android &amp; Java guy for the last 5 years or so, having the strong type system of Dart also felt more natural to me than Javascript.",2018-04-12 07:39:06,16818761
3590,And what&#x27;s your experience vs xamarin ?,2018-04-12 08:05:45,16818857
3591,"Disclaimer: It&#x27;s been over a year and Xamarin could&#x27;ve improved a lot during that time.<p>Coming from a Java&#x2F;Kotlin background, I found C# to be really nice, but I had some issues with Xamarin tooling. I used Xamarin Studio and for the most part, it worked fine. Sometimes, there were some random crashes and project build errors that mysteriously resolved themselves. I also needed pie charts per the customer requirements and the best pie charting library I could find had licensing issues, so ended up implementing the pie chart myself which wasn&#x27;t that bad.<p>To compare, I would say the Flutter tooling is really good, compared to Xamarin where sometimes I would not be confident with the tools. Also, with Flutter, I can share the UI layer entirely, compared to the Xamarin project where we only shared some plain business logic with written purely with C# without Android&#x2F;iOS SDK dependencies. I know about Xamarin.Forms, but have no experience to compare it with Flutter. At the time the project team didn&#x27;t want to use Forms, but I don&#x27;t remember why.",2018-04-12 09:21:29,16819220
3592,"Okay, trying xamarin soon. I&#x27;d like to add for fellow readers that Xamarin has 2 implementation for cross platform development:<p>- Xamarin Forms<p>- Xamarin Native<p>Where forms has the most shared code features ( Dev efficiency). Fyi, the op is talking about Xamarin Native",2018-04-12 11:05:27,16819603
3593,"I love electron, and it&#x27;s definitely leveled the playing field for cross platform desktop apps. However, Electron apps are difficult to do with high performance and low memory overhead. I still think that native matters on mobile, though. I have yet to see any Cordova-wrapped app that works as good as native. There are ways to get native performance and still write in a cross platform manner (React Native, Xamarin, etc).",2018-04-14 05:32:04,16836056
3594,"Oh, Tizen, I guess you are not up to date with it.<p>After throwing away the C++ libraries and going to that C code you mention, they have decided to offer .NET Core + Xamarin as  alternative to those C++ libraries.<p>Which I agree is much better than Bada C++ style libraries, but reveals they aren&#x27;t sure where to go next.<p>Then at FOSDEM they introduced an IoT OS based on NuttX +  JerryScript, and called it Tizen RT, even though it isn&#x27;t anything Tizen related.<p><a href=""https:&#x2F;&#x2F;wiki.tizen.org&#x2F;Tizen_RT"" rel=""nofollow"">https:&#x2F;&#x2F;wiki.tizen.org&#x2F;Tizen_RT</a>",2018-04-15 21:25:09,16845079
3595,"Except, it is nothing like win32 VS. This version is based on Xamarin (Microsoft follows horrible naming conventions)",2018-04-16 05:10:26,16846777
3596,"About GUI on .NET Framework:<p>- Windows form works but not perfect. The editor works if you install the template for it, but not the auto generation of code, like double click on button -&gt; handler generated. You write code programmatically. but is used a lot. I use it in the repl (fsi), to generate chart, custom data visualization.<p>- WPF the same, works, no editor (but codegen is less needed)<p>- Xamarin support F# ( <a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;cross-platform&#x2F;platform&#x2F;fsharp&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;cross-platform&#x2F;plat...</a> ) on Forms, etc<p>Some good from community+MS, because community tried to adapt techonologies and make it more friendly to use in F#<p>- Xamarin XAML in Elmish style, really more idiomatic ( <a href=""https:&#x2F;&#x2F;github.com&#x2F;fsprojects&#x2F;Elmish.XamarinForms"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fsprojects&#x2F;Elmish.XamarinForms</a> ) from F# creator itself (Don Syme, who now work on xamarin division too)<p>- WPF and Xamarin xaml can be used with a type provider too for statically type view at compile type ( <a href=""http:&#x2F;&#x2F;fsprojects.github.io&#x2F;FsXaml&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;fsprojects.github.io&#x2F;FsXaml&#x2F;</a> )<p>The only one not yet supported is UWP, because of of .NET Native.<p>All that without speaking of the gui stack outside .net framework, like electron+fable or just fable+elmish&#x2F;react&#x2F;react.native ( <a href=""https:&#x2F;&#x2F;github.com&#x2F;SAFE-Stack&#x2F;SAFE-Nightwatch"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;SAFE-Stack&#x2F;SAFE-Nightwatch</a> )",2018-04-20 13:47:14,16884702
3597,"Depends for what you need GUI.
You need it for complex LOB app? So no, editor will be good.<p>Personally, i write c# and xaml, and i dont use the editor (vs or blend), but i edit directly the xaml.<p>About f# and gui, depends on use case. For example <a href=""https:&#x2F;&#x2F;fslab.org&#x2F;XPlot&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;fslab.org&#x2F;XPlot&#x2F;</a> to show graphs.<p><pre><code>  let series = [ &quot;bars&quot;; &quot;bars&quot;; &quot;bars&quot;; &quot;lines&quot; ]
  let inputs = [ Bolivia; Ecuador; Madagascar; Average ]
  
  inputs
  |&gt; Chart.Combo
  |&gt; Chart.WithOptions 
       (Options(title = &quot;Coffee Production&quot;, series = 
          [| for typ in series -&gt; Series(typ) |]))
  |&gt; Chart.WithLabels 
       [&quot;Bolivia&quot;; &quot;Ecuador&quot;; &quot;Madagascar&quot;; &quot;Average&quot;]
  |&gt; Chart.WithLegend true
  |&gt; Chart.WithSize (600, 250)

</code></pre>
this is used to generate programmatically i chart. inside a window with some layout, usually in enough. And i can do testing in the repl.<p>But yes, if you use editor like c# version, F# is less nice to use.
But again, programmatically allow other things, like <a href=""https:&#x2F;&#x2F;github.com&#x2F;fsprojects&#x2F;Elmish.XamarinForms"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fsprojects&#x2F;Elmish.XamarinForms</a><p>So depends how much time you edit the view (and why), vs gains in the logic behind the view.
For me the global tradeoff, but depends, so you are right.",2018-04-20 14:44:10,16885158
3598,Mono? Xamarin?,2018-04-22 03:25:45,16894562
3599,"I was just thinking about the &#x27;full circle&#x27; today.<p><i></i>OSes of the past<i></i>:  Windows, Variations of Unix&#x27;s,<p><i></i>OSes of 2018<i></i>: Android, IOS, All Varations of Browsers, plus all the old ones<p>---<p><i></i>Cross platform (cross-os) development of the past<i></i>:  nasty (Widget libraries (wxWindows, QT, ... ), os-abstraction libs )<p><i></i>Cross platform  development of 2018<i></i>:  nasty still (react-native, xamarin, etc .. )<p>---<p><i></i>Development pipeline tools of the past<i></i>:  Automake&#x2F;cmake, make, linker<p><i></i>Development pipeline tools of 2018<i></i>:  npm, webpack<p>---<p><i></i>Compiler front ends of the past<i></i> (things that produce assembler or low-level C or stack-machine codes):  various C++ front ends, Eifel, etc<p><i></i>Compiler front ends of 2018<i></i> (things that spit out javascript):   babel (more like macro-assembler), Clojurescript, ReasonML, Fay, Nim .. ,etc<p>---<p>In current times, we also added Wireframe&#x2F;Styling tools into our development pipeline (I do not think we had it in the past).  Eg Bootstrap and other styling (that are not integrated into &#x27;compile-time-verification&#x27; stage of the modern Front-end languages.<p>I realize that above is somewhat front-end-dev oriented, but I think the desire to share &#x27;same language&#x27; for front and backend development, causes the blur.<p>I also would add that for data crunching and data distribution (eg CORBA, DRPC) of the past -- we have gained more options, higher quality and free.  So I would say this is a material advance for our productivity.",2018-04-23 14:57:52,16903935
3600,"You seem to have a lot of interesting base assumptions in your assertion.<p>Is &quot;continuing to use JS skills&quot; a bad thing? What makes &quot;branching out into other things&quot; a better thing? We will likely continue to disagree that JS is a bad language. While I agree that learning a gamut of languages is a good idea for any developer (and will heavily encourage devs to challenge themselves to try to learn different languages with different paradigms to keep from growing &quot;stale&quot;, to keep up lifetime learning), it&#x27;s not positive or negative value for a platform like Electron if it &quot;requires&quot; learning a new language to use it. Do you maybe think people are more likely to learn JS as a first language? That too is an interesting assumption.<p>Beyond those value opinions, existing JS skills may not be the only reason to use Electron. Existing HTML&#x2F;CSS skills may be the more important reason for some developers. Cross-platform GUI toolkits haven&#x27;t kept up with HTML&#x2F;CSS in a lot of areas including ease of testing and availability of designers with design skills. Use of JS may be entirely orthogonal to that decision.<p>(Certainly in my own usages of Electron, that has been the larger factor. Xamarin seems like the next best bet, but it&#x27;s still a lot easier for very small teams with no platform-specific UI designers on hand to audition design work in a handful of browsers than to bounce back and forth between a variety of iOS and Android emulators and devices.)<p>Whether or not that it is &quot;very few&quot; people using Electron today that don&#x27;t also want to directly use JS is a demographic question that you also seem to conflict with some sort of value judgment. Even if &quot;very few&quot; people are using anything more than &quot;just JS&quot;, that doesn&#x27;t mean it is valueless that people have an option to leverage Electron with other languages.<p>Even if demograghics did matter, I already pointed to a case where Rust-sourced code is shipping in major Electron apps (I know VSCode has dependency, I believe Atom has a dependency). VSCode is written entirely in Typescript, and I don&#x27;t think it&#x27;s the only major Electron project doing so (and if we start to play the dependencies game, a lot of Open Source in the Node world is Typescript). Even Atom seems mostly &quot;vanilla&quot; JS, but still has ~7% of its source in CofeeScript, and its &quot;vanilla&quot; JS has a lot of ES2015+-isms that would look unrecognizable to older versions of JS, and I&#x27;ve heard it argued that ES2015+ starts to be a different language than what a lot of people that have not followed JS in the last few years imagine when they discuss JS.",2018-04-23 20:46:00,16907229
3601,"&gt; WPF and WinForms would have been part of .NET Core<p>Id love them to be, but unfortunately therere technical reasons for that. Both depend on too many Windows components. WinForms is really a thin wrapper around Win32 windows and GDI+. WPF relies heavily on DirectX 9.<p>For mobile platforms, Microsoft offers Xamarin for GUI.<p>&gt; Microsoft wouldn&#x27;t be pushing DirectX 12.<p>Again, therere technical reasons. For the same reasons Apple is pushing Metal, and Khronos is pushing Vulkan, all 3 are conceptually quite similar.",2018-04-25 07:16:43,16919217
3602,"Yeah, speaking of graph traversal, when I was working on the Mono runtime performance team at Xamarin, it helped considerably in the garbage collector (SGen) when we added some manual prefetching to scanning the object graph, but it took a fair amount of benchmarking to find the sweet spot.",2018-05-01 08:20:01,16965362
3603,"Gingco.Net | Multiple positions in full&#x2F;part time | Braunschweig, Germany | Onsite<p>We&#x27;re looking for:<p>1) PHP developers for a web-based application, currently used my millions of users in more than 20 countries. Help to bring it to the next level.<p>2) C# developers for the development of Add-ins for MS products and&#x2F;or for developing iOS&#x2F;Android apps with Xamarin. Experience with a similar language would also be okay.<p>3) Front end developer to create interfaces for various devices, from old to newest technologies, from desktop to mobile devices and e-ink displays.<p>4) Adminstrative 2nd&#x2F;3rd level support team member who likes to help our customers in German and&#x2F;or English (other languages welcome too).<p>We work in small teams with low hierarchies and offer a good life-work-balance. If you run an additional business, that&#x27;s okay, we also offer working part-time. It would be good if you speak either German or English - if not, we offer language courses.<p>For more information contact me personally on Twitter: @cziegenberg<p>To apply: jobs (at) gingco (dot) net<p>No recruiters!",2018-05-01 16:51:15,16968791
3604,"KickBack Rewards Systems, Remote<p><pre><code>  KickBack Rewards Systems
  http:&#x2F;&#x2F;www.kickbacksystems.com
  http:&#x2F;&#x2F;careers.kickbacksystems.com
</code></pre>
KickBack Rewards Systems is a privately held company founded in 1999 that specializes in customer specific marketing and payments for over 1000 US clients. Our clients include a half-dozen Fortune 50 companies, one of them is an anchor partner in our national coalition loyalty program. This candidate will be joining a medium sized team of 13 developers who all commit to their projects as a labor of love and their lives work. If you are interested in any of these positions my contact information is located under my profile.<p>- Lead Senior Software Engineer<p>We are seeking a Senior full-stack Developer with leadership experience to act as a technical team lead. Were looking for someone with a strong software development background who has deep JavaScript experience who can help the team develop better applications. The correct person must be a polyglot and should feel comfortable reviewing JavaScript, PHP, Python and have a willingness to learn C# (Xamarin) for mobile projects. Candidates with previous experience on Agile teams will be well suited for this position. This is a full-time remote employee position. If remote, candidate must be willing to work around regular MST (-0700) office hours. KRS will _not_ consider agencies, outsourced or software development contracts for tihs role. -<p>To apply: Email me, my contact information is located under my profile, or, visit <a href=""http:&#x2F;&#x2F;careers.kickbacksystems.com"" rel=""nofollow"">http:&#x2F;&#x2F;careers.kickbacksystems.com</a>",2018-05-01 17:56:50,16969499
3605,"SEEKING WORK :: REMOTE :: Portland, Oregon :: Full Stack Mobile Development<p>25+ years experience, 7 years mobile development. Android&#x2F;iOS&#x2F;Xamarin&#x2F;Cordova. Serverless, AWS Lambda, Azure Functions.<p>saltydogtechnology.com&#x2F;blog
<a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;</a>
curtis@saltydogtechnology.com",2018-05-02 00:23:27,16973040
3606,"Incorrect. Provisioning profiles created by free Apple developer accounts only last for 7 days. After that you have to fire up Xcode and rebuild your app and reinstall it.<p>This is a very well known fact that you can find documentation for on many sites outside of apple.com, such as right here - <a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;ios&#x2F;get-started&#x2F;installation&#x2F;device-provisioning&#x2F;free-provisioning#limitations"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;ios&#x2F;get-started&#x2F;ins...</a><p>The sad fact is that it&#x27;s not your phone, it&#x27;s Apples.",2018-05-02 16:28:36,16978606
3607,Xamarin does this pretty well cross platform as well.,2018-05-02 18:48:18,16979999
3608,"Yeah the Silverlight vs Flex days of 2006ish really inspired this quite a bit.<p>Today Xamarin does all this pretty well cross platform, desktop and mobile for UWP&#x2F;Mac and iOS&#x2F;Android.",2018-05-02 18:51:03,16980024
3609,"Xamarin for linux is coming, so truly crossplatform .NET should be a future possibility.",2018-05-07 16:35:34,17014112
3610,"I really wish they would figure out of cross platform solution for desktop applications. I know their are libraries out there now, but Microsoft should really help with the effort. Maybe Xamarin.Forms? Idk.<p>Regardless, I&#x27;m working on a way to build Qt&#x2F;Qmp apps with .NET Core.<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;pauldotknopf&#x2F;net-core-qml"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;pauldotknopf&#x2F;net-core-qml</a>",2018-05-07 16:55:09,17014276
3611,What &quot;Xamarin&quot; specificly? Just the IDE? Or Xamarin Forms?,2018-05-07 16:56:09,17014285
3612,"Xamarin.Forms, with release 3.0.",2018-05-07 17:02:54,17014337
3613,"I&#x27;ll have to look into that. I have a WinForms app I&#x27;d love to run on a Linux machine. (Or more specifically, one of my Windows machines I run it on I&#x27;d rather be running Linux.)<p>I have to have a UI, but the UI is not sophisticated, and could likely be migrated to another UI framework without too much pain.<p>Although... Xamarin still doesn&#x27;t play nice with VB does it? Fun: <a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;cross-platform&#x2F;platform&#x2F;visual-basic&#x2F;xamarin-forms"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;cross-platform&#x2F;plat...</a>",2018-05-07 17:13:31,17014468
3614,"Xamarin for WPF is also coming which should allow you to keep your VB code unchanged, I don&#x27;t know the specifics however.",2018-05-07 19:07:43,17015508
3615,I don&#x27;t get why they don&#x27;t use Xamarin.Forms as a Foundation to power it...<p>So much wasted development effort. They are building Xamarin.Forms AND this new Windows Desktop Application stuff.,2018-05-07 19:32:35,17015730
3616,"What I really want to know is how it compares with React Native. I suppose one differentiator is Dart, which might draw in non-web devs who don&#x27;t want to write JavaScript, or C# (as with Xamarin).<p>The list of React Native apps is quite impressive, however:<p><a href=""https:&#x2F;&#x2F;facebook.github.io&#x2F;react-native&#x2F;showcase.html"" rel=""nofollow"">https:&#x2F;&#x2F;facebook.github.io&#x2F;react-native&#x2F;showcase.html</a>",2018-05-07 22:10:00,17016887
3617,"What he said. Flutter&#x27;s widget set is neither HTML-rendered like hybrid or native OS widgets like Xamarin or React Native (or NativeScript) but use a C++ layer of its own. Putting that on Android was no surprise; getting it past the censors at Apple is a little more surprising.  There&#x27;s also no reason this widget layer cannot be ported to macOS, Windows, and Linux... I&#x27;ll let y&#x27;all&#x27;s imaginations run with that for a bit.<p>I told a wicked-smart colleague of mine about Flutter in general; a couple weeks later he came back and said he had written a sample app in Flutter and then decompiled the resulting IPA and APK files and examined the assembly. His report was that it looked very similar to apps he had written in C++ (like I said, he&#x27;s wicked-smart).",2018-05-08 12:18:44,17020388
3618,"Most mobile apps I have used could have been done just as well with a website and there are an increasing number of ways to turn a website into an app. Not only that but websites are getting nearly as much access to the device as native apps.<p>So why would it make sense to learn two different programming languages, or Xamarin, when you could just make a web page?",2018-05-08 23:44:13,17026337
3619,"Also browsers tend to break features often and some browsers follow certain standards, while others don&#x27;t.<p>In a lot of cases when developing web-apps you end up special-casing browsers<p>That&#x27;s something you won&#x27;t end up doing in mobile-apps. It&#x27;s rare you special case OS for those, especially if you&#x27;re using Xamarin.",2018-05-09 12:05:35,17029151
3620,"It works best in an IDE, or in my case in Emacs where I can jump to each error in turn. On the command line or in an interactive mode (REPL, notebook, &amp;c.) I usually just want one error at a time. Ive had fairly good luck with this in C# in Visual Studio or Xamarin Studio with Roslyn, although I dont actually use .NET mucheven though I worked on Mono for a few years, hah.<p>It also really depends on the grammar of the language how well you can do recovery. Ideally a language should be designed from the beginning to support it. Simple example: if a language allows nested function definitions with the same notation as top-level definitions, then you cant reliably insert a missing closing bracket for a definition, because you cant assume that the next one is a new top-level; it could be nested. (Although of course you can use heuristics like indentation to get around this.)<p>Anyway, the point of successful recovery is that the diagnostics later in the file are <i>not</i> spurious. And if the compiler supports recoverable parsing, you can still have a mode where it just bails out after the first error if thats what you prefer.",2018-05-15 19:59:50,17077324
3621,".NET Standard is an interface. It describes a specification that must be met. .NET Framework, Xamarin, UWP and .NET Core are implementations. Both have APIs that are specific to the implementation (for example, .NET Framework has APIs that are specific to Window, while .NET Core is cross-platform and doesn&#x27;t have them, and Xamarin has mobile-specific APIs that don&#x27;t make sense on desktop). At a minimum they both implement the APIs designated by the .NET Standard specification. It is a guideline for you to write libraries that can be shared anywhere without recompilation.",2018-05-16 13:48:43,17082308
3622,Thanks for the input. Reminds me a little of Xamarin. Sounds really appealing but in the end you are often better off going native.,2018-05-17 00:10:54,17087501
3623,"Yup. Xamarin is another tool I want to love. I&#x27;m also following the Blazor project (<a href=""https:&#x2F;&#x2F;github.com&#x2F;aspnet&#x2F;Blazor"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;aspnet&#x2F;Blazor</a>) like it&#x27;s my job.",2018-05-17 12:28:08,17090724
3624,Could you please expand on your Xamarin vs. native comment? Im assuming you arent referring to Xamarin.Forms.,2018-05-17 15:51:39,17092395
3625,Our mobile team was working on creating an app a while ago. We are all C# coders so the obvious solution seemed Xamarin because you can use C# plus you get multi platform. First they dumped Forms and went with a native UI. Then there were a ton of bugs (don&#x27;t know the details) in Xamarin that caused them to switch to Java on Android. The iOS version will probably be written in Swift. Noone is talking about Xamarin anymore.,2018-05-17 18:20:09,17093949
3626,"&gt; It would just be so awesome if there were a viable cross-platform desktop GUI solution, for a modern statically typed language somewhere between the extremes of C++ and JavaScript.<p>For me that is JavaFX and Xamarin.Forms.<p>&gt;  The only thing that&#x27;s &quot;dead&quot; is the notion of being able to get away with just writing a native Windows version, and ignoring Macs (or vice-versa)<p>Depending on the world region, you can still get away with targeting only Windows.<p>Not every country has lots of people able to pay for Apple devices, or even with Apple stores in every corner.",2018-05-18 11:48:57,17100642
3627,"&gt; Make WPF-like replacement that works on Windows, macOS, Linux, Android, iOS and their browsers and we will all switch.<p>Literally Xamarin.Forms, though without the Linux support still (and browsers, of course, because native apps arent web apps).",2018-05-19 13:38:51,17107850
3628,Xamarin.Forms and Avalonia.,2018-05-19 19:17:06,17109278
3629,"&gt; Then there were a ton of bugs (don&#x27;t know the details) in Xamarin that caused them to switch to Java on Android.<p>Interesting. Those are the type of day-to-day details that I&#x27;m curious about when I see cross platform solutions like Xamarin, Kotlin Native, or React Native.",2018-05-20 20:55:23,17114679
3630,"No, it is something that has been doing &quot;automatic data binding via property get&#x2F;set interception, for example&quot; since 2008, so it is easy to see it in an language that isn&#x27;t JavaScript.<p>Additionally, Xamarin is older than VueJS.",2018-05-21 08:28:44,17116941
3631,"Not just enterprise.<p>Mainstream uses for .NET are windows desktop software (WPF &amp; XAML are the best GUI toolkits for the platform), videogames (Unity3D is quite popular), cross platform mobile development (Xamarin).<p>Now when .NET Core supports ARM Linux, it also works well for some embedded applications, but I dont know whether somewhere except me does that.",2018-05-21 11:21:18,17117528
3632,"At Khan Academy, our award-winning[1] mobile apps are a combination of native + React Native + web view. The React Native part is relatively new, but it&#x27;s definitely helping us to move a lot faster in developing our apps.<p>A few years ago, I worked on a project in Xamarin with some success. The iteration cycle with React Native is far faster, though.<p>[1] <a href=""https:&#x2F;&#x2F;blog.google&#x2F;products&#x2F;google-play&#x2F;winners-2018-google-play-awards-are&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.google&#x2F;products&#x2F;google-play&#x2F;winners-2018-google...</a>",2018-05-21 13:25:37,17118177
3633,"Xamarin (the code) is open source[0].  Only the bells and whistles (live code preview, integration with VS&#x2F;VS4M, etc.) are closed source.  I think.<p>[0] <a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms</a> ; <a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-android"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-android</a> ; <a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-macios"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-macios</a>",2018-05-21 18:00:23,17120340
3634,Xamarin never was Windows only.<p>And Mono was a thing before .NET Core came into the scene.,2018-05-23 09:49:00,17132691
3635,"Oddly enough, There are things like Xamarin forms, QT, etc  Look, Xamarin.Forms 3.0 fully supports all platforms. Build once and deploy everywhere: <a href=""https:&#x2F;&#x2F;visualstudiomagazine.com&#x2F;articles&#x2F;2018&#x2F;05&#x2F;07&#x2F;build-conference.aspx"" rel=""nofollow"">https:&#x2F;&#x2F;visualstudiomagazine.com&#x2F;articles&#x2F;2018&#x2F;05&#x2F;07&#x2F;build-c...</a>",2018-05-23 13:26:54,17133960
3636,"I tried Xamarin forms. After an hour I could not get a project started. It was painful in the extreme. Visual Studio crashed once during the install. I tried to create a project and got several non-descript errors that looked like vomit from Visual Studio internals.<p>When I encounter such things I toss them in the trash... not because I <i>can&#x27;t</i> figure them out but because I no longer have any patience for it. If you can&#x27;t be bothered to make your software installable &#x2F; on-ramp-able then I can&#x27;t be bothered to use it.<p>I also see it as indicative of how the whole experience is going to go. If installing a development stack is painful then debugging, shipping, upgrading, etc. are also going to be painful.",2018-05-23 13:30:51,17133986
3637,"When was the last time you tried Xamarin.Forms? Visual Studio 2017 doesn&#x27;t have these issues, and Visual Studio for Mac rocks.",2018-05-23 13:37:33,17134048
3638,"What&#x27;s the point of this? Xamarin is cross platform and a lot more &quot;lightweight&quot; than this will ever be. xamarin.forms supports mac, windows (uwp right now, wpf soon), GTK, Android and iOS.",2018-05-25 14:42:01,17154144
3639,"Correct me if I am wrong ...<p>Sure Xamarin.Forms will be a lot more &quot;lightweight&quot;.<p>Chromely is an HTML desktop app.<p>All the options you mention will end up being traditional (with their own controls) desktop apps with HTML support. Chromely is pure HTML. Chromely is not tied to rigid frontend controls .. you can use any html&#x2F;javascript&#x2F;css framework you like.<p>Chromely does not use WinForm or WPF. Extendable to WinForms and WPF for those who want to.<p>So, a different approach, if you may.",2018-05-25 21:46:17,17158283
3640,"There is precedent. Prior to Microsoft acquiring them, Xamarin was closed-source and licensing was $1000 per platform per year. At the Build conference in March 2016 Microsoft announced (1) that they were acquiring Xamarin, (2) that pricing would be dropping to zero, and (3) the Xamarin platform code would be open sourced as soon as possible after the acquisition.",2018-06-01 19:32:39,17209179
3641,"Don&#x27;t really agree with most comments trashing this hypothetical deal, bringing up the Skype precedent.<p>Its been what, 2 years since the Linked-in and Xamarin acquisitions? Nothing seems to have changed. Microsoft just seems to know that the desktop is no longer the cash cow that it used to be, office still is but may not last long, so its a good idea to diversify its portfolio.<p>Satya is not Ballmer.",2018-06-01 20:56:27,17210186
3642,"1. They already have such offering (VS Team Services).<p>2. Their competitors (GitLab, Bitbucket) already have that offering.<p>3. I don&#x27;t think they&#x27;re interested in GitHub for its revenue, but for its strategic value. GitHub has to protect its revenue model by disallowing free private repos, Microsoft can afford to be more flexible.<p>4. They&#x27;ve already made similar moves. They acquired Xamarin, which was expensive, and made it free.",2018-06-01 22:37:53,17211067
3643,"&gt; is less suitable for cross-platform work<p>I have hands-on experience with Unity3D and .NET Core 2. Both are cross-platform and worked relatively well. Ive built MacOS, iOS, Android software with Unity, and Linux software with .NET Core.<p>Ive heard Xamarin is also good for mobiles but havent personally used it.",2018-06-02 12:59:07,17214375
3644,"Gingco.Net | Multiple positions in full&#x2F;part time | Braunschweig, Germany | ONSITE<p>We&#x27;re looking for talented people with different focuses:<p>1) PHP developers to bring our web-based resource booking software to the next level. It&#x27;s a used by many well-known customers world-wide, with millions of daily users.<p>2) C# developers for the development of Add-ins for MS products and&#x2F;or for developing iOS&#x2F;Android apps with Xamarin. Experience with other languages and interest in learning C# would also be okay.<p>3) Frontend developers to create modern, modular interfaces for various devices - desktop, mobile, digital signage etc. From HTML, CSS and simple JS to complex interfaces based on i.e. Angular or React... We like to experiment with new technologies and profit from your knowledge and creativity.<p>What we expect:<p>* Interest in working and for a great product, a long-term job instead of small day-to-day jobs.<p>* People who bring in own ideas and like to work on their own responsibility.<p>* Integration into our small team (about 20 people currently)<p>We do NOT attach importance to certificates or work history.<p>What else to mention?<p>* We work in a small team with low hierarchies.<p>* We offer flexible working times for a good life-work-balance.<p>* If you run an additional business, that&#x27;s okay. We also offer working part-time.<p>For more information contact me personally on Twitter (@cziegenberg) or via e-mail:
ziegenberg (at) gmail (dot) com<p>Or directly apply via e-mail:
jobs-nm (at) gingco (dot) net<p>No recruiters.",2018-06-02 14:30:05,17214734
3645,"There&#x27;s a ton even beyond old mainstays like Xamarin, Phonegap&#x2F;Cordova, Titanium. Even Alibaba made one:<p><a href=""https:&#x2F;&#x2F;weex.apache.org"" rel=""nofollow"">https:&#x2F;&#x2F;weex.apache.org</a><p>There&#x27;s new stuff like Ionic, NativeScript, and Flutter. There&#x27;s obscure ones like Codename One. And there&#x27;s speculative ones like SCADE and Kotlin Native which are really just language bridges.",2018-06-03 00:05:35,17217122
3646,"I would seriously consider Xamarin. The tooling with ReSharper is great. LiveXAML gives you the same instant reload that React Native has.<p>Xamarin Forms gives you a cross platform UI, but you can use fully native Fragments&#x2F;ViewControllers where needed.",2018-06-03 05:13:35,17218014
3647,Xamarin is awful. Incredibly slow tooling and useless UI libraries.,2018-06-03 05:16:38,17218023
3648,Xamarin has a good reputation too.,2018-06-03 05:17:31,17218024
3649,Xamarin is consistently roasted in the Stack Overflow dev surveys.,2018-06-03 12:56:45,17219297
3650,"There are several aspects of Flutter that are compelling. The two which I find the most interesting are speed of development and the platform independence when designing the app.<p>Speed of development: I&#x27;ve seen Flutter development referred to as a &quot;double hot reloading&quot; dev paradigm: UI and app logic. Hot-reloading the UI on design changes isn&#x27;t new (React Native, NativeScript, and even Xamarin can do this) but the team at Google made a purpose-built debugging compiler for Flutter which separates state management from the app logic so if you&#x27;re working on code deep into an app and need to fix something in the logic, the executing code is reloaded while the app&#x27;s state and UI remain where they are so you don&#x27;t have to start over from the launch screen, log in, start your transaction&#x2F;order&#x2F;process..... This process cycle -- launch, login, start an order, get to the state of an order to test the logic I just altered -- used to consume five to ten minutes per iteration when I was doing Xamarin work. Being able to edit and re-run the application logic without losing state and starting over is HUGE!<p>Platform independence: the UI for Flutter apps doesn&#x27;t rely on the native OS widgets of iOS or Android (or Fuchsia!) but a C++ layer that bundles and ships with the app in question. It&#x27;s akin to building a business app in game template where you can custom-define everything about the UI and any widgets you want to use... a lot of work but they will look and act the same on iOS and Android (and Fuchsia) and presumably run fast.  This is a massive difference from Xamarin where cross-platform apps end up using the platform-native widgets which is known to result in non-trivial amounts of &quot;if (Platform_Android) {...} else if (Platform_iOS) {...}&quot; or just going the more sure-fire way of not entering Xamarin-debug-hell: make the UI for your app using the platform-specific Xamarin-tooling and move as much code to the share logic layers which don&#x27;t need to be changed between Android and iOS.<p>The final thing I&#x27;ll say about Flutter: I told a colleague who thinks that C++ is the <i>ideal</i> cross-platform mobile language about Flutter. Two weeks later he came back, told me he made a demo app with it, then decompiled the resulting IPA and APK files to inspect the assembly code and he concluded that it was essentially the same as if the app had been written in C++ from the get-go. I&#x27;ll take his word for it since I lack the skills to verify that for myself but it certainly speaks well for the performance potential of Flutter!",2018-06-03 13:05:23,17219322
3651,&gt; <i>This is a massive difference from Xamarin where cross-platform apps end up using the platform-native widgets which is known to result in non-trivial amounts of &quot;if (Platform_Android) {...} else if (Platform_iOS) {...}&quot; </i><p>Is your Xamarin experience using Xamarin.Forms? It sounds like Forms allows for more cross-platform gui code reuse. I&#x27;m doing a lot of investigation into Xamarin because I&#x27;m learning C# this summer for an internship and I love the language.,2018-06-03 16:18:11,17220234
3652,Xamarin.Forms provides an abstracted UI definition of common controls across platforms. This makes design faster since you can simply specify a Button or a Picker without knowing or caring that the actual implementations on iOS are UIButton or UIPickerView (eg: UIDatePicker) or that on Android they are android.widget.Button or android.app.DatePickerDialog.  All UIs defined in Xamarin are rendered with OS-native widgets.,2018-06-03 18:25:16,17220906
3653,"I also think that Microsoft is very aware of this situation. They should already work on the communication part of this. And if true that maybe Nat Friedman will take over, they will handle it the right way. He has shipped his Mono team and the later Xamarin stack through four companies with success and stability for the product and the team.",2018-06-03 21:10:16,17222087
3654,"Xamarin has improved, they&#x27;ve improved how git handles large repos, typescript is extremely stable...<p>I mean, on the consumer end they&#x27;re definitely kind of failing, with the notable exception of minecraft being supported far more than any other game. Seems more like people are still stuck in the Ballmer state of mind - even Windows itself had to practically perform a 180 thanks to Ballmer&#x27;s obsession with low powered tablets.",2018-06-03 21:14:37,17222129
3655,They bought xamarin and then made it open source and free. They also have continued to support mono despite having .net core,2018-06-03 21:24:40,17222228
3656,"And without funding, they all die. GitHub gets a Daddy Warbucks to fund them now and fear of what could be is causing so many people to lose their minds.<p>Microsoft acquired another non-open-source company two years ago  Xamarin  and dropped the price to use it to zero immediately and then open sourced the stack as soon as the lawyers gave them the all-clear. The co-founder of Xamarin, Miguel de Icaza, is no idiot and certainly not a sell-out. If hes convinced this is a new Microsoft you can trust, whats your objection?",2018-06-04 02:02:48,17223940
3657,"Far be it from me to question the distrust, but I&#x27;d say in recent years, since around the time they started open sourcing ASP.NET a while back, they&#x27;ve been pretty decent.<p>I mean, some people dislike Windows for various reasons, but this falls more into their development umbrella so I trust it is in good hands as ASP.NET, Xamarin, etc. have been in recent years.",2018-06-04 02:17:50,17224029
3658,"Xamarin, Minecraft. They are as capable of the best as of the worst.",2018-06-04 07:03:16,17225265
3659,"Minecraft was going in the toilet slowly far before Microsoft acquired them, but the changes they made have not been for the better in my opinion. Xamarin was plainly bad before acquisition, and as far as I&#x27;ve been able to discern this hasn&#x27;t changed.",2018-06-04 07:56:50,17225496
3660,See Minecraft and Xamarin.,2018-06-04 09:51:07,17226157
3661,"Xamarin was also closed source and $1000 per platform per year (my employer at the time was paying $3k&#x2F;year for the mobile devs to churn out iOS, Android, and Windows mobile apps from one Xamarin code bas). Immediately after being acquired by Xamarin the price was dropped to zero and it was announced that the entire Xamarin platform would be open-sourced (and this promised was fulfilled less than a year later).<p>This is not the Microsoft of Balmer where Linux was called a cancer. Under Satya Nadella the company is serious about providing the best office and cloud products regardless of what OS you use.",2018-06-04 11:40:04,17226818
3662,"&gt; Once the acquisition closes later this year, GitHub will be led by CEO Nat Friedman, an open source veteran and founder of Xamarin, who will continue to report to Microsoft Cloud + AI Group Executive Vice President Scott Guthrie; GitHub CEO and Co-Founder Chris Wanstrath will be a technical fellow at Microsoft, also reporting to Scott.",2018-06-04 13:08:32,17227323
3663,"People keep mentioning how &quot;Microsoft changed&quot; due to VS Code, the Linux subsystem, .NET Core.<p>I say that they are the same company, only with different cash cows.<p>Haven&#x27;t they spied on Windows 10 users? Do they not engage in patents racketeering? Haven&#x27;t they killed Nokia and ruined Skype?<p>&quot;<i>But Mom, some of the other companies are doing it too</i>&quot;, well yeah, but some of us don&#x27;t have double standards, in spite of what you&#x27;d think and that doesn&#x27;t absolve them of anything ;-)<p>Brilliant marketing campaign though. They needed it I guess, but it&#x27;s getting obnoxious.<p>---<p>That said I&#x27;m glad that after the acquisition GitHub will be led by Nat Friedman, the former CEO of Xamarin, which has some credibility.<p>At least the news isn&#x27;t all bad.",2018-06-04 13:19:13,17227435
3664,"&gt; acquisition GitHub will be led by Nat Friedman, the former CEO of Xamarin, which has some credibility<p>Credibility of what? He&#x27;s a Microsoft employee, being paid by Microsoft, and has made a ton of money by selling his company to Microsoft. Follow the money and you&#x27;ll find nothing but allegiance to Microsoft and it&#x27;s corporate goals.<p>For the record - I don&#x27;t think MS is as nefarious as people here are insinuating, I&#x27;m just pointing out facts that people seem to overlook.",2018-06-04 14:09:15,17227877
3665,"Slide 12:<p>&gt; GitHub will retain its developer-first ethos, operate independently and remain an open platform<p>&gt; Nat Friedman will become the CEO of GitHub<p>As far as acquisition news goes, this is pretty good news. I think the one thing I was hoping for was autonomous operation from GitHub, and we&#x27;re getting that. Nat created Xamarin &amp; by extension a large swathe of the Mono project -- which means that his heart is certainly aligned in the right spot. He sounds like an excellent CEO grab, and it wouldn&#x27;t surprise me if this is more of the deal than it&#x27;s being portrayed as. GitHub has needed a CEO for a while, and Nat at the helm is a great person for that.<p>I&#x27;m optimistic that, as long as GitHub remains an independent business unit (ala Heroku at Salesforce), then it&#x27;ll actually be a good thing. Let&#x27;s hope it stays that way.",2018-06-04 14:11:17,17227889
3666,"Funny story about him. He wanted to get a Job at Microsoft and wasnt hired because he didnt have the qualifications. Then he built Xamarin and made it a great C# open source tool to build apps. M$ really loved it and bought the company. Now hes leading GitHub. Thats awesome.<p>Microsoft does have a dark history, its also a huge company and Terry Meyerson (windows lead) was an aweful leader.<p>Things definitely changed. Satya knows that they need the developer mindshare, and that means to go where the developers are.<p>I hate windows as much as anyone, but a lot of their products are top notch. God I love vscode and Typescript. Just only use their OS products and youll be happy.",2018-06-04 14:55:19,17228297
3667,"SMH. I used to work for Nat at Xamarin before it was acquired by MSFT. GitHub and Xamarin have had a long and deep relationship going back to at least 2012 (that Im aware of anyway).<p>Xamarin was run on GitHub. We never used any other version control system. GitHub used Xamarin extensively as well. There were a lot of overlapping social graphs between the engineers of both as well.<p>Miguel and Nat both helped to make F&#x2F;OSS and Linux what it is todaythank them if you like GNOME. Nat represents MSFT in this deal, and thats great news for F&#x2F;OSS enthusiasts everywhere.<p>Nat and Scott Guthrie arent responsible for the sins of their fathers. Time to move on from the Microsoft hating. That era has been over for a while.",2018-06-04 15:34:19,17228789
3668,That precedent is even more useful as a measuring stick with Nat Friedman (formerly CEO of Xamarin) announced to takeover the CEO role at GitHub.,2018-06-04 15:35:03,17228800
3669,"Satya&#x27;s choice of CEO for GitHub in Nat Friedman seems to point to a previous precedent on the matter. When Microsoft acquihired Nat Friedman he was the CEO of Xamarin, and Microsoft open sourced all of Xamarin within several months of the acquisition.<p>Obviously there are few if any guarantees here, but if Satya is going to find a way to open source all or most of GitHub, placing Nat Friedman in charge is certainly a sign.",2018-06-04 16:41:08,17229626
3670,"Submitted an issue to dear-github. &quot;Host Github by itself as open source project&quot; <a href=""https:&#x2F;&#x2F;github.com&#x2F;dear-github&#x2F;dear-github&#x2F;issues&#x2F;304"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dear-github&#x2F;dear-github&#x2F;issues&#x2F;304</a><p>Issue body:
Microsoft open sourced Xamarin after acquisition and it was good for community. Open sourcing Github source will benefit open source community. Github was not open source for its own reason and it could be same reason why Xamarin was not. Now that Github acquired by Microsoft, would this event be an opportunity to re-consider the reason?",2018-06-04 18:08:23,17230409
3671,"&gt; Im not asking for your trust, but Im committed to earning it.<p>Love this line. I had followed Xamarin when it was independent and I get a strong feeling that Nat wrote this himself and it&#x27;s not just a PR speak. I am cautiously optimistic about GitHub going forward.",2018-06-04 18:29:53,17230646
3672,"I have been familiar with Miguel&#x27;s work since the good old GNOME and Mono days (pre-Microsoft and even pre-Xamarin) and familiar with Miguel and Nat&#x27;s work since the Xamarin and Microsoft days and I really must say that GitHub could have got somebody far far worse on the executive level than Nat (and ScottGu above him, ofcourse, due to the same kind of personality).<p>Nat can be best described as a OSS geek gone CEO, and thus I can&#x27;t imagine a better executive within Microsoft to lead GitHub besides him. In fact, when I heard the first rumors and Chris not wanting to run operations anymore I immediately thought of Nat to run GitHub when Microsoft was crazy enough to buy it.<p>Seems I was right :)",2018-06-04 18:52:02,17230888
3673,"+1 for Nat heading this. (<p>Worked at Xamarin as an intern before the MS acquisition. So not too long, but enough to get a coffee downstairs with Nat at the coffee van. I also joined his all-hands. Great guy who has a great attitude towards open-source and has a positive leadership style. I was skeptical of the Xamarin acquisition, but MS open-sourced and made the platform free for everyone. Nat knows how this MS stuff goes, and I think he&#x27;s a perfect fit to preserve the core of Github.",2018-06-04 18:59:37,17230970
3674,The first two points are pretty mucht after the textbook of &#x27;dealing with bad publicity and lost trust&#x27;.<p>We will see what Nat Friedman does but Miguel de Icaza did have a bit of a falling out with the gnome community and started Xamarin where the developed a closed source IDE that didn&#x27;t run on Linux. So a bit of a 180 he did there.,2018-06-04 20:35:21,17232131
3675,"If you look at how the Xamarin acquisition went, this seems like a likely outcome.",2018-06-04 21:26:25,17232670
3676,I do hope that this works. One major concern I have is being badly burned by using Xamarin when it was a couple of years (4?) old. I hope they don&#x27;t do that to github. Xamarin wasn&#x27;t very elegant back then when those guys started it - it was a horrid hack. That makes me worried.,2018-06-04 23:06:15,17233441
3677,How is Nat Friedman an ideal candidate to run GitHub? Have you seen pre MS Xamarin?,2018-06-05 08:01:22,17235747
3678,Xamarin,2018-06-05 11:35:50,17236701
3679,I have literally had a mobile team threaten to quit if we adopted Xamarin after they built a small app in it lol.,2018-06-05 12:39:19,17237063
3680,"Xamarin can be pretty tough if you don&#x27;t have a good appreciation of Xcode, iOS and UWP development and tooling, and underlying differences.",2018-06-05 12:52:01,17237155
3681,"Progressive Web Apps have the potential to be massively disruptive to apps as we know them now... and that&#x27;s <i>before</i> the near-native speeds that WASM will bring are factored into the equation.  After making the mistake of going all-in on Xamarin in 2014 I realized, much to my chagrin, that the future of mobile is HTML, CSS, and JavaScript.  Sure, there are cases where certain features require vendor-native apps for now, for example if you want to register a service that runs in the background without the app being launched.  Currently that&#x27;s not possible with mobile web or hybrid but there&#x27;s no reason the mobile OS cannot look for and hook JavaScript -- or WASM -- code and run it as part of a background service. Could be as simple as specifying in the app manifest one or more code files which contain logic for background processes along with instructions like &quot;run this only when the app is active, run it all the time, or run it on this cron schedule.&quot;<p>A completely different question is whether vendors like Apple will refuse to support something like this because it circumvents the need to deliver via the app store (and  the $$$ they collect through the Apple Developer Program)  but there&#x27;s no reason background services and processes can&#x27;t be implemented in JavaScript.",2018-06-05 13:42:36,17237477
3682,Can you tell us a bit about your Xamarin experience?<p>I want to create an app where the users would be regular mom and pop- my primary users would be windows and Android and a few iOS (iphone).<p>Would you recommend I go the Xamarin way?<p>Who is xamarin good for and who not?,2018-06-05 14:14:34,17237754
3683,"I refer to my period as a Xamarin contractor as &quot;bomb technician programming.&quot;  The biggest advantage of Xamarin is also the greatest source of its problems: anyone who programs C# can start a Xamarin.Forms app and get a proof-of-concept sufficiently advanced to show their boss who will run it up the chain and get it approved as a project. And THEN the devs -- who are awesome web developers -- begin to realize just how much they don&#x27;t know about mobile and that they&#x27;ve coded themselves into more than a few corners and aren&#x27;t sure how to get out... and I know this from first-hand experience from my first couple Xamarin projects.  There comes a point where you realize that knowing C# is only part of the solution.  You wouldn&#x27;t take an accomplished ASP.NET MVC developer who has only done web work and assign them to an Akka.net or advanced, massively concurrent, highly-multi-threaded Windows Service project and expect them to succeed right away just because it&#x27;s all C#.  Same idea... different platform.<p>Xamarin is great for people who want to use C# to write mobile apps and know the underlying platforms well enough to know where the landmines are and how to side-step them. There&#x27;s undeniable time-savings in being able to write non-platform-specific code one time and just link to it from the Xamarin.iOS and Xamarin.Android project.  It&#x27;s also possible to write cross platform apps very, very quickly with Xamarin.Forms if you understand where the issues are there as well...<p>But it&#x27;s even faster to just write a mobile web site.  When I am asked for my recommendations for a mobile app idea  my first question always is: &quot;Can this be done with a mobile web site (which is PWA these days)?&quot; If yes, why go further?  If you really want the app store exposure then packing up your PWA as a hybrid app isn&#x27;t all that difficult so mobile web is still my first choice.  It&#x27;s not unless you have specific, unambiguous needs that mobile web or hybrid cannot handle that going native -- Xamarin or otherwise -- is recommended.<p>Keep it simple, deliver value, and go home happy and a little richer.",2018-06-05 14:39:45,17238032
3684,Thanks for your very helpful and detailed reply.<p>I take it that you didn&#x27;t compare xamarin  to anything besides pwa- I&#x27;m assuming it&#x27;s your way of saying that anything else you evaluated didn&#x27;t stand up to xamarin?<p>Please let us know if there are any helpful getting started pointers and also for pitfalls.<p>Right now PWA is not something I&#x27;m considering although I see how they are the future (and am glad they are),2018-06-05 15:28:21,17238585
3685,"Im not exclusive to PWA and Xamarin; React Native is huge right now and Google is pushing Flutter heavily (in order to ease the transition from Android to Fuchsia, but I digress).  And Swift&#x2F;ObjC with Xcode and Kotlin&#x2F;Java with Android Studio are always solid options and the ones Apple and Google officially recommend if you ask them.<p>The stacks and options are just tools in a box; I believe in using the right tool for the job (or the tool required for the contract) rather than being a tool about this stuff. But if asked <i>my opinion</i> I will default to PWA until I know there&#x27;s a feature requirement beyond PWA&#x27;s growing abilities.",2018-06-05 15:35:46,17238661
3686,"I do Java and .NET consulting.<p>In what concerns UNIX like systems we don&#x27;t care at all about .NET Core, because it is still playing catch up with the .NET Framework libraries we care about, lacking parity with many mature Java versions.<p>Which has led to some projects porting a set of small .NET applications to Java, as means to deploy on Linux, because the customer wasn&#x27;t willing to bet on .NET Core.<p>Additionally, in spite of not being fully Java SE compliant, it is still more productive to write Android in Java as dealing with Xamarin integration issues.<p>Rider IDE might be interesting when they start supporting GUI development.<p>Finally, as any long time .NET developer will tell you, Microsoft also has its own fun moments.",2018-06-06 17:08:52,17248928
3687,"Using Stack Overflow tag trends to compare Swift to the other languages and technologies listed in the article, Swift is still on top.  React Native is climbing fastest, and is almost half-way to where Swift is today.<p><a href=""http:&#x2F;&#x2F;sotagtrends.com&#x2F;?tags=[swift,objective-c,xamarin,cordova,react-native,ionic-framework]"" rel=""nofollow"">http:&#x2F;&#x2F;sotagtrends.com&#x2F;?tags=[swift,objective-c,xamarin,cord...</a>",2018-06-06 19:07:07,17250070
3688,"The difference between &quot;the old Microsoft&quot; (monopolistic, openly insulting&#x2F;abusive) and &quot;the new Microsoft&quot; is like the difference between colonialism and neocolonialism.<p>- Colonialism consisted in annexing territory, forcing them to use your flag, sing your anthem, and work for you under penalty of violence.<p>- Neocolonialism consists into forcibly indebt countries, so they direct all their productive efforts into paying you a never-ending debt. A country can keep its flag, its anthem, its culture, can celebrate its independence day... but for economic purposes it is indistinguishable from a colony. This is done by gaining influence over those countries, so they act in the best interest of a foreign power: lobbying.<p>The idea of Microsoft is to allow open source to happen, but to happen in terms that are favorable to them. Like having people work with their OS, their tools, their APIs, their cloud, use their authentication services, etc.<p>This is achieved by gaining influence over the governance of high profile open source projects. Either by having their full time employees collaborate into an open source project, or by directly buying companies, like the case of Github. In either case, in the end, the idea is to obtain control over open source projects to steer them into a direction that benefits Microsoft.<p>As a mentioned earlier, the modus operandi is to either infiltrate projects or buying a company. When they&#x27;ve decided to acquire companies, the results are more aggressive and more visible, and are in my opinion not good:<p>- Skype: Linux version is largely unmaintained relative to other versions, UX is inferior.<p>- Xamarin: Standalone Windows IDE was abandoned, now you should use Visual Studio. Xamarin Studio for mac was rebranded Visual Studio for Mac. No Linux version is planned despite community requests.<p>- Minecraft: Java client development left behind with inferior investment, no feature parity with native Windows client.<p>- Microsoft R Open &#x2F; MRAN: Encourages people to adopt a vendor specific flavor of R, and use vendor specific repositories, moving away from R and CRAN.<p>And for Github, I would not be surprised if it starts getting coupled with Microsoft products, like Azure, Visual Studio, etc... to the detriment of other tools.<p>Even if it doesn&#x27;t happen at all, I am not over punishing Microsoft for what it did in the past. Without provocation, they attacked noble and altruistic developers sacrificing man years of their own personal time to the benefit of open source software, providing this generation with the tools they use today to put food in their table. Like the Linux kernel team. Microsoft called Linux and open source licenses &quot;cancer&quot;. Never forget.",2018-06-07 06:35:08,17253759
3689,"They could do things like create an open source programmers editor, buy Xamarin, release an open source version of their compilers and  CLR, and contribute millions of lines of code annually to major open source projects. Oh, and they could buy some kind of dominant website most famous for hosting open source projects.",2018-06-07 06:57:39,17253835
3690,"The vast majority of his career has been leading open source projects and companies.  You really can&#x27;t do that successfully without deeply getting open source philosophy and culture.  The most talented open source devs simply won&#x27;t work for you otherwise.<p>While Mono itself wasn&#x27;t widely adopted, it was the code base that Xamarin came from, which _is_ quite widely adopted.  And Xamarin Studio (now Visual Studio for Mac) is built using the &quot;no adoption&quot; Mono.
<a href=""http:&#x2F;&#x2F;sotagtrends.com&#x2F;?tags=[mono,xamarin,monotouch,monodroid]"" rel=""nofollow"">http:&#x2F;&#x2F;sotagtrends.com&#x2F;?tags=[mono,xamarin,monotouch,monodro...</a>",2018-06-07 19:34:40,17259416
3691,"Yes definitely and .Net Core mainly for this. When projects are structured well they are very portable and with VSCode you can immediately get in and start debugging. Deps auto download and everything. Xamarin has been a huge hit with other devs I know too although switching omnisharp (when using VSCode) over to it takes a little know-how to get the same tooling it should somehow be automatically inferred that would help. Nowadays just using .Net Standard for Xamarin works probably most devs will head in that direction in the future. A better REPL would also make it more popular when I use Python or NodeJS imports of 3rd party stuff is easier- if all of these various features in various 3rd party REPLs were kinda auto-magically part of C# development it would be more &quot;fun&quot; <a href=""https:&#x2F;&#x2F;www.nuget.org&#x2F;packages?q=REPL"" rel=""nofollow"">https:&#x2F;&#x2F;www.nuget.org&#x2F;packages?q=REPL</a>",2018-06-08 05:09:00,17262730
3692,"I do. If you dont mind Windows, there isnt really an alternative in term of excellent tooling (visual studio), universal (you can do a website, a console or a desktop UI with the same language and tools), and good compromise between performance, sophistication (like using multithreading easily), type safety and speed of writing.  Java possibly adds multi platform at the expense of rougher tooling and desktop UI.<p>I am much less of a fan of Xamarin, tried it, too clunky (for instance the default settings for the android emulator do not work out of the box) and slow.<p>And its a matter of taste. I dont like dynamic languages as Id rather have the compiler check my syntax for me rather than having to write a test, and static typing enables great refactorings. But other people will have other priorities.",2018-06-08 06:41:28,17263142
3693,I&#x27;m learning C# and .NET at my summer internship and I feel like I&#x27;m falling in love. Visual Studio and Resharper just make it an awesome experience. We do WinForms at work but I want to make a side project for multiple platforms so I&#x27;m hoping Xamarin can do the job (I&#x27;ll need arbitrary 2D graphics drawing so I might use CocosSharp).,2018-06-08 11:25:08,17264287
3694,"I finally moved to Xamarin a few months ago and it&#x27;s not slower than the native languages. No clunkiness either, it&#x27;s just bindings to the native APIs after all.",2018-06-08 13:36:49,17265160
3695,"Microsoft has <i>incredible</i> CI&#x2F;CD tooling -- check out Visual Studio App Center, Azure App Insights, HockeyApp -- and many enterprise customers use this along with VSTS.  However, many companies will never use VSTS, especially non-Microsoft-stack companies so making a big deal about how Microsoft&#x27;s CI&#x2F;CD tools work for non-Microsoft projects hosted at places like GitHub or any other hosting provider that supports the issuing of webhooks on checkin&#x2F;merge events (eg: BitBucket, GitLab, Kiln, etc).<p>Did you realize that your Java&#x2F;Android Studio project in GitHub could be connected to App Center such that for every source check-in the project is built, unit tested (code-level), UI-tested on physical hardware (Xamarin Test Cloud), and if all tests pass the build is pushed to beta testers via HockeyApp which also captures reams of telemetry and debugging information?  App Center can even be set up to automatically push the app all the way to Google Play automatically when you merge down to your release branch.<p>Ditto iOS apps written with Swift in Xcode.<p>If you think Microsoft doesn&#x27;t have massive amounts of CI&#x2F;CD tooling that is agnostic to language and platform you should check it out.<p><a href=""https:&#x2F;&#x2F;www.visualstudio.com&#x2F;app-center&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.visualstudio.com&#x2F;app-center&#x2F;</a>",2018-06-08 14:22:24,17265647
3696,"Well, I for one have lived a time when all platforms were radically different, and it was really really hard to share any code between Linux, Windows and System (for youngsters: that&#x27;s the name of the previous OS for Macs).<p>We now live in a time where it&#x27;s much easier to share code, thanks to technologies such as Qt, Java, .Net + Xamarin, game engines, web applications, etc. Any sign that we could be returning to the bad old days is, well, not a good sign.<p>Now, I agree with you that the real bad sign here is not Network.framework, it&#x27;s the deprecation of OpenGL&#x2F;OpenCL, apparently without any attempt to go towards the open standard Vulkan. Now, Apple introduces a new technology designed to replace an existing API, and people&#x27;s built-in pattern-matching (including mine) see it as a sign that Apple might be testing the water before removing a well-known, cross-platform API. That&#x27;s the kind of behavior that the previous King of the Hill kept using during the bad old days, and Apple seems to have borrowed more than one page from that time&#x27;s Microsoft, so why not this one?",2018-06-08 21:14:26,17269741
3697,"Since you seem to have a strong understanding of both JVM and CLR, do you know if it would be feasible to translate CIL bytecode to JVM bytecode without having terrible performance in the translated code? In particular, I wonder if Xamarin.Android could do this (of course, in that case the JVM bytecode would be further translated to Dex), to provide an alternative to the current hairy interop situation with JNI and two GCs.",2018-06-09 17:34:00,17274011
3698,"Xamarin: <a href=""https:&#x2F;&#x2F;www.xamarin.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com</a><p>Xojo: <a href=""https:&#x2F;&#x2F;www.xojo.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.xojo.com</a><p>Flutter: <a href=""http:&#x2F;&#x2F;flutter.io"" rel=""nofollow"">http:&#x2F;&#x2F;flutter.io</a>",2018-06-13 03:47:34,17300086
3699,"I used to think the mac mini was a better alternative when you could upgrade its memory.<p>Now I think is better wait for the next generation.<p>I&#x27;m really thinking in buying an mac for home use, and remote compiling with xamarin in the next year or so.<p>But it will depend of this next generation.",2018-06-14 17:19:36,17313323
3700,"I&#x27;ve got an 2011-era Mac Mini that I&#x27;ve loved for developing - updated to 8GB of RAM + an SSD, it&#x27;s been a great Xamarin machine for years. However now I&#x27;m looking for a replacement as Mojave won&#x27;t support the hardware. With the dated Mac Mini and reports of many keyboard issues on Macbook Pros I&#x27;m looking at a Mac Air for a new development machine - and even these are getting a bit long in the tooth. Not really sure what Apple is up to these days.",2018-06-14 20:04:15,17314889
3701,"Why not check Xamarin? Its already on a modern language (C#), great cross platform capabilities (Xamarin Forms), but can also directly interop with native APIs when needed (they are always needed).",2018-06-14 22:13:10,17315904
3702,"I have been working on a commercial RN project for 2 years now. As of today, the project is ~50kloc, and provides builds for Android, IOS, Windows, and Macos platforms. I started it using RN after prototyping with an early Ionic2 version and checking Xamarin.<p>The code share between IOS and Android is very high, almost 100% (except a few simple home-made native components), and we are above the 85% of shared code between the mobile and desktop versions (mobile is RN, desktop is react-native-web + rewriting of several components on a Qt WebEngine with native versions of a few RN components rewritten in C++). The C++ part is actually very simple, and under 2Kloc. Note that we use Typescript everywhere on the React side, and we consider it very valuable.<p>Overall, everything works great, we have a few performance issues here and there, but nothing we can&#x27;t deal with. However the biggest flaw is how indigent the build system is (combining all the flaws of npm and the issues of android upgrades), we still do not manage to have reproducible builds, and it&#x27;s been sometimes very painful to fix an issue a few weeks later because it would just not build and require a few hours to make it build again.",2018-06-15 06:09:48,17317828
3703,"You mean just like people are contributing and using Ionic, Cordova, Qt, Xamarin?",2018-06-15 06:24:33,17317866
3704,"F# as well, Don Syme has even joined Xamarin.",2018-06-15 06:25:28,17317868
3705,"I like Xamarin but I do not like the dev process yet for the frontend. I think if that would be leaner (more Core2 and potentially command line and reloading instead of recompile: only for dev ofcourse) it would be more popular. Now it is a very heavy process; thats not because of c# or f#; they can both be very dynamic. Not sure why not more work goes into making development smoother.<p>Having said that, I for one like working with Forms+renderers and a reactive framework a lot more than RN. I can go for years and have my code work fine after updates; I find npm such a nightmare and RN feels too driven (logically) by FB needs.",2018-06-15 08:19:17,17318281
3706,"Of course they notice. It is very easy to spot when a company is cheap and uses cross platform tech. Some (Xamarin) are easier to hide than others (RN, Cordova), but its always there.",2018-06-15 13:49:01,17319728
3707,"The classic example is Skype but people forget Skype is a really, really old acquisition at this point. Most of the things done to ruin it were done well over 5 years ago.<p>Let&#x27;s not forget GitHub already has enterprise products...<p>Regardless Microsoft has brought in many acquisitions and didn&#x27;t ruin them. LinkedIn was kept separate and beyond some integration was left untouched. Same with the vast majority of game studio acquisitions. Let&#x27;s not forget the Xamarin acquisition has been a huge boon to .Net developers as well as open source initiatives.<p>Microsoft has new leadership. Most of these arguments I&#x27;m seeing on HN are all referring to things that happened under much older leadership. This goes to show Microsoft still has some trust building work to do but at the same time they shouldn&#x27;t be written off either.",2018-06-15 20:36:55,17323334
3708,&gt; Imo the only serious contenders for crossplatform apps are react native and flutter.<p>Why not Xamarin? It also has the backing of a top software company.,2018-06-17 01:42:24,17330493
3709,True if you&#x27;re a c# shop Xamarin might actually be a better choice. I just haven&#x27;t seen many good apps come out of the Xamarin community and I&#x27;m implicitly biased because they don&#x27;t support developing on Linux,2018-06-17 03:23:38,17330731
3710,"Vendor Native  Xcode or Android Stidio  is still king but clients typically care more about what your app does for them than how you made it (unless the way you made it adds dozens of megabytes to the final app like Xamarin.Forms does).  Learning the vendor-Native stack will give you a far greater understanding of the underlying OS which will set you apart from other Ionic devs who start panicking when an app returns a java exception of Android or similar on iOS.<p>Doing Xamarin development for a few years taught me that you really need to understand the underlying operating system and how it works.  Most of the consulting gigs I got were what I called &quot;bomb squad programming&quot; where a C# web shop decided &quot;How hard can it be?&quot; and embarked on a Xamarin.Form project only to discover too late what they didn&#x27;t know.  When I started mobile work with Xamarin this bit me as well (but I Googled my way out of it quickly enough).  These weren&#x27;t dumb programmers but just because you can expertly apply C# in web development doesn&#x27;t mean you can instantly apply that in another kind of programming (like multi-threading, desktop, server services... or mobile).  The very best Xamarin devs I knew came over from doing ObjC in Xcode or Java in Android Studio.  What made them so good is that they understood at a deep level how to write mobile apps.  It&#x27;s like if you do Java MVC web development and switch over to ASP.NET MVC. The concepts are pretty much identical so the only hurdle is adapting to the language&#x2F;syntax differences.<p>Really long-winded way of saying: sticking with Ionic initially and making friends with someone who can bail you out and&#x2F;or mentor you on deeper understanding of the mobile operating systems will pay off.",2018-06-17 04:03:17,17330814
3711,"I&#x27;d love to, but I need a Mojave-compatible machine prior to it&#x27;s release so we can get our Xamarin application updated before-hand. Might be best to go with the 2015 option anyway, thanks!",2018-06-17 08:35:21,17331469
3712,"&gt; if you&#x27;re a c# shop<p>I prefer not to think of myself as an X-language programmer. And yes, when I was developing mobile apps, I did it solo. I preferred to choose the right tool for the job, and learn a new language if needed.<p>And I think Xamarin is better than React Native or Flutter, because Xamarin makes it easy to use each platform&#x27;s full set of native widgets in the native way, while still sharing non-UI code. In contrast, React Native does use a subset of native widgets, but doesn&#x27;t give you access to the full set of them (at least out of the box), kind of like the old Java AWT. And like Swing or JavaFX, Flutter throws out the native widgets entirely.",2018-06-17 13:49:00,17332348
3713,"Were a C# shop, with a heavy tie into Microsoft infrastructure and Azure. Doesnt mean we wont be looking into flutter.<p>Xamarin is terrible to work with, and if AngularDart shares code with Flutter then it might be interesting to replace angularJS + Xamarin with dart.<p>I only clicked this article because I a Danish municipality programmer, I follow, comment on flutter, on one of the Microsoft news portals though, so the community is definitely a lot smaller than the Xamarin.",2018-06-17 20:00:33,17334011
3714,"VS Code binary is vscode plus custom package.json which configures telemetry, gallery, logo, etc. and therefor has a custom license. Similar to Chrome &amp; Chromium, Oracle JDK &amp; OpenJDK, Xamarin Studio &amp; MonoDevelop, etc. [1]<p>Seems fair play to me.<p>[1] <a href=""https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;vscode&#x2F;issues&#x2F;60#issuecomment-161792005"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;vscode&#x2F;issues&#x2F;60#issuecomment-1...</a>",2018-06-19 14:10:19,17346755
3715,"It is same with Xamarin. They don&#x27;t have people that would know these languages, and they would be passionate about them.",2018-06-19 20:49:20,17350197
3716,"Xamarin and co suffer from the same dual layer issues that react native has when I last looked into it.<p>C# isn&#x27;t that popular from a silicon valley engineering perspective, since the first class C# implementation wasn&#x27;t open source until very recently.  Yes mono has always be OSS, but it has also been a second class citizen too.",2018-06-19 22:32:19,17350818
3717,"Only Xamarin.Forms introduces another layer for you (it is the same concept as React Native). If you use Xamarin.iOS and Xamarin.Android you call underlying APIs directly. Although there can be issues with bindings, nothing like you will face with React Native.<p>I am aware of why C# isn&#x27;t popular among startups. It is sad because C# is a great language that has amazing tooling support. It runs everywhere -  Xamarin for apps, ASP.NET for servers, Blazor for browsers, and it is getting only better, and I cannot imagine how awesome it would be if other companies helped Microsoft. But I  can only dream.",2018-06-19 22:50:20,17350913
3718,"Really curious as to how Flutter (and Xamarin, NativeScript, Ionic, Vue-based write-once frameworks, etc.) can overcome the difficulties expressed in this piece.",2018-06-19 22:51:04,17350916
3719,"&gt; that they can just get &quot;web&quot; technology and speedup mobile development.<p>RN isn&#x27;t really web technology. It is a JS engine along side a cross platform API translates API calls to the appropriate underlying native platform code. UI components rendered by RN do not use web tech at all.<p>It is no different than Xamarine in that regard, and has many of the same drawbacks.<p>&gt; AirBNB&#x27;s app is barely usable on two-year-old androids.<p>I never had problems with it on my Nexus 5x, and everything was a lag fest on that phone. (Lag in daily use got so bad after moving to Android 8 that I had to get a new phone just for my sanity.)<p>For a large # of apps, RN works just fine. Its real promise is not &quot;web technology&quot;, so far as it is 99% code sharing across platforms.<p>The other players in this market don&#x27;t have the same community drive that RN does, so people gravitate towards RN.",2018-06-20 03:16:15,17352289
3720,"Even with Xamarin.Android&#x2F;iOS I read about unique bugs that resulted in you needing to be an expert in both layers to understand.   And bugs in the wrapper themselves.<p>It&#x27;s a problem with the entire design type, which has been shown throughout computing history to not work that well.<p>And why use C# when the Java ecosystem is pretty much the same tooling wise?  C# feels like a 1.2x better Java, which isn&#x27;t enough.",2018-06-20 05:27:09,17352806
3721,"I have a different view on it, I actually like Dart. I like the strong types and how the language is more suited for enterprise development than both typescript and JavaScript.<p>There is the added benefit of being able to reuse assets from your mobile app in AngularDart, which I suspect may see an increase in use along with flutter.<p>Im not coming from Kotlin or rust though, but a .net core backend with JavaScript on the front end and Xamarin for apps. I can definitely see us move from AngularJS and Xamarin to flutter and AngularDart though as this move would be a nice improvement.<p>Im not too worried about the lack of available projects and libraries on dart compared to say JS, as we typically wouldnt include some one man hobby project anyway.<p>That being said, I think well wait and see what happens throughout 2018.",2018-06-20 16:19:15,17356769
3722,"As someone who has spent some time inside the Windows 10 environment working on UWP applications, I always thought that Xamarin would someday be my goto whenever I have the opportunity to dive into Mobile development. 
I am comfortable with C# and I have always felt happy writing in XAML.<p>But looking into Flutter, I think it&#x27;s undeniable how smart this project truly was. Even if it isn&#x27;t backed by a popular programming language, since Dart obviously does not fall on that category.",2018-06-20 16:20:12,17356784
3723,"Have you looked at Uno?<p><a href=""http:&#x2F;&#x2F;platform.uno&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;platform.uno&#x2F;</a><p>C# &amp; XAML UWP layer with Xamarin for mobile. The company behind it has been using for a few years to produce apps and recently open sourced it. I&#x27;m intrigued and weighing it against Flutter for my next bit of mobile experimentations.",2018-06-20 16:39:29,17356964
3724,"I think you misunderstood me. I dont think its an improvement over c# (or Kotlin, but I have no experience with Kotlin so I wasnt commenting on that).<p>I think its an improvement over JavaScript, Typescript and the Xamarin experience + tooling, with the added advantage of letting you share language in your clients.<p>I dont think dart is great though, its just better than the terrible alternatives.",2018-06-20 19:05:11,17358618
3725,For someone who is starting from scratch -- or starting over after being neck-deep in Xamarin and hybrid but wants to &quot;do it right&quot; now -- should a new Android developer use Java or Kotlin for app development?,2018-06-22 13:22:11,17373729
3726,"Were currently using Xamarin and azure as a backend, though not serverless yet as stuff like cosmos pricing is still too expensive. But using Xamarin, which is terrible on its own, were also splitting our clients up in two languages. Id like if we could adopt flutter and angularDart for clients, and Id really like to run some of the backend in something like Firebase &#x2F; cloud firestore.<p>Im not sure if google is a good option in terms of privacy and EU legislation though. I have my lawyers looking into it currently, but to be honest Id love if Microsoft made an Azure alternative and fully embraced dart for azure.<p>This is probably unlikely, but it would be really awesome.",2018-06-23 07:36:07,17380032
3727,I would try Xamarin.,2018-06-26 12:57:50,17400174
3728,"Yes, I&#x27;m finishing a four-tab app with some tables and it works perfectly. Just don&#x27;t touch Xamarin.Forms (it&#x27;s still buggy and slow), use the bindings to the native frameworks instead. So far I have 65% code reuse with MvvmCross.",2018-06-26 14:25:22,17400804
3729,"Yeah, updates is why I really dislike Windows. The rest I can live with. I prefer Ubuntu + i3 or Mac OS X, but if I have to use Windows, then its mostly doable besides the updates. Be it updates to the OS or Visual Studio (which is why I do use it; Xamarin); random breakage and it takes far too long and happens far too often.",2018-06-28 05:47:38,17414390
3730,"If you can afford to exclude windows and linux, Swift.<p>If you like windows but also want cross platform, C#&#x2F;F# and Xamarin.Forms or UI or whatever its called. I&#x27;ve heard very positive things about dotnet gui work these days.<p>I&#x27;m spending time with rust to try my hand at game development. As an older developer, it&#x27;s all a bit foreign to me so I don&#x27;t really know what&#x27;s good and what&#x27;s not.<p>That having been said, desktop development is something the rust community at large is dedicated to ant interested in. There&#x27;s already a fee libraries, like Conrod for Piston, gtk.rs, etc but I don&#x27;t know how these options stack up against industry standards.<p>C# 7 is a lot more functional and pleasant than the C# 4&#x2F;5 everybody dismissed years ago.<p>F# can compile to wherever you need it and you can write functional first and just include it in your nuget built just like you normally would.<p>If you&#x27;re adamant about functional, consider dotnet. Of course C# is still very much OOP, that&#x27;s just what it is. But I find the primary benefits to FP in my own code to be more related to correctness, testability (and therefore more correct) and a convenience in modelling data structures quicker than subclassing. Even with generics, having unions and record types makes it just that much more satisfying.<p>F# actually has a little micro-discipline called domain-driven programming. Search for that term and you can see how different researchers have used F#&#x27;s incredibly flexible type modelling to adapt to their domain and make their code easier for people in that domain easier to understand.<p>Hope this helps!",2018-06-28 16:20:18,17418215
3731,"For desktop apps specifically + functional programming, F# is probably your best bet.  On Windows WPF is king, and F# works great.  For desktop apps on Linux and elsewhere, you can use Xamarin, GTKSharp, AvaloniaUI...and the list goes on.  Desktop apps are a strength of the .NET ecosystem.<p>Some links:<p><a href=""https:&#x2F;&#x2F;fsprojects.github.io&#x2F;FsXaml&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;fsprojects.github.io&#x2F;FsXaml&#x2F;</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;Prolucid&#x2F;Elmish.WPF"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Prolucid&#x2F;Elmish.WPF</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;GtkSharp&#x2F;GtkSharp"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;GtkSharp&#x2F;GtkSharp</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-macios"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;xamarin-macios</a>",2018-06-28 20:58:14,17420436
3732,I would like to know about Xamarin too if anyone has them. Particularly looking for high fidelity creative &#x2F; UX,2018-07-02 12:45:04,17441155
3733,"Microsoft News is built with Xamarin (source: <a href=""https:&#x2F;&#x2F;twitter.com&#x2F;migueldeicaza&#x2F;status&#x2F;1009433494840336384"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;migueldeicaza&#x2F;status&#x2F;1009433494840336384</a>)<p>- Android: <a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.microsoft.amp.apps.bingnews"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.microsoft....</a><p>- iOS: <a href=""https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;microsoft-news&#x2F;id945416273?mt=8"" rel=""nofollow"">https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;microsoft-news&#x2F;id945416273?m...</a>",2018-07-02 12:48:49,17441172
3734,"Is there a larger question about how many cross-platform, non-hybrid applications are out there and which is the best stack for doing likewise?  The field includes: Flutter, NativeScript, React Native, Ruby Motion, Xamarin, KikApp (PHP), PyMob and Kivy (python), RubyMotion (Ruby)... and of course C++.",2018-07-02 13:44:40,17441528
3735,"Not exclusive use, but here are some apps that contain the Xamarin code: <a href=""https:&#x2F;&#x2F;www.appbrain.com&#x2F;stats&#x2F;libraries&#x2F;details&#x2F;xamarin&#x2F;xamarin"" rel=""nofollow"">https:&#x2F;&#x2F;www.appbrain.com&#x2F;stats&#x2F;libraries&#x2F;details&#x2F;xamarin&#x2F;xam...</a>",2018-07-02 13:50:10,17441563
3736,"after seeing what they did with xamarin, i would not be surprised if they did. but unlike xamarin, open sourcing github wouldnt help them gain more developers on their platform and i do not see any other business benefits. i would love to see this happen though",2018-07-02 21:29:18,17445470
3737,"<i>&gt;Microsoft open sourced Xamarin after acquisition and it was good for community. </i><p>I don&#x27;t think Microsoft&#x27;s previous open sourcing of Xamarin is a good indicator and may lead us to misunderstand MS&#x27;s strategy.  To me, it would be very out of character for MS to open source Github.<p>Yes, MS has released things like C# compiler (Rosalyn), Visual Studio Code (Javascript Electron app), and Xamarin to the open source community.<p>But, MS has not open sourced CodePlex, Visual Studio Team Foundation Server, Skype, Linkedin.<p>I see a difference between &quot;programming tools&quot; and &quot;collaboration platforms&quot; and Github is in the 2nd category.  I see no strategic reason why MS would pay $7.5 billion for Github to just turn around and open source it.",2018-07-02 21:43:21,17445575
3738,"Xamarin is an easy to use leading indicator because of Nat Friedman&#x27;s involvement in both. Simply in choosing Nat Friedman as new CEO it is hard not to wonder if Microsoft at least has the intention to explore Open Source as an operating option for GitHub moving forward.<p>&gt; But, MS has not open sourced CodePlex, Visual Studio Team Foundation Server, Skype, Linkedin. [...] I see a difference between &quot;programming tools&quot; and &quot;collaboration platforms&quot; [...]<p>They&#x27;ve open source <i>some</i> of those &quot;collaboration platforms&quot;. It&#x27;s not a clear black &amp; white situation, I don&#x27;t think.<p>LinkedIn has a large open source footprint: <a href=""http:&#x2F;&#x2F;linkedin.github.io&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;linkedin.github.io&#x2F;</a><p>More importantly, Azure has a ton of Open Source: <a href=""https:&#x2F;&#x2F;azure.github.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;azure.github.io&#x2F;</a><p>A lot of what might possibly be considered &quot;secret sauce&quot; bits of the Azure stack are open source, and you could possibly cobble together your own mini-Azure if you needed too and for some reason it wasn&#x27;t just cheaper to buy Windows Servers with Azure Stack out of the box or even to just use Azure&#x27;s existing cloud.<p>The Azure Functions Host is the biggest example off the top of my head that a lot of people imagine would be closed source but is open source.<p>(Another example is I&#x27;ve used over the years for different reasons is Azure&#x27;s &quot;Kudu&quot; website deployment engine.)<p>I don&#x27;t know if there&#x27;s a cut&#x2F;dried point where Microsoft might currently be drawing the line between its closed source stuff and open source, but &quot;programming tools&quot; versus &quot;collaboration platforms&quot; doesn&#x27;t seem to be it (even before getting into semantic arguments about the fuzzy boundary between such categories).<p>That said, there probably is no obvious strategic reason for Microsoft to open source GitHub at this point, and maybe all that money that was spent in the purchase are plenty more reasons not to.<p>But Xamarin is an interesting leading indicator, and if there is a person to put in charge of GitHub with any interest in exploring the possibility of at least open sourcing more of GitHub, even if never quite &quot;all&quot; of GitHub, it is probably Nat Friedman.",2018-07-02 22:50:27,17446037
3739,"ImmuniWeb Mobile App Scanner is a free product available online, provided and operated by High-Tech Bridge.
https:&#x2F;&#x2F;www.htbridge.com&#x2F;mobile&#x2F;<p>The service can test mobile applications for the following platforms:<p>Android
 Native Applications
 Hybrid Applications (Cordova, PhoneGap, React, Xamarin)
 iOS
 Native Applications
 Hybrid Applications (Cordova, PhoneGap, React, Xamarin)<p>It promptly detects the wide spectrum of most common weaknesses and vulnerabilities, including OWASP Mobile Top 10, and provides a user-friendly report with the discovered issues.<p>The following automated tests of a mobile application are provided:<p>Static Application Security Testing (SAST)
 Dynamic Application Security Testing (DAST)
 Simple Behavior Testing for privacy and malicious functionality",2018-07-03 14:59:22,17450731
3740,"SEEKING WORK :: REMOTE :: Portland, Oregon :: Full Stack Mobile Development<p>25+ years experience, 7 years mobile development. Android&#x2F;iOS&#x2F;Xamarin. Serverless, AWS Lambda, Azure Functions.<p>saltydogtechnology.com&#x2F;blog
<a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;curtisshipleyandroidios&#x2F;</a>
curtis@saltydogtechnology.com",2018-07-03 17:22:53,17452003
3741,"But does RN actually save money? Or does e.g. having to keep up with the rapid development, maintaining your own native bridges and components, etc etc etc only cost more time and money in the long run?<p>I&#x27;ve read a bunch of react native postmortems and I&#x27;m usually reading &quot;yes we&#x27;re faster, but we&#x27;re spending a lot of time on maintenance&quot;. It gives me the feeling it&#x27;s probably faster short-term, but not viable long-term.<p>Besides, I&#x27;m sure there&#x27;ll be a next big thing (Flutter?) soon enough, causing investment in RN to drop and it never getting up to par with the native platforms. (see also: PhoneGap &#x2F; Cordova, Xamarin, etc).",2018-07-04 11:07:09,17456485
3742,"I think Xamarin really stays up-to-date with the newest features for iOS. At least that was true back when I wrote some apps with it, a few years ago.<p>I believe they have some automated tooling to update the APIs when Apple releases newer versions of the iOS SDK, so usually new features arrive on the same day in Xamarin iOS SDK as they do in Apple&#x27;s iOS SDK.<p>I am not sure if the situation is the same for Xamarin and Android.<p>I wouldn&#x27;t really hesitate to use Xamarin again in the future if a client requested it, but I haven&#x27;t tried React Native yet and not sure if I should dedicate time for it or if it&#x27;ll be gone in a few years. Seems quite a few mobile jobs require React Native experience these days.",2018-07-04 13:29:27,17457145
3743,B2B (Xamarin) team where I work.  One huge step to help B2B adoption would be to include an official library to include some functionality instead of having to choose between many different fragmented options.<p>A perfect example is qr&#x2F;barcode scanning - there are numerous commercially supported &quot;enterprise&quot; scanning engines which are substantially more performant than builtin solutions or existing open source solutions.  If you can meet a few of these requirements with main library support it would become incredibly hard not to use react native in B2B solutions.,2018-07-04 15:57:41,17457904
3744,"well, sure, if what you mainly work on is android, then it make sense that kotlin is getting hyped<p>that being said, for an outsider (i mainly do BI and DB stuff), it seem like xamarin (C# and F#), flutter (Dart), react native (reasonml) .. might seem like the options to investigate first nowadays<p>i think outside of android development, kotlin .. is not hyped at all",2018-07-05 15:56:48,17464249
3745,"I want to offer my personal counter anecdote from the dissent around here. I recently got into fulltime C#, on purpose, over all other possible options. There&#x27;s a lot of reasons why.<p>- Industrial strength language with static types. I used Python and JS a lot, I&#x27;m passing.<p>- Good tooling support, not every language has this.<p>- Good support in general, backwards compatibility (or side by side support).<p>- Game development possibilities with Unity.<p>- Mobile development with Xamarin.<p>- WebAssembly support already in motion with Blazor.<p>- Not cool, which is exactly what I want in tech. Fads don&#x27;t belong in tech. Means more job opportunities for me too.<p>- Good serverside platform with .Net Core.<p>- Native on the most popular desktop platform.<p>- With full MS stack, opens up the option of being the sole IT guy at a small to midsize company. It&#x27;s certainly possible.<p>- Similar to Java, lets me move over with minimal disruption if the job market demands.<p>- Write once, jobs everywhere. I can move back to the smaller area that I&#x27;m from. I live in Chicago right now but I&#x27;ve worked in 3 countries, 3 US states &amp; .Net is popular enough in all those locales.<p>- Career stability, less technical churn in the C#&#x2F;SQL space (and Java). I&#x27;m very tired of flavor of the week scripting languages that are many times really used heavily in NYC &amp; SF.<p>- I&#x27;m not looking to learn new languages all the time. I&#x27;m looking to perfect myself as a consummate professional developer. I want to fully envelop all the things that I think people should, discrete mathematics, design patterns and I think learning new languages is great but there are other ways to become an exceptional programmer.<p>For me, it was C# or Java to base the next leg of my career on. I like the abstraction layer they&#x27;re on, on a technical basis I think they nailed it. Sometimes newer isn&#x27;t better. This isn&#x27;t going to be popular, because a lot of people believe in Javascript and invested heavily there career-wise. I didn&#x27;t want to and wasm is going to chunk out 25% of the single language fullstack market from Javascript in 5 years anyway and keep taking. Ideally going forward on the web side, I would only do a SPA with Blazor or static pages.<p>That&#x27;s why I like C#. I&#x27;m looking forward to many relatively stable years in my career within the C#&#x2F;SQL world without the trends. If it collapses, Java is in a similar situation marketwise.",2018-07-06 05:08:48,17469010
3746,"Can you give reasons why you wouldn&#x27;t use it in 2018? Also, what is your proposed alternative? It&#x27;s disingenuous to dissent without offering the people the savior. If I own a company, need a large swath of developers and we&#x27;ll assume any random product that could consist of mobile&#x2F;native app&#x2F;games, you name it, I&#x27;m going with C# everytime because there&#x27;s nothing else like it. I&#x27;m not committing 100KLOC+ of code in some random version of Python, that like all code, may live a lot longer than anyone ever expected. That&#x27;s for sure.<p>It&#x27;s one of very few fullstack solutions available for game (serverside+Unity), mobile (serverside+Xamarin) and web (serverside+Blazor), maybe you want a WPF or UWP app too. Or all of it for a single stack shop for anything you want. Nothing else is pulling all of that off today, and may never. MS is doing a fantastic job keeping it vibrant, alive and supported. You&#x27;re not really convincing me without more than what you left there. A few years ago, yes, I would&#x27;ve agreed 100% with the general attitude but the tide has turned. I dove in deep on Python, got back out before I hitched my career to that.<p>To specifically address the points I disagree with.<p>-Tooling falling off? Examples? I&#x27;ve worked around or with it for a decade now and never saw the tooling fall off.. it&#x27;s best in class. I really don&#x27;t understand how this is any worse than anything else.<p>-Build toolchain? An example of a dire toolchain is Javascript&#x27;s, not C#&#x27;s. That is a mess that I want nothing to do with. I can&#x27;t get behind this one either.<p>-Roadmap schizophrenia? They have it figured out now on the .Net Standard and Core. Your alternative is Python 2 to 3 transitions. That was the real mess.<p>-Integration with other Microsoft products? Good or bad, you probably aren&#x27;t going to find <i>better</i> integration with MS products than using .Net. I can&#x27;t get behind this complaint either.<p>That said if anyone has attacks on .Net I&#x27;m willing to listen but I don&#x27;t see it. It&#x27;s the worst, except for all the others.",2018-07-06 09:27:55,17470059
3747,"SEEKING WORK | The Netherlands | Remote<p>Hey! My name is Remco and I am an experienced full stack software developer in C++ and C#. I do software and apps, web back ends, prototyping, hosting, deployment and management. I can cover the entire development process from start to finish or work on existing projects. If you are not certain about the requirements or direction of a project, I will help design your software solution.<p>I have been programming for 10+ years of which 3 professionally. I have experience in both startups and multinational organizations and worked on mobile, desktop and web applications. I pay attention to details, work reliably and learn fast when I have to work with new technologies.<p>Primary skills:<p>- Software Development and Design, Algorithms, Game Development<p>- C++, C#, ASP.NET (Core), Xamarin, Java<p>Check out my full portfolio: <a href=""https:&#x2F;&#x2F;remcovanommeren.com"" rel=""nofollow"">https:&#x2F;&#x2F;remcovanommeren.com</a><p>You can contact me at r.vanommeren11@gmail.com",2018-07-06 18:44:56,17474087
3748,"It blows my mind that problems like this exist, and yet platforms like Unity and Xamarin are capable of write-once-build-everywhere apps on every platform. Why hasn&#x27;t web development abstracted away these problems yet?",2018-07-09 03:24:20,17487769
3749,"Yes, there&#x27;s Xamarin, Flutter, NativeScript, etc.",2018-07-09 16:09:24,17491270
3750,"This is great stuff, I am so happy we&#x27;ve gotten this support on Windows when Hyper-V is there. Kudos to everyone involved across borders that made it happen.<p>FYI for anyone using Visual Studio &amp; Xamarin, we&#x27;ve added support for this in Visual Studio 2017 15.8 Preview 1 or higher with the Mobile development with .NET (Xamarin) workload installed.<p>Miguel posted details in this blog post: <a href=""https:&#x2F;&#x2F;blogs.msdn.microsoft.com&#x2F;visualstudio&#x2F;2018&#x2F;05&#x2F;08&#x2F;hyper-v-android-emulator-support&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blogs.msdn.microsoft.com&#x2F;visualstudio&#x2F;2018&#x2F;05&#x2F;08&#x2F;hyp...</a><p>Happy coding folks.<p>(disclaimer - I work at Microsoft)",2018-07-09 21:14:51,17493473
3751,"Maybe it&#x27;s just my phone (6) but you may find that once you get 1000+ logins, Bitwarden falls apart pretty quickly. I&#x27;ve heard the same from people with 800+ logins. I remember it used to be very quick when I initially used it with a few plugins.<p>IIRC from their Github issue threads, Bitwarden is using Xamarin, and performant UI has been a consistent struggle with many login entries.",2018-07-11 04:25:01,17504466
3752,"Not Xamarin but Xamarin.Forms, basic Xamarin doesn&#x27;t have issues with UI performance.",2018-07-11 05:38:37,17504685
3753,I would suggest using xamarine platform to build native apps,2018-07-12 08:58:59,17513106
3754,"Firebase is very much easy to get started for mobile apps. You have nice console to create project, and as developer you deal with just its SDK, one CLI and simple API. For something similar to Firebase in AWS, you need to make use of Lambda, API Gateway, DynamoDB, Cognito separate products, which has steep learning curve. And then you need to know the AIM security to get started. AWS has a Mobile Hub product which is trying to make things easy to create mobile apps by automate some of these AWS products for you. So now you have to learn awsmobile CLI tool on top of the core awscli tool. And if you develop for the web, they have this AWS Amplify Javascript library on top of basic JS SDK library which has a higher abstraction thus to make things simple (or worst). If you&#x27;re new to AWS, you often struggle with which library should one learn and use. And if you use AWS Ampify and read the documents, it is as if the library is build for React. I&#x27;m not sure why AWS can be so married to one web stack. So much emphasis and priority is given to React and React Native in this library. They will give the excuse that React is what their customer wants. They now have mature React&#x2F;React Native Amplify library thus giving the impression that to use AWS its better to use React&#x2F;React Native. So they spend resource on AWS-Amplify, even move one of JS cognate-identity-js SDK under this umbrella, hoping the world will standardised on JavaScript and React Native for iOS, Android and web. So what happen if you&#x27;re developing a mobile app using Unity, Xamarin and Flutter? No luck as they only have SDK for iOS, Android and web. Compare this with Firebase that has SDK for iOS, Android, web, Xamarin, Unity, Flutter and C++. AWS has an opportunity in AppSync to make a product as easy to get started as Firebase. What is required is native mobile SDK for iOS, Android, web, Flutter, Unity, Xamarin that is not just specific to AppSync and GraphQL, but also add in authentication, analytics etc APIs. Something like Firebase SDK API. AWS is still stronger for enterprise usage. And you cant use Firebase in China due to its use of Google Play services. But Firebase is definitely a weapon used by Google to draw customers into other Google Clouds offering.",2018-07-13 06:29:47,17520908
3755,"On iOS, using the date input field gives you the date wheels which work well <a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;ios&#x2F;user-interface&#x2F;controls&#x2F;picker-images&#x2F;image9.png"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;ios&#x2F;user-interface&#x2F;...</a><p>On desktop the standard for forms seems to be either 3 text fields (Y&#x2F;M&#x2F;D) or 3 dropdowns with the possible Y&#x2F;M&#x2F;D numbers in them",2018-07-19 04:08:36,17563879
3756,"I know about Xamarin, Mono project, but not sure whether it will support Print Spooler API. I also needs to develop Windows service to monitor some print tasks, can it be achieved using Mono or Xamarin?<p><a href=""https:&#x2F;&#x2F;msdn.microsoft.com&#x2F;en-us&#x2F;library&#x2F;windows&#x2F;desktop&#x2F;ff686807(v=vs.85).aspx"" rel=""nofollow"">https:&#x2F;&#x2F;msdn.microsoft.com&#x2F;en-us&#x2F;library&#x2F;windows&#x2F;desktop&#x2F;ff6...</a>",2018-07-24 07:55:30,17598952
3757,"Hello HN! Were Jacob and Miguel, founders of RevenueCat (<a href=""https:&#x2F;&#x2F;www.revenuecat.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.revenuecat.com</a>). Were taking the pain out of building a business on in-app subscriptions.<p>Before starting RevenueCat, Miguel and I worked together at Elevate (<a href=""https:&#x2F;&#x2F;www.elevateapp.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.elevateapp.com</a>), Apples 2014 App of the Year. Elevate is a brain training app that monetizes with in-app subscriptions. We found that while the subscription model was essential to the business being viable, implementing it was time consuming, complicated, and boring. We needed to see and react to customer level data on LTV, churn, and conversion and it just wasnt possible without building our own, complex subscription tracking infrastructure.<p>RevenueCat is an Android, iOS, React Native, and Unity SDK that allows you to get up and running with subscriptions (with all the bells and whistles) in a couple of hours instead of weeks or months. Weve found and cataloged the nuances and bugs of the platform in-app purchase APIs and wrapped around them to provide a stable and easy to implement API that is consistent on all platforms.<p>Right now we provide cross-platform status tracking, receipt validation, customer management, and charting for MRR, conversion rate, and more. Our plan is to become a full revenue management platform, so app makers can focus on making their app useful, and well handle making sure it makes money. There are lots of standard monetization strategies (price testing, lifecycle offers, sales, churn prevention, etc.) that most app developers simply dont have the time to implement and maintain. These things can make a huge difference to revenue (we saw it first hand).<p>We believe mobile software is undervalued and subscriptions can help. Right now, its too hard for developers to do them right. We want to fix that.<p>Id love to hear your thoughts, fears, and desires! Were working on adding more SDKs (Xamarin, Cordova, etc.) Sound off in the comments if there is one youd like to see. Also, if you have an app that wants to try subscriptions or monetize them better reach out, we can help.",2018-07-24 16:54:10,17602820
3758,"Hello HN! Were Jacob and Miguel, founders of RevenueCat (<a href=""https:&#x2F;&#x2F;www.revenuecat.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.revenuecat.com</a>). Were taking the pain out of building a business on in-app subscriptions.<p>Before starting RevenueCat, Miguel and I worked together at Elevate (<a href=""https:&#x2F;&#x2F;www.elevateapp.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.elevateapp.com</a>), Apples 2014 App of the Year. Elevate is a brain training app that monetizes with in-app subscriptions. We found that while the subscription model was essential to the business being viable, implementing it was time consuming, complicated, and boring. We needed to see and react to customer level data on LTV, churn, and conversion and it just wasnt possible without building our own, complex subscription tracking infrastructure.<p>RevenueCat is an Android, iOS, React Native, and Unity SDK that allows you to get up and running with subscriptions (with all the bells and whistles) in a couple of hours instead of weeks or months. Weve found and cataloged the nuances and bugs of the platform in-app purchase APIs and wrapped around them to provide a stable and easy to implement API that is consistent on all platforms.<p>Right now we provide cross-platform status tracking, receipt validation, customer management, and charting for MRR, conversion rate, and more. Our plan is to become a full revenue management platform, so app makers can focus on making their app useful, and well handle making sure it makes money. There are lots of standard monetization strategies (price testing, lifecycle offers, sales, churn prevention, etc.) that most app developers simply dont have the time to implement and maintain. These things can make a huge difference to revenue (we saw it first hand).<p>We believe mobile software is undervalued and subscriptions can help. Right now, its too hard for developers to do them right. We want to fix that.<p>Id love to hear your thoughts, fears, and desires! Were working on adding more SDKs (Xamarin, Cordova, etc.) Sound off in the comments if there is one youd like to see. Also, if you have an app that wants to try subscriptions or monetize them better reach out, we can help.",2018-07-25 16:53:29,17610735
3759,When will the Xamarin SDK be ready? Need to decide whether to implement on our own or wait for RevenueCat,2018-07-25 21:34:41,17613079
3760,I guess we&#x27;ll just make do until the Xamarin SDK is ready. Thanks.,2018-07-25 22:06:51,17613359
3761,"Oracle went the wrong direction with unsafe. Unsafe memory access is a feature of .NET and the CLR, not a hidden API where you get reprimanded by the community for using it. Not surprisingly, c# has succeeded where Java has failed in being cross platform, used for instance in game development with the unity engine or multi platform mobile development via xamarin. On the other hand, no one in the .NET community is complaining that their code is segfaulting all the time.<p>The jdk API developers should not be granted a special API because they are more trustworthy than the rest of us &quot;average&quot; developers. Unsafe should be made public, not removed and replaced.",2018-07-29 23:04:31,17640869
3762,"Doesn&#x27;t unity just steal the C# syntax, but actually compiles it on its own? Effectively, it&#x27;s unrelated to the CLR?<p>Same for Xamarin?",2018-07-30 02:19:22,17641602
3763,"No and no. Im no unity expert but I think it is based on Mono, an open source implementation of the CLR and the C# compiler. So it doesnt &quot;steal&quot; the syntax, it use a compiler made for the language. To put it simply, Mono was (cf infra) the open-JDK of the .net world.<p>Xamarin is a startup founded and run by people working on Mono.<p>In the recent years Microsoft opened its new C# compiler (Roslyn) and bought Xamarin with have blurred the lines between the implementations.",2018-07-30 02:52:22,17641725
3764,"&gt;Not surprisingly, c# has succeeded where Java has failed in being cross platform, used for instance in game development with the unity engine<p>C# succeeded in game development? That&#x27;s its claim to fame? Being an optional scripting language used by Unity? The real work is done by the graphics engine that&#x27;s written in C++.<p>&gt;or multi platform mobile development via xamarin<p>Last time I checked the percentage of apps on the App Store and Google Play that were written with Xamarin tools were so low that they barely even registered.",2018-07-30 03:25:39,17641819
3765,"It&#x27;s not optional, it&#x27;s the only language used in Unity by developers since UnityScript got deprecated.<p>At least Google Play has more apps in Xamarin[0] than in ReactNative[1] but RN is used in many top apps while Xamarin apps are mostly obscure.<p>[0]: <a href=""https:&#x2F;&#x2F;www.appbrain.com&#x2F;stats&#x2F;libraries&#x2F;details&#x2F;xamarin&#x2F;xamarin"" rel=""nofollow"">https:&#x2F;&#x2F;www.appbrain.com&#x2F;stats&#x2F;libraries&#x2F;details&#x2F;xamarin&#x2F;xam...</a><p>[1]: <a href=""https:&#x2F;&#x2F;www.appbrain.com&#x2F;stats&#x2F;libraries&#x2F;details&#x2F;react_native&#x2F;react-native"" rel=""nofollow"">https:&#x2F;&#x2F;www.appbrain.com&#x2F;stats&#x2F;libraries&#x2F;details&#x2F;react_nativ...</a>",2018-07-30 04:46:54,17642125
3766,"Kind of, Mono never was up to speed with what .NET Runtime is capable of, plus before Xamarin got acquired by Microsoft, Unity didn&#x27;t want to renew their licenses so C# on Unity was stuck into .NET 3.5 world.<p>They also started their own native code compiler for C#, called IL2CPP, because it compiles MSIL via C++ compiler.<p>Recently they migrated to .NET 4.6, although the latest version is .NET 4.7.2, due to some Roslyn integration issues.<p>Additionally they started another project to compile a C# subset (HPC#), with a new compiler named Burst, as a means to start porting some of their C++ modules into C#.",2018-07-30 06:27:08,17642452
3767,"Actually one might say Sun was the one that went the wrong way.<p>&gt; &quot;[C# is] sort of Java with reliability, productivity and security deleted.&quot;<p>-- Gosling on <a href=""https:&#x2F;&#x2F;www.cnet.com&#x2F;news&#x2F;why-microsofts-c-isnt&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.cnet.com&#x2F;news&#x2F;why-microsofts-c-isnt&#x2F;</a><p>Oracle is improving Java native interop with projects Panama,<p><a href=""http:&#x2F;&#x2F;openjdk.java.net&#x2F;projects&#x2F;panama&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;openjdk.java.net&#x2F;projects&#x2F;panama&#x2F;</a><p>Java has surely not failed in being cross platform, not if we are comparing it with .NET.<p>.NET Core still doesn&#x27;t run in many environments, where I can gladly put Java on. The computing world is much bigger than just macOS, Windows and GNU&#x2F;Linux.<p>And then there is the issue that even Swing&#x2F;JavaFX&#x2F;SWT are better supported that whatever .NET Core UI framework one can think of.<p>Xamarin is nice and way better than React Native, Cordova or Qt, and yet you aren&#x27;t going to find much love for it on online forums.<p>On game development C# got lucky with Unity, because finally there was a company that was firm to hold on to managed languages in game development no matter what, and they managed to turn out one of the best engines out there for indies.<p>Had Unity decided to go the way of Unreal with UnrealScript and the story would be quite different.<p>I still remember the JavaGamming initiative at Java ONE, Java3D or the JOGL project, but like many other Sun initiatives, they let it die after a couple of years. Maybe here the story would have been different if they were actually committed to it.<p>Thing is UNIX companies never understood desktop and gaming cultures, so here .NET has notoriously an advantage by having been part of a desktop OS SDK since its inception, from a company that actually understands desktop and gaming cultures.",2018-07-30 06:47:08,17642515
3768,"It really depends on the programming languages that you&#x27;re comfortable with. The biggest one that I personally would suggest is the .net ecosystem. You can use Xamarin to build your mobile apps, asp.net&#x2F;asp.net core to build your web application&#x2F;rest api, and a lot of the things that you&#x27;re looking for can easily be added using nugets (.nets package manager) all by knowing C#. If you like single page applications look into <a href=""https:&#x2F;&#x2F;blazor.net&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blazor.net&#x2F;</a> which is a pretty new SPA framework (still in early testing&#x2F;concept) using C#&#x2F;Web assembly on the front end. Like I said personally .net is one of my favorite stacks. The other is Django which is also a great framework for building web apps&#x2F;apis. Recently I&#x27;ve been playing around with a web ecosystem in golang called Buffalo which seems pretty promising if you like go.",2018-07-30 16:51:34,17645870
3769,"Actually Xamarin proved otherwise.<p><a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;android-in-c-sharp&#x2F;</a><p>Also .NET compact framework is not the same runtime as the .NET Framework, .NET MDIL (WP 8.x) or .NET Native (WP 10&#x2F;UWP).<p>Actually, thanks to being AOT compiled to native code, budget WP 8.x and WP 10 device, used to be faster than their Android counterparts on the same price range.",2018-07-30 17:46:14,17646403
3770,"&gt; VM languages like Java and C# and native languages like Go.<p>Oh well this VM meme is getting old,<p><a href=""https:&#x2F;&#x2F;www.ptc.com&#x2F;en&#x2F;products&#x2F;developer-tools&#x2F;perc"" rel=""nofollow"">https:&#x2F;&#x2F;www.ptc.com&#x2F;en&#x2F;products&#x2F;developer-tools&#x2F;perc</a><p><a href=""https:&#x2F;&#x2F;www.excelsiorjet.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.excelsiorjet.com&#x2F;</a><p><a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;framework&#x2F;net-native&#x2F;getting-started-with-net-native"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;framework&#x2F;net-native...</a><p><a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;mac&#x2F;internals&#x2F;aot"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;mac&#x2F;internals&#x2F;aot</a><p><a href=""https:&#x2F;&#x2F;docs.unity3d.com&#x2F;Manual&#x2F;IL2CPP-HowItWorks.html"" rel=""nofollow"">https:&#x2F;&#x2F;docs.unity3d.com&#x2F;Manual&#x2F;IL2CPP-HowItWorks.html</a>",2018-07-31 06:27:58,17650987
3771,"If one could bet money &amp; not just time&#x2F;effort&#x2F;knowledge on tech stacks, Microsoft&#x27;s would be a great discount right now.<p>They&#x27;ve been employing large amounts of very well known devs to become dev advocates in every popular language&#x2F;field out there.<p>Visual Studio Code has overtaken Sublime &amp; Atom as the most popular text editor in just about any demo I see in most front side web development.<p>MS is now friends &amp; compatible with many of the other cool tools out there. MySQL, PostgreSQL, Linux, etc. A lot of demos I see use .NET with PostgreSQL on Linux.<p>If you&#x27;ve never used Visual Studio&#x27;s Full IDE or Azure or the .NET framework, you&#x27;re missing out on some huge productivity gains. I use JavaScript more than .NET. I&#x27;m better at JS than .NET by far. I really dig hosts like Netlify. That said, if I need to spin up a MVP for a project, it&#x27;s faster, better quality &amp; easier with VS, Azure &amp; .NET for me at least. Startups really underestimate this one I think.<p>From what I&#x27;ve heard, it&#x27;s also a great platform with Xamarin for mobile, with Unity for Games, etc. Add on the experimental work going on with compiling to Web Assembly &amp; the .NET framework has a great chance to be running anywhere &amp; everywhere.",2018-08-01 13:57:50,17662519
3772,"Diginex | Blockchain startup | Hong Kong | F# devs | Fulltime employees ONSITE preferred, VISA sponsors (for freelancers we might accept part-time and&#x2F;or remote work, if you prove yourself to be worth it)<p>We are a blockchain start-up based in Hong Kong. Our business consists of cryptocurrency mining, financial services, Initial Coin Offering (ICO) and blockchain technology consultancy, and software research. Among our products, we are developing an opensource crossplatform multicurrency wallet app for desktop &amp; mobile devices and we have plans to build a cryptocurrency exchange platform. Our goal is to become a legitimate, regulated, go-to global blockchain service provider. Our core values are based on high professional standards, where the ability to work effectively and independently is a must-have.<p>We are looking for filling several vacancies for the following role in the next few weeks:<p>F#+Xamarin Developer (no previous blockchain experience required): must be comfortable working with opensource workflows (pullrequests, code review, git, etc). Typescript &amp; selenium experience are a plus.<p>Work onsite (relocation package is offered) is preferred but not a must. Please send CV and short cover letter to andres.aragoneses at diginex dot com.",2018-08-01 15:57:19,17663692
3773,"Doesn&#x27;t hurt to learn other skills that are in demand like Node. However being an independent contractor you&#x27;re at an advantage (when building new solutions) because the client may not care what you use as long as you build a deliverable that meets their requirements and solves their problem. In my opinion which may be biased since I prefer the .NET and Microsoft ecosystem there&#x27;s never been a better time to be on .NET. The new direction for the company is .NET Core which means great performance and cross-platform capabilities. The ease of deployment allows for leveraging the cloud with containers and serverless solutions that can run on Windows or Linux environments. Add on to that SQL Server starting with 2016 being available on Linux and you have a winner. That&#x27;s on the back end of things. On the front end you have ASP.NET Core with support for SPA applications if you choose not to use Razor Pages. You also have Blazor which look interesting as well. For mobile development you have Xamarin. If you want to do Machine Learning you have tools like ML.NET and CNTK. Long story short, with Microsoft becoming more open and offering tools for developers to be productive on Azure as well as ways for people to build the next wave of solutions like Chatbots, Augmented Reality, Microservices, etc. having invested so much time on the .NET platform can be rewarding because the transition to these new set of tools can be seamless and your opportunities endless.",2018-08-03 21:43:43,17683883
3774,"Thats not true either. Again there is an existence proof - Xamarin.<p>You can develop on Windows.<p><a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;ios&#x2F;get-started&#x2F;installation&#x2F;windows&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;ios&#x2F;get-started&#x2F;ins...</a><p>And use Microsofts hosted build environment for up to 40 hours a month for free.<p><a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;vsts&#x2F;pipelines&#x2F;agents&#x2F;hosted"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;vsts&#x2F;pipelines&#x2F;agents&#x2F;hoste...</a><p>The whole kerfuffle you are referring to is about 7 years out of date.",2018-08-04 17:57:26,17687805
3775,"How is it Apples policy? Apple chooses not to write a tool chain for Windows or Linux. If a third party once to make one, they are free to do so.<p>The post I was responding to said it was against Apples TOS, probably referring to a policy that was rescinded back in 2011.<p>There is a big difference between Apple not <i>allowing</i> something and Apple not <i>supporting</i> something. I choose to write native apps for the platforms I care about. If I wanted to use Xamarin I could.",2018-08-04 19:26:28,17688121
3776,"<i>Now you are playing word games, just to avoid the point.</i><p>Its not a word game. Both of your assertions were incorrect. You no more need Apples proprietary emulator to develop apps for iOS - Xamarin is proof of that, nor is there a policy against developing or deploying  iOS apps without a Mac - again Xamarin is proof of that.<p>Calling Apples simulator an emulator is just as technically incorrect as saying using Safari and setting the window size to match mobile screens an emulator",2018-08-04 20:41:17,17688343
3777,"<i>No, you run the .net code on the .net runtime. If you use UIKit namespace, for example, you will run with the dotnet shim.</i><p>And when you run your code on the iOS simulator you are also not running against the same code thats is running on your phone...<p>You arent running ARM code.<p><i>Because Microsoft doesn&#x27;t have emulator or simulator. Not anything comparable with what Apple has, or what Google has (and what Microsoft is shipping for Android).</i><p>When you run on your code on your desktop you run on a simulated environment - the Xamarin runtime on top of Windows. When you run your code on MacOS, you run on x86 version of the iOS runtime. By definition, you are running a simulator.<p><i>It is not a first-class solution.</i><p>So in your experience using both, what capabilities were you missing?<p><i>Actually you can</i><p>You havent had to ship C binaries to various Linux distributions....<p>For instance, the official MySQL driver for Python is not pure Python. Even if you are on Linux, you cant just do a pip install from your box, create a zip file and guarantee it will work. You need to use the package built for whatever version Amazon Linux is based on....<p><a href=""https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;35763380&#x2F;problems-using-mysql-with-aws-lambda-in-python"" rel=""nofollow"">https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;35763380&#x2F;problems-using-...</a><p>There are plenty of compatibility issues distributing binary builds for different versions of Linux.<p>Not a big deal, I use AWS CodeBuild to create my distribution anyway.",2018-08-04 23:36:17,17688944
3778,"&gt; And when you run your code on the iOS simulator you are also not running against the same code thats is running on your phone...<p>&gt; You arent running ARM code.<p>You are running the same framework by the same author, which certifies that they behave the same to some extent. It&#x27;s the same way, that Gnustep is not an adequate replacement for Cocoa.<p>&gt; When you run on your code on your desktop you run on a simulated environment - the Xamarin runtime on top of Windows. When you run your code on MacOS, you run on x86 version of the iOS runtime. By definition, you are running a simulator.<p>Are you still interested in arguing in circles? I&#x27;m not, it makes no sense and is a waste of time. You demonstrated that you are not willing to understand the point, you just want to win an argument on the internet. Go find someone else for that.<p>&gt; You havent had to ship C binaries to various Linux distributions....<p>Now it is C binaries... It was just binaries before. You can move Go binaries with no problem, the crosscompiled ones too, because they do not have problem with importing symbols nilly-willy.<p>You can do that with C binaries too, but you have to take care. Just make sure you know what are you linking against, bundle it if it is not present on the target or just link statically. It no problem for a competent developer, who knows what a linker is and can maintain ABI hygiene.<p>If you think that is something complicated, go setup apache with mod_wsgi on windows, you will run into the same problem. There you will have to align the right Visual Studio version (because each msvcrt version has its own ABI) with Apache version with Python version, otherwise the hell will break loose. Of course, all the native python extensions you are going to use will have to be compiled with the same Visual Studio version. Yet nobody is saying, that it is impossible to distribute binaries that run on all Windows releases, mainly because it has nothing to do with specific system, but with the apps you chose to run, how they are built, and also boils down to ABI hygiene.",2018-08-05 13:46:07,17691289
3779,"<i>You are running the same framework by the same author, which certifies that they behave the same to some extent. It&#x27;s the same way, that Gnustep is not an adequate replacement for Cocoa.</i><p>Have you done mobile development?<p>If you run on top of the iOS simulator, you still dont have any guarantees that they will run the same way. Ive been doing mobile development since before the iOS App Store every existed (Windows Mobile), you always had to run on the real device and the behaviors and the performance characteristics were nowhere near the same.<p>When you are developing with Xamarin, you smoke test on the simulator at first and then you run on the device using the Xamarin player - the same way you are going to deploy your code.<p><i>Now it is C binaries... It was just binaries before. You can move Go binaries with no problem, the crosscompiled ones too, because they do not have problem with importing symbols nilly-willy.
You can do that with C binaries too, but you have to take care. Just make sure you know what are you linking against, bundle it if it is not present on the target or just link statically. It no problem for a competent developer, who knows what a linker is and can maintain ABI hygiene.</i><p>Excuse me for referring to the most popular language for writing native code (and the language that Linux itself was written in) instead of specifying that Im not talking about <i>Go</i> of all things. Almost all non C languages that Im aware of have a way to call native C code - not Go.<p>Your solution for distributing C code is statically linking? So if I have four python modules that all have native dependencies they should all ship with statically linked libraries? Not only will my code be larger, so will the memory requirements. If you have four processes all using the same dynamically linked library, the library is only in memory once, with statically linked libraries, you are increasing your code size and your memory footprint.<p>How well do you think that with work with the 128MB VMs that you get to run Lambdas? Or do you think I should just spend more on higher capacity lambdas? If I wanted to use heavyweight VMs and Docker containers, I might as well use Windows.<p>But this whole thread youve shown when it comes to developing mobile applications, youre speaking hypothetically while  Im speaking from a perspective of doing mobile development for over 10 years.<p>Ive even played around with J2ME development.<p>The largest issue is that youre over indexing on the value of the simulator. Mobile simulators have <i>never</i> been a good way to validate the functionality, user interaction, performance, etc. of a mobile app. They are pretty good for development, and okay for negative testing (if it doesnt work on the emulator it probably wont work on the device), but you cant depend on it for positive testing.",2018-08-05 17:43:04,17692464
3780,"To make a build of a xaramin app for publishing to the iOS store dont you need a Mac at least for one stage? It looks like you do under the &quot;Archive for Publishing&quot; section here:<p><a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;ios&#x2F;deploy-test&#x2F;app-distribution&#x2F;app-store-distribution&#x2F;publishing-to-the-app-store?tabs=vswin"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;ios&#x2F;deploy-test&#x2F;app...</a><p>It&#x27;s also against ToS to virtualize OSX on non-Mac hardware as far as I know.<p>I don&#x27;t think they are just doing that for fun.",2018-08-07 07:43:04,17704545
3781,It&#x27;s been a pleasure to work with the past month. Traditionally I&#x27;ve worked with Cordova&#x2F;Ionic and I feel far more productive than I have before on mobile. I was skeptical of the Dart language but now I&#x27;ve seen it&#x27;s similarities with C# and really enjoy it. The whole widget model is pretty nice to work with too.<p>The experience of going from zero to HelloWorld with VSCode was so smooth. The community has done an excellent job with the VSCode extensions. Things like picking&#x2F;install&#x2F;starting an emulator is quick and intuitive as opposed to the work it takes to initially get thing Xamarin installed and running.<p>Hot reloading works well on a device or emulator and is really quick! There isn&#x27;t support for remote updating (yet) once you&#x27;ve published to a store though. There is a GitHub issues tracking this.<p>I&#x27;m a fan. I hope the community grows around it.,2018-08-07 15:08:09,17707276
3782,"That is the only way to keep Flutter relevant.<p>Right now, in what concerns iOS and Android, Qt and Xamarin also compile to native, use mature languages (JS, C++, C#, VB.NET, F#), can also target desktop and have an endless list of libraries to choose from.<p>Also Chrome team is quite interested in making PWAs succeed on mobile Web, and they have Microsoft on board with them, given how JavaScript has first class support on UWP.",2018-08-07 15:29:08,17707488
3783,"&gt; With Googles history of abandoning efforts like this, I wouldnt spend too much effort using any language developed by them.<p>Well , to be fair Go is becoming a major server side language and I don&#x27;t see Google abandoning it any time soon.<p>That being said , Dart is basically on &quot;life support&quot; has of now , there is no SDK what so ever beside Google + Firebase , and I haven&#x27;t heard anything from AWS &#x2F; Azure or others vendors to support Dart + Flutter.<p>I feel like everyone is basically waiting for the language to take off to actually invest in it.<p>I&#x27;m afraid it will end up like Xamarin , a niche tech that will eventually die out because very little people accept the ecosystem that is forced on them by using the framework.",2018-08-07 16:56:42,17708327
3784,"Flutter seems like the killer app that could revive Dart. In comparison:<p>Javascript<p>For mobile with React: no AOT compile. Relies on loading the entire JS VM which adds startup time and can require bundling a large library on Android. Cannot easily author customized components that render at native speeds.<p>C#<p>For mobile with Xamarin: No hot reload. Dart having its origin as a JS interpreted language had the foundations to be both dynamic and AOT. C# might not ever achieve this?<p>Kotlin, Java, Swift, Objective C:<p>Not cross platform.<p>C++:<p>Is cross platform. No hot reload. Very unfriendly to modern development and fast iteration.<p>I don&#x27;t actively work in mobile. I just like following developments in language technologies, so correct me if I&#x27;m wrong.",2018-08-07 18:17:26,17709100
3785,"How have you not used Xamarin?<p>Hot reload is supported, C# has a REPL nowadays and there are workbooks, Swift storyboard style.<p>There are Java AOT compilers for iOS, at least three that I can remember of.<p>C++ with Qt&#x2F;QML is very productive for mobile development.",2018-08-07 18:39:55,17709339
3786,"re Xamarin:<p>Only reloading your XAML or CSS is supported. With Dart, you can reload all your code, in the same way JS developers have had hot reload for ages now. I&#x27;m not sure if C# will be able to support this. This really leverages Dart&#x27;s roots in being interpreted, not compiled.<p><a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;xamarin-forms&#x2F;xaml&#x2F;live-reload"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;xamarin-forms&#x2F;xaml&#x2F;...</a><p><pre><code>  What changes does Live Reload redeploy?
  
  Live Reload only applies changes made to XAML or CSS. If you make changes to a C# file, a recompile will be required. Support for reloading C# is planned for a future release.</code></pre>",2018-08-07 20:03:18,17710163
3787,Xamarin is not dead and being actively developed. It just doesn&#x27;t intersect with the startup scene because of its enterprise roots.,2018-08-08 01:05:34,17712365
3788,"&gt;If that&#x27;s not possible, I&#x27;d be curious to learn what makes it not feasible. Fresh approaches to data processing are really desirable right now, since so many of us are working with data that is different from what language designers intended.<p>I wish to use instead swift, that hit a sweet spot. Using other lang (like python, that I loved!) make hard to target iOS&#x2F;Android. This is the main crux of mine. This mean that I need to re-code a lot of stuff across platforms and targets, because nothing is good enough. I also use xamarin&#x2F;F# and the integration with android&#x2F;ios is not as good as I imagine (ie: xamarin.forms sucks. And is damm hard to integrate yourself anything (ie: ios&#x2F;android libraries) outside it).<p>I also try with nim but is too crude and lack a lot of libraries I will need. I&#x27;m also thinking on using pascal, that I also like much, so now is just looking how good could be the use of rust...",2018-08-08 03:23:02,17712987
3789,"I wouldnt focus my medium term career prospects on Xamarin, but if I could quickly ramp up and do mobile development using it, I would.",2018-08-08 16:21:41,17717189
3790,"I&#x27;ve thought that getting Xamarin Forms working on this thing could be interesting for jump-starting app development.  There&#x27;s already GTK support for XF[0][1].<p>[0] <a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;xamarin-forms&#x2F;platform&#x2F;gtk?tabs=vswin"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;xamarin-forms&#x2F;platf...</a><p>[1] <a href=""https:&#x2F;&#x2F;github.com&#x2F;jsuarezruiz&#x2F;forms-gtk-progress#gallery"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;jsuarezruiz&#x2F;forms-gtk-progress#gallery</a>",2018-08-09 19:13:50,17727470
3791,"You can develop on other platforms - see Xamarin<p>You want to be able to install another OS on an iPhone? Unless you happen to have an Android phone that has hardware that is supported by one of the forks - good luck with that.<p>Yes you can use scripting languages with iOS apps, games do it all of the time.<p>Alternate voip apps integrate well with the native iOS dialer. For instance a call using Skype looks just like a call on the native phone dialer and your Skype call history is integrated with your regular phone call history. You can even say call X using Y with Siri and it will use the alternate app - same with messages.  If you use a third party VoIP app, and youre connected to Bluetooth in your car, it uses the phone call Bluetooth protocol just like the native dialer.<p>Third party keyboard support has been available for 3 years and unlike Android, you can install a third party keyboard and not give it network access so youre not installing a keylogger.",2018-08-10 19:12:53,17736004
3792,"E.g. Qt, Xamarin, ReactNative, Flutter, etc. Why did you choose to write separate native apps for different platforms instead?",2018-08-12 13:24:16,17744245
3793,"Nat Friedman of Microsoft is the CEO of Github now and he was involved in a lot of open source projects (Gnome, Xamarin, etc.)",2018-08-15 00:55:31,17763119
3794,"IMHO C# may be a good choice for this project: shared common code in a C# lib and WPF&#x2F;UWP, Xamarin.iOS and Xamarin.Mac frontends using native UI frameworks and one language to rule them all",2018-08-19 10:49:21,17793698
3795,"Not a .NET developer, so apologies for the dumb question, but why did MS release a second open source .NET implementation around the same time as they acquired Xamarin?  Do .NET core and Mono compete with one another?  Do they serve complementary roles?  Why would I choose one over the other?",2018-08-20 18:47:24,17802661
3796,"My understanding is that Mono is being billed as a client framework (Monogame, Xamarin, Unity, Blazor) while Core is more for the server&#x2F;systems target. To add to the confusion, &quot;.Net Standard&quot; is a library compilation target that should work everywhere (even the legacy Windows-only .Net Framework). Interestingly, the newly MIT-licensed Xenko game engine compiles to .Net Standard libraries which is how it supports so many platforms (via barebones launcher&#x2F;shim projects for whichever framework implementation is desired). Edited for clarity, thx.",2018-08-20 18:56:57,17802776
3797,"Just to confuse things even more, there is also .Net Standard. (<a href=""https:&#x2F;&#x2F;blogs.msdn.microsoft.com&#x2F;dotnet&#x2F;2016&#x2F;09&#x2F;26&#x2F;introducing-net-standard&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blogs.msdn.microsoft.com&#x2F;dotnet&#x2F;2016&#x2F;09&#x2F;26&#x2F;introduci...</a>).<p>.Net Framework (Windows only), .Net Core and Xamarin are all implementations of .Net Standard.<p>To add even more confusion, ASP.Net Core can run either on .Net Core or .Net Framework.",2018-08-20 19:57:44,17803357
3798,".NET Framework was first, the major install on Windows only. Mono came after, to try and replicate .NET on non-Windows and with an open-source approach. Eventually .NET Framework code was open-sourced (at least read only in the beginning), which also helped Mono get better.<p>.NET Core was created to take the aging .NET Framework and rebuild for a faster, easier deployment, quick release cycle, and cross-platform on Linux and Mac OS; without hurting the decades of backwards compatibility.<p>Mono meanwhile became the base for Xamarin for mobile apps and Unity as a gaming engine. Even though Microsoft acquired Xamarin, Mono already had much uptake in both of these scenarios that it didn&#x27;t make sense to attempt replacing it, so now we have Mono for mobile+games and .NET Core for the rest.<p>.NET Framework will still be around for a decade but is effectively retired and .NET Core 3.0 will fill in any remaining gaps for Windows apps that still need the full framework today.",2018-08-20 20:21:24,17803578
3799,"For the WebAssembly client side Blazor it uses the Mono WebAssembly (though .NET Core on server) as the Mono compile chain for WebAssembly as it is the most mature implementation (also produces smallest output from their work on watchOS).<p>If you are using Blazor as a full desktop app (e.g. Electron) then you can use .NET Core on the client and that can talk to the javascript as a local server; but for running in the browser directly as WebAssembly it uses the Mono (WebAssembly) runtime.<p>XboxOne can run UWP and for that you can use .NET Core (via UWP) in a &quot;shared&quot; mode; however it also has a dedicated &quot;game OS&quot; mode (which most boxed&#x2F;AAA games use) which takes priority over everything and has full hardware access, but that doesn&#x27;t allow Jitting so you can&#x27;t use .NET Core in that mode.<p>Mono and Unity have mature AoT compilers so can run in this mode (Xamarin also need AoT for iOS and Android which also don&#x27;t allow Jitting, and Unity needs it for a lot of the platforms they support. Mono and Unity use different approaches to AoT though)<p>Mono is now sharing C# source code with .NET Core (and it goes both ways); but as far as I&#x27;m aware .NET Core doesn&#x27;t seem to be rushing to fill any of the gaps that Mono serves well (iOS, Android, etc)<p>Though they are working on an AoT version of .NET Core for Windows&#x2F;Linux&#x2F;macOS <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;corert"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;corert</a> but that seems to be more focused on competing with golang and rust&#x27;s AoT single exe offerings.<p>For desktop UIs; we&#x27;ll have to see what&#x27;s next :)",2018-08-20 20:31:39,17803678
3800,"I know I&#x27;ve over simplified this for myself.  But the way that I look at it is like so.<p>.Net Standard is an &quot;Interface&quot; - No implementation behind the scenes just a list of apis.<p>.Net Framework, .Net Core, Xamarin are all &quot;classes&quot; or implementations of .Net Standard.<p>ASP.NET Core only relies on .NET standard which is implemented by both .Net Framework and .Net Core.  Which means it can run on both.<p>ASP.NET (Framework) does not rely on .Net Standard but directly links to the implementation of .Net Framework.  Which means those libraries can&#x27;t run anywhere and are instead limited to only .NET Framework.<p>I&#x27;m no Jon Skeet, or tech guru.  So please take this explanation with a grain of salt and if I&#x27;m wrong correct me as needed.  This is just how I&#x27;ve wrapped my head around it.",2018-08-20 21:58:26,17804381
3801,"I&#x27;ve been developing on my Mini 2012 for five years: native iOS and macOS, Unity3d, Xamarin.",2018-08-20 23:10:06,17804963
3802,"There are some extremely opinionated assumptions underlying your question. VS isn&#x27;t really bloated, given what it&#x27;s trying to do- and in recent years it&#x27;s been rock-solid stable. Visual Studio for Mac exists (old Xamarin Studio) and is coming along. And the engineering team has made its point on 64 bit clear that they don&#x27;t believe it will bring the performance people like to say it will.<p>But more importantly VS and VS Code are two different approaches- IDE vs TextEditor. The vast majority people would say C#, as a compiled language, is best in an IDE. Either way, I&#x27;m pretty confident in predicting that there is no way Visual Studio gets &quot;dropped.&quot;",2018-08-20 23:14:22,17804991
3803,"We had a lot of trouble doing things without typesafety and declarations, so we tried a few things. Elm was one of the better ones, and we migrated a few minor systems to it. A few others to typescript and we even made a few pocs with Xamarin and Wasm.<p>Then one of my older employees randomly watched JavaScript the better parts, and recommended it to me and weve been doing classless JavaScript ever since.<p>Elm is great, certainly one of the better alternatives, but now it really feels like a step backwards.",2018-08-21 13:34:06,17809363
3804,"Thanks everyone for the feedback, it&#x27;s a very lonely journey at the moment (although I&#x27;m lucky to have very supportive family&#x2F;friends and HN :).<p>Some more context ...<p>(1) The projects are split between three Enterprise Clients, two of which I&#x27;ve been working with for about 10 years. I&#x27;ve developed Mobile Apps (originally Windows Mobile, now Android), done some integration with their ERP&#x27;s, and built some Web Apps (Angular). I used to work with smaller clients, but the 80&#x2F;20 applies i.e. they take up 80% of your time for 20% of your revenue. I turn down this work now.<p>(2) Quick story - when I first approached one of these Enterprise Clients I quoted a price of just over 10K for a small project. Another vendor laughed at me and quoted 50K. I won the business and have since made 500K from that one project. I always look long term.<p>(3) The work is remote. I work from home, with very little meetings. I tend to have total control over the project architecture, development, etc. They trust that I will deliver the best solution and let me get on with it.<p>(4) Strategically, I&#x27;m working to implementing a common stack across all projects that is robust, and allows me to deliver more efficiently. To that end, I&#x27;m moving to Xamarin (I have a core expertise in C#) for Mobile Apps, .NET Core for API&#x27;s (I was using Node - great, but a pain to debug e.g. &quot;console.log(&#x27;HERE&#x27;)&quot;!!), and Angular 1.6 for Web App (although on this one, I&#x27;m not 100%. I find 1.6 mature, whereas Angular 2&#x2F;4&#x2F;6&#x2F;or whatever it is now is a bit of a mess), and a SQL Server or Postgres DB.<p>Here&#x27;s a curve ball - I&#x27;ve also been accepted onto a great startup program for a side-project I had been working on. It&#x27;s also now got customers, revenue, and a great chance of success. The same week I got accepted onto the program I also heard from one of my existing clients (a multinational) enquiring about working with their sister companies in other counties to deliver the solution I recently did for them (HELP!!)<p>BTW - Some of you have expressed an interest in partnering up. I&#x27;m definitely interested in reaching out and have set up a temporary email address I will use to contact you. I&#x27;m not using my real email because I&#x27;m being bombarded by agencies (which I&#x27;ve no interest in using). I&#x27;ll open up more if it looks like me could work together.",2018-08-25 09:00:40,17840167
3805,"My project isn&#x27;t getting much traction at the moment.  I chose to develop this application in Android native first, as currently I am a single developer working on this project.  Some people have suggested Xamarin forms to be able to produce both Android and IOS.  This may make a difference in having more backers interested.<p>I have been browsing Xamarin forms information, and I understand that if you have complicated user interfaces Xamarin forms may not be a good choice.  Some people in person say that in 2018 things are different now.  I am investigating.<p>Does anyone have any thoughts?<p>I do have a significant portion developed already in Android native, and will soon be putting a demo video on my project page.",2018-08-28 14:16:31,17858915
3806,"A few years ago I wanted to learn AI, bad. So bad that I actually learned the math starting from not even knowing pre-algebra.<p>I got side-tracked working on this site https:&#x2F;&#x2F;regressionbuddy.com and I got side-tracked from that with this side-project that I used to learn Xamarin (https:&#x2F;&#x2F;steganographyjr.com&#x2F; &lt;-- that UI is not done, I&#x27;m going to get help from a graphic designer ...someday) but it quickly devolved into making this animation (https:&#x2F;&#x2F;steganographyjr.com&#x2F;three.1.html).<p>Well now I&#x27;ve become very interested in Security and anonymity and it&#x27;s all I really want to do right now.<p>Now I&#x27;m trying to remember how I got off track with AI which is still my ultimate goal. That math website I linked to is going to take years to finish (unless I can find some help).  I don&#x27;t expect the site to make any money. I don&#x27;t expect the steganography app to make any money. They&#x27;re just good things that I have the ability to create.<p>I&#x27;m starting to realize that I&#x27;m way behind on learning AI but security has become a legitimate interest of mine but I&#x27;ve got both these side-projects which are huge investments in time. ...I might drop the math website if no one ever uses it (like if I&#x27;m on year two and there is still no one using it at all).<p>Any advice on how I can have my cake an eat it too?",2018-09-06 12:34:15,17925735
3807,"Is this still relevant..? Xamarin has been really well funded and growing like crazy over the last 5 years. I&#x27;m always on the lookout for some way of doing iOS development that completely avoids Apple&#x27;s atrocious UIKit APIs, and it seemed pretty legit from what I&#x27;ve seen. Is there any other alternative then?",2018-09-09 00:01:50,17943512
3808,what&#x27;s the point of posting this link ?? it&#x27;s old and even the &quot;new look at the question&quot; linked at the top is 3 years old...<p>are there any news regarding xamarin that makes this relevant ?,2018-09-09 00:02:03,17943515
3809,"Not sure if I get your point.<p>The mainframe ones, are just like any other OS, code gets generated at installation time, then they are OS processes just like any other.<p>Java and MSIL depend on how they get used.<p>Both have bytecode verifiers, and multiple ways to deploy.<p>Either as single runtime, where strong typing plays the role of sandboxing, or as multiple processes&#x2F;containers.<p>Just to use .NET as example, not going to make an exhaustive list.<p>.NET Micro Framework deployed on Netduino, the runtime is the OS, only strong typing takes place.<p>.NET Framework on Windows, and .NET Core on Windows&#x2F;Mac&#x2F;Linux, each CLR instance gets their own OS process, which might be additionally wrapped into an OS container.<p>.NET Core on UWP, applications run as separate sandboxed process using the UWP sandbox model.<p>Xamarin on iOS runs with the iOS sandbox model, after AOT compiling for deployment.<p>Xamarin on Android, runs with the Android sandbox model where binary code gets dynamically loaded into ART instance, sandboxed via SELinux and Linux container mechanisms.<p>And regarding security, Web Assembly still fails short of preventing memory corruption inside of the loaded module.<p>I was hoping pointers would be tagged, but that doesn&#x27;t seem to be part of the design goals.",2018-09-10 07:18:49,17949997
3810,"Qt, wxWidgets, JavaFX, SWT, Xamarin, Unity, ....",2018-09-11 13:14:43,17959422
3811,"It&#x27;s interesting to see Visual Studio, Xamarin and Office in the same basket with Azure products. It seems everything is &quot;cloud&quot; now.",2018-09-12 15:09:03,17969526
3812,"In essence, JetBrains has caught up to where Xamarin was prior to the announcement of Xamarin.Forms: the ability from one solution to have separate iOS and Android UI applications with a business logic library shared between the two, all written in C# or F# (the two languages supported by the Mono compiler).  The main difference is that one of the vendors actually supports the language in question (Kotlin) as a first-class citizen.<p>And going the other way, there&#x27;s been noise for a couple years that Android apps could be written in Swift, achieving the same effect in reverse.",2018-09-14 16:23:18,17988522
3813,&gt; The main difference is that one of the vendors actually supports the language in question (Kotlin) as a first-class citizen.<p>How is this different for Xamarin? C# has first class support on Windows.,2018-09-14 16:33:01,17988610
3814,"Seems like a gimmick to me.<p>In a nutshell this has the same limitation has Xamarin.<p>The Business Logic is shared , but the UI Logic and the Technical Logic aren&#x27;t shared or not completely.<p>The Xamarin community has been struggling with this issue for half a decade and they ended up re-writting their own rendering engine[0] (similar to Flutter) in C# on top of Xamarin to obtain truly MVVM Cross-Platform Framework.<p>My point here is very simple , getting Kotlin to run on iOS is great, but it&#x27;s somewhat a waste of time because of how much time and effort it would talk to create a Runtime or Rendering Engine to normalize UI&#x2F;UX on differents platforms.<p>[0]<a href=""https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;AvaloniaUI&#x2F;Avalonia</a>",2018-09-14 17:22:26,17989059
3815,Xamarin&#x27;s &quot;first class&quot; support for Windows is Windows Store only though?,2018-09-14 17:28:34,17989110
3816,"no.<p>While still in Preview, Xamarin.Forms actually supports Linux with Gtk#, Windows with WPF and UWP and Mac with Cocoa (actually Cocoa with C# does work really well).",2018-09-14 20:44:53,17990782
3817,"It&#x27;s similar, but not the same. The details matter. They&#x27;re different because you don&#x27;t need to deal with a complex abstraction layer to share logic. As in, you can expose an iOS Framework and call it from swift&#x2F;Objc just like any other library. That lets you share tested logic and architecture, and do so optionally. It&#x27;s not all-or-nothing. Xamarin is a different approach. Flutter is a very different approach.<p>Part of the issue when evaluating frameworks is expectations and not understand the plusses&#x2F;minuses. If you are looking for a framework that will do 1 codebase for all logic and UI, without sacrificing any UX or capabilities, you&#x27;ll probably be let down. Kotlin Multiplatform will be great for sharing logic and architecture. UI is somewhat of a different case. Why Xamarin wasn&#x27;t great here is you need to do EVERYTHING in Xamarin, and write custom bridge code when not. It&#x27;s an entirely different world, which bad IDE support for most of it&#x27;s history. Jetbrains makes excellent tools, and if you understand that the UI will be &quot;native&quot;, then there&#x27;s a lot of efficiencies you can leverage here. If you get frustrated because you can&#x27;t make one thing do all things, then yeah, it&#x27;ll let you down.<p>Anyway, yeah, they&#x27;re different.",2018-09-17 17:35:37,18008024
3818,"Yes, however.NET has standard AOT support as part of its toolchain.<p>NGEN, MDIL for WP 8.x, .NET Native for UWP, Xamarin AOT, Unity IL2CPP, and the internal compilers used at Singularity and Midori.",2018-09-18 17:00:04,18016974
3819,"There are options that let you write the bulk of your code in one language then code platform specific user-interfaces against that library. This is basically the Xamarin philosophy for iOS&#x2F;Android development, and Xamarin apps generally offer a much better user experience than these web-app wrappers cluttering the App Store.",2018-09-18 22:38:23,18019892
3820,"<i>&gt; Other languages are not cross-platform or have immature&#x2F;buggy cross platform support. How&#x27;s ObjC on Windows? C# on Mac? They exist, but nobody uses them.</i><p>What&#x27;s wrong with C# on Mac? It&#x27;s basically bindings to the native API via Xamarin.Mac.<p>You can build a cross-platform app with Xamarin on iOS &#x2F; Android &#x2F; Mac, UWP on Windows, and Gtk# on Linux. Using something like MvvmCross will allow to share most of the business logic between platforms.",2018-09-19 04:23:11,18021652
3821,"Are those SO popularity comparison numbers real? If they are, I feel they were somehow artificially inflated. I have nothing against Flutter, but I don&#x27;t think at this point it&#x27;s as widely used as Xamarin and React Native. For Angular numbers should be even higher.",2018-09-20 03:10:42,18029483
3822,"I don&#x27;t know where they got those numbers.  This graph seems more realistic to me [edit: maybe not - see subcomments]:<p><a href=""http:&#x2F;&#x2F;sotagtrends.com&#x2F;?tags=[ionic-framework,react-native,flutter,xamarin]&amp;relative=true"" rel=""nofollow"">http:&#x2F;&#x2F;sotagtrends.com&#x2F;?tags=[ionic-framework,react-native,f...</a><p>That is, Flutter is shooting up and overtaking Xamarin but still only half the popularity of React Native.  This also roughly correlates with mentions on Google Trends:<p><a href=""https:&#x2F;&#x2F;g.co&#x2F;trends&#x2F;y9Z8q"" rel=""nofollow"">https:&#x2F;&#x2F;g.co&#x2F;trends&#x2F;y9Z8q</a><p>On job websites React Native is way ahead - which you would expect given React Native&#x27;s headstart.  For example,  www.jobstreet.co.id currently has 43 jobs for &quot;React Native&quot; but only 5 for &quot;Flutter&quot;.",2018-09-20 03:34:44,18029570
3823,"I haven&#x27;t tried Flutter yet, but I want to provide my experience of what non-native mobile development usually looks like comparing to native. Through my mobile development career I have tried C&#x2F;C++ cross-platform development on mobile, JavaScript frameworks (e.g. PhoneGap), Xamarin and React Native.<p>Cross-platform frameworks always seem attractive because you can write code once and run it on both Android and iOS. When you start development it might also feel productive at first because you finish 80% of the project much faster than with using native platform frameworks. Problems begin when you need to interface with native code or if there are some small annoying issues. You get stuck for hours and days trying to solve something that would take much less if you dealt with native platform SDK. In the end you are not completely satisfied with your hacky solution and it took as much time as native app would take.<p>My opinion is that if you have a very simple app, it might be OK to write it in, for example, React Native of Flutter. But if you have a more complicated app and it&#x27;s  an important part of your business, you should go native.",2018-09-20 04:07:48,18029709
3824,"There really isn&#x27;t an alternative for what Flutter does, which is high quality cross platform apps that don&#x27;t require separate UI code. Xamarin has Forms, but the UX is not nearly at the level of what you get from Flutter, and it would require some serious rework of how they render their widgets for that to change. Other solutions like Qt are just lagging behind, as much as I wish that weren&#x27;t the case. Ultimately I think Google has the ability to make Flutter the primary platform for developing mobile apps in the future, if they emphasize it as the preferred way of making new Android apps and especially if they make it relatively easy to integrate Flutter into existing native apps. If it were possible to easily drop one screen into an iOS and Android app with Flutter, this would start getting immediate adoption because of how much time and money it can save. Ultimately that matters a lot more than &quot;Google baggage&quot; that only a small fraction of developers really care about.",2018-09-20 04:24:27,18029780
3825,"I rather use Qt and Xamarin for that purpose.<p>More mature, may target desktop OSes and use languages that are actually relevant in the market during the last 20 years.",2018-09-20 05:12:57,18029933
3826,"Same here.<p>Java and C++ for my hobby coding on the platform.<p>Both skills much more useful on contexts outside Android development.<p>If I would need to write cross platform mobile apps production code, I would rather go C++ for business logic with native views, Qt, Xamarin or if performance requirements aren&#x27;t tight, PWAs.<p>Dart makes it unattractive to learn Flutter, given its past history.<p>And Kotlin it remains to be seen how well it will faire in the actual Java world, outside Android, where we can make use of the latest versions slowly picking features from the alternative languages.",2018-09-20 05:23:04,18029976
3827,"I still don&#x27;t see the selling point over Qt, Xamarin or using C++ with native views.<p>React Native is not something that I would even consider, for that I would rather do Web apps&#x2F;PWAs.",2018-09-20 06:15:10,18030162
3828,"Android APIs get partially rebooted at every Google IO, and the NDK is what it is, no need to add extra immature tooling into the mix, which isn&#x27;t even officially endorsed by the Android team.<p>In that regard one is safer (CV) using Qt or Xamarin, given JavaScript, C++, C# and F#.",2018-09-20 06:23:20,18030190
3829,"Until Flutter is actually endorsed by the Android team I wouldn&#x27;t even bother.<p>PWAs are being pushed by the Chrome team and Microsoft, which I have more faith than on Dart&#x2F;Flutter, specially as skills to sell.<p>Likewise for C++ with native views, Qt or Xamarin.<p>What I care about is using a language where Flutter is the last hope to make it relevant in the market.<p>I don&#x27;t need another one to pile on my Turbo Pascal, Oberon, Delphi list.",2018-09-20 06:33:45,18030222
3830,"Thanks for response, I have high hopes from Flutter, however having spend years in cross-platform mobile development, I just want to avoid the most common pitfalls. I hope this comment doesn&#x27;t come out as snarky, I just wanted to give an honest opinion.<p>Not having first-class Maps is a deal breaker for many apps, and having only Google Maps support is not what most developers want. I would like to port my current app, but without proper maps support Flutter feels like a cousin of Ionic.<p>What&#x27;s the FFI story of Flutter? Could you please point me to the direction of using ARkit view using ObjC&#x2F;Java FFI? From what I&#x27;ve seen we&#x27;ve to wire an OpenGL View to achieve AR capabilities, but I might be wrong.<p>While the crypto package is a good start, I was more interested in having access to the Trusted Execution Environment (TEE) on iOS&#x2F;Android. Do you have any work being done in that area? Lots of apps (e.g. Fintech) have security audits and these things could be a deal breaker.<p>A cursory look the Audio plugins show that it&#x27;s a wrapper around AVFoundation etc. and they are capable of playing audio&#x2F;video, I would love to see an official plugin with 1-to-1 feature parity with iOS&#x2F;Android AV API.<p>Flutter is a great project, but it seems to be plagued by the same issues that React Native, and Xamarin has.",2018-09-20 07:43:09,18030472
3831,"Sadly it became a user hostile company at the same it became developer friendly. So while the tools (.net Core, VS Code, Xamarin) are a pleasure to use, I hardly boot Windows 10 anymore except for VS. The UI inconstancies, the productivity-nerfed start menu, the pervasive ads, etc. all contribute to gave that negative sentiment.<p>Also while MS is good to integrate third party open source projects, it also fails at the same time to address some core concerns of developpers from its own platform. For years people have wanted a portable UI framework for .net but the idea is always dismissed by the higher management. So, I think Microsoft is actually a developer-second, hype-first company.",2018-09-20 13:03:24,18032051
3832,"Flutter&#x27;s edge over these technologies is faster development cycles (very fast build times, sub-second reloading without losing state, very rapid ability to update code&#x2F;GUI after deployment to a testing device, and very fast render times).<p>Xamarin and Qt are fine products, and I know Xamarin has been working on some improvements over deploy times, but it still can&#x27;t touch what Flutter does there.  And if you know C++ and C# already, Dart is a breeze.",2018-09-20 15:44:06,18033286
3833,"Seriously, Microsoft? From your own websites:<p>Xamarin: <i>Deliver native Android, iOS, and Windows apps with a single shared .NET code base.</i><p>ReactXP: <i>Share most of your code between the web, iOS, Android, and Windows.</i>",2018-09-20 16:31:52,18033686
3834,"Hey Microsoft, when are you going to integrate Xamarin and React Native???  You are obviously fans of react, and it would be nice to have one native language (C#) for writing integration code to react native apps.",2018-09-20 16:34:52,18033711
3835,Could&#x27;ve been done with Xamarin.,2018-09-20 16:43:16,18033777
3836,"From <a href=""https:&#x2F;&#x2F;microsoft.github.io&#x2F;reactxp&#x2F;docs&#x2F;faq"" rel=""nofollow"">https:&#x2F;&#x2F;microsoft.github.io&#x2F;reactxp&#x2F;docs&#x2F;faq</a><p>How does ReactXP differ from Xamarin?<p>Xamarin is a cross-platform solution that allows developers to create apps on iOS, Android and Windows Phone using a single code base. Xamarin apps are written in C# and XAML, allowing .NET developers to leverage their skills and experience. Xamarin apps can be more efficient than React Native apps, which are limited by JavaScript performance and the overhead of the React Native bridge. Xamarin was acquired by Microsoft in early 2016 and is supported by a dedicated team of engineers. It offers a comprehensive development solution including tools for coding, debugging, performance analysis, builds, automated testing, and distribution.<p>ReactXP, unlike Xamarin, provides a way to create mobile apps and web apps using the same source base. ReactXP (like React and React Native) allow experienced web developers to make use of their existing skills and knowledge. ReactXP was developed by the Skype team at Microsoft in support of their development needs. ReactXP builds upon the work of Facebook and the broader React open source community.<p>Both Xamarin and ReactXP are great solutions, but they solve somewhat different problems.",2018-09-20 16:47:34,18033805
3837,"Why, though? If you don&#x27;t care about the web, then Xamarin Forms is strictly superior to React Native in terms of resulting UI. And if you do, then Xamarin is not an option anyway.",2018-09-20 22:46:20,18036014
3838,"Not really my cup of tea, but always interesting to hear what cross-platform solutions are being used outside of React Native and Flutter. Xamarin is probably number two after RN, and gets a fraction of the buzz.",2018-09-21 01:35:23,18036620
3839,"I used xamarin a few years ago for a moderately sized iOS app. It got me about 95% there. That last few percent was brutal, the app kept crashing after coming back from the contact chooser. Couldn&#x27;t find a way around it, even with latest xamarin version, hot fixes. Was very unfortunate. I&#x27;m pretty skeptical of frameworks that abstract away a whole system. Hopefully, xamarin is a lot more stable and powerful these days.",2018-09-21 02:29:47,18036797
3840,"It has improved a lot in the last year, I started working with it just as Microsoft acquired Xamarin, it was buggy as hell, now it is really solid.",2018-09-21 02:48:30,18036853
3841,"I actually half built a solution where the Flutter engine was running on Xamarin (hence coded in C#), and got a basic hello world app running. It does have the downfall of slower boot times and larger file sizes though.<p>But I abandoned it because its too big of a project for a one person side project.",2018-09-21 03:08:06,18036922
3842,"People have been saying that since Xamarin came out though, myself included a few years back.<p>I often get the feeling that what has happened in &quot;the last year&quot; is that the developer saying it has gotten to know Xamarin well enough to avoid the warts.",2018-09-21 03:21:56,18036968
3843,Xamarin is very tempting but all projects I have seen that tried to use it went native after a while because of insurmountable problem. I am not sure if I&#x27;d bet my project on it.,2018-09-21 04:40:44,18037194
3844,"Just today I was really contemplating how miserable life with Xamarin is.<p>In the morning, visual studio crashed first thing with a non-fatal error.<p>Then I was making a bug fix in a Xamarin.Forms app - changing a string in the UI. I deploy the app, but the change isnt there. So I clean and rebuild. Then I redeploy. Change isnt there. I uninstall the app from the simulator. I delete the output directory. I redeploy - still the change isnt there. Xamarin was deploying cached packages and I had no idea. Imagine verifying a bug fix or change, which causes a crash, and not knowing because the updated package never gets deployed.<p>Every once in a while I accidentally double-click a xaml file - big mistake. I get to watch visual studio turn white and not respond for about 35 seconds - time to check email and try not to break something.<p>In the afternoon, I wanted to connect to my mac while doing work in the background - connecting to the Mac takes ages. Unfortunately thats not an option - connecting to a server is a modal operation. I have no idea why and it frustrates the heck out of me. Even worse, they have flow problems. If you fail to connect to a Mac, you have to close and re-open the dialog before you can add a new one. You have to do this every single time Visual Studio crashes. Visual Studio crashes at least 5 times a day with even moderate use. Xamarin is a big culprit for the instability, but Visual Studio has its share of fuckups, including mainstream releases that will just stop you from running unit tests until they ship a patch. Or just break your build altogether.<p>Xamarin Forms is uniquely frustrating because it, for the last ~12 months of my active use, always had a bug in the latest version that affects my product. Every time I upgrade, one bug gets fixed, but another one is added. Their QA is nonexistent and it really shows. And its not little things- think controls just dont render on some platforms, or toolbars are busted on iOS. The newest version has some long-awaited features, but Im afraid to upgrade. Visual Studio is also really bad nowadays - I really, really, really avoid upgrading; it is usually painful and more than once Ive had to totally uninstall and reinstall.<p>The build system is a nightmare. Theres a lot of complexity in Forms and a lot of room for things to go wrong. People come to me with build errors all the time, and the first thing I say is, did you hit the green button again? Because failing once doesnt mean theres a problem with your app. Theres all sorts of nonsense that happens with caching, msbuild instances interfere with each other - Ive had to painfully run builds in serial because yes, running msbuild on two projects simultaneously will break both.<p>Ive got a lot more complaints but Im tired and want to keep it brief.<p>Xamarin.Forms is (and I recognize that much of the pain I described is really problems with other supporting tools) painful enough that I wonder if its worth the benefit of writing C#, and this is coming from a militant C# fanboy.<p>I was really hoping the Microsoft acquisition would lead to more robust QA efforts, but clearly not.",2018-09-21 05:11:49,18037292
3845,That&#x27;s in line with what I have heard. Xamarin is a source of never ending obscure problems. All projects I know have switched to native from Xamarin by now b,2018-09-21 05:20:08,18037316
3846,"That&#x27;s fair, but I think that XF has a good story around integrations with other frameworks to fill its gaps: SkiaSharp has the SkiaSharp.Views.Forms namespace, for instance, and there&#x27;s solid documentation on integrating the two, right there on Microsoft&#x27;s Xamarin.Forms docs. Actually, speaking of docs, Charles Petzold&#x27;s book on XF is an awesome resource -- I&#x27;ve not seen commensurate investments in documentation made by XF&#x27;s competitors (admittedly it&#x27;s not something I track that closely). Similarly XF&#x27;s ability to add a native control directly to a StackLayout via extension methods makes it fairly straightforward to just drop in a native component if that&#x27;s what you want to do.<p>I think it&#x27;s a reasonable strategy to say &quot;hey, we&#x27;re not going to be able to solve all the problems, and it&#x27;s probably not the right way to spend our time even if we could. What we will do is make integration with other solutions straightforward so we&#x27;re not the bottleneck&quot;. Making a strategic choice not to be the bottleneck seems like a good call regardless. That said, the things I&#x27;ve found to be a hassle are things like getting OpenGL working on UWP from C# (tractable, but that&#x27;s really not how I want to be spending my time).<p>But yeah, wow what a difference it&#x27;s made having Microsoft throw their resources at it. My current codebase lets me build for iOS, Mac &amp; UWP at present (I&#x27;ll get to Android at some point), with really not very much effort. Being able to debug on the Mac version rather than waiting for iOS deploys is just about enough to repay the time investment on its own. I&#x27;m anxiously awaiting them getting their web platform support up to snuff -- I&#x27;d dearly love to never have to JavaScript again. :)",2018-09-21 05:23:39,18037331
3847,I wonder if blazor+pwa isn&#x27;t going to be what makes xamarin unecessary. It&#x27;s still a few years ahead though.,2018-09-21 06:28:15,18037567
3848,"Buzz depends on which circles one moves on, on the enterprise shops I work with, RN is not even relevant.<p>If JavaScript is involved it is either a mobile web site or Ionic.<p>Otherwise Xamarin is the usual option when not going native or betting on JS.",2018-09-21 06:57:01,18037688
3849,Xamarin Forms and Mature are two things I&#x27;ve never seen in the same sentence before. Microsoft must have really worked its magic on Xamarin then. The last time I tried XF it was so extremely buggy I got bald from pulling my hairs out. Most errors are extremely vague with no way to debug them and they occur at random times for seemingly no reason.,2018-09-21 07:43:44,18037899
3850,"I have many of the issues you have when working VS under Windows; VS under Mac (for iOS dev) a lot less. So because of path of least resistance, I first finish iOS apps on Mac and then compile &#x2F; test on Android (which is far more of a pain, which I find for React Native as well tbh and for their native ObjC&#x2F;iOS vs Java&#x2F;Android as well; my opinion, not saying one is better than the others; probably just what I&#x27;m used to). I use Forms as a framework, not &#x27;out of the box&#x27;; I have many of my own controls and tooling; I have a live XAML editing environment and a crippled but functional C# scripting implementation to not have to deal with IDE&#x27;s so much. When Miguel Icaza did a blogpost about the interpreter environment[0] finally getting some love end last year, I was hopeful, but unfortunately it seems development is going so slow that I implemented my own which is buggy for others (let&#x27;s say unworkable) but allows me to live program on iOS.<p>I think it will make quite a difference; I know it does for me as I use it for everything, but within the confines of what I could implement in my free time.<p>Wish Krueger [1] would open source his interpreter as his has many bugs but far far less than mine and it could be a good effort fixing bugs and getting a better project on the iPad at the same time.<p>A propos ; Continuous is great for playing around with Forms and Xamarin iOS in a fast and responsive environment on an iPad Pro with keyboard. For just getting the screens perfect fast it is pretty good. Not sure why he doesn&#x27;t have XAML support (or he has but I could not find it so I assumed not) as that is pretty trivial to implement.<p>[0] <a href=""https:&#x2F;&#x2F;www.mono-project.com&#x2F;news&#x2F;2017&#x2F;11&#x2F;13&#x2F;mono-interpreter&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.mono-project.com&#x2F;news&#x2F;2017&#x2F;11&#x2F;13&#x2F;mono-interprete...</a><p>[1] <a href=""http:&#x2F;&#x2F;continuous.codes"" rel=""nofollow"">http:&#x2F;&#x2F;continuous.codes</a>",2018-09-21 07:53:33,18037948
3851,"It&#x27;s interesting- in the Silicon Valley, hip consumer-centric startup scene, native is king. React Native is touted in a pinch; Flutter is the new flavor of favored cross-platform solution that is getting the hype that RN had. Yet I wonder how many firms in the larger world aren&#x27;t just writing Xamarin apps, but apps using derided old hybrid solutions like Cordova&#x2F;PhoneGap or Appcelerator.",2018-09-21 08:28:58,18038082
3852,This could be solved by porting Xamarin to the web.,2018-09-21 09:11:24,18038284
3853,"Its great they seem to be listening to you, they never really listened to me. F100 was brought about because they weren&#x27;t listening, and the community had to do things they wanted because Xamarin weren&#x27;t ever getting around to it.<p>I put a lot of effort into XF, and at the time, it was the best x-plat development environment (for my usage) around. But Flutter has really highlighted its shortcomings and I don&#x27;t hold much faith that Shell is going to bring it to the front again.",2018-09-21 09:35:37,18038385
3854,"Okay hold on, Xamarin forms doesn&#x27;t just work. That is a bold faced lie. Xamarin, like many other languages and frameworks has its share of zealots. Coming from a basically agnostic position on mobile development technologies I have found Xamarin to be pretty difficult to work with.<p>Doing UI work in Xamarin is incredibly verbose while at the same time being underpowered. It certainly does not just work. To give you a better idea of the real state of Xamarin we are JUST NOW getting the ability to underline text <a href=""https:&#x2F;&#x2F;xamarinhelp.com&#x2F;hyperlink-in-xamarin-forms-label&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;xamarinhelp.com&#x2F;hyperlink-in-xamarin-forms-label&#x2F;</a>.<p>But Xamarin is chock full of other gotchas. A few off the top of my head:<p>- there is no real file picker (even third party) let alone a great file picker that can pick files locally and remotely (like from google drive).<p>- there are a surprisingly limited number of controls available and native or not they often look terrible.<p>-  build times average one to two minutes and the debugger doesn&#x27;t work about 50% of the time.<p>- a lot of APIs that you think are supported are not. for example, they say System.Drawing is supported but it&#x27;s not. So what you end up doing is writing custom implementations for each platform.<p>I could go on but suffice it to say developing in Xamarin is not something that just works. It ONLY works because developers spend a great deal of time making sure that it works.<p>As an aside, for my next Xamarin project I am considering doing the UI in a WebView while using C# as the back end. It would be more like a web application than a Xamarin application which would hopefully mean a nicer UI while still being able to leverage C#.",2018-09-21 11:43:56,18038946
3855,"This. I don&#x27;t have experience with Forms, but Rider is a massive improvement over VS on both platforms for &quot;native&quot; Xamarin development. I actually quite liked VS for Windows when I started working with it a couple of years ago, but as of late it seems to have gotten only slower and buggier. Since we do only Android &#x2F; iOS at my job I don&#x27;t even bother with Windows anymore. I still &quot;need&quot; VS for Mac to (a) build iOS layouts in interface designer (which is hell, I regularly consider going code only for those) and (b) to deploy Android apps when debugging. Rider will do that, but it doesn&#x27;t do the fast assembly deployment that VS does so it&#x27;s very slow even if there are no changes. And thus I write code in Rider, and run through VS. VS for Mac doesn&#x27;t include as much bloat as VS for Windows, which makes it &quot;better&quot; because it&#x27;s relatively light and doesn&#x27;t lock up too long when switching to it. As an editor it&#x27;s just annoying though. Debugging in it is a necessary pain right now.<p>If this sounds cumbersome... it is. I find it workable right now but I&#x27;m regularly annoyed. Build + deploys fail when I fire them off too soon after changing an .axml file. Builds fail as a rule, not an exception, when there are Xamarin or Android SDK updates. iOS is actually mostly fine, except for the hell that is the designer. All in all none of these things are show stoppers, but I don&#x27;t think I could wholeheartedly recommend Xamarin for new apps.",2018-09-21 11:57:33,18039017
3856,Well Microsoft is not using Xamarin for any of their cross platform apps. Why should we?,2018-09-21 13:09:45,18039392
3857,"<i>&gt; I am considering doing the UI in a WebView while using C# as the back end</i><p>Why not Xamarin + MvvmCross + native UIs? I just finished an iOS + Android app like that and while learning Android UIs on the go was a bit painful (build times are longer when you modify resources), I had no issues except for Visual Studio for Mac quirks.",2018-09-21 14:42:24,18040029
3858,Not Xamarin but Xamarin.Forms. Xamarin just works because it&#x27;s basically C# bindings to native.,2018-09-21 14:48:39,18040076
3859,"True. I should have been more specific about Forms. But in my company the mobile guys have even given up on Xamarin because it caused more headaches than solved things. First they tried Forms which didn&#x27;t go well, then native UI with Xamarin backed, didn&#x27;t go well either, and now they are fully native.",2018-09-21 15:18:40,18040325
3860,"Do you have a link to show how to do that?  Sounds useful, but the only reference I&#x27;ve found to that is to do it from Visual Studio and using Xamarin C# and not &#x27;native&#x27; Java.",2018-09-25 02:28:10,18063102
3861,"16Gb, Standard HDD, Mid range i5 processor.  It&#x27;s sluggish as hell. Takes an age to start up, the gui is slow, and compiling even a basic app taks forever, with much disk thrashing.<p>I&#x27;ve given up, and recently uninstalled it. I&#x27;m going to try and develop android apps using Xamarin in Visual Studio instead (as I have that anyway for Windows dev).",2018-09-25 07:19:01,18064244
3862,"Alright, so I just made a run of it and verified it all works.
As you say, the tutorial from Microsoft is for VS[0], but it actually talks about the android emulator, which is the same thing that Android Studio uses, just make sure you update it to latest, atm it&#x27;s 27.3.10
Admittedly, the startup time seems a bit longer than with HAXM, but otherwise the emulation is pretty responsive.
[0]<a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;android&#x2F;get-started&#x2F;installation&#x2F;android-emulator&#x2F;hardware-acceleration?pivots=windows"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;android&#x2F;get-started...</a>",2018-09-26 01:47:08,18072048
3863,"I often read complaints that Xamarin is buggy (builds randomly stop working, often need to restart Visual Studio, etc).<p>How&#x27;s your personal experience with Xamarin? How&#x27;s the tooling compared to Android Studio?",2018-09-27 02:01:12,18081657
3864,"Mono has been used by Xamarin and Unity for years, before any Microsoft acquisition. It&#x27;s been production ready for a very long time. It&#x27;s also a freely licensed version, even if you don&#x27;t like it for whatever reason.",2018-09-27 22:47:04,18089545
3865,"As I understand it UWP is still the official and canonical API. However knowing how many other APIs had such a status it&#x27;s not saying much.<p>How does the Xamarin.Forms look between other APIs? It&#x27;s getting Linux and macOS support. I started to wonder if it will be the next official and canonical API. Or maybe something in the direction of their Electron, as they use it already with their Typescript.<p>But I don&#x27;t really know anything about Windows development beyond Win32, so maybe it doesn&#x27;t make sense at all.",2018-09-30 14:53:32,18106401
3866,"Didn&#x27;t realize, I really like WPF too, hope that executives aren&#x27;t trying to push too many efforts towards whatever they think the trends might be, I tried Xamarin for mobile but ended up switching to Android Studio and just targeting there.<p>&quot;Preparrrre for Q#........&quot; (jk on that....for now)",2018-09-30 17:11:24,18107070
3867,"The version for OS X is just a rebranded Xamarin Studio, nothing like the real visual studio at all. Im surprised the former doesnt run under Linux already, there is no good reason it couldnt.<p>For the real professional apps, the app is more important than the OS, so you choose whatever OS will run your app. Need to use Adobe CS, well, OS X or Windows is it, it could have been Linux and graphic artists would just swallow and use it, since they need to use CS. Likewise, a tool targeted at Windows app development would be fairly weird running on non-Windows.",2018-10-01 04:59:19,18110142
3868,"Lucid Align | SF or Remote | C# Xamarin | Full-Time or Part-Time | <a href=""https:&#x2F;&#x2F;lucidalign.com"" rel=""nofollow"">https:&#x2F;&#x2F;lucidalign.com</a><p>Lucid is a scientific desktop tool for genomic sequencing data. It&#x27;s part of a larger toolset used for sequence alignment, variant calling, and annotation. Pretty much inspired by Sublime Text, for sequence alignment maps (sam files).<p>Looking for someone to fix some bugs and refactor where necessary.
If you have fun working on this, the larger toolset is in C++ and uses Caffe2, so you can try your hand at that once this work is completed.<p>If you are nearby and want to meet up, or faraway and want to chat just hop into the discord channel.<p><a href=""https:&#x2F;&#x2F;discord.gg&#x2F;KcggEhk"" rel=""nofollow"">https:&#x2F;&#x2F;discord.gg&#x2F;KcggEhk</a><p>Make Scientific Software Great Again!",2018-10-01 18:23:07,18115371
3869,"SEEKING WORK &#x2F; Remote with limited travel &#x2F; Based in Houston, Texas<p>Location : Houston, Tx<p>What I Do: C# .NET Web&#x2F;Mobile&#x2F;Desktop&#x2F;Cloud Development<p>Technologies : Pretty much the whole Microsoft stack(ASP.NET Core&#x2F;Xamarin&#x2F;WPF&#x2F;Azure&#x2F;Cloud&#x2F;Office Plugins, even the occasional bit of Excel vba)<p>Specialties: Anything Microsoft, real time, office plugins.<p>Experience : Most recent projects<p>* Building out an successful MVP for a legal technology start up(ASP.NET Core, Azure)<p>* Constructing a client facing real-time physics engines for fortune 100 company.(PI, influx db)<p>* Office and Office 365 plugins.<p>I know a lot of the developers, especially in the start up scene look at .NET technology and think yuck.  Well I feel the exact opposite, I&#x27;ve always been really excited about the Microsoft stack.  If your company is looking to do some .NET work(legacy systems, integrating with enterprise&#x2F;office&#x2F;AD), and want someone who is excited about solving those problems in .NET please reach out.<p>Contact : James[at]dovetailsoftware.io",2018-10-01 20:23:03,18116498
3870,"Diginex | Blockchain startup | Hong Kong | F#&#x2F;C#&#x2F;Linux devs | Fulltime employees ONSITE preferred, VISA sponsors (for freelancers we might accept part-time and&#x2F;or remote work, if you prove yourself to be worth it)<p>We are a blockchain start-up based in Hong Kong. Our business consists of cryptocurrency mining, financial services, Initial Coin Offering (ICO) &amp; blockchain technology consulting, and software research. Among our products, we are developing an opensource crossplatform multicurrency wallet app for desktop &amp; mobile devices and we have plans to build a cryptocurrency exchange platform. Our goal is to become a legitimate, regulated, go-to global blockchain service provider. Our core values are based on high professional standards, where the ability to work effectively and independently is a must-have.<p>We are looking for filling several vacancies for the following roles in the next few weeks:<p>- Linux DevOps (no previous blockchain experience required): must be comfortable working with opensource workflows (pullrequests, code review, git, etc), with main responsibilities including packaging(deb&#x2F;rpm+snap+flatpak), CI curation (we use GitLab+AzureDevOps), cloud infrastructure (AWS,Kubernetes,TerraForm...). Typescript &amp; selenium experience are a plus.<p>- F#+C#+Xamarin Developer (no previous blockchain experience required): must be comfortable working with opensource workflows (pullrequests, code review, git, etc). Typescript &amp; selenium experience are a plus.<p>- QA Engineer (no previous blockchain experience required): must be comfortable working with opensource workflows (pullrequests, code review, git, etc) with main responsibilities including Selenium tests development and bug reporting. Typescript experience is a plus.<p>Work onsite (relocation package is offered) is preferred but not a must. Please send CV and short cover letter to andres.aragoneses at diginex dot com.",2018-10-02 00:06:11,18117821
3871,"&quot;Two major forces outside of Microsoft&#x27;s control curtailed .NET&#x27;s planned world dominance: (1) the rise of Javascript in the browser which negated .NET Silverlight, and also Java applets and Flash. (2) the rise of Apple iOS and Android.&quot;<p>I agree with those 2 forces:<p>1) the raise of javascript: Now is starting to develop an answer to this in Blazor (<a href=""https:&#x2F;&#x2F;github.com&#x2F;aspnet&#x2F;Blazor"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;aspnet&#x2F;Blazor</a>)<p>2) iOS and Android: both are here to stay, so Xamarin is the answer. I have been using Xamarin for iOS and all though still lack of some maturity, in its actual form is very viable.",2018-10-02 14:47:42,18122189
3872,"You missed two that I can think of: 
(1) the runtime written in F# that Frank Kruegers  Continuous uses (and I believe also Xamarin Live player uses in some fashion.)
(2) Goa WinForms was a C# compiler that targeted the Adobe Flash Player, and implemented part of the BCL and WinForms UI. If you include the CrossNet I think this also counts.",2018-10-02 16:07:42,18122917
3873,"&gt; Next stop, making UWP crossplatform :))<p>they do not need.
they have xaml over xamarin.forms, which supports all major platforms (including desktopn and mobile)
it still says that its in preview however the only things that did not work well is when you need some kind of file interaction with the os, you need to create native views for all your OSs (i.e. NSFilePicker, OpenFileDialog, etc..) since there is no Xamarin.Forms widget for that. besides that it is already really mature.",2018-10-02 20:34:33,18125482
3874,"Xamarin.Forms has to manage a lot of friction interfacing with the native UI controls.  It&#x27;s both an advantage and a disadvantage to it&#x27;s approach.  It has to conform to the common denominator of the native platforms, but gets to leverage the native look and feel.  But this seems much harder to maintain long term.
It would actually make sense if they created a XAML platform (like cross-platform UWP) that used its own rendering stack (similar to Flutter&#x27;s approach) that wasn&#x27;t beholden to the design decisions of an externally developed platform and having to reconcile the differences between different platform paradigms.",2018-10-02 23:02:10,18126436
3875,"That&#x27;s just coding style, which by itself is not a new dialect. Yes a bunch of APIs in Unity use different naming conventions from the rest of .NET world, but the language is the same.<p>The new HPC#&#x2F;Burst indeed are subsets of C#, but that&#x27;s a very recent development, and completely unrelated to &quot;Unity had to make their own C# dialect to avoid Novell&#x2F;Xamarin licensing issues&quot;.<p>&gt; <i>As for Mono being already in 1.0, OS X only version, I am unsure about it, but the old blog was taken down</i><p>I have worked at Unity since 2006. Yes Unity was Mac only at that point, but it still used Mono there.",2018-10-03 08:47:07,18128582
3876,"Were a .net house, or we see to be, so I should be embracing this like you are. Im not though, not because its not cool and all, but because js front end has so many things that arent in .net.<p>I mean, where is the graphql and Apollo like functionality in .net?<p>How do you make a pretty reactive frontend easier and faster with .net compared to vue&#x2F;react&#x2F;angular?<p>How big does the browserbased app get when it has to load .net libraries?<p>Maybe Im just not seeing it, but I honestly think what laravel is doing with PHP on the backend and vue on the front end is the brilliant way of approaching web apps and I think what Microsoft is doing with web assembly is going to be a needlessly complicated mess thats really, really unproductive in terms of time to market. And I think they are mainly doing it because Microsoft never made their own JS front end.<p>Ive been following it for a while too, and I see a lot of the xamarin disaster in it.",2018-10-04 05:09:50,18137344
3877,"Its not, not really, but it runs a lot of enterprise and reschooling developers is really expensive. I know, because were in the process of going from almost exclusively c# to mostly node.js and powershell scripts with orchestra and SSIS.<p>The fact that Microsoft keeps doing things like core 1, the 2, xamarin and now this web assembly stuff made the business case for changing better though. Because staying up to date on c# has also become expensive.<p>Still, stuff like AD and ADFS, msSQL and windows servers are the backbone in a lot of enterprise, and C# integrates really easily in that environment. I still think node.js, powershell and SSIS does it better, but I can certainly see why c# is still a thing.",2018-10-04 05:13:34,18137361
3878,"Im not sure whos downvoting you, but it sure isnt managers whos paid for people getting re-educated in asp, then mvc and razor, then web-api, then xamarin, then core 1, then core 2 and thats just to name a few.<p>Hell, its still not easy for people to deploy a .net core web api and run it in an IIS installed with basic settings. You can laugh at it, but thats 80% of the damn workforce who doesnt know how to do that.<p>I mean, the JS environment changes, but I havent had to pay for anyone getting reschooled since we swapped to JS.",2018-10-04 12:37:36,18139315
3879,Mono used to have a CLA to Novell. There were GPL and LGPL parts. It turned out to be beneficial because it enabled Xamarin (made up of mono developers) to acquire licensing rights to redistribute and relicense it after Novell dropped support for the project.,2018-10-05 15:15:37,18148772
3880,"My take on this is because Microsoft cannot match google&#x27;s monetize scheme, and afaik this is the reason wphone can&#x27;t be cheaper than android. Furthermore there already iphone on premium level that replace blackberry at that time.<p>They need to target for specific market segment (lets say phones for corporate and office, or phone for developer) that has minimum apps (whatsapp, etc) and easy to port from other platform (ex: from xamarin &#x2F; android app). Of course they need to rethink the monetization scheme to match android&#x27;s price.",2018-10-06 13:28:40,18155024
3881,"My main question is how this offering differs from a UI framework. At first glance, this looks similar to Ionic, Flutter, Cordova, Xamarin, React Native, etc. You&#x27;re fighting an uphill battle because people these days either want to write native applications or use a JavaScript-to-native framework, so you have to be extremely clear on how your tool is superior or different.<p>One piece of criticism is that while the technology looks neat, the UI doesn&#x27;t look professional. You&#x27;re competing with frameworks that have exceptionally polished UI elements out of the box. If design isn&#x27;t one of your core competencies, I&#x27;d highly recommend hiring (or contracting) a designer to help you build a good looking set of UI components, or at least a good looking demo.",2018-10-06 17:14:09,18156130
3882,"<p><pre><code>    Location: Indonesia
    Remote: Yes
    Willing to relocate: Yes
    Technologies: Ruby, Rails, Java, Mobile Xamarin Android (MvvmCross)
    Rsum&#x2F;CV: linkedin.com&#x2F;in&#x2F;mufid
    Email: d2F6YUBmYXN0bWFpbC5qcA== (base64 encoded. decode it by pasting it into base64 decoder)
</code></pre>
I design platform-agnostic software, construct software, help people write software better and more effective. It is very thrilling for me to build high performance, maintainable, and scalable software. I&#x27;ve worked on high traffic systems with $1B+ monthly revenue and maintaining it at very high uptime.<p>Time wise, my experiences include 5+ years software development and leading a team in various platform. My experience fields include Fleet Management software, geography mapping, remote device tracking, credit card payment, SEA payment, commerce (promotion, discount, voucher).<p>I have experience with various programming languages, such as C, Java, and Ruby, but i code mainly in Ruby and Java. In fact, i am a fast learner and i can grasp new concept in short time. By platform-agnostic, it also mean I can learn current codebase rather quick.<p>In my spare time, i love to leverage developer communities by sharing some insights. I was speaking in latest Ruby Conference in Jakarta about one of important parts about software stability: understanding and preventing race condition. The conf was here <a href=""http:&#x2F;&#x2F;ruby.id&#x2F;conf"" rel=""nofollow"">http:&#x2F;&#x2F;ruby.id&#x2F;conf</a><p>Relocating is fine for me. I am also familiar with remote working. I need visa sponsor to work.",2018-10-09 01:48:18,18172759
3883,"I&#x27;ve known multiple Microsoft developers who use a MBP at work, and who aren&#x27;t fired. And now that MS has bought companies like Xamarin, need to support Linux and Mac.",2018-10-10 18:50:51,18187786
3884,"MS owns xamarin now, so I think also mono?",2018-10-10 21:51:57,18189234
3885,"Amplify+AppSync client SDK support is pathetic compared with Firebase. No official support for Flutter, Xamarin and Unity apps.",2018-10-13 09:11:54,18207149
3886,So in which bucket do you place Xamarin or C++ tooling for mobile OSes for example?,2018-10-15 10:55:56,18218738
3887,"++ tooling for other mobile platforms isn&#x27;t really a Microsoft stack. It&#x27;s more of an attempt to get into someone else&#x27;s stack with tooling, with a side effect of encouraging writing a larger part of your typical mobile app in portable C++ (which then makes it easier to port to UWP).<p>Xamarin is weird, you&#x27;re right. It&#x27;s partly the same as above, just s&#x2F;C++&#x2F;C#&#x2F; - but that doesn&#x27;t seem to be working so well in practice. And then there&#x27;s Visual Studio for Mac (nee Xamarin Studio), which in practice competes against Visual Studio Code. I think it&#x27;s just one of those acquisitions that broadly felt like a good idea, but no-one properly figured out the details of how it fits in the big picture.<p>(But, curiously, Xamarin and VSCode are both DevDiv.)",2018-10-15 11:27:37,18218855
3888,"React Native very much took things by storm when it came out and as it gained popularity very much supplanting previously leading hybrid mobile development solutions like Phonegap, Ionic, Xamarin, etc. It is currently the top cross platform development option but not everything seems to be going smoothly for it. As of late it would seem that there is a shift going on towards Google&#x27;s Flutter and even previously big React Native backers like Airbnb and Udacity have turned their back on React Native opting instead to go with native solutions while others deciding to go with Flutter (For example: https:&#x2F;&#x2F;medium.com&#x2F;reflectly-engineering&#x2F;reflectly-from-react-native-to-flutter-2e3dffced2ea)<p>The React Native development team seems to have planned a re-architecture of it as an answer to the issues these groups have found and which lead them to turn away from it.<p>One big pain point for React Native seems to be the so called &quot;dependency hell&quot;, where every project has to rely on a plethora of third party npm dependencies which constantly break even with the smallest updates. The whole tooling and setup of the framework seems very fragile and as a result developers are constantly having to spend time &quot;fixing&quot; stuff to get their projects working. Several posts in the React Native subreddit have expressed frustration over these issues. From what I gather Flutter does not suffers from this particular problem and it&#x27;s setup&#x2F;tooling is rather painless. And in term of app performance Flutter appears to do better as it doesn&#x27;t relies on a javascript bridge like React Native does (which seems to be the reason for slow performance at times).<p>Could all these be signs that it is the beginning of the end (so to speak) for React Native as the &quot;latest and greatest&quot; and could Flutter end up supplanting it as the framework of choice to develop for both platforms?",2018-10-21 12:49:22,18267764
3889,"Nat Friedman has cofounded Xamarin, he understands Open Source and I&#x27;m sure he&#x27;ll do well as CEO of GitHub. I&#x27;m cautiously optimistic about it.<p>Microsoft could pull a Skype of course, but on the upside this might turn out to be a good thing, as in this climate many businesses, operating at scale and giving away so many freebies, are struggling and GitHub could have been the next SourceForge.<p>Who knows, maybe they&#x27;ll even open source it. Fingers crossed.",2018-10-26 13:41:55,18309087
3890,They bought Xamarin. I&#x27;m also pretty sure they do make money from their Enterprise versions of their .NET developer tools.,2018-10-26 15:54:53,18310397
3891,Xamarin?,2018-10-26 20:16:59,18312418
3892,"I don&#x27;t expect this product line to be the most popular mac product line, but it does have it&#x27;s users.<p>* A mac is required for iOS development, so it can be used as a build server for teams working in Xamarin.  Possibly used in other cross platform mobile development workflows. (Who: mobile developers, Why: to run builds)<p>* People that need more I&#x2F;O than a macbook pro can support.  In addition to the I&#x2F;O a MBP has this has 10GB Ethernet, 2 USB A, HDMI, and a dedicated power slot.  It&#x27;s also significantly cheaper than the iMac Pro, while also having 10GB Ethernet.  (Who: People working in video, photography, and anyone that heavily uses a 10GB network.  Why: Better connectivity)<p>* Groups with existing macos server applications that want a  headless server with cheaper&#x2F;newer hardware than the Mac Pro or old Mac Mini.  
(Who: companies with macos server programs running.  Why: It&#x27;s newer better hardware)<p>* People that want a very small computer.  
(Who: Everyday consumers. Why: Small footprint. It&#x27;s the cheapest Mac for people that like MacOS but don&#x27;t the need portability of a macbook or the monitor of an iMac.)",2018-10-30 15:33:33,18337575
3893,"Saint Petersburg, Russia.<p><pre><code>  2013-2014     ???                                       Literally pennies while doing odd jobs for random people on the internet.
  2015-2016     $3600             Asp.net developer       Working for a sub-sub-sub contractor on some government project. AFAIK, it has never been shipped to production.
  2016-2017     $12000            Xamarin developer       Small local company that went out of business due to Russian financial crisis [1]
  2017-2018     $25000            .NET developer          Large company(~600 franchise offices) focused on the local market
  2018-now      $36000 -&gt; $32000  Full stack developer    Large outsourcing company, US-based customer.
                                                          Salary has decreased since it&#x27;s bound to RUB and the exchange rate fell by about 10%.
</code></pre>
Income tax is flat 13%, most likely I&#x27;ll get it fully refunded for this year.<p>[1] <a href=""https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Russian_financial_crisis_(20142017)"" rel=""nofollow"">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Russian_financial_crisis_(2014...</a>",2018-10-31 15:08:12,18346293
3894,"Diginex | Blockchain startup | Hong Kong | F#&#x2F;C#&#x2F;Linux devs | Fulltime employees ONSITE preferred, VISA sponsors (for freelancers we might accept part-time and&#x2F;or remote work, if you prove yourself to be worth it)<p>We are a blockchain start-up based in Hong Kong. Our business consists of cryptocurrency mining, financial services, Initial Coin Offering (ICO) &amp; blockchain technology consulting, and software research. Among our products, we are developing an opensource crossplatform multicurrency wallet app for desktop &amp; mobile devices and we have plans to build a cryptocurrency exchange platform. Our goal is to become a legitimate, regulated, go-to global blockchain service provider. Our core values are based on high professional standards, where the ability to work effectively and independently is a must-have.<p>We are looking for filling several vacancies for the following roles in the next few weeks:<p>- Linux DevOps (no previous blockchain experience required): must be comfortable working with opensource workflows (pullrequests, code review, git, etc), with main responsibilities including packaging(deb&#x2F;rpm+snap+flatpak), CI curation (we use GitLab+AzureDevOps), cloud infrastructure (AWS,Kubernetes,TerraForm...). Typescript &amp; selenium experience are a plus.<p>- F#+C#+Xamarin Developer (no previous blockchain experience required): must be comfortable working with opensource workflows (pullrequests, code review, git, etc). Typescript &amp; selenium experience are a plus.<p>- QA Engineer (no previous blockchain experience required): must be comfortable working with opensource workflows (pullrequests, code review, git, etc) with main responsibilities including Selenium tests development and bug reporting. Typescript experience is a plus.<p>Work onsite (relocation package is offered) is preferred but not a must. Please send CV and short cover letter to andres.aragoneses at diginex dot com.",2018-11-02 02:28:44,18360249
3895,.NET Framework isn&#x27;t going anywhere. It is and will remain the basis for Xamarin.<p>.NET Framework 4.8 will be the last release though. Innovation will happen in .NET Core and the packs available for it (e.g. the Windows Desktop Pack).,2018-11-02 15:46:03,18363847
3896,Xamarin isn&#x27;t based on the .NET Framework. It is based on Mono which is in turn already consuming a lot of code from CoreFX (== .NET Core) and that share will only increase over time.<p>Source: I&#x27;m working on the Mono BCL+Tools team at Xamarin&#x2F;Microsoft.,2018-11-02 19:59:39,18366225
3897,"Visual Studio for Mac is just Xamarin Studio rebranded, not really related to VS for windows.",2018-11-03 01:59:27,18368209
3898,"Core engineering, not really, although Xamarin might be an exception. Customer facing engineering, consulting, support engineering, and other field based software dev roles are primarily distributed, with varying degrees of travel. Ive been doing application development in the consulting services wing for quite a while now, so Im a bit out of touch with the product engineering groups.",2018-11-03 16:32:57,18371046
3899,"Xamarin, QT, Electron, a few variants of React Native. For games, pick you favorite cross plat engine.<p>Follow the steps at <a href=""https:&#x2F;&#x2F;sites.google.com&#x2F;site&#x2F;easylinuxtipsproject&#x2F;oldgrub"" rel=""nofollow"">https:&#x2F;&#x2F;sites.google.com&#x2F;site&#x2F;easylinuxtipsproject&#x2F;oldgrub</a> for a free Windows VM development license.<p>For Apple, it is an entire hardware platform.",2018-11-04 00:18:48,18373260
3900,"Unified frontend development with .NET is their big opportunity for this IMO. Something like Xamarin Forms but a lot more optimized like Flutter and supporting mobile, desktop, and browsers would be incredible. Right now .NET seems pretty unpopular but a really strong front end use case could reverse that.",2018-11-05 00:31:10,18378902
3901,"And Qt, Xamarin, ....",2018-11-05 11:59:45,18381620
3902,"What the author doesn&#x27;t mention is that apps have become increasingly easier to write as time has gone on. Not only do we have better native languages that you can write apps with (Swift and Kotlin) but we have incredible cross-platform tools as well in the forms of Xamarin and React-Native.<p>I&#x27;ve personally been working with React-Native over the past year and it&#x27;s just as easy as writing React code for the web (if you&#x27;re using expo), once people understand this it&#x27;ll only be a matter of time before web-dev teams adopt it. Historically the problems with app development is that it was a lot harder than web development and often required you to learn a new language and framework in order to get anything functional, this is no longer the case.<p>I&#x27;d actually argue that there will be more apps going into the future as the technology needed to build them simplifies.",2018-11-05 15:09:47,18382831
3903,"Anybody got any updates on the state of Mono&#x2F;.NET Core convergence?<p>I actually don&#x27;t care very much if they&#x27;re actually the same code base, but I&#x27;d like to be able to use the dotnet CLI for everything.  Xamarin project templates in the new SDK format are also on my wishlist.",2018-11-05 18:14:28,18384515
3904,"&gt; Given many of the API additions in .NET Standard 2.1 require runtime changes in order to be meaningful, .NET Framework 4.8 will remain on .NET Standard 2.0 rather than implement .NET Standard 2.1. .NET Core 3.0 as well as upcoming versions of Xamarin, Mono, and Unity will be updated to implement .NET Standard 2.1.<p>At some point, is it reasonable to expect Xamarin, Mono, Unity, and .NET Core to all really be backed by .NET Core? And if&#x2F;when so, is there any difference between .NET Standard and .NET Core since, after .NET Framework has been essentially maintenance-mode&#x27;d, there will be only one .NET  Standard implementation? Similar question, besides just having multiple implementations, what benefit is there to having both Mono and .NET Core separate (at least for the .NET Standard impl part)?",2018-11-05 18:22:43,18384579
3905,"that was the primary purpose before, but since .NET Framework will no longer be implementing new .NET Standard versions, it&#x27;s now more like a way to write something that runs on both .NET Core and on Xamarin platforms",2018-11-05 19:00:53,18384911
3906,"oh, i see what you mean now. from my understanding, .net core 3.0 will start to make .net core the primary choice of development for new projects on windows since it will include the uwp, wpf, and winforms desktop packs. but if you still need cross-platform ui and graphics, mono is still the only choice. so it does seem that microsoft is converging on trying to &quot;get rid of&quot;, so to speak, .net framework and mono, but it seems there&#x27;s still a ways to go. even a newish project in the wilderness labs meadow board used mono and not .net core for their project. i am sure it&#x27;s because they started a while ago and there were technical reasons. .net core lacked features mono had for a while (and maybe still does, not for sure of the current status). moving existing projects like it, unity, and xamarin from mono to .net core is probably a huge undertaking.<p>in terms of naming, i think it makes sense to keep the distinction between .net standard and .net core, even if .net core slowly heads towards becoming the de facto implementation. i doubt .net framework and mono ever really go away anyway, so the distinction is still needed.",2018-11-05 19:40:33,18385245
3907,"&gt; This means that .NET Core will get new APIs and language features over time that .NET Framework cannot. At Build we showed a demo how the file APIs are faster on .NET Core. If we put those same changes into .NET Framework we could break existing applications, and we dont want to do that.<p>The &quot;slower&quot; explanation doesn&#x27;t really fit with that sentence to me... if Standard 2.1 already has things that Framework &quot;cannot&quot; have, then it seems like &quot;stopped&quot; is more accurate than &quot;slower.&quot; I guess technically they only are saying that <i>Core</i> gets things Framework can&#x27;t, not necessarily the standard, but I&#x27;m not sure that&#x27;s much of a distinction in practice.<p>Of course it doesn&#x27;t have to mean that Framework is just frozen but it would seem to make the Standard a bit of a dead letter (I&#x27;m not really familiar with how useful it is in terms of Xamarin&#x2F;Mono&#x2F;Unity).",2018-11-05 20:02:01,18385432
3908,"I think it is fair to say, that we need to realize, that .NET Core runs on all of the platforms which in Microsoft view have future (.NET Core, Xamarin, Unity and UWP). The only platform no one is really interested (from Microsoft perspective) is the .NET Framework.<p>The .NET Framework is, from Microsoft .NET and WIndows Team perspective, a legacy burden which is unable to innovate, change or improve due to the deployment methodology. It is a dead end.<p>I know, it sucks. I am an enterprise developer and understand the consequences. I hate it as well, but I can completely follow their rationale. They make it possible for us to develop WPF and WinForms on .NET Core which is their strategy to compensate the blow they give us.",2018-11-05 20:05:42,18385461
3909,"Xamarin Forms also has WPF, OSX, and GTK renderers, so it might be an option. Based on GitHub activity it looks like they&#x27;re being worked on fairly actively, too.",2018-11-05 20:25:34,18385617
3910,Mono (5.0) and Xamarin (4.5) implement .NET Standard 2.0.,2018-11-05 21:01:55,18385941
3911,"Is that any different than<p>Microsoft - PowerPoint, Hotmail, FrontPage, Windows Live Messenger, Visio, Bungie, Rare, Lionhead, Mojang, Dynamics (Great Plains, NAV), Skype, Defender, Perceptive Pixel (Surface Hubs), Yammer, LinkedIn, Acompli (Outlook Mobile), GitHub, Xamarin, Beam (Mixer)<p>Facebook - Beluga (Messenger app), Snaptu (Facebook for Every Phone, Facebook Lite), Instagram, Atlas, Parse, WhatsApp, Occulus, LiveRail (video monitization)<p>Adobe - PageMaker, After Effects, Photoshop, FrameMaker, GoLive, Audition, Echosign (Adobe Sign), Macromedia (who itself acquired Freehand, Dreamweaver, Flash, ColdFusion), Fireworks, plus its entire Marketing Cloud: Omniture, Day, Auditude, Neolane, Livefyre, TubeMogul, Magento, Marketo etc<p>Oracle - ...<p>the list goes on and on.  A lot of these products would not be where they are today (nor shuttered necessarily) without the resources (or lackthereof) poured into them after acquisition. Yahoo tried and failed miserably in its end.<p>Facebook may be the best example on that list.  They get beat to mobile messenging, they buy Beluga.  They lose screen time to mobile devices, they buy Snaptu.  They get beat again to mobile (camera&#x2F;photo album), they buy Instagram. The get beat by in messenging AGAIN, and they buy WhatsApp.  They get beat to video by youtube, they buy LiveRail.  In a panic to not be beat again they buy Occulus.<p>Plus, in this case they are mostly buying the Reputation and Service Contracts, not as much the product.  IBM is already mostly a Service, not product, company now.",2018-11-06 15:22:13,18391770
3912,"Yeah, I think Microsoft has changed its mind a couple times too many. With .NET Core&#x27;s original announcement it sounded like .NET Framework was legacy and in mostly maintenance mode. With .NET Standard &lt; 2.0 it seemed clear that .NET Core might move way too fast for .NET Framework to catch up, but maybe it was possible for it to catch up eventually, though there was some question there because there were some APIs it wasn&#x27;t clear if .NET Framework would adopt at all for a bit there. I think .NET Standard 2.0 gave some at Microsoft a calm sense of &quot;.NET Framework can keep up surely&quot; as .NET Core paused to catch up with Mono&#x2F;Xamarin&#x27;s API footprints, but .NET Standard 2.1 here seems to make it clear that Microsoft realized again it can&#x27;t keep up with .NET Framework. Definitely not in the short term, and probably not ever.<p>It would be great if they better articulated that &quot;probably not ever&quot;, but I can&#x27;t blame them for not doing that when we all know that a bunch of enterprise devs and HN&#x2F;Reddit&#x2F;Slashdot randoms would be out in force with pitchforks and torches if they did.",2018-11-06 16:41:20,18392559
3913,"Microsoft&#x27;s offering here is Xamarin Forms. If you&#x27;re an application developer that&#x27;s probably enough and useful. Otherwise, given that Microsoft is now a cloud and services company there doesn&#x27;t seem to be much of a push for cross-platform desktop applications. Personally I&#x27;m still hoping for Avalonia to be picked up officially, but perhaps that&#x27;s just me liking WPF too much and hoping in vain.",2018-11-09 05:54:05,18412597
3914,"At the moment there is Xamarin.Forms which actually can target  osx,gdk and uwp or wpf. which means you actually can have a cross plat gui on all platforms, stability differs for each platform and I also did not like the mono runtime that much, a lot of stuff is not as good as it is in the .net core runtime.",2018-11-09 08:17:26,18413041
3915,"Xamarin.Forms is cross platform (not only mobile, also desktop) while native look&amp;feel. Don&#x27;t use Electron.NET, that&#x27;s a waste of CPU cycles.",2018-11-09 09:02:08,18413221
3916,"&gt; I really hope the platform can break out of the Microsoft silo and attract talent from other dev communities<p>The problem is often trust. Like so many Microsoft projects, to me the goal of .Net Core seems to be to get as much people as possible on to a proprietary language and&#x2F;or get as many devs as possible onto developing stuff that doesn&#x27;t hurt Microsoft. There&#x27;s no guarantee that MS will not pull the plug at some point, and then soon after that .Net and .Net Core will start to diverge, and MS will lure in as much devs as possible with proprietary functionality that everybody wants but is only in .Net, not in Core. Or they&#x27;ll just pull the plug because of whatever reason, like they did with Silverlight and Xamarin.<p>Don&#x27;t get me wrong, I kinda like C#. But right now .Net Core feels like it&#x27;s been developed by Microsoft, not like it&#x27;s open source. I&#x27;m not entirely sure but is looks like the community developing .Net Core is made up almost exclusively of MS people.",2018-11-09 10:37:14,18413574
3917,What in the world ever happened to Xamarin? Weren&#x27;t they acquired by Microsoft two years ago? I felt sure we&#x27;d have a nice cross-platform desktop GUI by now. . .<p>I&#x27;m feeling more fearful that they acquired Xamarin just to destroy it.,2018-11-09 16:41:34,18415706
3918,It&#x27;s actively developed but there&#x27;s no mature cross-platform UI (Xamarin.Forms is mostly mobile and has many issues). Using something like MvvmCross combined with native UIs on each platform is the best option for now.,2018-11-09 22:54:43,18418715
3919,"Yes, Unity3d developers have been developing in C# on Mac for over a decade. Visual Studio for Mac (aka Xamarin Studio aka MonoDevelop) is better than Xcode in some respects.",2018-11-10 03:59:48,18419853
3920,"&gt; Async streams, indexers and ranges all rely on new framework types that will be part of .NET Standard 2.1. ...  .NET Core 3.0 as well as Xamarin, Unity and Mono will all implement .NET Standard 2.1, but .NET Framework 4.8 will not. This means that the types required to use these features wont be available when you target C# 8.0 to .NET Framework 4.8.<p>We are approaching the point where .NET full framework becomes legacy, deprecated by .NET Core.<p>NetStandard 2.1 things like Span&lt;T&gt; are already in  NETCore 2.1 now, but won&#x27;t be in the next release of fullFramework, .NET Framework 4.8.<p>Which .NET Framework will they arrive in, and when, if ever? That question has not been answered, even with an approximation or roadmap.",2018-11-13 13:11:59,18440653
3921,"Ximian and then Xamarin implemented it with Mono.<p>Yes I am sure that it takes a lot of time, but anyone who is willing and able can do it there is no-one stopping anyone from doing it.<p>The spec is open, the source code for pretty much everything is now open and is sitting on github, it has been ported to MacOS, iOS and Linux and it runs on both x86 and ARM what more do you people want?",2018-11-15 19:32:26,18462458
3922,"Okay, let&#x27;s go through that list:<p>Visual C# is Microsoft.<p>Visual C# Express is Microsoft.<p>Mono -&gt; Xamarin is now Microsoft.<p>Portable.NET -&gt; Dot Gnu Project, has been decommissioned 11 years ago.<p>SharpDevelop -&gt; IC#Code Team, project will be&#x2F;has already been decommissioned, see [0].<p>Roslyn -&gt; .NET Foundation, which was written by Microsoft, and is currently maintained (according to [1]) primarily by people working at Microsoft.<p>That last repo you posted is of course nice but like you said, it&#x27;s tiny, doesn&#x27;t even support arrays and is undocumented. Seems more like a assignment for a compiler building course. Like it though.<p>So, thanks for making me do some googling on this, but it just proved my point.<p>[0] <a href=""https:&#x2F;&#x2F;github.com&#x2F;icsharpcode&#x2F;SharpDevelop&#x2F;issues&#x2F;799#issuecomment-330086968"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;icsharpcode&#x2F;SharpDevelop&#x2F;issues&#x2F;799#issue...</a><p>[1] <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;roslyn&#x2F;pulse"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;roslyn&#x2F;pulse</a>",2018-11-19 14:04:29,18486436
3923,"My concern about Dart wouldn&#x27;t so much be language quality, it would be the ecosystem. I know if I go out there and do a project in JavaScript or C# (so RN&#x2F;Xamarin) there&#x27;s piles of libraries out there. There&#x27;s documentation. There&#x27;s Stack Overflow answers and tutorials.",2018-11-23 18:49:54,18518193
3924,"I also don&#x27;t believe in RN and for me Flutter is the last hope of keeping Dart relevant outside the Googleplex.<p>I don&#x27;t see any reason to waste my time with Dart. It was a good decision to focus on JavaScript back then, and it is more so in the context of native apps.<p>Regarding Qt, when I tried it about 4 years ago, I was quite disappointed with their mobile support, because they only had the bare minimum, and integrating the platform APIs meant in the end the effort was bigger than just doing C++ plus native views.<p>Meanwhile they seem to have switched focus to customers that are actually willing to pay for their tooling, thus hardware manufactures selling medical, IoT and automobile devices, as one can easily see from the upcoming Qt World Summit schedule.<p>At personal level I have been using the former approach of C++ plus native views, while at work our mobile projects have been either Ionic based or plain mobile web sites.<p>Still weighting to switch back to Qt or adopt Xamarin for hobby projects, although with Google and Microsoft pulling their weight behind PWAs, I am starting to think that might be the future for all mobile apps that aren&#x27;t performance critical, given WebAssembly and access to device APIs without additional FFI when authenticated.<p>How was your mobile Qt experience been?",2018-11-23 19:05:22,18518282
3925,"It&#x27;s always interesting to hear about lesser-known cross-platform solutions. Why do you think Nativescript never got the buzz that React Native, Flutter, Xamarin, or web-focused efforts like Ionic, have?",2018-11-24 01:49:14,18519965
3926,"tl;dr - Progress (the company that sponsors Nativescript) doesn&#x27;t the market&#x2F;advertising dollars compared to Facebook&#x2F;React, and Google&#x2F;Flutter or MS&#x2F;Xamarin.<p>Well I think the biggest difference is purchasing power of the companies behind those other solutions in terms of marketing. Flutter has gotten this the most right, so far -- they make very published developer resources, and market aggressively, they have things like the Flutter Development Show[0], and little 30 second clips introducing parts of the platform[1] . It&#x27;s a good thing (they&#x27;re innovating in the documentation&#x2F;dev experience space), but taken cynically it&#x27;s just a marketing ploy.<p>I hate to say it, but lately people have been applying the same advertising and marketing logic they use on consumers on developers rather than necessarily making the best product they can and letting word spread organically. It&#x27;s a bit of a chicken and egg problem -- you usually can only build the best product with help from others, which means getting in front of them, but usually you want to make a good thing <i>so you can</i> justify getting in front of the developers in the first place... So people put out shitty tools, then just iterate <i>after</i> the community shows up and finds out there are lots of rough edges (see: mongo, react, dart, etc).<p>The last I&#x27;ll say on the subject is that &quot;developer evangelists&quot; are basically paid marketers&#x2F;advertisers.<p>Nativescript also has this thing where it was popular <i>years</i> ago, but has recently seen a surge in popularity -- you have projects like nativescript-exit[2] (which provides a cross platform way to exit the app from JS) that have code from 2 years ago. This is actually a really great point for nativescript, because solidly written plugins like nativescript-exit really are solid -- I very recently used it in a project and it <i>just worked</i>. The integration points available in Nativescript have a <i>very</i> high potential (not to say other platforms don&#x27;t).<p>[0]: <a href=""https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLOU2XLYxmsIK0r_D-zWcmJ1plIcDNnRkK"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLOU2XLYxmsIK0r_D-zWcm...</a><p>[1]: <a href=""https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=R9C5KMJKluE"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=R9C5KMJKluE</a><p>[2]: <a href=""https:&#x2F;&#x2F;github.com&#x2F;dvabuzyarov&#x2F;nativescript-exit"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dvabuzyarov&#x2F;nativescript-exit</a>",2018-11-24 05:32:10,18520625
3927,"Well for the mainstream VMs: Hotswap on the JVM is very limited, likewise with edit and continue on the CLR. Xamarin has live XAML updates, only for markup though. V8 is better at hot reloading, but then suffers on the performance front, since it&#x27;s basically impossible to do efficient AOT for it.<p>So which languages&#x2F;platforms do you mean?",2018-11-24 08:32:06,18521092
3928,This mirrors my experience working with Xamarin. You had to know both everything going on at the native level and the c# .net and Xamarin levels as well.,2018-11-24 09:55:46,18521306
3929,"&gt; silverlight<p>Hah, I forgot about Silverlight - mainly because I never used it (did anyone?)<p>&gt; razor&#x2F;mvc<p>Eh? Razor is very much still alive, and MVC lives on as ASP.NET Core MVC.<p>&gt; because in the real world, moving people from asp.net classic to .net core costs money.<p>Yes, I live in the same world, and have migrated several projects from .NET to .NET Core. If you were an early adopter, it could admittedly be a bit painful, but everything &quot;just works&quot; now.<p>&gt; I mean, even .net standard came and went before we even started using it, considering it won&#x27;t be part of .net core 3.0.<p>Really not sure what you mean here, and I can only guess that you&#x27;ve been thrown  by Microsoft randomly releasing new .NET Core versions before the corresponding .NET Standard versions - releasing the implementation before the API. I don&#x27;t like this myself, but it hardly means that .NET Standard has &quot;came and went&quot;. Also, just a couple of weeks ago, Microsoft said &quot;.NET Core 3.0 as well as upcoming versions of Xamarin, Mono, and Unity will be updated to implement .NET Standard 2.1&quot;[1].<p>[1] <a href=""https:&#x2F;&#x2F;blogs.msdn.microsoft.com&#x2F;dotnet&#x2F;2018&#x2F;11&#x2F;05&#x2F;announcing-net-standard-2-1&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blogs.msdn.microsoft.com&#x2F;dotnet&#x2F;2018&#x2F;11&#x2F;05&#x2F;announcin...</a>",2018-11-24 20:53:33,18523920
3930,"I&#x27;m doing F# from 2 years ago ONLY on OSX. Use .NET core &amp; xamarin currently. So far I can do a fairly complex project with dozen of external libraries, for iOS&#x2F;Android&#x2F;WebAPI with PostgreSQL, Sqlite. Deploy with docker on Ubuntu.<p>Today I say F# is good enough on *nix.<p>Also doing a little of Rust but the productivity with F# is far higher (you need to ramp up on Rust for a while!)",2018-11-26 14:07:40,18533408
3931,"Well, Xamarin applications for iOS use Mono AOT and Unity gameplay code gets compiled to native code for deployment on game consoles and iOS, optionally on Android.<p>As for compilation time, Go compilers use very basic optimizations as such they tend to compile faster, but hardly impressive for those that ever used TP, C++ Builder, Delphi, Modula-2 and similar languages.",2018-11-26 17:44:17,18535209
3932,Now can they make a real VS for Mac that isnt a rebranded Xamarin?,2018-11-30 12:33:07,18568602
3933,"I am definitely not anti Microsoft, Ive been developing with some version of Visual Studio for well over 20 years. But, it makes absolutely no sense to hang your hat on developing using Windows specific technologies in 2018. Even Azure is hosting more Linux VMs than Windows VMs. Im at least moving toward .Net Core and if I were doing desktop apps I would use Xamarin.<p>But all of the money and energy is moving away from .Net. As much as I hate that JavaScript has taken over in mindshare, at least there is TypeScript.",2018-11-30 23:10:15,18573596
3934,"If you want to go down this road, doing mobile cross-platform native, Xamarin seems much more compelling. It is supported by a very good IDE and has proper licensing for distribution on the app stores. <a href=""https:&#x2F;&#x2F;visualstudio.microsoft.com&#x2F;xamarin&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;visualstudio.microsoft.com&#x2F;xamarin&#x2F;</a>",2018-12-03 01:14:30,18585679
3935,+1 for xamarin.<p>One question though for app developers who are experienced in this field- does anybody know the relative running time of native vs managed code on android? Does it matter at all for ux-heavy code? How does the startup time look?,2018-12-03 01:27:38,18585724
3936,Xamarin also follows a similar strategy of wrapping platform native widgets in cross-platform widgets.<p>SWT project also does the same in Java Desktop World. But it never really became widely used.,2018-12-03 10:24:24,18587696
3937,"Many projects are porting variants of them to other platforms: Avalonia, Eto, Uno, Xamarin.Forms, etc.<p>Now that it&#x27;s open source, the process should be even easier.",2018-12-04 17:11:16,18601333
3938,"Comparison: React Native (and Xamarin, for that matter) use platform-native widgets with JavaScript composing the UI dynamically in the case of React Native (and UI&#x27;s either dynamically composed or statically compiled with Xamarin -- depends how you build the app).  Flutter brings it&#x27;s own widget layer to iOS and Android (and Fuchsia?) so it&#x27;s more like starting with a blank 2D graphics canvas and creating your own controls. Advantages: since this rendering layer and widgets are compiled from C++ the performance is excellent.  Disadvantage: if you want a widget that isn&#x27;t in the current set of controls and your C++ skills aren&#x27;t up to the task, you&#x27;ll be left wanting to do things you cannot.  Not sure what scenarios are affected by this but it&#x27;s something to keep in mind.",2018-12-04 18:07:20,18601947
3939,"One of the main issue with Flutter is that you can&#x27;t embed a native view inside a flutter widget tree. This makes it limited as we can&#x27;t have inline maps or custom video views.<p>There are people working on it. The progrss has been slow. I checked a couple of weeks ago and the issue was still open.<p>But as far as I know you can have a native view in its own  activity.<p>Though not a blocker for simple apps which previously used Cordova or ionic, I don&#x27;t think Flutter is ready to replace native development for immersive apps.<p>Embedding a native view in cross platform UI is possible with Xamarin and React Native, so they are more practical choice for certain types of apps that need this.",2018-12-04 19:06:07,18602617
3940,"Nah, I rather built up my skills with C# and Xamarin, Qt and C++, or PWAs, it is more relevant to my CV.",2018-12-04 19:45:31,18602989
3941,"It&#x27;s not exactly WPF, but there are folks that have worked on supporting Xamarin.Forms &#x2F; XAML Standard on Gtk+: <a href=""https:&#x2F;&#x2F;github.com&#x2F;jsuarezruiz&#x2F;forms-gtk-progress"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;jsuarezruiz&#x2F;forms-gtk-progress</a>",2018-12-04 21:08:31,18603613
3942,"Well, you&#x27;re lucky. There is React-Native (JS&#x2F;TS), Xamarin (C#) and Boden (C++)",2018-12-04 22:09:49,18604045
3943,"Same for free C#-based Xamarin, but this is based on Visual Studio.<p>LiveCode comes to my mind as well which is close to HyperCard&#x2F;Flash, but needs programming for any interactivity...<p>How about an iBook if this is for Apple? IBook Author is free and allows for interactive elements like quizzes and embedded HTML pages. Pretty nifty, free, but only for iOS again.",2018-12-05 05:51:58,18605970
3944,"I&#x27;ve been following and using Flutter since release 0.2. I think Flutter is an amazing project. It makes writing concise and beautiful apps very easy. I&#x27;ve come to love Dart and the whole Flutter framework. I really think it is the best framework to write Android applications. It also works great for iOS were you can either choose to use Material or Cupertino components. It is a huge improvement over the old Android SDK; which is quite outdated in my opinion. It&#x27;s too hard to create a beautiful app with the current Android SDK. To many hurdless. Flutter feels like what developing an Android app should be like today.
Another thing about Flutter is that it&#x27;s also ready to work with Google&#x27;s (upcoming; maybe) Fuchsia OS.
One loose end is still the plugins for native features on either iOS and Android. There are many community driven plugins which aren&#x27;t really maintained. Fortunately there is also a large set of plugins maintained by the Flutter team itself.<p>I&#x27;ve tried Xamarin, React Native and Cordova (god forbids) and native development on iOS and Android. My preference is Flutter.<p>I&#x27;ve done one big(ish) project with Flutter and it&#x27;s called &quot;My Leaf&quot; and it is a third party alternative to the NissanConnect EV app. It&#x27;s used for controlling the Nissan Leaf and Nissan e-NV200 (both EV&#x27;s). It&#x27;s open source and available on Android and iOS;<p><a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=dk.kjeldsen.carwingsflutter"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=dk.kjeldsen.ca...</a><p><a href=""https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;my-leaf-for-nissan-leaf&#x2F;id1436701776"" rel=""nofollow"">https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;my-leaf-for-nissan-leaf&#x2F;id14...</a><p>I&#x27;ve seen some of the comments in this post talk about developing plugins for Flutter. I actually think it is easy and does not require much boilerplate contrary to what people say. My guess is that they really haven&#x27;t tried writing a plugin but only peeked at the documentation.",2018-12-05 09:01:21,18606706
3945,"I agree. My thinking is that the only place where any desktop app is still actively developed is the enterprise (and even there the trend is to get everything web based), and this is predominantly a windows environment. Outside of the enterprise everything has gone mobile where wpf isn&#x27;t really an option (solutions like Xamarin aren&#x27;t fun to use).<p>My guess is that desktop apps will come back with pwa+wasm. Then you can have a rich client that is fully cross platform, single code base, same behavior everywhere, easy to deploy, written in the language of your choice. But that doesn&#x27;t involve wpf...",2018-12-05 09:45:03,18606894
3946,"flutter&#x27;s community feels like Xamarin&#x27;s community - people who are already well versed in both android and ios development looking for a common codebase solution. very much lacking in the documentation section in terms of how you get from A to Z. everything is &quot;Z can be implemented this way&quot; w&#x2F;o any discussion of how to use it in alternate ways(like how the android and ios dev documentation is structured)    
i&#x27;m gonna jump in coz it seems interesting but i&#x27;m super afraid of the iOS painpoints i&#x27;m going to hit(I have no knowledge of iOS development just android)",2018-12-05 10:27:46,18607081
3947,"it&#x27;s ot, but still...<p>&gt; Microsoft&#x27;s UI strategy<p>at the moment I really think that they do not have a strategy.
I mean they even have Xamarin.Forms which is another XAML variant.<p>which ups their UI stuff to 4.
I do not see any of them being deprecated at all.",2018-12-05 20:50:57,18612403
3948,"You mean like all those apps running on iOS and Android on top of Xamarin?<p><a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;cross-platform&#x2F;partners&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;cross-platform&#x2F;part...</a><p><a href=""https:&#x2F;&#x2F;customers.microsoft.com&#x2F;en-us&#x2F;search?sq=%22Xamarin%22&amp;ff=&amp;p=0&amp;so=story_publish_date%20desc"" rel=""nofollow"">https:&#x2F;&#x2F;customers.microsoft.com&#x2F;en-us&#x2F;search?sq=%22Xamarin%2...</a>",2018-12-07 10:36:54,18626516
3949,"I can&#x27;t share the name, but we&#x27;ve built a complete enterprise stack on Mono. There are several parts:<p>- Server, Nancy2&#x2F;Marten&#x2F;Hangfire, runs on linux<p>- Headless clients for linux and Windows (x64)<p>- GUI clients for macOS, linux and Windows (x64)<p>The server is deployed as a static fat binary. The headless clients are static binaries for linux and .NET proper for Windows.<p>The GUI clients use Eto, which in turn means:<p>- Static binary using Eto.Gtk on linux<p>- Static, signed app bundle (Gatekeeper friendly) using Eto.Xamarin on macOS<p>- .NET proper application using Eto.Wpf on Windows<p>No performance issues so far. I wish Mono would implement a GUI for the profiler though. The log profiler is great to use, but clunky in comparison with dotTrace or NProfiler.<p>The whole architecture sounds complicated but really isn&#x27;t. It&#x27;s a single solution with three* projects:<p>- Server<p>- Headless Clients<p>- Single Eto GUI for all platforms<p>- (* Target build projects for the GUI platforms, no code in here)<p>The build server then only needs to do some additional work for creating DMG installers and signing the macOS app.",2018-12-07 11:25:51,18626761
3950,"I am the main developer on an open source app called Radarr (<a href=""https:&#x2F;&#x2F;github.com&#x2F;Radarr&#x2F;Radarr"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Radarr&#x2F;Radarr</a>). It focuses on automatically downloading movies and managing said movies.<p>While we have used mono only one one platform technically (Unix), I would still like to add my own experience, since we encountered some different behaviour on macOS and Linux. Also I have spent the last week or so tracking down memory leaks for our App :)<p>First of all, tracking down memory leaks with mono is really not fun. The chances are very high, that the memory leak does not occur in the managed parts of either your or other peoples code, else the garbage collector should have collected that anyways. While you do have an integrated memory profiler, it seems that they like to change them every so often and even the current one isnt very compatible. E.g. one user sent me a profiling report, that I could neither open via GUI nor via the commandline. Furthermore, the only GUI option available is Xamarin profiler, which does not run on Linux (more on that later). While it does the job, it likes to crash a lot and eats up a huge chunk of memory, especially if you have a large profiling snapshot.<p>Since I had to deal with unmanaged leaks (as indicated by the managed snapshots I collected), I tried to use valgrind. However, it seems that mono uses SIGSEGV instead of checking for null pointers beforhand and then uses signalhandlers to throw NullPointerExceptions. This would normally not be a problem, but one part of the mono System runtime is very likely to have a NullPointerException. Thus valgrind sees a SIGSEGV and monos signal handler playing around with the stack. It decides that this is not acceptable and instantly termiantes the app. After I patched that out, valgrind seemed to work, except that it didnt find any leaks and the memory leak was not even there anymore!<p>So I just started randomly commenting out lines of functions that could potentially be involved and got lucky. I still havent figured out why that line of code leaks memory though.<p>Furthemore, I also found some memory leaks inside monos native HttpWebResponses.<p>We are still trying out figure out another memory leak that occurs and havent had any luck finding out why. Its especially hard, since this particular memory leak only occurs on Linux. (If you want to see the full discussion I recommend you look at issues: <a href=""https:&#x2F;&#x2F;github.com&#x2F;Radarr&#x2F;Radarr&#x2F;issues&#x2F;1580"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Radarr&#x2F;Radarr&#x2F;issues&#x2F;1580</a> and <a href=""https:&#x2F;&#x2F;github.com&#x2F;Radarr&#x2F;Radarr&#x2F;issues&#x2F;3157"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Radarr&#x2F;Radarr&#x2F;issues&#x2F;3157</a>).<p>On the other hand, from my experience the performance itself seems almost as good as on Windows, save for the memory leaks. Some big requests to the backend of the app might take 5-10% longer on mono, but thats negligble IMO.<p>So, in short, if you dont have any issues with performance its good. However, as soon as you do have some issues, you will be faced with a lot of problems. There is no documentation on profiling or what could cause problems, except for a few standard things thats more generally .NET related. By pure luck, I found a guid that shows how you can do profiling for your mono app in Instruments, but that didnt help either, since the leaks only occur on Linux.<p>Nevertheless, we are planning on moving to .NET Core anyways, so no I would not use mono.",2018-12-07 11:49:13,18626884
3951,Try Xamarin Profiler as a GUI :). It supports loading mlpd files and makes your life 10x easier (if it doesnt crash).,2018-12-07 11:50:50,18626889
3952,"&gt; Microsoft lost because they didn&#x27;t have the users or the apps<p>I wonder how much of it was because they had a sorry arse mobile browser? Not supporting ontouchstart etc events must have been a killer. MSPointerEvent was awfully buggy in the initial release, and what dev wants to rewrite their web app&#x2F;page to use PointerEvent?<p>Why wouldn&#x27;t you make sure Hybrid apps (Cordova etc) work well? Why not just copy WKWebView (20&#x2F;20 hindsight now!).<p>Their equivalent of WKWebView is some sort of zombie IE11 version (not edge, with different features and flaws than IE11 desktop). Hideous.<p>Disclosure: we developed a Hybrid app for Windows Phone (based on Xamarin).",2018-12-08 19:38:02,18637070
3953,"In fairness to Apple they are these days quite the Open Source company. Their main language is fully open source in every sense the word. You can get large parts of their base OS under an acceptable license as well as their stack, much of which is developed in the open or work is open sourced as Apple is able to<i>. Of course they will keep back OSS code if it means making a big splash at a presentation but I dont think that is a bad thing as such, who would deny them a bit of theatre.<p>They also do a lot of tech blogging on their Open source code, especially the Safari and WebKit team have some excellent posts regularly.<p>Sure they have proprietary magic in there but it is not as big a part of the pie as people imagine, and certainly less than in years past.<p>The same is true for Microsoft, who now famously aims to be the biggest Open Source company in the world (having acquired GitHub, Xamarin and many others, as well as made partners and friends out of enemies of the past, to help them on that journey).<p>In fact I cant think of a single major company in the business which hasnt embraced Open Source to some degree. I dont think that the Apple strategy of controlling the entire experience means what it used to anymore. It doesnt mean locking you in to just one way of doing things, we now know that we need the compiler, tools and stack to be available and truly free, as a bare minimum for this to work and experience shows that the more work we share, in general, the better an experience we can present to users and developer.<p>Open Source has won, all these companies taking on designing their own chips, datacenters, OSes, languages and so on, they would not be possible without that commonly shared mass of work.<p></i> Famously FaceTime was supposed to be an open standard, until someone threatened to sue them for damages to the tunes of X times infinity, which is a fairly large dollar amount for any given value of X.",2018-12-11 10:13:44,18654297
3954,"I haven&#x27;t really played much with Scala but I would say there are reasons why I will not and stick to F#:<p>- JVM is less efficient for generics than the CIL (casts happening at runtime underneath).<p>- I&#x27;ve read about horror stories about tailcalls in the JVM world.<p>- There&#x27;s no way to build an iOS app with Scala (i.e.: <a href=""https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;13460780&#x2F;any-way-to-use-some-scala-for-ios-coding"" rel=""nofollow"">https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;13460780&#x2F;any-way-to-use-...</a> ), while you can do easily with F# thanks to Xamarin.",2018-12-13 04:08:04,18669785
3955,From using it with Xamarin: its all well and good until reflection breaks it. Which is manageable in your own code but god help you if you pull in a third party assembly that uses reflection and your app suddenly breaks between debug and release configurations.<p>The edit-test-debug cycle for linker problems can be pretty brutal too since compilation and linking takes longer in release than debug.,2018-12-14 08:46:49,18679409
3956,"Interesting fact, when they forked the CLR, they actually started with the Silverlight code base. See <a href=""https:&#x2F;&#x2F;channel9.msdn.com&#x2F;Blogs&#x2F;dotnet&#x2F;NET-Foundations-2015-03-04"" rel=""nofollow"">https:&#x2F;&#x2F;channel9.msdn.com&#x2F;Blogs&#x2F;dotnet&#x2F;NET-Foundations-2015-...</a> (somewhere near the beginning)<p>I guess it makes sense. Before .NET Core, Silverlight was the most x-plat version of the Microsoft .NET Runtime(s) (excluding Xamarin&#x2F;Mono), so it would&#x27;ve been a good starting point.",2018-12-14 09:49:41,18679661
3957,"Microsoft acquired Xamarin, the corporate sponsors of Mono, in 2016.",2018-12-15 04:43:54,18687094
3958,"AOT not supporting generics? that&#x27;s a pretty bad reading&#x2F;summary of the webpage you link to (not to mention, that page may be a bit outdates, and more cases are supported by AOT now; take in account this is the mode that iOS apps developed with Xamarin need to use).",2018-12-19 02:20:13,18712497
3959,"&gt; So List&lt;int&gt; doesn&#x27;t necessarily get JItted<p>It does, if the AOT compiler is advanced enough to examine all code and determine that `int` is a possible type being used with List&lt;T&gt;. Mono has had a lot of advancements on these techniques over the years, as it&#x27;s the only way for them to let Xamarin devs deploy apps on the iPhone.",2018-12-19 06:25:14,18713531
3960,&quot;VS for Mac&quot; is surprisingly decent these days. Change it to a dark theme and reduce the font-size and it&#x27;s a good experience. It&#x27;s much more stable than some of the earlier versions when packaged as &quot;Xamarin IDE&quot;.,2018-12-19 10:28:26,18714670
3961,"I wonder what&#x27;s included for the regex of .net. Eg: asp.net core, dotnet, c#, VB.net, f#, .net, xamarin,...<p>Because there are a multitude of possibilities.",2018-12-20 17:11:54,18726759
3962,Agreed. It looks like the author may be looking for something like a &#x2F;.net&#x2F; regexp? I don&#x27;t think .net is popular at all in HN job postings. A better regex would be pretty much what you suggest:<p><pre><code>    &#x2F;asp\.net|dotnet|c#|VB.net|f#|xamarin&#x2F;i</code></pre>,2018-12-21 01:00:11,18730666
3963,"A proper repl seems the first step to start building such interactive&#x2F;iterative tooling; F# has one so maybe that is a better start than C# for this?<p>C#.NET Core suffers (as far as I know) from this;<p><a href=""https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;47394231&#x2F;csharpscript-uses-incompatible-internal-type-representations-at-every-external-c"" rel=""nofollow"">https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;47394231&#x2F;csharpscript-us...</a><p>I think Mono has a solution, but as far as I know .NET Core basically is unusable for scripting because of this for C# which makes the kind of scenario you want basically impossible from the get go.<p>It is a bit weird not more attention is given to it given so many people ache for an interactive C# environment, especially for this purpose, but also for faster iteration with Xamarin on iOS&#x2F;Android etc (all of my colleagues would save a lot of time on development with this for Xamarin mobile dev especially).<p>If that has been fixed, there is still the lack of libraries but that and the rest of what is needed is at least not basically impossible to solve by mere mortals.",2018-12-21 02:17:57,18731001
3964,"Visual Studio has a C# REPL sice version 2015.<p>Then there are Xamarin Workbooks, like Swift playgrounds but for .NET.",2018-12-21 08:31:57,18732093
3965,"I agree with you, but having the Mono interpreter (which does not have the same issues) fully work for mobile (Xamarin Android&#x2F;iOS) and desktop (it is with --interpreter) and web (it is with Blazor) would make life easier for this kind of mainstream development.",2018-12-21 13:27:47,18733124
3966,"How about Xamarin? It doesnt give you a website, but it seems to cover the rest.",2018-12-21 16:58:30,18734582
3967,"That&#x27;s why I said _for me_.<p>I&#x27;ve no idea how good Xamarin is at doing the things that it does, but even if I hadn&#x27;t invested X into my web-based components Xamarin would still force me to reimplement them again in case I need them in my website. That&#x27;s not cross-platform enough for me, Electron in better in this regard.",2018-12-21 18:59:09,18735596
3968,"Xamarin, unfortunately.",2018-12-23 20:17:32,18748085
3969,1. Xamarin Android because I wanted to develop a native Android app and I prefer Visual Studio<p>2. Xamarin Forms because my new job requires it<p>3. UX Design because I want to improve usability of my systems<p>4. Software Project Management because I want to move to management<p>These days I try to avoid learning new technologies. I focus mostly on improving what I already know. I only learn a technology when I want to use it and there will be a benefit for using it compared to what I am already know.,2018-12-23 21:01:32,18748303
3970,"HARDWARE<p>Phone: Xiaomi Mi Max 3 (4GB memory, 64GB storage)<p>Laptop: Teclast F5 (8GB memory, 128GB storage)<p>Keyboard: Kinesis Advantage<p>Mouse: Logitech Trackman Cordless Optical<p>SOFTWARE<p>OS: Windows 10<p>IDE: Visual Studio Community, VS Code<p>Languages: C#, JavaScript<p>Frameworks: Xamarin, Uno<p>Source control: Git<p>Browser: Google Chrome<p>SERVICES<p>VoIP: <a href=""https:&#x2F;&#x2F;voip.ms"" rel=""nofollow"">https:&#x2F;&#x2F;voip.ms</a><p>Domains: <a href=""https:&#x2F;&#x2F;domains.google.com"" rel=""nofollow"">https:&#x2F;&#x2F;domains.google.com</a>",2018-12-27 06:46:46,18767895
3971,"Author here.<p>Ive worked on C# codebases professionally for about four years. Theyre not open source because half of that time I worked on enterprise software (ASP .NET MVC, Entity Framework, NHibernate) and another half was a closed source product (Xamarin aka MonoTouch, Rx). Prior to that I worked a little on an open source static analysis tool (Gendarme) using Mono Cecil.<p>Prior to that I was moderating the .NET section on one of the largest Russian programming forums and translated documents like LINQ Overview when they came out. I also have a silver C# badge on StackOverflow. (<a href=""https:&#x2F;&#x2F;stackoverflow.com&#x2F;help&#x2F;badges&#x2F;39&#x2F;c-sharp?userid=458193"" rel=""nofollow"">https:&#x2F;&#x2F;stackoverflow.com&#x2F;help&#x2F;badges&#x2F;39&#x2F;c-sharp?userid=4581...</a>)<p>I know how types work. My remark was that I havent worked with C# for about four years. Im not aware of changes between versions 5 and 9, and might have forgotten some of the C# syntax for things like lambdas, having worked a lot with JS since then.",2018-12-29 13:27:59,18783466
3972,"No, not that many. I&#x27;ve worked with C# and .NET ecosystem (WinForms, ASP .NET MVC, NHibernate, EF, MSSQL), later Django&#x2F;Flask&#x2F;Python, later Xamarin&#x2F;Cocoa and Rx, yet later Backbone, AngularJS, React. Haven&#x27;t worked with low-level stuff at all.",2018-12-29 20:13:29,18785457
3973,"According to the &quot;Stack Overflow Flutter questions&quot; metric:<p><a href=""http:&#x2F;&#x2F;sotagtrends.com&#x2F;?tags=[ionic-framework,react-native,flutter,xamarin]&amp;relative=false"" rel=""nofollow"">http:&#x2F;&#x2F;sotagtrends.com&#x2F;?tags=[ionic-framework,react-native,f...</a><p>Also according to the &quot;number of Flutter jobs posted on jobstreet.co.uk&quot;. Three months ago it was 5 [0] now it&#x27;s 13. For reference the number of React Native jobs has grown from 43 to 74. Let&#x27;s see where things stand in another 3 months.<p>[0] <a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=18029570"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=18029570</a>",2019-01-01 09:13:33,18799521
3974,"Chrome and Angular dropping Dart 1.0 was a lesson.<p>I will only bother with Dart 2.x and Flutter if Google actually replaces Android frameworks with it, and makes it unavoidable.<p>For iOS&#x2F;Android apps, PWAs, Xamarin, Qt, React Native, Unity&#x2F;Unreal, SDL, SFML, Cocos2d-x, Godot are much more appealing with CV worthy programming languages.",2019-01-01 10:21:33,18799645
3975,"Location: Algiers, Algeria (UTC+1)
Remote: Yes
Willing to relocate: Yes
Technologies: C#, .NET, Azure, ASP.NET, Web API, WPF, Xamarin, Python, JavaScript. Malware Analysis, Penetration Testing, Web Security.
LinkedIn: <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;medkamelbouzekria&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;medkamelbouzekria&#x2F;</a>
Github : <a href=""https:&#x2F;&#x2F;github.com&#x2F;thesilvereagle"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;thesilvereagle</a>
Website : <a href=""http:&#x2F;&#x2F;medkamelbouzekria.com"" rel=""nofollow"">http:&#x2F;&#x2F;medkamelbouzekria.com</a>
Resume : <a href=""https:&#x2F;&#x2F;1drv.ms&#x2F;b&#x2F;s!AhcSMseX4W6mjkvRVGodi-0HbhCt"" rel=""nofollow"">https:&#x2F;&#x2F;1drv.ms&#x2F;b&#x2F;s!AhcSMseX4W6mjkvRVGodi-0HbhCt</a>
Email: medkamelbouzekria@gmail.com &#x2F; medkamelbouzekria@hotmail.fr<p>Over three years of work experience, I am a Software Developer &amp; IT security Engineer, I have a passion for software development &amp; IT security.<p>What should you know about me?<p>- I have the ability to learn quickly.
- I have high collaborative and Communication skills that allow me to work effectively with team members and clients.
- I have the tenacity, curiosity, and creativity in solving new problems and addressing difficult technical issues.
- I have the passion for learning and improving my skills.
- I like to see people impressed by the beautiful things that I can do.<p>What makes me successful?<p>Absolute dedication, unlimited passion and the will to deliver the highest quality possible in the time given.<p>What am I looking for?<p>I am looking for an opportunity to work:
- With energetic team members who are passionate about improving the customer experience through innovative solutions.
- In an environment in which I can pursue my passions and do what I was meant to do (Inspired Community).
- I want to be a part of a team with which I combine my expertise, skills, and knowledge. To create together exceptional, breath-taking campaigns for national and international clients.",2019-01-01 17:44:24,18801220
3976,"There&#x27;s also Xamarin which should allow for close to native performance, provides a native user experience and allows for a lot of code sharing between iOS and Android. And, it&#x27;s also proven tech. I also like that Xamarin follows up on new iOS and Android releases really quickly.",2019-01-02 08:08:18,18804870
3977,"&lt;still-unnamed startup in stealth mode&gt; | REMOTE | 20-40h per week freelancers<p>Sorry for the vague description but I can tell you more about the product we&#x27;re building when you apply. Hopefully I can attract you in a sufficient way with our tech stack (see below) and some keywords (blockchain, DLT, bitcoin, ethereum, mimblewimble&#x2F;grin, smart contracts, DAI, atomic swaps, etc).<p>Job positions:<p>- Build engineer: you are a Linux-er who has some past experience building deb or rpm packages, are excited about reproducible builds, and are willing to learn (if you don&#x27;t already know) new things such as snap or flatpak. gitlabCI and&#x2F;or AzureDevOps is a plus. (Might do some DevOps work after we come out of stealth mode as well.)<p>- Xamarin developer: C# experience as a minimum, F# desirable (we can also mentor you on the transition from C# to F#), interested&#x2F;knowledgeable in Rust is another plus.<p>- Rust&#x2F;blockchain developer: experience in Rust, or smart contracts (especially EVM or Ivy) is a must. Desirable to have experience writing bindings or zkSNARKs.<p>Important perk for all positions: all the code&#x2F;scripts you&#x27;ll write will be opensource, at least for the first 6months.<p>Write me at andrew.forsure@gmail.com",2019-01-02 16:32:16,18807367
3978,"SEEKING FREELANCERS in SouthEastAsia(RemoteWelcome)<p>&lt;still-unnamed startup in stealth mode&gt; | REMOTE | 20-40h per week freelancers<p>Sorry for the vague description but I can tell you more about the product we&#x27;re building when you apply. Hopefully I can attract you in a sufficient way with our tech stack (see below) and some keywords (blockchain, DLT, bitcoin, ethereum, mimblewimble&#x2F;grin, smart contracts, DAI, atomic swaps, etc).<p>Job positions:<p>- Build engineer: you are a Linux-er who has some past experience building deb or rpm packages, are excited about reproducible builds, and are willing to learn (if you don&#x27;t already know) new things such as snap or flatpak. gitlabCI and&#x2F;or AzureDevOps is a plus. (Might do some DevOps work after we come out of stealth mode as well.)<p>- Xamarin developer: C# experience as a minimum, F# desirable (we can also mentor you on the transition from C# to F#), interested&#x2F;knowledgeable in Rust is another plus.<p>- Rust&#x2F;blockchain developer: experience in Rust, or smart contracts (especially EVM or Ivy) is a must. Desirable to have experience writing bindings or zkSNARKs.<p>Important perk for all positions: all the code you&#x27;ll write will be opensource, at least for the first 6months.<p>Write me at andrew.forsure@gmail.com",2019-01-02 16:33:24,18807380
3979,"Location: Porto, Portugal<p>Remote: Yes, only part-time<p>Willing to relocate: No<p>Technologies:<p>So far I have some Fullstack experience:<p>* PHP with Laravel<p>* Python with Django<p>* Ruby on Rails<p>* JS with TS, CSS with Bootstrap, SASS, VueJS and React<p>* SQL with Postgres, MySQL, SQLite<p>Other:<p>* C&#x2F;C++ (did some Linux kernel work with C)<p>* Rust (one can hope)<p>* C# with Xamarin (made an app)<p>* Java (backend work stuff, http client, app)<p>* Golang (built HTTP service client)<p>Rsum&#x2F;CV: <a href=""https:&#x2F;&#x2F;github.com&#x2F;Ross65536"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Ross65536</a><p>Email: rk65536 at protonmail dot com",2019-01-02 17:29:04,18807979
3980,"i develop typically 3 types of things, backend rest services, web apps, and mobile apps.  for me to truly rid myself of my macbook pro, i would need the following, or equivalents:<p>1.  the ability to start vms, preferably locally, i use these to run persistent services like redis, rabbitmq, databases, etc.  i have this philosophy where my dev env needs to get as close as possible to the production env (at least from a software stack perspective) which means linux, yet it cant cost me as much as a production env.  homebrew is great, but i try to stay away as much as possible because its a little different from my production env.  accessing an ec2 instance or rds instance to access my postgres database is a bit overkill, i want things fast during development, ie local.  sometimes im in places with no wifi or 4g coverage is spotty, this would be a nightmare.<p>2.  i use visual code for all development, sometimes vi if i dont have a gui env, visual code is lightweight and pretty solid.  im not 100% stuck on visual code, so if theres some browser based derivative of it or wsywig for coding then im good.  visual code is written in electron so nodejs, so i dont think its impossible.  web development, html, js, css, this can all be done on an ipad relatively well, all the browsers i need to support are available.  theres typically no compilation that needs to happen, unless youre using nodejs modules on your frontend.  i seem to remember some company providing a cloud service that allows you to develop remotely, i think they were bought by github&#x2F;msft or someone.  kind of an interesting area.<p>3.  backend dev, typically i use golang, this becomes a bigger problem, surely i could ssh somewhere and compile, or use some x11&#x2F;vnc-like tool since i prefer a graphical ide, but that defeats the purpose of my 1000 usd ipad.  its not really a dumb terminal or thin client per se, i have enough compute power, i want to leverage it.  plus id need to be spending all this money on ec2 like instances.<p>4. xcode, this is another major issue, im stuck on xcode, sure i could use xamarin, but i dont think that runs on ios yet either.  if this were resolved, i could strongly consider scraping my macbook pro.<p>sounds kind of interesting if there could be a monthly service that could be purchased that provides you with remote dev envs without all the fuss of installing, managing any of it.  e.g.  i write code in a browser ide, it gets compiled in the cloud somewhere, deployed, and i can access it.  i can connect different services to it, and testing is fully automated.  i think id consider paying for something like this, but itd have to be relatively cheap because otherwise i might as well do everything myself locally.  im thinking 5 usd a month max.<p>i havent used chromebook, but i think its closer to a dev env than ipad pro at the moment, i think you can even start containers and such on it.",2019-01-04 01:35:01,18821239
3981,"Pushing updates without going through the app store has been allowed by Apple as long as the assets being updated are not binary code; specifically CSS, HTML, and JavaScript are okay (I wonder whether WebAssembly will be considered &quot;binary&quot; or not... will be interesting to see).  I convinced a former employer to abandon their Xamarin-built app and switch to Ionic (Cordova with nice, fancy UI additions) specifically because they could push updates to the app without going through the app store.  Officially (unless things changed?) the Google Play store says this isn&#x27;t allowed but there is no review process with Google Play so publishing a new app and then pushing an update for the previous version won&#x27;t likely get you in trouble. If someone HAS been busted by the Google Play cops for this it would be news to me.",2019-01-04 23:02:14,18828574
3982,"I really enjoy C# as a language and I think .NET core has some great potential if Microsoft can fulfill the cross platform promise.<p>That said, this article makes a lot of mistakes.  Xamarin and Unity use mono not .net core.<p>.Net core isn&#x27;t ready to bet the farm on.  The cross platform tooling is still too weak atm.  Its a huge headache to get profile data on Linux.",2019-01-07 08:41:17,18843722
3983,"Competition in a free market is good, but in the presence of monopolies, it&#x27;s a self-destructing concept.<p>TechCrunch wrote[0] &quot;This feels like a sign of goodwill on behalf of Microsoft, which closed its acquisition of GitHub last October, with former Xamarin CEO Nat Friedman taking over as GitHubs CEO.&quot; I believe it&#x27;s more of a sign of an attempt to kill GitHub&#x27;s rivals by hurting their revenue streams. As  Aaron Levie, co-founder and chief executive of Box once said in 2014, These guys will drive prices to zero, [...] you do not want to wait for Google or Amazon to keep cutting prices on you. Free is not a business model.[1]<p>[0]: <a href=""https:&#x2F;&#x2F;techcrunch.com&#x2F;2019&#x2F;01&#x2F;07&#x2F;github-free-users-now-get-unlimited-private-repositories&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;techcrunch.com&#x2F;2019&#x2F;01&#x2F;07&#x2F;github-free-users-now-get-...</a><p>[1]: <a href=""https:&#x2F;&#x2F;www.nytimes.com&#x2F;2014&#x2F;08&#x2F;25&#x2F;technology&#x2F;box-dropbox-and-hightail-pivot-to-new-business-models.html"" rel=""nofollow"">https:&#x2F;&#x2F;www.nytimes.com&#x2F;2014&#x2F;08&#x2F;25&#x2F;technology&#x2F;box-dropbox-an...</a>",2019-01-07 19:20:49,18848935
3984,"&gt; If iOS had required Lisp instead of Objective-C, then Lisp would have been popular right now.<p>Probably.  I wonder if we wouldn&#x27;t have ended up with more Xamarins instead.",2019-01-08 16:37:17,18856845
3985,"If Microsoft had won in Mobile by licensing Windows Mobile, where would it have gotten them? Google won over OEMs and got a whopping $21 billion in profit over eight years for their trouble.<p><a href=""https:&#x2F;&#x2F;www.theverge.com&#x2F;2016&#x2F;1&#x2F;21&#x2F;10810834&#x2F;android-generated-31-billion-revenue-google-oracle"" rel=""nofollow"">https:&#x2F;&#x2F;www.theverge.com&#x2F;2016&#x2F;1&#x2F;21&#x2F;10810834&#x2F;android-generate...</a><p>There was speculation that Microsoft made more from Android for years from patents than Google made.<p>Besides, Microsoft is still making pretty good money on mobile by targeting developers with Azure and tools like Xamarin",2019-01-08 23:50:08,18860978
3986,"Some part of the industry did; in MS shops a lot of XAML is used. The old MS would&#x27;ve pushed XAML for web applications a lot more, but the new is more of whatever the developer wants. There are people working on XAML everywhere (all platforms including web), especially in the Xamarin.Forms camp, but there is no force or adoption there. It&#x27;s mostly WPF (and a bit of Xamarin) that uses XAML, but that&#x27;s a large group still; I encounter it everywhere at partners&#x2F;clients (usually Java runs on the servers &#x27;in the basement&#x27; and some non trivial amount of WPF&#x2F;Xamarin.Forms (XAML) (now with .NET Core where possible; even the .NET only shops do seem to like it) runs on the front facing systems).",2019-01-09 02:54:48,18861888
3987,"SEEKING WORK - Warsaw, Poland<p>Remote: Preferred<p>Willing to relocate: no<p>Technologies: C#, Java, Swift, Xamarin&#x2F;Xamarin.Forms, native Android&#x2F;iOS, UWP, WPF, Windows Forms, Bootstrap, jQuery, Xamarin Test Cloud, Appium, Flutter, ASP.NET MVC&#x2F;Web API&#x2F;Core, Entity Framework 6&#x2F;Core, Azure Functions, Keras&#x2F;Tensorflow, NLP<p>Resume&#x2F;CV: <a href=""https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;1rBbxFsJeD990m1KsWl1mlT4QBkkcviy6"" rel=""nofollow"">https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;1rBbxFsJeD990m1KsWl1mlT4QBkk...</a><p>Email: mierzynski.michal@gmail.com<p>Linkedin: <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;micha%C5%82-mierzy%C5%84ski-a6706792&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;micha%C5%82-mierzy%C5%84ski-a670...</a>",2019-01-10 10:50:19,18872927
3988,"You don&#x27;t have to read past the title to find a lie. Why on earth would Improbable continue to support the infrastructure for a handful of legacy Unity customers? Unity is killing those games, and they know it.<p>Unity Technologies has a history of harming their platform out of greed; it was stuck on an ancient version of Mono for the better part of a decade because they refused to do a deal with Xamarin.",2019-01-11 03:14:30,18880734
3989,"They already did started that with their Android launcher; Arrow. (<a href=""https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.microsoft.launcher"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.microsoft....</a>)<p>It&#x27;a also why they&#x27;re updating Windows 10 steadily to support integrating with Android deeply as well.<p>Not to mention they&#x27;ve working on their Linux subsystem for Windows (WSL), cross-platform services and apps like VSC, buying Github, Xamarin, etc), and also porting&#x2F;improving macOS apps like Visual Studio and Office on macOS.<p>Microsoft&#x27;s cash cow is now their services and why they&#x27;re turning previous Windows and Office cash cows into subscription services. I suspect they plan to do an overall Microsoft service; get Windows, Office, OneDrive, and Surface for a monthly price.<p>Which is what I suspect Apple will do as well as Google; all of them will do software+hardware bundle subscription service. Imagine paying 100$ a month to get latest hardware and software all the time.",2019-01-13 16:00:09,18897137
3990,"ReactNative, Xamarin or Cordova abstractions may be a better overall experience.",2019-01-13 22:15:10,18899060
3991,"<a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;android&#x2F;platform&#x2F;android-job-scheduler"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;android&#x2F;platform&#x2F;an...</a>   
compare microsoft&#x27;s documentation of the same thing with google&#x27;s documentation and you will see where the failing happens. in comparison intentservices(the old way of doing bg tasks recommended by everyone) are documented the same way by both google and microsoft and so that gets used instead.",2019-01-15 05:08:31,18908979
3992,"Yup, it&#x27;s ridiculous cargo cultism from mediocre C# programmers. There&#x27;s nothing about C# that forces you into MS&#x27;s ecosystem.<p>In 2014, well before Microsoft&#x27;s dotnetcore oss adventure, I ran the dev team at a startup. Our entire backend was C#. Our devs used the OS of their preference, and so we had Mac, Windows and Linux. Xamarin Studio is (was?) a remarkably decent IDE for something so niche.<p>We hosted it in Docker (bad call, it was way too new then) on Mono (great call, it Just Worked), on Linux. Data in Postgres. All of this was as easy as doing the same with eg JS or Java (and arguably easier than eg Ruby because C# has a proper cross platform dependency story).<p>There&#x27;s nothing about C# that forces you to use SQL Server or Azure. Absolutely nothing.",2019-01-15 07:00:46,18909304
3993,".NET also does monomorphisation when doing AOT compilation to native code, on .NET Native or Xamarin for iOS for example.",2019-01-15 22:30:17,18916203
3994,".NET has some warts but it&#x27;s pretty plug and play.  Exception are xamarin, which I give them a pass for because most cross platform technologies are a little rough getting started, and office 365 add-ons.<p>I don&#x27;t have any direct experience but I also assuming sharepoint is awful.",2019-01-20 08:15:58,18951882
3995,"I consider not having to write an app in Swift&#x2F;Metal&#x2F;Whatever Apple crap and different app in Java&#x2F;NDK&#x2F;whatever Android crap to be pretty &quot;beautiful&quot;.<p>That said, I use Xamarin instead of this.",2019-01-21 15:48:31,18961086
3996,"I am always wondering to what extent logo and company name matter. Google has rather boring logo yet they are successful. I guess that many people who heard for the first time about mobile apps framework Xamarin thought &quot;hmm, this must be some medicine for diarrhea&quot; but still this tool got pretty popular.",2019-01-22 16:10:11,18969280
3997,"My opinion as well, the side remark as oriented towards those that always complain about WPF, Silverlight, UWP and Xamarin XAML being a bit different, when they actually share the same underlying concepts anyway.",2019-01-24 07:47:11,18986754
3998,"Facebook encrypted messaging! What&#x27;s next, military intelligence? How about a vegan big-mac? Maybe a quality automobile by GM?<p>I think steganography is an excellent way to deliver encrypted messaging to consumers. It has so many inherent features that I&#x27;m surprised it isn&#x27;t already widely used. Let&#x27;s see:<p>- easy to recognize but hard to detect<p>- can pass through any channel that accepts images<p>- massive storage capacity (10MB+ depending on how you roll)<p>- encryption easily baked in!<p>- many additional use cases (store your kids ssc or passwords, store encrypted notes, anonymous communication by just posting an image online somewhere).<p>Everyone should know Facebook encryption is about as good as free (or maybe most) VPN encryption. But with steganography all you need is an open source application that you can trust or a popular codec.<p>If anyone is interested I have a stalled steganography project that I&#x27;m waiting to get back to (once I finish a ASP.NET Core book) <a href=""https:&#x2F;&#x2F;github.com&#x2F;smchughinfo&#x2F;steganographyjr"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;smchughinfo&#x2F;steganographyjr</a>. I&#x27;m making it as easy to use as possible (UWP, iOS, Android, a website, Web API, Nuget, and possibly a native app for Debian if I get the time) Most of that work, though, you get for free with .NET Standard + Xamarin but it&#x27;s still a lot of work.",2019-01-26 18:00:55,19007443
3999,15.3 has break our work for weeks. We used VM with older versions to work forward. Whole xamarin compilation were broken.,2019-01-27 07:56:18,19010803
4000,"A considerable portion of Mono&#x27;s original developers &amp; current maintainers are on Microsoft&#x27;s payroll and have been since the acquisition of Xamarin years ago. Because large portions of .NET and C# stewardship moved over to the .NET foundation, community members have a formal role in the development of both as well.<p>So in practice, &#x27;pulling the rug out from under&#x27; Mono (or .NET Core) users would be pulling the rug out from under paying customers.",2019-01-27 09:14:41,19011015
4001,"- &quot;better performance, better battery use&quot; - this is not true at all. What makes you think so?<p>- &quot;better integration, better look and feel&quot; - it depends a lot on available web standards, which are constantly improving.<p>You forgot about disadvantages: Developers need to develop several versions of their app (they could spend that time on improving one version). They need several devices for testing (luckily, there are Unity and Xamarin). Authors have to pay fees for having their product in various &quot;stores&quot;. Big corporations (such as Google, Apple, Microsoft, Steam) can throw you away anytime for any reason, accuse you of various violations. But noone can prevent you from going to a website.",2019-01-27 15:45:55,19012082
4002,"Bridge between Lua and the .NET<p>Windows&#x2F;Mac&#x2F;Linux (.NET and .NET Core)
Xamarin: iOS, tvOS, watchOS
Xamarin.Android",2019-01-28 19:04:19,19020120
4003,I&#x27;ve been working on a Xamarin app for a while and for the most part the environment is ok. However recently there have been a bunch of unexplainable or unreproducible user crashes because of mono.<p>There is talk of moving away from Xamarin and rewriting the app in Swift and Kotlin. My question is for those of you who have gone from Xamarin to native. What resources did you use and what advice could you offer?<p>Thanks!,2019-01-29 14:33:11,19026552
4004,Thank you for the suggestion but we&#x27;re either staying with Xamarin or going native.<p>I&#x27;d rather optimize the Xamarin code than use a web framework for a mobile app. On iOS you don&#x27;t have any control over how the web view renders your app. Any future update could break your app.,2019-01-29 21:21:18,19029886
4005,Exactly my thoughts. Is it a web something? Xamarin something? Unity something? ...,2019-01-31 08:27:40,19043330
4006,"Nice,even their sample apps are only built in native instead of,you know,also adding their own crossplatform offering Xamarin?although i supposed their windows sample can be adapted. i wonder if Xamarin has been abandoned internally",2019-01-31 09:37:48,19043611
4007,"The last commit in the Windows-specific code was in May 2017, only a year after Microsoft acquired Xamarin. Perhaps, there wasn&#x27;t an internal push, by then, to go full-Xamarin for everything?<p>It looks like the Rome SDK, itself, (for Android and iOS) only went GA two days ago[0]; so the source code in the github repo was probably <i>way</i> ahead of the curve, in terms of what would be supported at GA.<p>Maybe Xamarin, at the time, wasn&#x27;t going to be supported but now is?<p>To allay your fears, here&#x27;s the Xamarin sample[1] I found.<p>[0] - <a href=""https:&#x2F;&#x2F;blogs.windows.com&#x2F;buildingapps&#x2F;2019&#x2F;01&#x2F;29&#x2F;announcing-project-rome-sdk-for-android-and-ios-version-1-0&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blogs.windows.com&#x2F;buildingapps&#x2F;2019&#x2F;01&#x2F;29&#x2F;announcing...</a><p>[1] - <a href=""https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;project-rome&#x2F;tree&#x2F;0.8.1&#x2F;Xamarin"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;project-rome&#x2F;tree&#x2F;0.8.1&#x2F;Xamarin</a>",2019-01-31 11:16:09,19043977
4008,"still-unnamed startup in stealth mode&gt; | REMOTE | 20-40h per week freelancers
Sorry for the vague description but I can tell you more about the product we&#x27;re building when you apply. Hopefully I can attract you in a sufficient way with our tech stack (see below) and some keywords (blockchain, DLT, bitcoin, ethereum, mimblewimble&#x2F;grin, smart contracts, DAI, atomic swaps, etc).<p>Job positions:<p>- Build engineer: you are a Linux-er who has some past experience building deb or rpm packages, are excited about reproducible builds, and are willing to learn (if you don&#x27;t already know) new things such as snap or flatpak. gitlabCI and&#x2F;or AzureDevOps is a plus. (Might do some DevOps work after we come out of stealth mode as well.)<p>- Xamarin developer: C# experience as a minimum, F# desirable (we can also mentor you on the transition from C# to F#), interested&#x2F;knowledgeable in Rust is another plus.<p>- Rust&#x2F;blockchain developer: experience in Rust, or smart contracts (especially EVM or Ivy) is a must. Desirable to have experience writing bindings or zkSNARKs.<p>Important perk for all positions: all the code&#x2F;scripts you&#x27;ll write will be opensource, at least for the first 6months.<p>Write me at andrew.forsure@gmail.com<p>PS: Abstain from applying if you have&#x2F;expect a managerial&#x2F;lead role. We need manpower, not decision makers. (That doesn&#x27;t mean you won&#x27;t make decisions, just that we won&#x27;t pay you to solely make decisions.)",2019-02-01 23:38:22,19059856
4009,"The couple times I&#x27;ve looked at VS for mac, the install was painful and broken.  Even then a lot of the features one might look for (like TFSVC, and database project support) are missing.  I know it&#x27;s rebranded and expanded from Xamarin studio, I do home 2019 is better.<p>I really like VS Code and mostly stick to that as much as I can.",2019-02-05 22:50:04,19090840
4010,"They have ported their CLR, it&#x27;s called .Net Core. If you need the legacy .Net Framework on macOS, Linux and the like, you still need Mono,which is not bad at all. It powered Xamarin and Unity for years.",2019-02-06 07:15:32,19093340
4011,"&quot;Xamarin Studio&quot; was the IDE worked on by Xamarin (which was bought by MS.  (IIRC itself was a fork of SharpDevelop).  Since then, there&#x27;s been a lot of work in rebranding and improving the UX, I don&#x27;t want to understate that.  It runs under mono for Mac, but can develop projects targeting mono as a Framework option as well as .Net Core, which is a ground up re-implementation of .Net itself that is cross-platform from the start and well supported.<p>My complaints are mainly that it was painful to install (unsure of current version), and in the end missing a couple of features that I needed and fallback to windows currently.<p>Microsoft database projects are a project type that does builds against an MS-SQL database and afaik can only be built on windows (even though SQL&#x27;s core runs well with windows&#x2F;docker).<p>TFSVC is the TFS Version Control system that TFS uses, not to be confused with Git, which is now the preferred version control for most using TFS (and Azure DevOps).  TFSVC is similar to SVN for practical comparisons.  However, the tooling outside of windows kind of sucks, and there is no support for this version control system in VS for Mac.  The eclipse plugin for TFSVC is probably the best option for a decent GUI surrounding the version control system.",2019-02-06 17:14:34,19097140
4012,"(Serious question) Isn&#x27;t this what Java UI frameworks (swing&#x2F;javafx&#x2F;etc) are supposed to address? It&#x27;s been a while since I&#x27;ve been in the JVM universe so I&#x27;m genuinely curious.<p>Also, what about Xamarin&#x2F;C#?  Going from Kotlin to C# should be pretty smooth and Xamarin is supposed to be pretty usable.",2019-02-06 17:28:18,19097330
4013,"SEEKING WORK - Warsaw, Poland<p>Remote: Preferred<p>Willing to relocate: no<p>Technologies: C#, Java, Swift, Xamarin&#x2F;Xamarin.Forms, native Android&#x2F;iOS, UWP, WPF, Windows Forms, Bootstrap, jQuery, Xamarin Test Cloud, Appium, Flutter, ASP.NET MVC&#x2F;Web API&#x2F;Core, Entity Framework 6&#x2F;Core, Azure Functions, Keras&#x2F;Tensorflow, NLP<p>Resume&#x2F;CV: <a href=""https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;1rBbxFsJeD990m1KsWl1mlT4QBkkcviy6"" rel=""nofollow"">https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;1rBbxFsJeD990m1KsWl1mlT4QBkk...</a><p>Email: mierzynski.michal@gmail.com<p>Linkedin: <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;micha%C5%82-mierzy%C5%84ski-a6706792&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;micha%C5%82-mierzy%C5%84ski-a670...</a>",2019-02-08 15:04:10,19114785
4014,"Location: Warsaw, Poland<p>Remote: Preferred<p>Willing to relocate: no<p>Technologies: C#, Java, Swift, Xamarin&#x2F;Xamarin.Forms, native Android&#x2F;iOS, UWP, WPF, Windows Forms, Bootstrap, jQuery, Xamarin Test Cloud, Appium, Flutter, ASP.NET MVC&#x2F;Web API&#x2F;Core, Entity Framework 6&#x2F;Core, Azure Functions, Keras&#x2F;Tensorflow, NLP<p>Resume&#x2F;CV: <a href=""https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;1rBbxFsJeD990m1KsWl1mlT4QBkkcviy6"" rel=""nofollow"">https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;1rBbxFsJeD990m1KsWl1mlT4QBkk...</a><p>Email: mierzynski.michal@gmail.com<p>Linkedin: <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;micha%C5%82-mierzy%C5%84ski-a6706792&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;micha%C5%82-mierzy%C5%84ski-a670...</a>",2019-02-08 15:06:03,19114807
4015,"Reference counting is a garbage collection algorithm as per CS literature, you are mixing it up with tracing garbage collection algorithms.<p>Swift makes use of SIL and LLVM bitcode before the final binary is produced.<p>Likewise C# can be AOT compiled to actual machine code via NGEN, .NET Native, CoreRT and Mono&#x2F;Xamarin.",2019-02-11 06:10:02,19132421
4016,"Seems like Microsoft would be the obvious choice.  They just bought Xamarin, they&#x27;re finally in a good spot with regards to C#&#x27;s growing cross platform viability and they&#x27;re actually a game publisher.<p>I don&#x27;t really know why MS would bother unless not doing so would risk a Unity collapse and a loss of a lot of C# development.",2019-02-12 09:10:25,19142109
4017,"Yup its C# and then calling through to respective APIS for Directx 11&#x2F;12&#x2F;Vulcan etc and via xamarin for mobile. Coming from a C&#x2F;C++ engine developer background I was very pleasantly suprised how performant Xenko is.  It easily gives Unity a run for its money, C#7 is a nice scripting environment and the renderer is a thing of beauty both architecturally and in terms of output.<p>Its worth checking out.",2019-02-12 18:23:11,19146043
4018,"Hello, HN!<p>We&#x27;re Antonio, David, Jason, and Mark. Were building Glide (<a href=""https:&#x2F;&#x2F;glideapps.com"" rel=""nofollow"">https:&#x2F;&#x2F;glideapps.com</a>). Before this we worked on Xamarin, quicktype, Ubuntu, Mono, and GNOME Do :D<p>Glide makes it easy &amp; fun for anyone to create apps without code. Pick a Google Sheet and Glide assembles a polished, data-driven app that you can customize, share as a PWA, and publish to the App Store and Google Play if you desire.<p>We&#x27;ve spent the last decade building developer tools. In that time we&#x27;ve watched thousands of developers struggle to design, implement, and maintain apps, and most developers we know avoid mobile development altogether.<p>Apart from developers, we hear worthy app ideas from non-technical colleagues, friends, and family every day: apps for work, new business ideas, and silly apps just for fun. All of these people can make websites, so why can&#x27;t they make apps?<p>We were dismayed to find that there are hundreds of &#x27;low-code app builders&#x27;, but none that excited us. They&#x27;re enterprisey, they output kludgy apps, and their low-code contrivances often felt more complicated than the code they replaced. Why hasn&#x27;t anyone made the Google Docs or Figma of apps yet, we wondered.<p>That&#x27;s our ambition. Glide makes app development web-based, collaborative (coming), and fun by combining data-bound components with a familiar spreadsheet model. Spreadsheets are the most successful programming model of all time, and smartphones are the most successful computer, so we&#x27;re bringing them together to enable anyone to create apps without code.<p>We&#x27;ve implemented a component model based on self-adjusting computation (<a href=""http:&#x2F;&#x2F;www.umut-acar.org&#x2F;self-adjusting-computation"" rel=""nofollow"">http:&#x2F;&#x2F;www.umut-acar.org&#x2F;self-adjusting-computation</a>), which allows Glide apps to update efficiently and continuously just like spreadsheets. You can see the benefit of this in our Comments component, which syncs comments in real-time to instances of the same app. In other words, Glide apps are multiplayer by default.<p>We&#x27;re just getting started and would love feedback on the approach. There are many technical&#x2F;design challenges ahead of us but we are encouraged by the useful apps our users have created with this early version. We even use Glide to build Glideinternally we&#x27;ve created dashboard apps, an app to share updates with our advisors, a directory that shows us which Glide apps are trending, and an app for our YC group.<p>Next on our roadmap: forms, improved image handling, notifications, and offline.<p>- Get started: <a href=""https:&#x2F;&#x2F;go.glideapps.com&#x2F;?signUp"" rel=""nofollow"">https:&#x2F;&#x2F;go.glideapps.com&#x2F;?signUp</a><p>- Video demo: <a href=""https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=smNwrz9wMxU"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=smNwrz9wMxU</a><p>- App templates: <a href=""https:&#x2F;&#x2F;www.glideapps.com&#x2F;samples"" rel=""nofollow"">https:&#x2F;&#x2F;www.glideapps.com&#x2F;samples</a><p>Thank you.",2019-02-14 16:22:17,19163081
4019,"My experience (as a senior native Android dev) has been definitely bad so far. Configuration errors and inexplicable error messages popping up on a regular basis. 
The amount of troubleshooting it constantly required - instead of focusing on the task at hand - started to feel cumbersome after a week or two. Simplest functionality such as breakpoints would randomly stop working. All these problems aren&#x27;t exclusive to me, I would pretty much always succeed in googling them up, usually along with dozens of solutions suggested by the community (each of them different).<p>The documentation and tutorials leave a lot to be desired, too. A lot of this stuff is outdated, and the official documents are imprecise and feel like a draft (even when compared to what the much less mature Flutter brings to the table in this regard).<p>Tooling is far behind what you get if you go native. Eg. support for refactoring, whatever editor you use, will be more than rudimentary and virtually nonexistent in comparison to what Android Studio offers. The same goes for unit testing &#x2F; integration testing support, it&#x27;s rather iffy.<p>One of the more important UI Android features - Material transitions - is pretty much impossible to recreate in React Native.<p>I also don&#x27;t find JavaScript - even with TypeScript on - nearly as good a language as Kotlin.<p>This isn&#x27;t meant to be a rant: just an honest summary of my few weeks of experience fiddling with RN. You mention your native development was done in Swift; I heard that React Native is allegedly much more reliable for iOS than Android development. I can&#x27;t really verify it either way, but potentially this might be why our mileages vary.<p>The upsides? React Native pretty much abstracts away the lifecycle concerns, which are still a pain in the neck for a native Android dev. Hot reloading. No obsolete APIs maintained for backwards compatibility; understandably. Asynchronous programming is simple enough (although with Kotlin&#x27;s coroutines arguably on their way to become the go-to solution on Android, it&#x27;s not necessarily a win over native). Nothing else has impressed very much me so far. I used Xamarin for a commercial project once, and it felt considerably better, even though it was three years ago.",2019-02-14 16:56:17,19163395
4020,Does VS Community Edition let a developer compile to  Android&#x2F;iOS&#x2F;macOS32&#x2F;Windows with a single codebase and single UI? I&#x27;ve used Xamarin and it doesn&#x27;t really seem to do that.,2019-02-15 14:31:16,19171159
4021,"So much of this is because of the mobile &quot;app&quot; craze where -- due to the limitations of mobile app architecture, you had to build a stateful &quot;app&quot; instead of several independent screens with some limited shared state (usually just a token).<p>Native mobile UIs are great, but something as simple as cookies &#x2F; local storage could allow for stateless (or at least less stateful) mobile apps with native UIs.<p>Now, the abomination of hybrid (cordova), or pre-processed (react native&#x2F;xamarin) mobile apps is whole other thing, but often why web apps are translated to SPAs.<p>If we need a mobile app as well, why not use a common code base for web and mobile...",2019-02-18 23:30:06,19195448
4022,"Evolyst | Birmingham, UK| Senior Software Engineer (C#, Azure, Vue.js) | On Site | Full Time | <a href=""https:&#x2F;&#x2F;evolyst.com"" rel=""nofollow"">https:&#x2F;&#x2F;evolyst.com</a><p>Evolyst are developing Lumien, a multi-channel cloud-hosted platform  to help organisations improve mental health in the workplace. Weve worked with leading universities and healthcare providers to develop the road map and content, and now were putting together a world class team to deliver it to customers.<p>Using the Scrumban process, we have developed software previously using:<p><pre><code>  - C#
  - Xamarin
  - .NET Core
  - Azure Functions 
  - Entity Framework Core
  - Azure Cloud Services
  - Typescript
  - Vue.js
</code></pre>
At Evolyst weve made award winning healthcare solutions for a number of years but youll be joining us on our new adventure as we move into product development. We offer flexible working hours [core hours are 10-4pm and 37.5hrs per week but we understand real life and will work with you to find suitable hours]. We also offer regular company activities at the end of each sprint and work in a relaxed, friendly environment.<p>If this sounds like a good fit for you and youd like to help us make a change to workplace mental health, feel free to pop an email over to me (Evan) at evanharris@evolyst.com and I&#x27;d love to discuss it further with you.",2019-03-01 16:59:49,19282688
4023,"C# can also be compiled directly to Assembly via NGEN (only supports dynamic linking though), AOT compiler for WP 8.x, which was later replaced by .NET Native for UWP.<p>.NET Core 3.0 will bring in CrossGen for AOT, and you also missed Xamarin&#x2F;Mono support for AOT.",2019-03-03 09:12:52,19293536
4024,"They have decided to make it in a standalone package so it can evolve independently. Like xamarin is not part of .net<p>Its not about being supported or not. It&#x27;s just an external. it&#x27;s not up-to-date with java 11 <a href=""https:&#x2F;&#x2F;openjfx.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;openjfx.io&#x2F;</a><p>You can also use clojure with it if you want a lisp dialect.",2019-03-04 20:12:01,19304885
4025,"Hello,<p>I live in the Philadelphia, PA area and was wondering if anyone on here lives nearby who would like to meet up. I am an intermediate level C# .NET programmer in my early 20&#x27;s who is looking for someone to work on projects with, and help each other learn and get to the next level in the process. Moreover, I am really looking for a friend who programs on a similar level and has similar interests because I have none lol.<p>I have a mentor and he suggested I make a post on this website to see if I have any luck.<p>I have been coding&#x2F;programming for around 3 years now. I started with Java in high school, then moved on to C# which I have practicing for over a year now. Aside from back-end development, I do have some experience with Xamarin and XAML for UI and cross-platform application development where I built a bunch of tiny android projects. Aside from c#, I am also experienced in WordPress and began learning PHP a few months ago to increase the scale of the work I do on WordPress. I am obviously also experienced in HTML and CSS, for what it is worth.<p>Professionally, I am currently employed as a developer for a Lighting Showroom in the area. I built and currently manage their website, online store and have worked on numerous c# projects that integrate with the website including an inventory feed application. Aside from the purely technical aspects, I also handle marketing and SEO for the website and company. I also do have some experience in security.<p>Outside of work, my largest project was a data-mining application that was capable of scraping&#x2F;crawling hundreds of social media pages in minutes. It was meant to be a part of what I consider a million dollar idea, but it eventually fell through due to various conflicts.<p>If you&#x27;re interested in chatting or getting together, you can email me here: jmerk12086@gmail.com<p>Also, I play xbox pretty regularly if anyone wants to game and talk about anything tech!
Gamertag: XxAdversityzxX<p>Thanks!",2019-03-05 01:42:22,19307423
4026,How about Xamarin?,2019-03-06 20:18:21,19322352
4027,"That&#x27;s the problem, ms is creating these amazing open source solutions and hitching the rotting carcass of visual studio to all of them.Even visual studio code is such a joy to use in comparison to even visual studio 2019.however you can&#x27;t for some reason run solution based projects in code.i&#x27;m  currently making xamarin apps and boy is it a fucking chore to do in visual studio to the point where the whole program crashes routinely in a normal workday(switching to flutter for this reason).<p>having an answer that would let me escape from the arcanities of visual studio in a corporate environment would be a joy",2019-03-09 06:55:09,19344886
4028,".NET Core and Xamarin, it seems.",2019-03-09 17:39:10,19347326
4029,"<i>Agreed. However, if you&#x27;re a software company you&#x27;ve already likely made all of those decisions. If I come work for you, I&#x27;m stuck with them. It doesn&#x27;t matter if I like the package manager or the frameworks. That&#x27;s just the background against which we work.</i><p>Lets say you learn C# in two weeks. Is that going to be enough time to get proficient with ASP.Net MVC? Entity Framewor? IIS? The built in logging framework? The DI framework? Middleware? What if they are using Xamarin for mobile? Lets say you did pick up Xamarin (which I havent).<p>Would you know the fiddly bits about doing multithreaded processing with desktop apps using Windows Forms?",2019-03-10 06:56:39,19350762
4030,Also Microsoft (Xamarin),2019-03-12 00:48:41,19364387
