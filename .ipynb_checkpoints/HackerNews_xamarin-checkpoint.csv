,body,date,id
0,"Looks to me like everybody wins.<p>Xamarin gets IP -- meaning they don't have to do a clean-room, source-compatible reimplementation of MonoTouch and Mono for Android, and all the risks that go with that -- in exchange for taking on the support of Novell's existing customers.  Customers they probably want anyway.<p>Novell/SUSE gets to get out of the Mono business altogether, which is probably good for them seeing as they laid off the entire engineering staff.<p>The Mono community gets some clarification about the stewardship of the project.  Novell contributed a lot of resources (bug tracker, mailing list and wiki hosting, etc.) and now Xamarin is on the hook for that stuff.  It helps clarify the future of the project.",2011-07-18 13:56:29,2776295
1,I agree but you'll pardon me if I still think Novell's new owners are a bunch of jerks.  Just less so.<p>That said I think this goes beyond IP for Xamarin.  As you said they get the existing customers but they're also available to new customers a few months earlier.  Mobile development is growing blazingly fast right now and even a months delay can mean someone decides to go with another product.<p>With the major financing that companies like Appcelerator have gotten Xamarin needs all the advantages it can get.,2011-07-18 14:22:26,2776393
2,"Mono is a software platform designed to allow developers to easily create cross platform applications. Sponsored by Xamarin, Mono is an open source implementation of Microsoft's .NET Framework based on the ECMA standards for C",2012-03-15 12:12:17,3708019
3,"What you propose wouldn't be ""risk free"", it would be simply transferring your risk to Xamarin (they have to develop and support users that don't end up paying).<p>Xamarin puts out a quality product, they should charge a price for it relative to the value it can bring a MOTIVATED developer. And if we want to use it we should pay for it. I don't want to wake up tomorrow to see that they dropped the price to 5 bucks hoping to win on volume only to find out soon afterward that Microsoft paid them 25 million to stop development.",2012-07-24 15:11:04,4286002
4,"But the corollary is the guy that wants to make a silly app and give it away for free as a hobby. For instance, I wanted to make a very particular kind of timer application for playing Diablo, primarily for myself but give it away, and the $400 price point makes me not want to use monodroid for it. Of course, I'm not really Xamarin's target market per se, and given the post I made about HBO's pricing so I can understand their position. However, as someone that is in the segment of people the OP is talking about, I can sympathize.",2012-07-24 16:36:55,4286416
5,"&#62;<i>This is slightly off topic, but I don't really understand Miguel de Icaza.</i><p>It might be that you have a narrow view of free/open source software. The idea behind it is not all about GNU or Linux or anything. iTerm 2 is a mighty fine open source software -- for OS X.<p>Open source is not incompatible with Apple or Windows. Nor it is a religion/principle thing to everyone, some see it more casually.<p>&#62;<i>I appreciate that his company xamarin are working solidly on Mono which is open source, but a number of their products are not open source such as Mono Touch and Mono for Android.</i><p>Well, he also has to make money. He tried the open source non commercial approach with Evolution et al, and it didn't work very well for them (or for the Nautilus guys). If it wasn't for Novell buying them they would have nothing to show for today.",2012-08-25 15:33:21,4432305
6,"Xamarin are booming (they are a cross-platform, open-source-based development tools company who are big contributors to mono). 190,000 developers and 10,000 customers already <a href=""http://blog.xamarin.com/2012/11/08/xamarin-evolve-2013-our-first-developer-conference/"" rel=""nofollow"">http://blog.xamarin.com/2012/11/08/xamarin-evolve-2013-our-f...</a><p>So mono's future is secured - Android, iPhone, iOS, OS X, linux, windows 8, ... no other high-level-to-native tools get this reach and none based on a language as c# (so much better than java).  F# looks like nice added sauce to this.",2012-11-09 12:30:35,4762484
7,"That's for an enterprise-level license -- the 'professional' license is $399: <a href=""https://store.xamarin.com/"" rel=""nofollow"">https://store.xamarin.com/</a>",2012-12-12 18:03:39,4911517
8,"I like MonoTouch so far but I must admit these are all valid points. There are more downsides Xamarin doesn't like to advertise, like problems with AOT compiler you can't anticipate until they bite you in the ass, the-GC-won't-collect-some-stuff problems that basically force you to always dispose native objects manually, and horribly buggy IDE that MonoDevelop is.",2013-01-02 20:13:16,4998969
9,"i havent seen anyone mentioning things like <a href=""http://xamarin.com/"" rel=""nofollow"">http://xamarin.com/</a><p>Write your business logic in C# and just build the View for every platform with native components. Sounds like the ideal tradeoff for me!",2013-01-06 09:37:37,5015879
10,I'd say Mono/Xamarin and .NET/Microsoft would qualify as competing production quality implementations of C#. Xamarin may have positioned their implementation of C# to target the mobile space instead of the enterprise space because they see that as a losing battle against Microsoft (and the niche they do address is very lucrative right now) but the could still qualify as competitors.,2013-01-09 16:23:14,5032251
11,"&#62;C# is really a fanstastic language. But the downsides of being tied to the Windows/MSSQL/IIS platform is like have a boat anchor around your ankle. Similarly, how many people are excited about windows 8 vs. iOS or android?<p>Great times for Xamarin.",2013-02-07 08:23:19,5181096
12,"Seems awesome. I wonder how they made it possible to have an iOS simulator in their Visual Studio plug-in. Apparently it will be possible to develop native iOS / Android apps written in C# from Visual Studio and I'm guessing from Windows.<p>I have much respect for Miguel and the other guys at Xamarin. They work on some great stuff, I think C# has a great future for mobile development because of all the work these guys have done.",2013-02-20 14:29:12,5250573
13,"I have mixed feeling about this. I have a current Mono for Android Profession subscription and use the Visual Studio integration a lot. My subscription is due for renewal next month and if I want to continue to use VS with Xamarin 2.0 then I have to renew at the Business edition level. I paid for my sub out of my own pocket because I liked the technology so much, but $399 for the pro version last year was a stretch and I just can't justify $1k to renew. Xamarin Studio might be superb, but I've been using VS since 1995 and I really don't need to learn another new IDE right now.<p>Any comments from Miguel or anyone from Xamarin?<p>That said, the Indie edition is something that a lot or people were asking for and the price is attractive. The components look good too. I think its going to be a big success.<p>Edit: See Nat Friedman's response below [1]. Existing Pro subscribers are automatically upgraded to Business and can renew at their existing renewal price. This is described in the FAQ [2] which I didn't read far enough down.<p>[1] <a href=""http://news.ycombinator.com/item?id=5250922"" rel=""nofollow"">http://news.ycombinator.com/item?id=5250922</a><p>[2] <a href=""http://xamarin.com/xamarin-2.0-faq"" rel=""nofollow"">http://xamarin.com/xamarin-2.0-faq</a>",2013-02-20 15:23:53,5250878
14,"Hi,<p>Our servers buckled a little bit under the load. We load-tested, but missed a piece of infrastructure in the chaos. We've since beefed up that last piece of infrastructure, and you should be all set now to use the download form at <a href=""http://xamarin.com/download"" rel=""nofollow"">http://xamarin.com/download</a>. If you're still having trouble, contact our support at support@xamarin.com. Cheers!",2013-02-20 18:51:40,5252414
15,Nothing stops you from treating Xamarin as one.<p>But it also supports the full experience for each platform.,2013-02-21 04:47:07,5255445
16,"It's a shame that Linux support at Xamarin is obviously dropped in many places, so no Mono development for me. :(",2013-02-21 06:57:41,5255911
17,"Well, given that Xamarin doesn't seem to support Linux for their newest IDEs it's especially a shame. I'd prefer .NET/Mono over Java (and i'd prefer python and C over .NET), but it doesn't look like there's support for that..<p>Last time i tried to get MonoDevelop with those Android tools to check out cross-platform app development with Mono and it's a no-go. Now Xamarin Studio appears to be Mac and Windows only. Very disappointing!",2013-02-21 07:01:28,5255922
18,I've spent about 3hrs trying to get the fsharp binding working in xamarin studio but no luck. How did you get it working?,2013-02-24 09:28:43,5273552
19,"Not sure I agree with the prediction:<p>&#62; My prediction is that Xamarin will come up with its own GUI abstraction framework in future, along the lines of SWT. It is a compromise; but one which delivers a lot of value to developers who want to create cross-platform apps with the maximum amount of shared code.<p>This will almost certainly create the 'uncanny valley' which the author refers to in an earlier paragraph.<p>I consider the fact that Xamarin has two APIs for the two platform UIs a real advantage. You can still write your business logic once - so the time to create an iOS and Android app reduces from 2 to 1.x, and you still get the benefit of a fully native feeling app.",2013-02-25 13:10:42,5278771
20,"Developing some kind of API binding for the DOM or JQuery is no impossible task though, similar things have already been done in other languages (in C# and the Xamarin Framework for example)",2013-03-28 13:01:18,5454492
21,"If you manage to get a Clojure Android app to boot up quickly, I would be very interested. For now, the only reasonable ways to not use Java for Android apps that I've found are Scala or Xamarin.",2013-04-02 01:01:37,5477049
22,"In my experience Mono is a bit like the OpenJDK was a few years ago:<p>Most things work, but there are a few things that are broken in unavoidable ways. Similarly, the performance isn&#x27;t terrible, but the optimization is not quite at the same place as the original platform.<p>Xamarin&#x27;s rapid work suggests that there will be a &#x27;production-ready&#x27; CLR for most platforms (they&#x27;ve got it down for iOS, Android, and recently OSX) soon enough.",2013-06-19 01:27:40,5903205
23,"F# is licensed under Apache 2.0: <a href=""https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;fsharp&#x2F;blob&#x2F;master&#x2F;LICENSE"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;fsharp&#x2F;fsharp&#x2F;blob&#x2F;master&#x2F;LICENSE</a><p>The Windows-based implementation of the CLR is proprietary, but as other posters have mentioned, it&#x27;s built around an open, standardized specification (ECMA-335). Xamarin has been making big strides in improving Mono over the past year, and it&#x27;ll only continue to get better.",2013-06-19 04:22:14,5903732
24,"On Firefox OS, I can use JavaScript, or the languages that compile down to JavaScript (CoffeeScript, TypeScript or Dart, for instance).<p>On Android, I can use Java, C, C++, C# (via Xamarin), JavaScript, or the languages that compile down to JavaScript.<p>Yet somehow Android &quot;is a much worse platform in terms of language choice&quot;?",2013-07-01 19:28:29,5973002
25,"I&#x27;m curious how well these tools work. Having a single unified code base and supporting all (desired) platforms is every developer&#x27;s dream. I&#x27;m skeptical because supporting multiple operating systems can be a headache even for desktop apps.<p>I remember Facebook originally used HTML5 to support all platforms. This did work, but they became unsatisfied with the performance and ended up rewriting both the iOS and Android apps in native code.[1] The killer quote:<p><i>&quot;I think the biggest mistake we made as a company was betting on HTML5 instead of native,&quot; Zuckerberg said...</i>[2]<p>Granted, this was a different situation. They were using HTML5, and it looks like Xamarin compiles to native code. You mentioned slightly larger executable sizes, so I&#x27;m curious about the performance.<p>1: <a href=""https://www.facebook.com/notes/facebook-engineering/under-the-hood-rebuilding-facebook-for-ios/10151036091753920"" rel=""nofollow"">https:&#x2F;&#x2F;www.facebook.com&#x2F;notes&#x2F;facebook-engineering&#x2F;under-th...</a><p>2: <a href=""http://www.computerworld.com/s/article/9234695/Facebook_debuts_speedier_Android_app"" rel=""nofollow"">http:&#x2F;&#x2F;www.computerworld.com&#x2F;s&#x2F;article&#x2F;9234695&#x2F;Facebook_debu...</a>",2013-07-15 15:51:57,6046330
26,"Congrats to the Xamarin crew, this is well-deserved. They&#x27;ve been cranking out some really useful products and doing a good job of building products that layer nicely on top of the free Mono stack instead of gutting useful features out of it to try and sell them to you.",2013-07-18 05:21:25,6061906
27,"Wrong.<p>Xamarin Studio and MonoDevelop are the exact same code base.<p>The only difference is that Xamarin Studio contains the iOS and Android plugins, plus adds a Xamarin Branding (branding is completely pluggable in MonoDevelop)",2013-07-18 12:53:58,6063228
28,"I&#x27;m curious about Xamarin - has anyone used it, in addition to something like Phonegap &#x2F; Appcelerator? How does it compare?",2013-07-24 23:56:54,6100006
29,"More or less<p>you get a 10% discount on the total price if you buy multiple licences at the same time<p>You can see all here: <a href=""https://store.xamarin.com/#purchase"" rel=""nofollow"">https:&#x2F;&#x2F;store.xamarin.com&#x2F;#purchase</a>",2013-07-25 01:11:36,6100307
30,"How is Mono not platform independent? It doesn&#x27;t have a lot of .net features from Windows like windows forms, but it has the entire C# language and their own implementations of xna, etc.<p>The only concern I would have is that Microsoft might try to crush Xamarin at some point, but I wouldn&#x27;t count that likely, Mono is their ticket to keep .net from looking like anti-competitive platform lock in.",2013-07-25 03:41:47,6100779
31,"&gt; is this the first instance of mobile Python on Android OS?<p>Honestly, I have no idea. But I&#x27;m aware that there are multiple efforts to bring &quot;sane&quot; languages (such as C#, by Xamarin) to Android, others than Java.<p>&gt; Jailbroken iPhones have had this capability for years<p>I had no idea about this one, but I don&#x27;t follow iOS development either.<p>&gt; I&#x27;d expected this would happen...sooner?<p>I agree with you, but I believe this sort of thing should be backed by Apple (iOS) or Google (Android) themselves.<p>[EDIT]: formatting",2013-08-08 14:19:44,6179034
32,"C# is VM&#x2F;Native. It runs native on iOS via Xamarin compiler. It runs native on Windows Phone 8 via cloud compilation.
Please correct&#x2F;do more research.",2013-08-23 12:53:57,6263142
33,"I take issue with your recurring assertion that JavaScript is bad. Not just that it isn&#x27;t to your liking, but that it&#x27;s objectively bad, something that the software development community ought to avoid. JavaScript&#x27;s bad parts have been discussed to death, so I won&#x27;t rehash them; it&#x27;s enough to point out that programmers can easily get used to avoiding or working around them. What&#x27;s more important is that there are good things about JS which make it very desirable as a cross-platform, general-purpose programming language. Specifically:<p>1. JS is the native language of the Web platform. Because of its ubiquity, the likes of which Java, Flash, and Silverlight never achieved, the Web platform is an attractive deployment target for many apps.<p>2. Because of JS&#x27;s role in the Web platform, it has the support of every major player in personal computing, specifically, Apple, Google, and Microsoft. Languages like Python, Ruby, and Lua have nowhere near that level of corporate backing.<p>3. Yet no single company owns JavaScript, so there is no patent trap as with Java or .NET. Nor is there any threat of vendor lock-in.<p>4. Because of the strong corporate backing and the fact that most Web browsers are now based on open-source engines, there are mature, open-source, non-copyleft implementations of JavaScript for all major desktop and mobile platforms. (The &quot;non-copyleft&quot; bit is in contrast with, say, Mono, whose license enables Xamarin to charge a premium for use in iOS, Android, and Mac apps.)<p>5. Because JavaScript is the native language of the Web platform, full-stack Web application developers basically know it to some extent, regardless of what language they prefer on the back-end. So many programmers know JavaScript, making it an attractive choice for a software company wanting to hire more programmers, or an open-source project looking for contributors.<p>6. Because of the competition among browser developers in recent years, all of the major JS implementations are now very fast.<p>7. Unlike C and C++, which are AFAIK the only languages that match or exceed JS&#x27;s ubiquity, JS guarantees memory safety. This eliminate a whole class of bugs that many programmers are not equipped to deal with or prevent. These bugs often turn into security holes.<p>So these qualities, largely political and business-related but important nonetheless, make JS very attractive to anyone wanting to choose a mainstream, high-level, general-purpose programming language for cross-platform application development. In light of this, how can you say that JS is objectively bad?",2013-08-24 23:05:47,6270186
34,At least one of Ruby Motion or Xamarin Studio is compiling source code into iPhone apps.<p>Furthermore iPhone apps are definitely allowed to embed interpreters (caveat: no JITC&#x27;s) and run scripts included with the binary or downloaded as part of an in-app purchase.,2013-08-30 03:18:18,6300069
35,"SEEKING WORK - Eindhoven, The Netherlands &#x2F; Remote<p>Experienced software developer with team lead experience and a hacker attitude. I&#x27;m a full-stack web developer and embedded software engineer with 12 years of professional experience doing small and large projects with a large variety of platforms and technologies.<p>Specialized in C#&#x2F;.NET in recent years, but unlike too many .NET devs, my scope is not limited to Microsoft&#x27;s &quot;technologie du jour&quot;. I&#x27;m familiar with Microsoft&#x27;s standard technologies as well as the great open source alternatives out there. Experience with making cross-platform mobile apps with Xamarin (MonoTouch &#x2F; MonoDroid) and with making .NET software that runs great on Mono&#x2F;Linux.<p>Proficient in:<p><pre><code>    * C# &#x2F; .NET 
    * C &#x2F; C++ (Win32 API, microcontrollers, Linux)
    * JavaScript &#x2F; TypeScript &#x2F; CoffeeScript
    * PHP
    * Python
    * Ruby
</code></pre>
Most of my work has been unfortunately closed-source proprietary stuff, but for a peek at my code, see:<p><a href=""https://github.com/eteeselink/fakethat"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;eteeselink&#x2F;fakethat</a> (down-to-earth C# mocking framework)<p><a href=""https://github.com/eteeselink/YieldMachine"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;eteeselink&#x2F;YieldMachine</a> (C# state machines)<p><a href=""https://github.com/eteeselink/cdhere"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;eteeselink&#x2F;cdhere</a> (little C++ console tool that talks to Windows Explorer)<p>Something of a CV can be found at <a href=""http://www.linkedin.com/in/egbert"" rel=""nofollow"">http:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;egbert</a>.<p>I can work on-site in the Netherlands, or remotely. I started freelancing only recently, so my portfolio isn&#x27;t as well presented as yet I&#x27;d like it to. Nevertheless, you can find contact info on my brand new placeholder website at <a href=""http://superset.eu"" rel=""nofollow"">http:&#x2F;&#x2F;superset.eu</a>.",2013-09-01 16:58:26,6311094
36,"With tablets taking off the way they are, having a client (for a client-server app) that runs on a tablet is becoming higher and higher priority.  Running on desktops is still required too.<p>What is the best technology today?<p>Flash and Silverlight are out.  HTML5&#x2F;Javascript?  Ehhh, not sure -- I really like strongly typed languages and a compiler to catch my mistakes.<p>Something like Xamarin?  Anything else?",2013-10-01 00:42:57,6473313
37,"SEEKING WORK - Eindhoven, The Netherlands &#x2F; Remote<p>Experienced software developer with team lead experience and a hacker attitude. I&#x27;m a full-stack web developer and embedded software engineer with 12 years of professional experience doing small and large projects with a large variety of platforms and technologies.<p>Specialized in C#&#x2F;.NET in recent years, but unlike too many .NET devs, my scope is not limited to Microsoft&#x27;s &quot;technologie du jour&quot;. I&#x27;m familiar with Microsoft&#x27;s standard technologies as well as the great open source alternatives out there. Experience with making cross-platform mobile apps with Xamarin (MonoTouch &#x2F; MonoDroid - iOS, Android, Windows Phone) and with making .NET software that runs great on Mono&#x2F;Linux.<p>Proficient in:<p><pre><code>    * C# &#x2F; .NET 
    * C &#x2F; C++ (Win32 API, microcontrollers, Linux)
    * JavaScript &#x2F; TypeScript &#x2F; CoffeeScript
    * Java (incl Android)
    * PHP
    * Python
    * Ruby
</code></pre>
Most of my work has been unfortunately closed-source proprietary stuff, but for a peek at my code, see: <a href=""https://github.com/eteeselink/fakethat"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;eteeselink&#x2F;fakethat</a> (down-to-earth C# mocking framework)
<a href=""https://github.com/eteeselink/YieldMachine"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;eteeselink&#x2F;YieldMachine</a> (C# state machines)<p><a href=""https://github.com/eteeselink/cdhere"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;eteeselink&#x2F;cdhere</a> (little C++ console tool that talks to Windows Explorer)<p>Something of a CV can be found at <a href=""http://www.linkedin.com/in/egbert"" rel=""nofollow"">http:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;egbert</a>.<p>I can work on-site in the Netherlands, or remotely. I started freelancing only recently, so my portfolio isn&#x27;t as well presented as yet I&#x27;d like it to. Nevertheless, you can find contact info on my brand new placeholder website at <a href=""http://superset.eu"" rel=""nofollow"">http:&#x2F;&#x2F;superset.eu</a>.",2013-10-01 18:10:31,6477976
38,"ShowKit - West Hollywood, CA - FULLTIME, REMOTE, H1B<p>ShowKit (<a href=""http://showkit.com"" rel=""nofollow"">http:&#x2F;&#x2F;showkit.com</a>) is a mobile&#x2F;software startup run out of Curious Minds, a privately funded incubator in West Hollywood, CA. Curious Minds specializes in highly disruptive mobile and web applications.<p>We are currently looking for a talented Software Engineer with skills in network programming and SIP&#x2F;RTP.<p>To apply: 
Send your resume and GitHub account to anthony@showkit.com<p>Qualifications:
- Strong C&#x2F;C++ programming skills
- Strong OO &amp; multi-threaded programming skills
- Network programming experience
- SIP&#x2F;RTP development experience
- Strong debugging skills
- Experience dealing with bandwidth and latency issues
- Self-Motivated
- Good design and analytical skills
- Good communication skills
- Passion for real-time!<p>Desired&#x2F;Other Skills:
- Experience with Objective-C
- Mac&#x2F;iOS development (AVFoundation)
- Windows development
- H264 encoding&#x2F;decoding
- openGL
- Knowledge of network security strategies
- Android development
- Familiar with Xamarin and PhoneGap<p>Product:
ShowKit is a mobile software development kit that turbo charges apps with live communication features in under 30 minutes. Before ShowKit, it would take companies and software engineers months of intensive development to add features like audio&#x2F;video conferencing, screen sharing, and gesture control to their applications. Our first-to-market gesture control functionality empowers users to tap, swipe, highlight, and fully control another users screen remotely while simultaneously connecting the two users via audio&#x2F;video conference.<p>Notably, ShowKit is the only framework that includes hardware accelerated video encoding &amp; decoding. This enables 720p at 30fps, the highest quality video conferencing resolution on the market, while using minimal cpu resources and allowing the app to run seamlessly in the background while a call is taking place. Comparable solutions use full cpu resources &amp; only achieve 4-5fps at that resolution, which isnt feasible for video conferencing.<p>AngelList Profile: <a href=""http://angel.co/showkit"" rel=""nofollow"">http:&#x2F;&#x2F;angel.co&#x2F;showkit</a>
ShowKit Demo Videos: <a href=""http://www.youtube.com/user/ShowKitSDK"" rel=""nofollow"">http:&#x2F;&#x2F;www.youtube.com&#x2F;user&#x2F;ShowKitSDK</a><p>Our Office &amp; Perks:
Our Penthouse office sits on the historic Sunset Strip with the best view of all of LA. 
- Top of the line gear
- Kitchen stocked full of drinks and snacks
- Friendly and down-to-earth work environment
- Health, Dental &amp; Vision Coverage",2013-10-01 22:26:13,6479466
39,"This is one of the main reasons CouchBase was created. Its community has fragmented as the company tries to figure out how to make money, but it would be worth your time to check it out. Here the Xamarin folks explain their new CouchBase Lite wrapper: <a href=""http://blog.xamarin.com/simplifying-persistence-with-a-document-database/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;simplifying-persistence-with-a-docum...</a>",2013-10-06 20:51:40,6505394
40,Unfortunately it looks like xamarin has completely abandoned linux as a platform.,2013-10-10 10:35:46,6526690
41,"I&#x27;ll give you #1, but from digging into the topic #2 is very much up in the air long term and I would be <i>very</i> wary of starting any new project with it #3 doesn&#x27;t count as it is through Xamarin as I was explicitly talking about Microsoft plans.",2013-10-23 19:17:18,6601003
42,"MonoDevelop is free, but if you have a large code base, it&#x27;s very slow. As in &quot;wait 30 minutes for MonoDevelop to start and analyze the entire project&quot; slow. And then the crashes...<p>Xamarin fixes all of these problems. But then, the free version is limited and the paid version is very expensive. When it comes to IDEs, you really do get what you pay for.",2013-11-02 19:39:48,6660427
43,I think that keeping Xamarin out of MS&#x27;s hands is actually better for the ecosystem. It is very healthy that there are multiple independent but compatible implementations of the CLR and other tools so that everything is not tied to Microsoft.,2013-11-02 21:10:44,6660823
44,"Well, then you can unlearn Java right now!<p><a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>
<a href=""http://phonegap.com/"" rel=""nofollow"">http:&#x2F;&#x2F;phonegap.com&#x2F;</a>
<a href=""http://www.orubase.com/"" rel=""nofollow"">http:&#x2F;&#x2F;www.orubase.com&#x2F;</a>
etc.
etc.
etc.",2013-11-10 14:48:11,6706557
45,"Besides his skills as a software developer, I am impressed with the fact that he has held on to his vision and led his company from Ximian, through Novell, then Attachmate and onto Xamarin.",2013-11-13 17:28:29,6726750
46,"To all those wondering why Microsoft doesn&#x27;t buy Xamarin, it&#x27;s probably because Miguel de Icaza and crew don&#x27;t want to sell. Why should they? There&#x27;s more to life than getting rich, such as implementing your vision with a family of friends and co-workers. Besides, he&#x27;ll probably get rich anyway.",2013-11-13 18:02:35,6727026
47,"You can bind objective-c libraries so that they&#x27;re usable from a Xamarin app:
<a href=""http://docs.xamarin.com/guides/ios/advanced_topics/binding_objective-c/"" rel=""nofollow"">http:&#x2F;&#x2F;docs.xamarin.com&#x2F;guides&#x2F;ios&#x2F;advanced_topics&#x2F;binding_o...</a><p>Same goes for Java libs:
docs.xamarin.com&#x2F;guides&#x2F;android&#x2F;advanced_topics&#x2F;java_integration_overview&#x2F;binding_a_java_library_(.jar)&#x2F;",2013-11-13 19:46:24,6727916
48,You should have brought that up to Xamarin. I am sure they would have liked to see what was going on to make mono better.,2013-11-14 02:40:19,6730192
49,"In my experience, implementing a sufficiently complex app in PhoneGap targeting Android, Windows Phone, iPhone and iPad is absolutely more work with lower quality result than doing native versions of each app through Xamarin.<p>HTML apps have a tremendous hurdle to overcome. Customer expectations are different between something opened in a web browser and something downloaded from the app store. Apps that are amazing as web pages can be awful as apps. The amount of effort required to get a web application to perform in a way that matches user expectations for native UI cues, animations, quality and responsiveness across platforms is enormous and incredibly more difficult than your standard web app.<p>Of course, if you target just one platform, things get a lot better, but at that point, why not just use the native tooling?<p>This has been my experience, having tried both approaches over the course of several years, across team sizes ranging between one and ten developers.",2013-11-15 21:18:12,6742206
50,"I&#x27;m using Xamarin.iOS and Xamarin.Android for a modest app. I&#x27;ve already spent about half a year on the Android version, with special care to have all logic in a separate layer. The iOS version had catched up in 2 weeks, from scratch.
We hired a second guy for that, who had no C# experience (but more on iOS) just before I went on a 2 week holiday I just got back from.<p>Needless to say: Xamarin is the perfect mix of cross platform and native for us.",2013-11-29 14:07:17,6819411
51,"Of course it is more difficult, if you use Xamarin. Or other framework, that promises cross-system compatibility and subtly fails on all targets. Talk about self-inflicted pain.<p>If you really want some common, shared codebase, use something like j2objc, where it ends up native to both platforms.",2013-12-19 15:21:45,6935097
52,"The Android NDK is usually used for applications that don&#x27;t use the Android API&#x27;s (which are all Java). Most applications on Android is written in a JVM-based language. The sort of applications that would typically use the NDK are games, emulators, VMs (like Xamarin.Android) and the like.<p>ObjC is also slow. Anytime you write something performance sensitive in ObjC, you usually drop down to pure C or pure C++. Luckily, since valid C is valid ObjC, this is rather easy.<p>Javascript and HTML is actually a great fit for mobile, but there are two complications. 1) You will have to mimick the UI of the native platform. 2) Mobile platforms have sub-par JS engines. iOS don&#x27;t allow JITs outside Safari (even when you use a webview in your ObjC app) which in turn makes JS-based apps in iOS slow. Android has in general had a pretty sucky webview, but that is getting fixed in 4.4 with chromium being the default engine.<p>JS is getting better everyday on the mobile though, I would be surprised if not alot of people were using JS for apps in the coming years.",2013-12-26 16:21:22,6966708
53,"C# developer here, also love the language.<p>I completely agree and I only hope that this new <i>thing</i> will be just as good as C# but fully cross-platform. It would be great.<p>&gt;mobile<p>Xamarin is pretty solid, although it costs a lot.",2013-12-28 11:10:24,6974717
54,"Which Xamarin apps that you&#x27;ve seen don&#x27;t look native?<p>As others have pointed out, Xamarin provides C# bindings for the native APIs. It is fundamentally different to Phonegap, which takes a lowest-common-denominator Java&#x2F;Swing approach.",2014-01-09 10:50:03,7029757
55,"Yes, just like how no one would use C# if it weren&#x27;t for Microsoft or Go if it wasn&#x27;t for Google.<p>There are a lot of people who like Objective C including myself. If people didn&#x27;t the majority of iOS apps would be developed in straight C, C++, Ruby, C#, Delphi, or Actionscript.<p><a href=""http://www.embarcadero.com/products/cbuilder/ios-development"" rel=""nofollow"">http:&#x2F;&#x2F;www.embarcadero.com&#x2F;products&#x2F;cbuilder&#x2F;ios-development</a><p><a href=""http://www.rubymotion.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.rubymotion.com</a><p><a href=""http://xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com</a><p><a href=""http://www.embarcadero.com/products/delphi/ios-development"" rel=""nofollow"">http:&#x2F;&#x2F;www.embarcadero.com&#x2F;products&#x2F;delphi&#x2F;ios-development</a><p><a href=""http://www.adobe.com/devnet/air/air_for_ios.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.adobe.com&#x2F;devnet&#x2F;air&#x2F;air_for_ios.html</a><p>If no one liked Objective C you wouldn&#x27;t have people like Mattt Thompson taking time to write his excellent NSHipster columns.<p><a href=""http://nshipster.com"" rel=""nofollow"">http:&#x2F;&#x2F;nshipster.com</a><p><a href=""https://github.com/mattt"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;mattt</a><p><a href=""http://postgresapp.com"" rel=""nofollow"">http:&#x2F;&#x2F;postgresapp.com</a><p>You not liking a language is not a benchmark of language popularity. If it were, my own biases would dictate that Javascript is a language no one likes, propped up by Mozilla and ECMA.",2014-01-23 08:58:48,7107469
56,"I wish they&#x27;d buy:<p>* Xamarin and polish the debugging, VS integration and Mono in general (maybe replace a lot of it with MS&#x27; .NET implementation? I can dream)<p>* MvvmCross and polish it and put it into the .NET BCL<p>* JetBrains (or just ReSharper) and give it a once over (performance- and code analysis-wise) and ship it with VS.<p>* Maybe Digia for Qt to replace MFC (this one&#x27;s kind of selfish since Qt is used in places Microsoft probably doesn&#x27;t care for - maybe they could sponsor the Windows side).<p>&gt; Cheaper than innovating weak product.<p>Aside from MFC I think Microsoft has fairly solid solutions to a lot of problems (Azure, Active Directory, Exchange Server, Visual Studio, Office, .NET).",2014-01-23 22:27:09,7111793
57,"Xamarin does have a nice UI for working with Xcode&#x2F;iOS, though I too fall on the cheap side of the fence. :)",2014-01-27 21:05:44,7133228
58,"Doesn&#x27;t that link just say you can also use .NET and Lua on iOS?<p>So I guess your answer is, Objective-C, Lua, or Microsoft technologies (implemented by Xamarin)? I guess Microsoft may have a role to play in this. ;)",2014-02-04 20:15:51,7179972
59,"From the trends I see, I&#x27;d recommend to become a Javascript expert (not just passing knowledge of jQuery).<p>Then Node.js and Angular. You should be set for the next 10 years.<p>Outside enterprise, .NET is sinking into irrelevance. I don&#x27;t know for Xamarin though.<p>Edit : fwiw my current job is C# &#x2F; WPF since 2009. So don&#x27;t take my comment about .NET irrelevance as mindless Microsoft hatred.",2014-02-09 10:34:44,7205091
60,"I JUST (today) build from source on github and got this:<p><pre><code>     mono -V
    Mono JIT compiler version 3.4.0 (master&#x2F;8f2d3ea Wed Feb 26 11:59:41 EST 2014)
    Copyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com
        TLS:           __thread
        SIGSEGV:       altstack
        Notifications: epoll
        Architecture:  amd64
        Disabled:      none
        Misc:          softdebug
        LLVM:          supported, not enabled.
        GC:            sgen</code></pre>",2014-02-26 19:09:13,7306878
61,"It&#x27;s objective-c and spritekit.
I started making games back in 2009 using objective-c and uikit. Honestly, once you get those sprites moving on the screen I find that it really doesn&#x27;t matter what you&#x27;re using, but Spritekit is awesome.<p>I&#x27;m pretty good with Xamarin in c# development. I use that mainly for business apps, but nothing beats objective-c and the opensource projects out there to make iOS apps.<p>Thanks man",2014-02-28 17:46:20,7320260
62,"OP here. I wanted to comment on the discussion around &quot;.NET vs. other things&quot; coversation that has started brewing here. I&#x27;m not one to hate on any environment or ecosystem. I do make fun of PHP or Java at times, but it&#x27;s all good-natured. Not to be too PC, but yes, every thing has its pros and cons.<p>Personally, however, I think C# as a language strikes the right balance in terms of power, ease-of-use, learnability and code readability. Even if you have a problem with Microsoft, I think it is wrong to let your &quot;MS-hate&quot; translate into &quot;C#-hate&quot;. It is a beautiful language and the open-source community around it is growing rapidly. The progress made by platform-independent endeavors (case in point Xamarin) is admirable.<p>In the unlikely scenario that all of programming were to converge into one language, I would want it to be an open-source, platform-independent version of C# (with maybe just a tad more constructs borrowed from the functional programming world).<p>P.S. I also think it is a mistake to lump C# and Java in the same bucket. Ten or more years ago, maybe. Today, they are VERY different.",2014-03-17 14:45:25,7415271
63,"I was pretty sure this would happen once Xamarin spun out of what was left of Novell. Open source .NET proved that C# is a great language outside of Windows and it wouldn&#x27;t take much money for Microsoft to acquire it. Throwing Microsoft&#x27;s considerable resources at Xamarin would allow Microsoft to gain a huge foothold in cross platform development, and thus would be much more likely to have developers port their apps to Windows.<p>Microsoft used to embrace, extend, and extinguish their competition before they got too big and too afraid of their own shadow(and shareholders) with Windows and Office. Honestly, it makes total sense for Microsoft to acknowledge they are running a distant #3 and get as many developers behind them as they can. Make Microsoft the place where real hackers go to write code.<p>Buying Xamarin is embracing. As is maybe a Nokia Android phone. Microsoft needs to make their own &quot;better&quot; version of Android with their own services and get people hooked on that. Then make the &quot;best&quot; version of Android called Windows A. It&#x27;s Windows, on Android. Windows A&#x27;s best features would be closed source and patented. It would potentially crush Android in the mainstream.<p>I don&#x27;t think that Microsoft has the guts to try and pull that off, but if they did, it would be a feat.",2014-03-18 03:33:58,7419912
64,Yet he did ditch the fully open source approach they had going before with Mono... Xamarin Studio isn&#x27;t exactly cheap. He certainly prefers making money to running a charity.,2014-03-18 05:18:27,7420330
65,"I miss &quot;Platform&#x2F;OS&quot; -&gt; OS&#x27;s like Linux, BSD.. Platforms like browsers, xamarin, cordova, etc<p>Those are not on the &quot;Software development tools&quot; category.. :&#x2F;",2014-03-19 19:57:19,7431376
66,"No, it isn&#x27;t. It would make the likes of Xamarin and RubyMotion impossible. You&#x27;re confused with the fact that App Store policies do not allow downloading and running new executable code.",2014-03-28 10:38:18,7486329
67,"Which is sad because the massive unity code base is stuck in the C# dark ages.<p>On the other hand, mono is &#x27;open source&#x27; so it&#x27;s kind of rubbish for Xamarin to be asking license fees when they have their own (pretty rubbish) competing game stack with monogame that they have a vested interest in (not commercially, but Xamarin developers work on it).<p>I find this sort of &#x27;kind of open source but actually you have to pay us ahahahahaa~&#x27; thing pretty distasteful.",2014-04-10 03:42:26,7564038
68,"That&#x27;s really cool! I didn&#x27;t expect that you could use Xamarin for such games.
Are you by any chance planning a Windows&#x2F;Windows Phone release?",2014-04-13 13:29:05,7581243
69,"Still, from the consumer side of things there&#x27;s far less friction&#x2F;lock-in.  Switching between phone platforms brings pain only in app selection, most data (like pictures, calendars and email) is all online and doesn&#x27;t need to be moved over[1].<p>The key here like you say are software developers.  I think Microsoft is aware of this and their purchase of Xamarin is them taking steps to solve this problem.  In the future you could see Microsoft showing developers how they could build their applications for all major smartphone OSs with their tools, allowing them to eat up ground in the app space.<p>[1] Contrast this to PC vs Mac, where even switching from an old PC to a new PC can be a daunting task, and the risk of data-loss is high.",2014-04-16 16:03:15,7598584
70,"Thank you for the correction; I seem to have had Xamarin on Android confused with Xamarin on iOS, which does compile to native code.[1]<p>1) <a href=""http://docs.xamarin.com/guides/ios/advanced_topics/limitations/"" rel=""nofollow"">http:&#x2F;&#x2F;docs.xamarin.com&#x2F;guides&#x2F;ios&#x2F;advanced_topics&#x2F;limitatio...</a>",2014-04-28 17:05:16,7661255
71,"&gt;If C# worked on iOS and Linux<p><a href=""https://xamarin.com/"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;</a> imho a much better alternative to C++.  I really like C# as a language, it&#x27;s got that general purpose excellence, but when you get on with things like LINQ,Rx,TPL it&#x27;s very hard to go back to a language without such first class citizen frameworks.",2014-05-02 14:36:40,7685915
72,"I always thought I&#x27;d feel similarly, but I&#x27;ve been doing a bunch of .NET&#x2F;Mono stuff in Windows 8 (instead of using Xamarin Studio), as a virtual machine in my Mac. Works pretty great, as long as I correctly train my fingers to hit the right shortcuts when in and out of the VM.",2014-05-20 20:38:38,7775028
73,"Xamarin.Forms is designed to work with MVVM and data bindings: <a href=""http://xamarin.com/forms"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;forms</a>",2014-05-28 15:30:51,7810750
74,"Did you not pay attention to Microsoft&#x27;s BUILD (Microsoft&#x27;s version of WWDC) conference this year, where they gave Xamarin the limelight and official blessings?",2014-05-28 16:09:09,7811013
75,Apple&#x27;s storyboards and xib files are essentially XML serialized views. Apple deserializes them at runtime and its a feature built in to Cocoa and Cocoa Touch. Since Xamarin is just wrapping the native libraries it is easier and more compatible to just follow the same approach.,2014-05-28 16:10:18,7811029
76,From a technical standpoint the &quot;translation&quot; is pretty much a standard Model-View-Presenter approach. This allows both us and you maximum flexibility when working with and extending Xamarin.Forms. We expose to users the same API&#x27;s we used to implement the initial set of controls.,2014-05-28 16:11:40,7811037
77,"I tinkered around with Xamarin, and a very basic app (using some 3rd party libraries) or even using the tutorial&#x2F;sample apps was immediately outside of their free tier.<p>Now I would like to understand the logic behind the 30 day free trial. If you are preventing app distribution (binaries are only valid for 24hrs when compiled in the trial version) why restrict it to 30 days? Why not allow people to tinker around as much as they want? I see no negatives to having an unlimited trial, and then simply charge to remove the &#x27;24hr binary&#x27; restriction.<p>As it is, the little free time I had over those 30 days to play with Xamarin equated to around 5 hours, most of which was going through the tutorials and sample apps (which you cant use in the free mode). I certainly haven&#x27;t experienced enough to commit to a purchase, and now I likely never will.<p>I spoke with one of your colleagues about this. He offered me 20% discount on the business tier if I purchased iOS and Android (~$1600 &#x27;value&#x27;) within 4 days... All i wanted to do was evaluate the damn thing...<p>I think what you are doing is great, but please try and apply some common sense to your evaluations.",2014-05-28 16:18:41,7811075
78,"They could do that right now anyway with a single license and a shared computer if they were really interested in circumventing the licensing.<p>I think a much larger issue is the current (and onwards) generations of indies, enthusiasts and kids who are actively prohibited from trying Xamarin.",2014-05-28 16:52:18,7811333
79,"Southern New Jersey, Philadelphia, northern Delaware &#x2F;&#x2F; In-House or Remote &#x2F;&#x2F; Full-Time<p>Stack (professional): C# + .NET (ASP.NET MVC+Razor, etc), Javascript (jQuery, React, Backbone.js, TypeScript), HTML5&#x2F;CSS3, MSSQL&#x2F;MySQL&#x2F;PostgreSQL, RabbitMQ&#x2F;ZeroMQ, Cassandra, Linux (Puppet, Pacemaker, DRBD), Xen, VoIP (Asterisk&#x2F;OpenSIPS&#x2F;Homer&#x2F;etc), Photoshop&#x2F;Illustrator<p>Stack (personal): C++, Lua (Embedding, OpenResty, Luvit), Python (OpenCV), Xamarin iOS, more...<p>Resume: <a href=""https://www.dropbox.com/s/rwftk3pj1jkm676/Resume%20-%20Alex%20Forster.pdf"" rel=""nofollow"">https:&#x2F;&#x2F;www.dropbox.com&#x2F;s&#x2F;rwftk3pj1jkm676&#x2F;Resume%20-%20Alex%...</a><p>Contact: alex@alexforster.com<p>I&#x27;ve been programming since I was 14, and started doing it professionally at 20. I&#x27;m currently the &quot;jack of all trades&quot; programmer-and-more in a small IT department for a ~2000 employee company. I&#x27;ve enjoyed incredible flexibility to learn and implement different technologies in my current role, but unfortunately, I have to begin looking elsewhere as we&#x27;re quickly losing our autonomy to our enterprisey parent company.<p>The approximate responsibility split at my current job is 60% pure software development, 20% devops, and 20% networking. I absolutely adore C#, but since it isn&#x27;t as vogue as I wish it was, I should mention that I&#x27;m almost as fluent in several other languages. I&#x27;m proud of having a well-diversified set of skills, and if my &quot;keyword soup&quot; resume piques your interest, I&#x27;d love to have a more in-depth conversation with you.<p>I&#x27;m tied to the area for family at the moment, but I&#x27;d be happy to spend a bit on a coworking space and work remotely.",2014-06-02 02:05:34,7831535
80,I don&#x27;t see how swift locks you in more that objective C ? I guess as its so much more accessible and easy to step into from javascript &#x2F; java &#x2F; C# it makes it more tempting to use compared to using something like Xamarin. I don&#x27;t see this as a dark ploy just Apple wanting to make themselves as developer friendly as possible.,2014-06-05 12:22:54,7851514
81,"You could always try the Xamarin way. Basically the same APIs, but with nicer languages (C# or F# instead of Java).",2014-06-21 05:50:39,7924307
82,Another .NET dev here in the same boat as OP. I really want to play with xamarin but the cost puts me off :(,2014-06-21 21:24:32,7926105
83,"I&#x27;m a C# developer (and strong supporter of .NET and Xamarin) and this signals to me that I have that <i>many more</i> options now - its great and very exciting for me to hear all this great news coming out of Microsoft almost every other week.<p>DevDiv&#x27;s tools and frameworks is where it&#x27;s at when it comes to building big multi-platform codebases - backend, front-end, desktop, mobile, cloud, whatever. Add to that the immense infrastructure and operations support I get from the MS business ecosystem and it&#x27;s just icing on my Productivity Cake. I don&#x27;t mind paying them because I get great stuff for the price.<p>I never understood how tech-intelligent people would hold so much hate towards a company that pretty much provides some of the broadest selection of tools and solutions geekdom has ever known.<p>Side Anecdote: A little bird recently told me that while working at Box, the attitude from management was so hateful against Microsoft that they were willing to blow through huge amounts of money just to roll their own HR system. What?! As an investor I want my investments to make me more money any way possible - and NOT be wasted trying to recreate wheels just to satisfy some sort of nonsensical personal grudge. This opinion people have with the brand loyalties (and grudges) they hold are non-sense through and through and bad for business.",2014-06-24 17:13:16,7938882
84,"Ah, thanks, I didn&#x27;t catch that MonoCross required Xamarin - it&#x27;s not obvious from the homepage at all (or even looking for it on any page).<p>Was hoping to use it to learn some C# (beyond the simple hello world type of thing) - Xamarin&#x27;s pricing is pretty steep for an amateur&#x2F;hobbyist.",2014-06-27 16:13:32,7954697
85,"Being honest, there will be very little learning curve going from VS to Xamarin Studio. They tried to make that switch as painless as possible.<p>You are right, there is a factor of learning that needs to be baked into your consideration but there comes a point where you put a little trust in people who came before you and tell you &#x27;I have done this, I have been where you are - follow me and you will be fine&#x27;.<p>On the flip side, Nat Friedman is incredibly approachable. I am sure if you simply email him and tell him your concerns he will accommodate you with a longer trial period or some kind of money back guarantee, that just how he is.",2014-06-27 17:08:05,7955035
86,The big question IMHO is will Microsoft buy Xamarin or not. If they do the price will certainly fall drastically. On one hand it will give MS way more apps on their app store. On the other if Xamarin becomes very popular Apple may block Xamarin built apps from it&#x27;s app store.,2014-06-27 17:25:43,7955140
87,"The power of Xamarin is obviously that you have a single language (C#) even if you have a &quot;fat&quot; UI&#x27;s that are platform specific. Having a single language means that you can have your business logic as a single code base rather than it in two or more languages with all the consequences of code base specific bugs.<p>But I do agree with you, Xamarin is not a build once run anywhere kind of solution. If you want to build Android app with it you still need to be very familiar with all the ins and outs of Android, same for iOS.",2014-06-27 19:52:05,7955986
88,"Two reasons:<p>a) I can&#x27;t imagine somebody bothering to support .net software on the Linux desktop without being paid for it. I know those guys[1] are a minority, but it takes only a minority to create an absolutely toxic atmosphere. Maintaining a end user product can lead to frustrating interactions, and it doesn&#x27;t really help if your choice of technology means that there exists a significant number of people who literally want you, your spouse, your three year old daughter and the family dog to die in a fucking fire.<p>b) Mono was always a bad choice for asp.net, which means that the software people <i>are</i> actually paid for doesn&#x27;t run well on Linux. That was mostly a problem outside of xamarins control, and I hope it becomes better not that the devdiv MS seems to be somewhat committed to work together to make it truly interoperable.<p>[1] Just look at the comments at <a href=""http://techrights.org/2013/02/09/tombye/"" rel=""nofollow"">http:&#x2F;&#x2F;techrights.org&#x2F;2013&#x2F;02&#x2F;09&#x2F;tombye&#x2F;</a>.",2014-07-07 11:07:00,7998173
89,"Rdio<p>Dow Jones<p>Tesco<p>Microsoft<p>Bosch-Siemens<p>Direct Energy<p>Ara<p>Sennheiser<p>Kimberley-Clark<p>Xactware<p>National Instruments<p>To pick just the people on <a href=""http://xamarin.com/customers"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;customers</a>",2014-07-12 14:41:05,8024640
90,"Yes, even iOS is more open - you can use C&#x2F;C++, C#&#x2F;F# (Xamarin), Java&#x2F;Scala (RoboVM) to build apps. Now that&#x27;s a freedom.",2014-07-31 07:58:13,8112934
91,"Location: Hyderabad,India<p>Remote: No<p>Willing to relocate:Yes<p>Technologies: Django,Git,C#,Xamarin.OSX,Spring MVC<p>Resume: <a href=""http://in.linkedin.com/pub/rashid-khan/4b/b64/542"" rel=""nofollow"">http:&#x2F;&#x2F;in.linkedin.com&#x2F;pub&#x2F;rashid-khan&#x2F;4b&#x2F;b64&#x2F;542</a><p>Email: rashood.khan@gmail || rashid@imrashid.com",2014-08-01 16:03:32,8120843
92,Xamarin Studio is a really awesome product that doesn&#x27;t get enough love because of anti-MS sentiment.,2014-08-04 22:10:05,8134349
93,"It&#x27;s funny - I have the opposite view having worked in C# years ago and appreciated that it was a lot more flexible and pragmatic than Java (as a language - libraries and platform aside).<p>To me the problem is that it&#x27;s not native to either Android <i>or</i> iOS, and so good as it is, there is always some impedance mismatch.<p>Are there any great apps developed using Xamarin that feel fully native?",2014-08-04 23:28:35,8134658
94,"Yes. I don&#x27;t know of any big apps like Rdio that you would recognize yet, because Xamarin hasn&#x27;t supported F# that long, but there are cross-platform apps being written in F# now.",2014-08-05 02:27:03,8135234
95,"What I hear in the market is that people are scared of a (already rumoured earlier this year) takeover by MS. Because it&#x27;s not totally open source, that is a very real danger and companies need to take that into account. I love Xamarin and how it works but experiences from the past after acquisitions does make us cautious in going all in on it.",2014-08-05 07:33:16,8135913
96,Are you or is anyone aware of how the F# support for monodevelop(Xamarin Studio) and mono is coming along?  I&#x27;ve had good experiences making console and service projects in Xamarin(monodevelop) and would like to give F# a go.. But I just don&#x27;t see chaining myself to the VisualStudio&#x2F;Windows environment.,2014-08-13 05:46:44,8171600
97,Xamarin Forms is really new. Xamarin Android(Accessing native Apis via C#) is quite stable.,2014-09-01 17:21:36,8253859
98,"It is currently possible to share 90% of the code between a Windows Phone and a Windows 8 app. Heck, it is even possible to write the UI of an app once and make it work on both platforms. The binaries are now the same on Windows Phone and Windows 8 (I think you can submit a single one for both apps), and universal apps are already a thing (you can buy it once and get the app on Windows 8 and Windows Phone).<p>It&#x27;s a matter of time before people realize they can use Xamarin to port a Windows app to iOS&#x2F;Android in a matter of days.",2014-09-07 17:54:48,8281846
99,"C# is in front of all three in mobile space (it compiles to native of course).<p>C# is the only language that is both modern and spans all major mobile platforms.<p><a href=""http://en.wikipedia.org/wiki/Xamarin"" rel=""nofollow"">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Xamarin</a>",2014-09-10 12:57:24,8296311
100,"I don&#x27;t have direct experience with either Qt on mobile platforms or Xamarin, so I can&#x27;t provide exactly what you asked for. But I can provide a considered opinion.<p>I strongly recommend Xamarin over Qt, because even if you use Xamarin.Forms, you&#x27;ll be using the actual native UI on each platform, not a mere approximation. So your app will be more true to the native look and feel of each platform. Moreover, it will be accessible to users with disabilities, especially blind users, as long as you don&#x27;t implement any custom widgets of your own. (If you do need to implement custom widgets, you&#x27;ll need to implement each platform&#x27;s accessibility APIs as well.) True, these users are a minority, but if you can make your app work for them without considerable extra effort on your part just by building on the right foundation, then that&#x27;s a win-win situation.<p>Qt may offer the promise of &quot;write once, run anywhere,&quot; but IMO, that should be more like, &quot;write once, be inferior everywhere.&quot;",2014-09-16 16:46:58,8325431
101,"Part of the reason to use Xamarin is in order to take advantage of C# and F#. Using JavaScript throws away or inhibits a lot of useful stuff like static type checking, automatic completion and refactoring, and code browsing. Besides, theyre invested now; switching to another language may be too costly at this point.",2014-09-22 04:23:48,8349228
102,"I tried Titanium. Its horribly slow. You can&#x27;t really build native UI&#x27;s unless you mimic them. Using Javascript is super simple but you trade off in power, big time.<p>General rule of thumb; if you&#x27;re building &quot;content&quot; apps you can get away with Titanium. If you&#x27;re trying to build awesome experiences you&#x27;d have to go native and Xamarin is currently the best cross-platform suite out there.",2014-09-22 04:53:55,8349302
103,"In principle, Xamarin Forms should enable many common UI elements, like list views, to be coded cross-platform. In practice, I wonder if that holds up well w.r.t. hooking the list views up to the model behind them. But, nonetheless, Xamamrin supports both cross-platform and native UI elements, which seems like a practical approach.<p>All that said, I would normally advise a client not only to have native code, but also large amounts of native design for their main platform targets. Lots of Android apps suffer from port-itis. Transliterating an iOS implementation inevitably makes for a lackluster Android app that underutilizes Android modularity features among other things Android does well.",2014-09-22 13:35:44,8350469
104,"Ditto. I really can&#x27;t think of anything better to say:
Working with Xamarin tools is infuriating. You come to expect them to apologize for the level of unreliabity, instead, not long ago, I got an angry reply that I should be careful when reporting bugs and that I&#x27;m insulting them. Never did, but I might start.",2014-09-22 18:19:56,8351734
105,"It&#x27;s an interesting story but it&#x27;s told as a &quot;person A did this, Person B did that, and Person C had this idea, etc.&quot;  Maybe it&#x27;s a consequence how my brain works but any time I read that type of recap, I forget everyone&#x27;s name and the other trivia 5 minutes after I&#x27;m done reading it.<p>When revisiting technology history, what tends to stick in my mind is the context and industry forces prevalent at the time and the story doesn&#x27;t have that.<p>So my recollection of context in 1990 would include...<p>1st: The prevailing method of writing Windows programs in 1990 (the Windows v3.0 &amp; v3.1 era) was the raw Win32 API.  That meant the &#x27;C&#x27; Language WndProc(), giant switch case statements to handle WM_PAINT messages.  Basically, all the stuff taught in the thick Charles Petzold book.[1]  This was very tedious and complex type of programming.  It was not friendly to corporate aka &quot;enterprise apps&quot; aka LOB &quot;line of business&quot; type of programming.  (Java would arrive on the scene 5 years later but I didn&#x27;t see a lot of corporate adoption until v1.3 which was year 2000.)<p>2nd: You had a large base of old-style DOS text mode developers for line-of-business apps using programming languages such as dBASE III, Clipper, FoxPro, and other 4GL  tools, etc.  The typical skillset of those programmers did not include the C Language.<p>In 1990, Windows 3.0 was becoming popular as a platform for corporate desktops and businesses wanted to write apps for it.<p>Visual Basic v1.0 hit that perfect sweet spot for a bunch of refugees from the DOS text mode 4GL languages to write Windows programs.  They didn&#x27;t have to learn the low-level C language or mess around for months with the Petzold book.  Visual Basic had this ingenious abstraction called &quot;forms&quot; that hid the WndProc() monster and its messy switch case statements.  It was a huge transformation.  It was phenomenal how VB &quot;democratized&quot; the programming of Windows apps. A bunch of ISVs sprung up that built their business around Visual Basic.<p>The recent parallels to VB as an &quot;inviting tool for newcomers&quot; might be PHP replacing a lot of CGI+PERL and maybe JQuery eliminating a lot of low-level Javascript getelementbyid().  Today, when I look at the iOS and Android landscape, I still haven&#x27;t seen anything (Titanium? Xamarin?) that grabs mindshare the way VB did back in 1990.<p>[1]<a href=""http://www.amazon.com/Programming-Windows-3-1-Charles-Petzold/dp/1556153953"" rel=""nofollow"">http:&#x2F;&#x2F;www.amazon.com&#x2F;Programming-Windows-3-1-Charles-Petzol...</a>",2014-10-10 19:34:52,8439611
106,"I am pretty sure the Forms in this case refers to Xamarin.Forms developed in the last year.<p><a href=""http://developer.xamarin.com/guides/cross-platform/xamarin-forms/"" rel=""nofollow"">http:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;xamarin-f...</a>",2014-10-13 13:19:23,8448578
107,"See also <a href=""http://blog.xamarin.com/xamarin-acquires-petzold/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;xamarin-acquires-petzold&#x2F;</a>",2014-10-13 13:40:50,8448646
108,"Does this include salaried positions? Right now the rate I&#x27;m earning is about $41&#x2F;hr($328&#x2F;day) in the northeast US at a small company. A few years ago I was getting $50&#x2F;hr on a consulting gig, but that required a 4 hour commute(2hrs each way to NYC).<p>I&#x27;m primarily a C# developer, but I have experience in C++, Java, SQL, and a little bit of webdev(HTML&#x2F;JS). I&#x27;ve worked on a few mobile apps in iOS and Android(the latter with Xamarin). I&#x27;m been programming for about 15 years, and I&#x27;ll be coming up on 10 years of those which have been for professional companies.<p>I swear, reading some of these responses makes me feel very underpaid.",2014-10-15 14:37:37,8458619
109,I&#x27;ve never played enough with Xamarin Studio and only tested Xamarin Business with Visual Studio (I&#x27;ve used a 30 days trial).,2014-10-23 20:39:29,8500610
110,I wonder if Xamarin are considering acquiring Untity 3D?,2014-10-24 09:52:23,8502886
111,"It would have been zero to Xamarin, but doubt it was free.<p>I imagine they bought a perpetual license to distribute sans-GPL the full code of a specific version of mono from Novell.<p>This thread has a bunch of speculation and a few comments from unity developers: <a href=""http://forum.unity3d.com/threads/new-version-of-mono-with-unity-4-3-any-additional-details-on-that.197948/"" rel=""nofollow"">http:&#x2F;&#x2F;forum.unity3d.com&#x2F;threads&#x2F;new-version-of-mono-with-un...</a>",2014-10-24 10:44:28,8503009
112,"The project I work on isn&#x27;t a startup per se but it&#x27;s not completely dissimilar. We use:<p>* ASP.NET for web with SQL Server + EF for the database and data access<p>* Xamarin for mobile and OData for data access (back to our ASP.NET sites)<p>The CLR is great because it&#x27;s always been fast enough for our applications and every so often you get something for nothing. For example, CLR 4.5 brought better GC and RyuJIT is bringing better code generation. NET Native might give us even better performance.<p>LINQ is amazing if you know your IQueryables from your IEnumerables and the difference between an Expression&lt;Func&lt;T, bool&gt;&gt; and a Func&lt;T, bool&gt;.<p>Hosted in a private datacentre, not using Azure but we&#x27;ve got our eye on it (provisioning resources in the Azure Portal seems to get easier and easier than doing it ourselves).<p>New Relic for monitoring the web sites.<p>My biggest gripe (and it&#x27;s not that big) is that within the Microsoft ecosystem&#x2F;community everything works great but once you go outside it things are less well supported. Some less-popular-but-wow-that&#x27;s-useful Javascript libraries don&#x27;t come as NuGet packages. New Relic&#x27;s .NET monitoring seems good but second fiddle to their other stuff.<p>After that I&#x27;d say Xamarin is letting the team down. Every second or so release of theirs fixes two bugs but adds another one.<p>Keeping an eye on Application Insights. It looks like it integrates nicely with Visual Studio Online, and VSO&#x2F;TFS actually looks quite nice <i>in parts</i> (e.g. Bamboo for CI is largely geared towards Java apps not .NET but TFS&#x27; Release Management looks promising). I have my eye on VSO&#x2F;TFS too but right now it looks like pros do not outweight the cons vs. our Atlassian applications.<p>If you&#x27;ve got enough processing power and memory and a fast SSD to run Visual Studio + ReSharper it&#x27;s coding heaven.",2014-11-02 07:33:30,8545956
113,"Xamarin&#x27;s value proposition is developing for multiple platforms at once (or at least, as a current Xamarin user, sharing as much as possible between platforms). Swift still offers nothing for that scenario so I don&#x27;t really understand the comparison.<p>Obviously if you are only going to ever develop for iOS then going with Swift could make sense but then it seems that Xamarin would&#x27;ve never really have been an option anyhow, irrelevant of cost.",2014-11-03 15:44:22,8551327
114,"I bet Microsoft would like to buy Xamarin too, but worry that might strain Xamarin&#x27;s relationship with Apple and&#x2F;or Google. This could be a &quot;if it aint broke, don&#x27;t fix it&quot; scenario.",2014-11-03 15:51:56,8551371
115,Actually that sounds so reasonable. I have been asking myself why Microsoft hasn&#x27;t bought Xamarin. But Xamarin is actually an amazing Trojan Horse for Microsoft.,2014-11-03 16:29:15,8551630
116,"The mono compiler (that Xamarin uses, and would presumably be replaced by the Roslyn compiler), is released under GPL and MIT X11 licenses (<a href=""https://github.com/mono/mono/blob/master/LICENSE"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;mono&#x2F;blob&#x2F;master&#x2F;LICENSE</a>)<p>I don&#x27;t think this will have any effect on Xamarin licenses at all.",2014-11-03 20:06:48,8553121
117,"Interestingly, most of my experience is in c#, but I&#x27;ve now got a side project that requires apps. I wrote them in Android and iOS. I looked at Xamarin as well, but I couldn&#x27;t see the point of learning essentially a new framework. I figure whatever pattern you use (probably MVC) it will be the same on both. And the layout paradigms are different between them, so how is Xamarin going to fix that? My solution was just to use webviews instead of the native layouts (decided after bashing my head against both layout engines).<p>Anyway, my point is once you understand how things are organised, the language shouldn&#x27;t make much of a difference. Especially not between popular, run-of-the-mill languages like c#, java and ObjC. Your devs could probably learn iOS pretty easily.",2014-11-03 21:00:26,8553458
118,"Quick question, where do Mono&#x2F;Xamarin or similar projects stand on this whole API copyright? Aren&#x27;t they essentially writing a library with the same API as the .NET or other single-platform framework? Or am I misunderstanding what they meant with API in this case?",2014-11-08 17:38:19,8577538
119,Miguel&#x2F;Xamarin is a very strong partner of Microsoft as well :),2014-11-08 20:30:14,8578064
120,"&quot;To further support cross-platform mobile development with .NET, as part of their strategic partnership, Microsoft and Xamarin...&quot;<p>I would be pretty shocked if MS just suddenly dropped their won linux&#x2F;mac implementation. Xamarin and the mono team have been working on this for a very long time.  MS is just bringing them further into the &quot;legit&quot; fold",2014-11-12 15:51:07,8596027
121,What happens to Xamarin business model now?,2014-11-12 15:55:29,8596063
122,The iOS and Android part don&#x27;t make sense to me. Surely you won&#x27;t be running VS on your iPad? So are they saying it has support for compiling to iOS and Android? Wouldn&#x27;t they need to mention Xamarin in that sentence for it to make sense?,2014-11-12 15:57:36,8596080
123,"They seem to be cooperating with Xamarin, to some extent:<p>&quot;To further support cross-platform mobile development with .NET, as part of their strategic partnership, Microsoft and Xamarin announced a new streamlined experience for installing Xamarin from Visual Studio, as well as announced the addition of Visual Studio support to its free offering Xamarin Starter Edition  available later in the year.&quot;<p><a href=""http://news.microsoft.com/2014/11/12/microsoft-takes-net-open-source-and-cross-platform-adds-new-development-capabilities-with-visual-studio-2015-net-2015-and-visual-studio-online/"" rel=""nofollow"">http:&#x2F;&#x2F;news.microsoft.com&#x2F;2014&#x2F;11&#x2F;12&#x2F;microsoft-takes-net-ope...</a>",2014-11-12 16:18:25,8596255
124,It would destroy Xamarin if they made it free to develop C# for iOS&#x2F;Android.,2014-11-12 16:19:52,8596273
125,"Not only that, but Xamarin&#x27;s independent existence is like free insurance for companies choosing .NET - even if Microsoft were to drop support (unlikely, but look at Silverlight), Xamarin would continue providing a viable way forward for the language and runtime. Now that MS&#x27;s .NET is open source, Xamarin&#x27;s .NET is like OpenJDK - Xamarin is a governing body and authority for the language&#x2F;API if Microsoft were to drop it. So it&#x27;s good for Microsoft to have Xamarin as an independent entity.",2014-11-12 17:35:14,8596836
126,Xamarin.Mac is all about native Cocoa app development in C#.,2014-11-12 19:19:09,8597546
127,You can do this few years already with Xamarin. Thousands of developers are doing this today. What this changes is better .Net framework compatibility(less bugs) because Microsoft .Net source code will be reused.,2014-11-12 20:07:57,8597820
128,"They plan to change it, from <a href=""http://blog.xamarin.com/microsoft-and-xamarin-expand-global-partnership/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.xamarin.com&#x2F;microsoft-and-xamarin-expand-global-...</a><p><pre><code>  Free Xamarin Starter Edition for Visual Studio Users  
  Today, Microsoft announced a new, free edition to Visual   
  StudioVisual Studio Community. Visual Studio Community 
  contains support for extensions, which means it will be 
  Xamarin compatible with from day one. We want to help make   
  Visual Studio Community a tool for anyone to create native
  apps for iOS and Android, so we are announcing our plans to
  enable our freely available Xamarin Starter Edition to work 
  with Visual Studio Community. We are also doubling the size 
  limit on apps that can be created with Xamarin Starter Edition, 
  so that you can build even more capable apps for free. 
  This will be available in the coming weeks.</code></pre>",2014-11-12 20:50:24,8598053
129,"Good points. Except:<p>&gt;But where does this leave .NET, visual studio etc? Those are no longer the tools with 
&gt;which megacorps make their intranets, or where Photoshop and Call Of Duty is made<p>.NET was never the tool where Photoshop and Call of Duty was made, but a significant amount of mobile apps and games nowadays are made using Xamarin and Unity, tools that run on top of Mono, a cross-platform implementation of .NET. If anything the Microsoft announcement brings Mono and .NET closer together. And I think you will find that a significant (if not majority) proportion of megacorps do run their intranets on SharePoint. SharePoint is and has been customisable using .NET libraries and tools.",2014-11-13 11:44:33,8601033
130,Just use F# from Xamarin. It&#x27;s the real deal. C# is just a stop-gap measure to suck in the enterprise devs.,2014-11-20 00:21:24,8633657
131,"We used AIR for making graphical user interfaces on embedded devices. From a technical point of view I can only recommend it: AS3 is a good language, Flex and MXML are easy and straightforward to work with and there is good tooling included.<p>However the downside of AIR is really future-proofness: Thanks to bad publicity and the assumptions that all flash can be easily replaced by HTML5 the development of AIR is continuosly phased out. E.g. AIR for Linux (not Android) is already no longer supported. I don&#x27;t know how active the development now is under the Apache umbrella.<p>Alternatives would be:  
- Xamarin (.NET)
- QT (i enjoyed it less then AIR because you have to switch between C++ and Javascript whereas in AIR you can implement your whole app in a single language)
- use one of the HTML5 frameworks in combination with typescript (you will need quite a lot of JS libs to get what AIR brings you straight out of the box -  but on the other hand you are more flexible to choose what suits your needs)",2014-11-23 10:31:37,8648360
132,"For me F#&#x27;s syntax is so clean and pleasant to look at, I just love it. But having been in the JVM land for too long, at the beginning I like to get a bit more &#x27;native&#x27; and learn OCaml. Hopefully acquired functional programming knowledge can be transferred to F#+Xamarin app development later.",2014-11-25 15:35:53,8658100
133,"<p><pre><code>  * C# (and&#x2F;or F#) to build iPhone, Android, and Windows Phone apps [1] 
  * F# code that compiles to JavaScript for front-ends [2] 
  * C# (and&#x2F;or F#) code for Windows and *nix clients [3] 
</code></pre>
They are not perfect (nor the tooling are free), but it is possible.<p>[1] - <a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a><p>[2] - <a href=""http://websharper.com/"" rel=""nofollow"">http:&#x2F;&#x2F;websharper.com&#x2F;</a><p>[3] - <a href=""http://www.mono-project.com/"" rel=""nofollow"">http:&#x2F;&#x2F;www.mono-project.com&#x2F;</a>",2014-12-01 03:54:56,8679429
134,"The key paragraph from the post RE:Mono is:<p>&quot;well make .NET Core great for Windows, Linux and Mac OSX. This also enables the Mono community to innovate on top of the leaner .NET Core stack as well as taking it to environments that Microsoft isnt interested in.&quot;<p>Seems like a pretty clear split - MS will cover the server-side + Win UIs, while Xamarin handles the other plats (IOS, Android, PS4 etc).<p>This plays to the strengths of both companies, and I would not be surprised if MS has some security in place - e.g. some kind of first option to buy Xamarin should another suitor come calling.",2014-12-04 23:11:04,8702285
135,I doubt they would want to directly compete with someone who is 100% focused at that market and is already in a partnership with Microsoft. It just doesn&#x27;t make any sense for them.<p>tbh I wouldn&#x27;t be surprised if Microsoft just flat out bought Xamarin eventually.,2014-12-05 00:38:14,8702538
136,&quot;I suppose the Xamarin guys need to eat but it&#x27;s kind of disappointing they are not directly targeting iOS and Android&quot;.<p>Exactly! Clue #1: full Android emulator&#x2F;debugger  built into VS2015.  Clue #2: Rosylyn and .NET native.  Clue #3: Carving up .NET core into separate chunks for smaller deployments.<p>Maybe Xamarin was just a beta test for the real thing?,2014-12-05 04:41:15,8703036
137,"React Native is a cool project, but the deafening hype is slightly puzzling.<p>Creating and calling native UI components from JavaScript is nothing special in itself. It&#x27;s obviously possible to do it from JS just as well as from any other language -- you just need to provide the API. There you have two choices: either a bridge that translates the native API directly, or a wrapper class hierarchy.<p>Examples of bridges include Xamarin&#x27;s Mono that lets you build iOS user interfaces in C# code, and RubyMotion that lets you build Mac UIs in Ruby. Because these are bridges, the entire Cocoa API is exposed. The downside is that the bridge does nothing to smooth over platform differences: you can write in C# on all platforms, but you still have to learn Cocoa.<p>A prominent example of a wrapper API is Titanium Appcelerator that lets you build cross-platform mobile apps. Another good example is GTK+ for desktop apps: it&#x27;s smart enough to leverage native Windows components where possible, but the GTK+ API is higher level than that of native Win32.<p>React Native is primarily in the latter category. Based on jordwalke&#x27;s comment in another HN thread, they currently have cross-platform wrappers for View and Image:<p><a href=""https://news.ycombinator.com/item?id=8965044"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=8965044</a><p>But it appears you can also create platform-specific views, and for that they presumably have some kind of bridge. (It could also be that they provide manually written wrappers for platform-specific views, e.g. UIMapView becomes a &lt;Map&gt; and so on.)<p>In sum: React Native doesn&#x27;t magically translate your JS+HTML app into a cross-platform native app. They&#x27;re a long way off from having a full cross-platform API (unless your app is so simple that it can be described in terms of &lt;View&gt; and &lt;Image&gt;). And, like all wrapper APIs, there is a degree of impedance mismatch between the underlying platform implementation and the cross-platform interface on top.<p>There&#x27;s a lot to like about React Native, though. The layout model and binding logic seems cool. The React team&#x27;s accomplishments in the browser environment are impressive. With time, React Native could become for mobile what Qt is on the desktop -- and that&#x27;s high praise in my books.",2015-01-30 08:54:55,8971107
138,"What about F#&#x2F;C#? <a href=""http://xamarin.com/"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com&#x2F;</a>",2015-02-05 10:38:20,9002571
139,"First, all ClojureScript code is Closure compatible, you don&#x27;t have to worry about that.<p>Secondly, Om in a Webview and Xamarin are not fair comparisons.",2015-02-06 17:17:03,9010048
140,"The problem with such a framework is that the native part is completely blackboxed. I would never consider to adopt an hybrid framework that does not provide access to code because of the concern that some corner cases, which I cannot anticipate, could not be covered properly. I wrote a board game application in which I mix 2d graphics with native UI views. In the end I chose C++ for the business logic + 2d part ( with cocos2d-x) and Java or Objective-c for the GUI part. While It has been sometimes awkward ( especially on Android ) I feel to have done the right choice at the time I started. I have been able to reause a lot of code and the tools and languages I have chosen are fully supported. If I had to start again  today I probably would consider Xamarin ( at the time it was too much expensive ) or something like RemObjects Silver.",2015-02-19 08:11:13,9072970
141,Xamarin Studio.,2015-02-23 14:51:31,9094537
142,"Any reasons I should switch to Java or other technologies?<p>What I get with the (much hated) Microsoft stack:<p>- C# with LINQ and async await<p>- Roslyn compiler as a service which speeds up development<p>- mature .NET framework<p>- more and more open source and cross platform parts and 
smaller independent libs<p>- typescript<p>- Xamarin cross platform tools<p>I also use python and used Java in the past. I don&#x27;t see any reason why Java should be better?",2015-02-26 23:38:45,9116323
143,"<i>To redistribute code written with Mono for Unreal Engine, you must have a commercial license to the Mono runtime. These licenses are available from Xamarin for Mac, Android and iOS online, and you can request Windows licenses through support.</i><p><a href=""https://mono-ue.github.io/about.html"" rel=""nofollow"">https:&#x2F;&#x2F;mono-ue.github.io&#x2F;about.html</a><p>If you want to code in C# it is the primary language for Unity, and a commercial third party unsupported add on for UE4.",2015-03-03 00:55:44,9135486
144,"Cool to see this. By my count we now have, in no particular order:<p>- React Native from Facebook (<a href=""https://github.com/facebook/react-native"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;react-native</a>)<p>- Appcelerator&#x27;s Titanium and Alloy Frameworks (<a href=""http://appcelerator.com"" rel=""nofollow"">http:&#x2F;&#x2F;appcelerator.com</a>)<p>- Telerik&#x27;s Native Script (<a href=""http://telerik.com/nativescript"" rel=""nofollow"">http:&#x2F;&#x2F;telerik.com&#x2F;nativescript</a>)<p>- Xamarin (<a href=""http://xamarin.com"" rel=""nofollow"">http:&#x2F;&#x2F;xamarin.com</a>)<p>As I understand it, all three of these frameworks have a JS (or C#) runtime that is compiled along with the app. This JS runtime is what drives the app and uses the native features of each platform (iOS &#x2F; Android).<p>I&#x27;ve been building on Appcelerator for the last 4 months on some basic apps, and it works pretty well.<p>I look forward to trying out some toy apps on the other platforms.",2015-03-26 19:53:52,9272600
145,"For me QML&#x2F;C++ (or other C++ UIs) and Xamarin make much more sense for native mobile coders.<p>- Better native integration<p>- Integration with the SDK tooling<p>- Support of all three major mobile platforms<p>- Performance<p>As soon as I saw what React Native offers, it was meh for me.",2015-03-30 13:26:14,9289285
146,"SEEKING WORK - The Netherlands or Remote.<p>I&#x27;m an experienced full-stack developer, team lead and interim CTO. Currently bootstrapping co-founder at <a href=""http:&#x2F;&#x2F;klets.co"" rel=""nofollow"">http:&#x2F;&#x2F;klets.co</a>, but I do occasionally have time to help people get their team or their stack up and running. Do get in touch!<p>Keyword soup: C#&#x2F;.NET, JavaScript, TypeScript, ReactJS, Flux, Java, Scala, C++ and Python, Elixir (Erlang VM), Xamarin, PhoneGap&#x2F;Cordova, PostgreSQL, Mono, DDD, Scrum, Kanban, Lean.<p>As an engineer, I specialize in ReactJS based projects and CQRS backends. I&#x27;ve been the lead engineer and architect for three React-based projects up until now, including <a href=""http:&#x2F;&#x2F;www.izooble.com"" rel=""nofollow"">http:&#x2F;&#x2F;www.izooble.com</a>, if you&#x27;d like a sizeable showcase.<p>Making a decent React architecture really pays of when done right. I can help you make sense of the many Flux flavors and the other equally good options.<p>As a team lead, I specialize in cutting away the nonsense and getting a team highly productive in startup-like environments. I accomplish this with a lightweight, non-religious, and highly reflective agile process, together with a pragmatic focus on internal software quality. This focus ensures that the team is productive today and also next month.<p>Contact info on <a href=""http:&#x2F;&#x2F;superset.eu"" rel=""nofollow"">http:&#x2F;&#x2F;superset.eu</a>, chat with me on <a href=""https:&#x2F;&#x2F;klets.co&#x2F;superset"" rel=""nofollow"">https:&#x2F;&#x2F;klets.co&#x2F;superset</a>.",2015-04-01 19:13:56,9306073
147,"Judging by the docs [1], RubyMotion does indeed not seem to use a GC on iOS but instead relies on ref counting, reusing auto-release pools. That means cyclic refs are an issue. You have to explicitely use weak references throughout your code.<p>They are not on Android, where RubyMotion uses the Dalivk&#x2F;ART GC.<p>So, your cross-platform Ruby code has to deal with two different types of memory management systems. I&#x27;m not sure this qualifies as a better option to what Xamarin provides.<p>[1] <a href=""http:&#x2F;&#x2F;www.rubymotion.com&#x2F;developers&#x2F;guides&#x2F;manuals&#x2F;cocoa&#x2F;runtime&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.rubymotion.com&#x2F;developers&#x2F;guides&#x2F;manuals&#x2F;cocoa&#x2F;ru...</a>",2015-04-04 17:43:12,9321517
148,"Er, that&#x27;s on top of your Windows license, your Visual Studio license, your Apple Developer License, your Apple Macbook because you can only compile and deploy to the app store with a Macbook... oh and Xamarin university if you want to become certified... <i>and</i> if I understand the terms correctly, it&#x27;s not $1000 per developer, it&#x27;s $1000 per developer per platform, so if you want iOS <i>and</i> Android, it&#x27;s $2000 per developer on top of all that previous licensing. So to say it&#x27;s incredibly cheap at $1000 isn&#x27;t the whole story.",2015-04-05 04:42:39,9323138
149,"So it looks like this targets Windows and Android only (maybe iOS via Xamarin...?)<p>For an alternative the Poco C++ libraries[1] work on Android, iOS and Windows out of the box. Probably not as full featured and you obviously can&#x27;t use existing Visual C++ code..., but its Open Source and mostly just works.<p>[1] <a href=""http:&#x2F;&#x2F;pocoproject.org&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;pocoproject.org&#x2F;</a>",2015-04-24 15:39:56,9434065
150,"This is a brilliant move to make Windows 10 much more relevant.  I really like some of my Android apps, but I want a Windows phone.  Hopefully this will encourage apps like Automatic to move to Windows phone.<p>I also wonder if this will affect Xamarin in a negative way.",2015-04-29 17:41:38,9460115
151,"I&#x27;m still wondering whether MS will encroach on Xamarin territory, especially if it&#x27;s free.",2015-05-01 16:36:28,9472674
152,"1) Your app is now tied for life to a third-party vendor.
2) There&#x27;s is a steep yearly licensing fee. (starting at 300 USD PER developer, PER platform).
3) Xamarin Forms is notoriously buggy if you&#x27;re looking to also use it for cross-platform UI code.
4) It&#x27;s debatable how much easier C# is to learn than Swift.",2015-05-03 19:37:53,9482679
153,"Senior Mobile Developer, Senior Javascript Developer:  Remote and&#x2F;or Logan, Utah<p>___Senior Mobile Developer___
We need brilliant people who love using cutting edge technologies to create engaging mobile applications on Android and&#x2F;or iOS, using Java and&#x2F;or ObjC, using Xamarin!<p>Preferred Qualifications: - Experience developing Android and&#x2F;or iOS applications - Experience with git - Experience with Agile Methodologies - Degree in Computer Science or related discipline - Passionate about mobile technologies and coding the <i>right</i> way - Experience with Xamarin and C#<p>To Apply:  <a href=""http:&#x2F;&#x2F;goo.gl&#x2F;3Rf9uS"" rel=""nofollow"">http:&#x2F;&#x2F;goo.gl&#x2F;3Rf9uS</a><p>___Senior Javascript Developer___
We are looking for full-stack developers who are interested in using cutting edge web technologies. The core of our web application is built on NodeJS and MongoDB.
You will be helping to improve and maintain a data-driven fitness platform that connects millions of devices and consumers.<p>Prefered Qualifications: You enjoy JavaScript, and are aware of its advantages and flaws. - You value open source. - You consider yourself a full-stack developer. - You are comfortable with *nix command line tools and processes.<p>Experience in these technologies would be considered a plus: NodeJS, MongoDB, Redis, Git, React, SASS<p>To apply: <a href=""http:&#x2F;&#x2F;goo.gl&#x2F;M8aKw9"" rel=""nofollow"">http:&#x2F;&#x2F;goo.gl&#x2F;M8aKw9</a>",2015-06-01 05:44:28,9636958
154,"Location: Riga, Latvia<p>Remote: Yes<p>Willing to relocate: Discussable<p>Technologies: .NET C#, Xamarin, Javascript (Angular, Node.js etc), HTML&#x2F;CSS (SASS, LESS)<p>Resume&#x2F;CV: <a href=""http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous"" rel=""nofollow"">http:&#x2F;&#x2F;lv.linkedin.com&#x2F;in&#x2F;philous</a><p>Email: philgsky &lt;at&gt; outlook &lt;dot&gt; com<p>I&#x27;m a fullstack developer with strong .NET background (over 8 years experience) and front end experience.  
Currently focusing on developing for mobile phones and tablets. Providing full package services from application design creation to  development for all platforms (iOS, Android, Windows). Looking for remote projects.",2015-06-05 14:33:51,9665737
155,"sorry for double submit, link changed after 1 hour deadline.<p>Correct link:
http:&#x2F;&#x2F;www.whitneyland.com&#x2F;2015&#x2F;07&#x2F;xamarin-review-2015.html",2015-07-01 15:54:55,9812751
156,"You do not need to use Monodevelop, even on Windows or Mac to write Xamarin apps. Monodevelop is just the most obvious as it&#x27;s packaged. And agreed, Monodevelop is not very good.",2015-07-08 14:29:18,9851715
157,"I&#x27;ll be more moderate than I thought I&#x27;d ever be and say it depends on your needs for the app you are building. Also depends on your definition of Native.<p>First Native can mean a lot of things in Android Land. For instance you mention Xamarin and React Native. Both of those are generating actual native binaries (googles byte code version of Java byte code) or rather React Native for android will when it&#x27;s actually a thing, it&#x27;s not released yet but should be somewhat soon. They are both a way of writing Native code in another language (C#, Js) rather like Scalriod let&#x27;s you write a native Android App in Scala. The are a fundamentally different approach than Ionic or PhoneGap which are HTML5&#x2F;JS&#x2F;CSS based webapps that are packaged to be app-like. Also in android development Native is sometimes used to refer to C++ ndk development. Go is also being used sometimes (go 1.5 needed to support it) for native (meaning cpu native binary instead of byte code) code.<p>If you plan on being a Mobile developer as your day job than I say absolutely. If I&#x27;m hiring a dedicated Android dev, I&#x27;d expect that they are an expert in Android Java. Bonus points for knowing C++ ndk or Go ndk development because then I&#x27;m not really restricted as to what I could ask them to do on the platform. Some things like converting video in real time or intense calculations will absolutely require ndk level of performance.<p>If your app is mostly using a rest api or collecting form data, then ndk is way overkill. Rather it&#x27;s a native experience depends on your goal. If you want the latest in Android API&#x27;s or features or you want the smoothest most native feeling app, then Java is really the only choice. If you are more concerned about sharing code with and iOS project then Xamarin or soon React Native are the best choices. Lastly if all you really care about is having an &quot;app&quot; for a SaaS or other webapp then PhoneGap or Ionic would be a valid choice. For me I&#x27;d never use them but I&#x27;d rather have a great app or no app at all. I would consider Xamarin or React Native though, I think the user experience is close enough to a standard sdk app on both platforms that if you aren&#x27;t a mobile game or mobile app based startup that it is probably good enough. Games are exception in that, there are a ton of cross platform options that are awesome. Unreal, Unity, Cocos, even phonegap or ionic packaging up a html5 game engine like phaser are all very good choices.",2015-07-12 17:09:08,9874099
158,"I run a growing company with an office full of software professionals in the EU (Portugal). We create custom software for clients using (any combination of) Django&#x2F;Python, HTML5 (diverse frameworks), Java (diverse frameworks) &amp; Xamarin.<p>Most threads about work &#x2F; projects here are for individuals looking for gigs or jobs; I hardly ever see anything for companies or teams. We are working with US companies already and I am flying over in august to meet up with some of them; I was wondering if anyone here would be interested in our services in the US&#x2F;EU.<p>Or more generally; is there any board&#x2F;thread&#x2F;etc for (small) companies regularly looking for projects&#x2F;team hires instead of individuals looking for jobs? If nothing like that exist maybe this could be a start as i&#x27;m sure more people are looking for that here.",2015-07-26 09:29:07,9950608
159,"Top of Mind : REMOTE OKAY 
Positions:
Frontend Angular engineer
Xamarin Mobile developer
Backend C# engineer<p>We&#x27;re looking to ramp up our team of .net and javascript engineers for building out the next version of our CRM platform. Work on exciting latest and greatest technologies with a team of 10 other awesome developers!<p>Email me directly if you&#x27;re interested at ktavera@topofmind DOT com",2015-08-03 16:02:13,9997054
160,"I&#x27;m impressed at what the Mono&#x2F;Xamarin team is able to pull off, but I can&#x27;t help feeling that one day Apple is going to introduce a change (or a new product) that breaks the leaky abstraction in a way that the magic Xamarin elves simply can&#x27;t fix.  I thought watchOS 1 would be the breaking point, and then watchOS 2, but so far they appear to be making those work.  Keep up the good work, I hope to be proven wrong!",2015-09-03 00:06:53,10162698
161,"I&#x27;ve mostly spent time on the Mac side of things so far, and have helped out a colleague with the mobile stuff. Recently they&#x27;ve added a lot of documentation for the Mac side that covers basically anything you want to know - or at least it covered all the stuff I wanted to know when I first started the Mac app 12 months ago.<p>For mobile, Xamarin Forms can be a little difficult to wotk with, but it&#x27;s getting better all the time. I don&#x27;t really want to bother with learning native development at the moment, and because we have a pile of calculations and logic in our shared PCL Xamarin is working out for us.<p>There is some criticism that the pricing model makes it expensive for people developing at the low end of the mobile market ($1 or $2 apps), however I think that&#x27;s more a failure of that kind of market in general rather than a problem with Xamarin pricing itself.",2015-09-03 22:37:16,10167908
162,"San Francisco, CA | Full Time Onsite + Remote<p>#TheXamarinStory. We created Xamarin (<a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;</a>) because we knew there had to be a better way to build mobile apps. Were developers, so we know what developers want: a modern programming language, powerful tools, an efficient and delightful workflow and the power to create the best user experiences. We are on a mission to make it fast, easy and fun to build great mobile apps.<p>Systems Engineer (SF Onsite) <a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;ojxx0fw7"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;ojxx0fw7</a> Would you like to be part of the beginnings of Xamarin&#x27;s internal tech ops team? This is the challenge you have been waiting for! You will be heavily involved with both server and identity infrastructure automation, network operations, and infrastructure support and security.<p>Mobile Architect (SF Onsite + Remote)  <a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;ou6n0fwH"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;ou6n0fwH</a> We are looking for Senior Mobile Consultants to join our small Strategic Client Services team across the globe to help our clients realize the most out of their investment in our products (Xamarin Platform, TestCloud, and Insights).  Successful candidates are multidimensional developers and client facing leaders that love to architect, build and optimize exciting mobile apps across every single industry around the world.<p>Junior Mobile Development Trainer (Remote Contract-to-Perm) <a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;oLLxZfwM"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;jobs&#x2F;oLLxZfwM</a> Do you have an ability to teach and inspire others regarding technical concepts and skills? Do you love C# and mobile development? Would you take pride in helping individuals and companies transform themselves and achieve their mobile strategy objectives? Yes to all - send us a note and tell us why - Xamarin University is excited to hear from you!<p>We have more jobs available in Boston, San Francisco and London including a few REMOTE positions! Complete list of all Xamarin opportunities (multiple locations): <a href=""https:&#x2F;&#x2F;xamarin.com&#x2F;jobs"" rel=""nofollow"">https:&#x2F;&#x2F;xamarin.com&#x2F;jobs</a><p>Interested to learn more, chat about what its like to work at Xamarin? My direct: paula@xamarin.com",2015-10-01 15:19:17,10311738
163,"D has replaced Python for my regular programming.<p>D is the sweet spot for Python programmers to upgrade to without going backwards to Go (Programming language design wise) nor weighed down by all the new (and very good) stuff in Rust.<p>D has everything from a nice IDE(Xamarin Studio), debugger, package management (Dub), statically compiled binaries, pretty decent std lib (not as good as python or Go, but very good nonetheless).<p>I still write Python if it&#x27;s a &quot;script&quot; that has to run on a $work server, where it is safe to assume that Python would be available and sufficient for most tasks.",2015-10-16 23:24:05,10402624
164,"Yes, the code is MIT licensed. Check it on github: <a href=""https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;referencesource"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;referencesource</a><p>In fact, for the past couple releases mono has replaced a lot of its library code with MS&#x27;s quite successfully.<p>Full disclosure - I run the mono team at Xamarin.",2015-11-13 03:50:24,10557912
165,"Please do go on, if you will.<p>I&#x27;m primarily a Python guy and with the 2&#x2F;3 split, I&#x27;ve had my eye on .Net Core to migrate my business platform to. Pretty much been looking to dump Python for anything over a line count of 500 and keep it that way.
I&#x27;m open to any speculation as to where it&#x27;s going because I&#x27;m finding the .Net platform to be more attractive than ever. A few years ago it was looking pretty sad but MS really turned it around and I&#x27;m interested in a permanent migration.
I really can&#x27;t find much, that I enjoy using, that approaches Python&#x27;s broad use cases than C# on .Net. With dotNet Native and Xamarin, I&#x27;m very seriously considering the plunge.",2015-11-14 05:52:38,10564653
166,"You don&#x27;t have many choices for cross-platform tools. You can either use C++ that is quite hard for a lot of people but I would say most popular and most stable. You can use C# or Java with Xamarin but it is very expensive, unstable and it is kind vendor lock-in. You can also use JavaScript but you will lose a lot of performance that is very important on mobile. There are other options like using Lua, RubyMotion but they suffer same problems as JavaScript<p>Bottom line: There isn&#x27;t convenient, modern, fast, open-source method for cross-platform development.<p>Swift bridges nicely with C and it is built on LLVM so you will be able to use it on Android with Android NDK and bridge it through JNI and Microsoft recently also adopted LLVM so you will be also able to use it there.",2015-11-22 23:35:45,10612002
167,"Actually this is just applying for a free copy, and you must be an existing ios&#x2F;android&#x2F;steam&#x2F;wii developer with at least one already-published title, and they are manually processing the applications.  Nice initiative but not as nice as it could be.<p><pre><code>    Thank you!

    Your form has been submitted.

    Due to very high interest in this offer, we 
    anticipate completing review of your application 
    within 2-3 business days. If you have any questions, 
    please don&#x27;t hesitate to reach out to us at 
    hello@xamarin.com.

    We cant wait to see what you create!</code></pre>",2015-12-16 13:34:22,10744116
168,"I&#x27;d just like to say that Xamarin&#x27;s shortcomings aren&#x27;t because it doesn&#x27;t match the current platform via its abstraction layer. Xamarin is VERY quick in matching that and releasing updates that provide features. Basically whenever a new iOS point beta gets released, there&#x27;s a Xamarin update same-day or next-day, and the big OS changes are ready quickly too.<p>I think Xamarin&#x27;s shortcomings is its threading&#x2F;memory model shoved into Objective-C&#x27;s threading&#x2F;memory model. That&#x27;s where you have to watch out in terms of gotchas in Objective-C that you just don&#x27;t see in C#.",2015-12-21 21:40:12,10773718
169,"Hi  Tim from Realm here (<a href=""https:&#x2F;&#x2F;realm.io"" rel=""nofollow"">https:&#x2F;&#x2F;realm.io</a>). Were building a mobile database that runs directly inside mobile phones, tablets &amp; wearables. Hundreds of millions of people rely on Realm every day through apps by Pinterest, Google, Amazon, eBay, Intel, Hipmunk, Expensify, GoPro, the BBC, Adidas, IBM, Homeland Security, Walmart, LINE, Starbucks, Xiaomi, the Washington Post and many, many more. Were also the #4 most-starred database on GitHub with &gt;8,000 stars and growing fast.<p>Were working on a bunch of exciting products and need your help at our HQ in San Francisco. You must have a background in native mobile development (ideally both Objective-C&#x2F;Swift AND Java). You must have a deep understanding of the technical &amp; business concerns of mobile app developers, and an attention for detail in SDK API design, visual UX, and technical writing.<p>Experience with native development is required, but any additional experience you have with other mobile frameworks (React Native, PhoneGap, Xamarin, Unity, ) will be a big plus.<p>You dont have to have formal experience as a product manager. Well gladly talk to you if you have background as a developer, evangelist, or other role closely related to mobile development and just want to branch out.<p>If youd like to apply it will be easier if you do so directly on our Lever  <a href=""https:&#x2F;&#x2F;jobs.lever.co&#x2F;realm&#x2F;b43dfea8-010e-4bcb-a4f1-24eefbd1cc1e&#x2F;apply"" rel=""nofollow"">https:&#x2F;&#x2F;jobs.lever.co&#x2F;realm&#x2F;b43dfea8-010e-4bcb-a4f1-24eefbd1...</a> but if you have any questions, feel free to hit me up directly tim@realm.io!",2015-12-23 00:18:27,10781252
170,"Mobile work with Xamarin here. Using Xamarin Studio. Still, it&#x27;s nowhere close to the Windows experience with VS and the Xamarin tools there.",2016-01-13 12:50:34,10893892
171,"Another vote for Windows from me.<p>If you are planning on expanding to other platforms (iOS and Android, especially), maybe considering going with a C#&#x2F;Xamarin-based project. It&#x27;ll save you a lot of work by allowing you to re-use the underlying code for your app(s).",2016-01-29 18:27:45,10997272
172,"Before Sameroom [1], we spent two years building Kato (<a href=""https:&#x2F;&#x2F;kato.im"" rel=""nofollow"">https:&#x2F;&#x2F;kato.im</a>), which became a Slack competitor once Slack launched. We did enjoy a brief pre-Slack honeymoon (at Techstars, no less).<p>For a few reasons, we chose Xamarin to build the Kato mobile apps. The end result was pretty goodgreat, even, considering the ridiculously tight timeline. We had a pretty elaborate common core with all the hard stuff (networking, caching, protocol, presence, etc), and custom UI code for Android and iOS.<p>In the end, since Kato was to be no more, the real benefit was seeing how much sense it makes to use a strongly-typed, object-oriented language for building complex user interfaces.<p>Many years ago, and for many years, we were C#&#x2F;C++ programmers, so it wasn&#x27;t exactly a revelation. But, we&#x27;d been working for quite some time with dynamically-typed Erlang and dynamically-typed Javascript (the Kato UI was built with Knockout.js).<p>Our server code was fairly straightforward and didn&#x27;t change very much, so Erlang was an excellent choice there. With JavaScript, we&#x27;d programmed our way into some serious debt.<p>When deciding on a stack for Sameroom, we embarked on a quest to replicate the Xamarin experience for the web. We eventually narrowed in on Flux, React, and TypeScript.<p>After some experimentation, we got a development workflow working with gulp, shrinkwrap, make, and no particular IDE (we use Atom, Sublime, and Vim).<p>The biggest crutch was lack of JSX support in TypeScript, so splicing together HTML elements was pretty cumbersome. We viewed this as a temporarly incovenience, which was a good decisionTypeScript 1.6 got React&#x2F;JSX in September 2015 [2].<p>We&#x27;re pretty conservative about adding dependencies, but the overwhelming majority of libraries we do use have TS support available from the DefinitelyTyped project [3]. The few libraries that weren&#x27;t supported (Stripe checkout and Intercom, if memory serves), we TypeScriptified ourselves.<p>As a result, working on the Sameroom UI is absolute joy.<p>It&#x27;s a little ironic that, unlike Kato, Sameroom basically doesn&#x27;t need a UI, since it&#x27;s just marketing copy and an administrative dashboard.<p>[1] <a href=""https:&#x2F;&#x2F;sameroom.io&#x2F;blog&#x2F;from-pivot-to-140-paying-customers-in-ten-months&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;sameroom.io&#x2F;blog&#x2F;from-pivot-to-140-paying-customers-...</a><p>[2] <a href=""http:&#x2F;&#x2F;blogs.msdn.com&#x2F;b&#x2F;typescript&#x2F;archive&#x2F;2015&#x2F;09&#x2F;16&#x2F;announcing-typescript-1-6.aspx"" rel=""nofollow"">http:&#x2F;&#x2F;blogs.msdn.com&#x2F;b&#x2F;typescript&#x2F;archive&#x2F;2015&#x2F;09&#x2F;16&#x2F;announ...</a><p>[3] <a href=""https:&#x2F;&#x2F;github.com&#x2F;DefinitelyTyped&#x2F;DefinitelyTyped"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;DefinitelyTyped&#x2F;DefinitelyTyped</a>",2016-01-29 20:22:31,10998193
173,"3 years ago this would be a sad news for Xamarin, today with the new Microsoft I&#x27;m glad to see this. Microsoft will not destroy Xamarin (I hope)",2016-02-24 19:10:06,11169297
174,How much? I know it&#x27;s undisclosed but it would be very interesting. Hopefully someone leaks it.<p>The rumor was Miguel told MS to &quot;F*#K Off&quot; when MS presented him with an offer many years ago. This lead to CoreCLR being open sourced and Visual Studio Code being built.<p>I&#x27;d like to know if by undermining parts of Xamarins business they were able to get them at substantial discount - especially with the tech industry downturn. Or if failure in the Windows Phone market has made MS desperate and forced their hand. Given it&#x27;s undisclosed I&#x27;m guessing it&#x27;s the former. I&#x27;d like to know if telling MS to &quot;F#&amp;K Off&quot; was a good strategy :),2016-02-24 19:26:56,11169458
175,If MS puts Xamarin licensing under MSDN I&#x27;d be really happy.,2016-02-24 19:36:35,11169550
176,"Definitely Xamarin is geared towards the .NET ecosystem, at least for now. But .NET aside, as a cross-platform &quot;platform&quot;, how does Xamarin compare with React Native? Anybody has experience in both of them?",2016-02-24 20:04:36,11169760
177,I wonder when&#x2F;if they will announce pricing changes. I would love to use Xamarin but the current licensing fees (2 developers across iOS&#x2F;Mac&#x2F;Android) of $6k&#x2F;year are a total non-starter. If it gets rolled into MSDN or BizSpark I would pretty much jump on it immediately. The current alternative of writing C++ that runs across iOS&#x2F;Mac&#x2F;Android&#x2F;Windows is a massive headache.,2016-02-24 20:13:58,11169862
178,My understanding is that Apple&#x27;s issue was with dynamic runtimes and that Xamarin developed a statically compiled Mono runtime to comply with Apple&#x27;s guidelines. The ground between definitions of &quot;static&#x2F;dynamic&quot; eventually was sorted out.,2016-02-24 20:15:01,11169872
179,Whats .net core got to do with xamarin.forms<p>Xamarin.forms has nothing to do with winforms.<p>It&#x27;s a cross platform mobile UI library.,2016-02-24 20:24:32,11169949
180,Zero; it won&#x27;t happen. Apple&#x27;s stance has been stated and unchanging for years now. Statically compiled frameworks like Xamarin are fine. Interpreters are fine if the app ships with the code (no dynamic patching by downloading new code) or if the code is part of a reviewed&#x2F;approved in app purchase. For JavaScript you also have access to the native code JIT too.<p>The only thing you can&#x27;t do is issue new code by bypassing App Review (except web pages &#x2F; web apps) or have your own non-sandboxed JIT.,2016-02-24 20:47:39,11170112
181,Scary. Xamarin sells tools to support multi-platform app development.  Microsoft would want that only to the extent that it assisted migration to Microsoft platforms. Not away from them.,2016-02-24 20:56:58,11170167
182,"Very HUGE, now microsoft can put ads on xamarin software!",2016-02-24 21:18:28,11170311
183,"Silverlight is abandoned, but Winforms (especially) and WPF are mature products; I use the latter two (as well as Xamarin for Mac) in my consulting business to make good profits each year, and don&#x27;t see anything changing except for better in this respect.",2016-02-25 03:02:40,11172078
184,"He&#x27;d been pretty buddy-buddy with Microsoft for a while. Microsoft has owned patents on the underlying technology, but as far as I&#x27;m aware they never did anything to indicate that they might sue Ximian or Xamarin. As far as I can tell, the bulk of the concern about Mono stems from FUD-spreading by RMS.",2016-02-25 03:41:55,11172226
185,"&gt; This lead to CoreCLR being open sourced and Visual Studio Code being built. I&#x27;d like to know if by undermining parts of Xamarins business they were able to get them at substantial discount<p>As a CoreCLR contributor, my impression was always that the mono-team was extremely happy about .NET official going open-source and how that made it possible to align the two code-bases in a much better fashion.<p>I don&#x27;t think I&#x27;ve ever seen CoreCLR portrayed as an effort to &quot;undermine&quot; Xamarin or mono. Rather I&#x27;d take it as an imitation, the ultimate form of complement.<p>Where did you get&#x2F;form that picture?",2016-02-25 10:53:39,11173644
186,"Swift isn&#x27;t a significant improvement over C#. Also, keep in mind that C# benefits from the whole Microsoft ecosystem, which includes Visual Studio.<p>Beyond the language, what&#x27;s even more important is the application model. That&#x27;s where frameworks like React Native have the edge. This might change if Microsoft upgrades Xamarin.Forms into full-blown Universal Windows App support (think WPF on iOS and Android).",2016-02-25 14:49:07,11174732
187,"Olo - Xamarin Mobile Developer
Engineering - New York  or Remote within U.S.  - Full Time<p>At Olo we develop an online food ordering platform used by many of the countrys largest restaurant chains, reaching millions of consumers. We take pride in a neat codebase with automated tests and continuous integration, and encourage constant refactoring.  We encourage new ideas and experimentation.  Were so obsessed with automation that we laugh nervously at xkcd.com&#x2F;974.<p>Olo is revolutionizing the customer experience at these restaurant chains, and we&#x27;re looking for talented engineers to join our mobile team and help us achieve this vision. As part of the team you will play a significant and visible role in helping us deliver an exceptional mobile ordering experience to our clients consumers via our native iOS and Android apps, as well as contribute to our ongoing innovation in restaurant operations tools and services.  Youll work with a small and passionate team dedicated to delivering amazing products using modern tools and technologies such as Xamarin, HockeyApp, MVVM, and more.<p>This is a full-time position.<p>Requirements<p>You are excited by the ongoing advances in mobile technology.
You have strong working knowledge of the iOS or Android platforms (bonus points for both).
You have experience working with Xamarin and have built apps that integrate with web services.
While not a designer, you understand the key factors in a quality mobile UI&#x2F;UX design.
You have at least 3 years on-the-job development experience at a senior technical level.
You can demonstrate thorough knowledge of C#, .NET and object oriented design and patterns.
You are adept at writing unit tests and testable code, and working under distributed version control (preferably Git).
You have an innate drive to automate anything that has to be done more than once.
Your English writing and verbal communication skills are strong.<p>please email your resume to johnball@olo.com<p><a href=""http:&#x2F;&#x2F;www.olo.com&#x2F;careers.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.olo.com&#x2F;careers.html</a>",2016-03-01 18:03:42,11204626
188,Microsoft opensourced a cross platform official implementation of .NET called CoreCLR - and altough slightly young you can do what you just said and they support it trough Azure on linux and offer OSX builds.<p>Also Mono took better parts of CoreCLR and made their implementation better.<p>Also Microsoft acquired the company behind mono&#x2F;Xamarin and given their recent trend will just fold that work in to their OSS offerings (at least partially)<p>So please get your facts straight before commenting on the issue because that&#x27;s sort of the problen I&#x27;m getting at in my post.,2016-03-21 16:53:17,11329448
189,Any updates on Xamarin? Are they going to make it more affordable?,2016-03-30 19:54:52,11392411
190,"hope they port the full thing to linux (i mean xamarin studio, not visual studio)<p>i was kinda always turned off, that xamarin treated linux as a second class citizen",2016-03-31 15:57:38,11398098
191,"How does it compare to React Native, anyone using both? I was just starting a project with RN, will be my first React project. But I have years of C# experience, so Xamarin way would be faster.",2016-03-31 16:08:48,11398204
192,so should you use react-native or xamarin now?<p>how much &#x27;write-once-run-everywhere&#x27; is available in xamarin vs react-native?<p>I&#x27;ve long avoided .net and c# but now I&#x27;m getting interested because these things are becoming open source.,2016-03-31 16:18:34,11398297
193,"The thing that makes me most excited about microsoft buying xamarin, is I have high hopes that mono + core will improve.  While libraries are being ported, there&#x27;s still a bunch of dependencies on 4.5, which I understand dnx uses mono for.  I&#x27;ve wasted several hours trying to deploy my MVC app to a linux server only to learn that the fix is to downgrade the version of mono i&#x27;m using :(",2016-03-31 16:26:04,11398372
194,"It could be also that Xamarin didn&#x27;t want to use pricing it has no control over, e.g. what Microsoft dictates for commercial versions of Visual Studio. I assume that &quot;contact us for a quote&quot; would take you to the MS online store through their sales personnel anyway.<p>edit: typo",2016-03-31 16:41:35,11398498
195,Xamarin already has tools to create Mac apps from .Net&#x2F;MonoDevelop.<p>The work has been started - it&#x27;s just a matter of time.,2016-03-31 17:13:23,11398769
196,"Projects such as Ionic Framework that build upon Cordova will still remain popular becuase they appeal to front-end web developers with Javascript skills. However, Xamarin is a great fit for Windows web developers that already work with C#.",2016-03-31 18:24:02,11399354
197,"I&#x27;m leading a small team in building an ionic app right now.<p>The edge that cordova&#x2F;phonegap&#x2F;ionic will retain is the HTML and CSS part. As well as, at least for a little while, a more robust plugin ecosystem.  Though that second one will change VERY rapidly.<p>The other developers on my team are very much frontend &amp; CSS types.<p>I would be too much of a bottleneck if I were the only developer able to write the code for the app.<p>If xamarin were free when I started, I may have given it more time in evaluation, but at the end of the day, I think that the choice would have remained ionic.<p>Even react-native isn&#x27;t ready yet if you&#x27;re a windows based shop. But maybe that&#x27;s come along in the last couple  months too.",2016-03-31 19:37:01,11399944
198,"Honestly, I think it still has its place.<p>HTML+CSS means we don&#x27;t have to retrain our web developers but can still produce work for our clients that meets their needs.<p>Personally,  I&#x27;d like to go more native and xamarin could enable that, but in consideration for the team holistically, HTML&amp;CSS&amp;js was the way to go.",2016-03-31 19:40:07,11399971
199,"I am currently developing a hybrid app. Where communication with backend, image manipulation, interaction with settings+security features of the platform -- are in Android Java.  While the basic data entry &#x2F; data presentation forms are in React-native.<p>I would not mind switching the Android Java side -- to Xamarin, but will I still be able to have a portion of my app in React Native?  
Are there any open source examples that use Xamarin and React-native?",2016-04-01 00:58:30,11401820
200,"Location: New York<p>Remote: Yes<p>Willing to relocate: Possibly<p>Technologies: Javascript (Node, ES6), PHP, Ruby, HTML, CSS (SASS, Less), C# (Xamarin)<p>Rsum&#x2F;CV: <a href=""https:&#x2F;&#x2F;camray.github.io&#x2F;resume.pdf"" rel=""nofollow"">https:&#x2F;&#x2F;camray.github.io&#x2F;resume.pdf</a><p>GitHub: <a href=""https:&#x2F;&#x2F;github.com&#x2F;camray"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;camray</a><p>Email: cameron[at]cameronray[dot]net<p>Hi, I&#x27;m currently seeking work around the NYC area, currently based in Brooklyn. I&#x27;ve previously done a lot of Javascript, PHP, Ruby, and mobile iOS (Xamarin) work. Very interested in new technologies and solving problems.",2016-04-07 17:35:48,11449041
201,"My first thought. Then looking at what Microsoft is doing by offering compelling tool for cross platform development, then there is a possibility that Google is working to offer its own Xamarin like solution. Can only dream it will be one single GUI API for developing apps for Android, iOS, Windows, WebAssembly and Linux desktops using Swift. If Google has this cross platform GUI API, then many are likely to abandon Cocoa API. Google probably sees API as platform and not language.",2016-04-09 09:19:17,11460599
202,"Then I guess you didn&#x27;t click on the documentation link at the top of the roboVM page.<p><i>Why RoboVM?
We love mobile. We love the Java ecosystem. If you feel like we do, you will love RoboVM:<p>Create truly native mobile apps for iOS and Android.
Use libraries, tools and languages from the vast Java ecosystem.
Share code between platforms.</i><p>It seems to be an alternative to xamarin focused on Java or at least the JVM.",2016-04-15 14:00:43,11504311
203,"Yes. I had experience with Scala which is another ML dialect, and that helped.<p>The more you end up using external libraries, the more you&#x27;ll have to understand interop between F# and C#. That sort of thing bit me with Xamarin in the past, but it looks like it is getting better (I hope!).",2016-04-15 14:41:12,11504674
204,"While not really a replacement, there&#x27;s always j2objc. On the downside, it doesn&#x27;t provide APIs, it just translates Java to Objective-C source. On the upside, it&#x27;s straightforward, fast, and can be integrated with Objective-C&#x2F;Swift code easily via a GWT-like JSNI mechanism. Some people have wired it up to libGDX and PlayN to provide a layer for writing games.<p>I will say that as soon as Xamarin bought RoboVM my heart sank. I had a feeling Microsoft was going to buy Xamarin, it made perfect sense to do so, the only other choice would have been to buy Unity (which they could still do) And of course, if MS bought Xamarin, there would be no point in maintaining both a C# and Java product.",2016-04-15 16:18:09,11505467
205,"C++ is a straight-up awesome language, on that you and I fully agree. And I have <i>been there</i> with regards to the teeth-pulling pain of Xamarin projects when you want to do something nontrivial. So it kind of pains me to disagree with you, but I do. C++ is awesome. I love it. But I also recognize that I barely trust myself to write it, after ten years or so of exposure and a few years of steady writing it. I don&#x27;t trust off-the-rack mobile developers to write it safely and correctly. To that end, something like Xamarin or the RIP&#x27;d RoboVM provide a significant benefit: by offering the kind of guardrails that C++ can&#x27;t, they do significantly improve the ability of people who don&#x27;t eat and breathe this stuff to get something out the door. (Whether or not that&#x27;s a desirable trait...reasonable people can differ. But it is in demand.)<p>Sure, Xamarin has done a lot of that work--but that&#x27;s also kind of the point in the first place.",2016-04-16 07:35:28,11509699
206,"If Xamarin is open sourced and RoboVM is dropped, I can only speculate that Microsoft did not want to touch JVM with a 10-foot pole and chose to not entertain Oracle legal. May be I am wrong, but that is one possibility.",2016-04-27 14:57:32,11580944
207,"With Xamarin, you can use it with both Xamarin Studio and Visual Studio. I believe XS is free now and you can get VS Community for free too.",2016-04-27 17:11:32,11582333
208,"First thought: Xamarin is now open sourcegreat!<p>Second thought: Every time I looked into Xamarin (and I do this every 6 months) there was a lack of killer apps created with Xamarin on both iOS and Android, users&#x27; experiences with Xamarin were either rare or negative and in total the community felt non-existent<p>Third thought: Ok got it, they open source to get PR, build a community; I hope that helps and it&#x27;s not their last resort<p>So, <i>is</i> Xamarin really a viable solution?",2016-04-27 17:49:03,11582720
209,"As an aside, has anyone here created a Xamarin android app using material design? I was recently trying to integrate their component for the design support library, but it seemed horribly buggy.",2016-04-27 18:22:54,11583099
210,"&gt; they open source to get PR, build a community; I hope that helps and it&#x27;s not their last resort<p>It&#x27;s not that: Microsoft acquired Xamarin earlier this year [1].<p>Xamarin is also holding a conference [2] right now, so I suspect this announcement is part of that.<p>Edit: Yes, it was. [3]<p>[1] <a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=11169215"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=11169215</a><p>[2] <a href=""https:&#x2F;&#x2F;evolve.xamarin.com&#x2F;live"" rel=""nofollow"">https:&#x2F;&#x2F;evolve.xamarin.com&#x2F;live</a><p>[3] <a href=""https:&#x2F;&#x2F;adtmag.com&#x2F;articles&#x2F;2016&#x2F;04&#x2F;27&#x2F;xamarin-evolve-16.aspx"" rel=""nofollow"">https:&#x2F;&#x2F;adtmag.com&#x2F;articles&#x2F;2016&#x2F;04&#x2F;27&#x2F;xamarin-evolve-16.asp...</a>",2016-04-27 19:04:46,11583538
211,"Can&#x27;t speak for the mobile side of things, but I used Xamarin for Mac to port a Delphi application and bring it to market last year. Considering when I started I didn&#x27;t know anything about Macs, Cocoa or Xamarin for Mac &#x2F; MonoMac, it turned out pretty well. Xamarin have some good people cruising their forums and offering support.",2016-04-27 21:52:22,11584874
212,"<i>You&#x27;re talking about it like it&#x27;s some stupid ORM wrapper or wonky Widget UI library. It is not.</i><p>Again, <i>this</i> conversation is about Xamarin the mobile app studio. There is zero ambiguity in this, so it is perplexing that you keep bringing this up.<p><a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a><p>The context is the cross-platform app creation toolset. It generates extremely poor quality code, usually at a significantly increased development time (quite contrary to the promise). This is the case found by almost everyone who uses it, which is exactly why most teams have an Android project, fully using the tools of the platform, and an iOS project, fully using the tools of the platform. If Xamarin were heavily used, Windows Phone wouldn&#x27;t be so generally unsupported.",2016-04-28 23:41:43,11592726
213,"At this point I have to assume you&#x27;re trolling. No one is this obtuse.<p><i>Xamarin is a company, not a product</i><p>Xamarin <i>the company</i> has a <i>primary anchor product</i> that is a tooling and SDK to build cross platform apps (indeed, on Xamarin.com it is literally the only non-service product. There is zero ambiguity). To anyone not autistic, that is <i>clearly</i> the focus on this entire discussion. Your bizarre incantation of Unity using a very old version of Mono as a citation in support of Xamarin set the bar pretty low for this conversation.<p><i>It happened 18 hours ago!</i><p>Microsoft made it completely free. <i>Yawn.</i>. Microsoft open sources the entire SDK. <i>Yawn.</i><p>Clearly you work either for Microsoft, or you hitched your wagon entirely to Xamarin or Microsoft. Your emotions on this are bizarre and completely out of touch with the reality.",2016-04-29 13:26:09,11595528
214,3) Not close at all. UWP and WPF are proprietary Windows technologies that rely on the Windows APIs. They&#x27;re closed source so nobody really knows what they need.<p>Cross platform Xamarin apps are different. Xamarin has its own GUI library wrappers but do not provide a cross platform library (or at least they didn&#x27;t last time I checked. They&#x27;d need to create one for GTK&#x2F;Qt&#x2F;X&#x2F;whatever and devs would have to write for it,2016-05-05 22:46:31,11640266
215,"You have Xwt for desktop applications. Xamarin Studio itself uses it: <a href=""https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;xwt"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;mono&#x2F;xwt</a>",2016-05-06 03:24:29,11641472
216,"Hey, you need to read the parent a bit closer.<p>Nobody&#x27;s saying that Xamarin uses web views, but clearly there&#x27;s a comparison to be drawn with the craze a few years back for writing mobile apps using web views. This was advocated as being cross-platform, allowing developers to write the same code and run it on multiple platforms. The downsides are the same in some ways, as the parent enumerated.<p>Xamarin&#x27;s use of native UI is important, but in my experience it&#x27;s clearly not as seamless as you think; while you access the UI natively, there are intrinsic architectural differences that make it difficult to do so in a high-performance manner without a lot of fairly hacky code.",2016-05-09 19:51:39,11662604
217,"None of the effort in adding C# and Xamarin support distracted anyone from getting the core product to 1.0. We are an entirely separate team hired specifically for this project. If you follow the Java, Swift or Objective-C products you will have seen a steady set of releases in the last year. I can&#x27;t comment on our closeness to 1.0 shipping.<p>I&#x27;d like to think that the C# team has also contributed by setting a high standard for API usability and ease of use but we&#x27;re standing on the shoulders of the giants who wrote LINQ and Fody (thanks Simon Cropp).<p>Realm also keeps growing all its other teams and people are welcome to apply <a href=""https:&#x2F;&#x2F;jobs.lever.co&#x2F;realm"" rel=""nofollow"">https:&#x2F;&#x2F;jobs.lever.co&#x2F;realm</a>",2016-05-11 01:31:12,11672033
218,"&gt; What are the implications for my free, open source software? And my closed source commercial software?<p>Software that implements other party&#x27;s APIs might be obligated to agree to a licensing agreement - projects like Wine, Samba and various 3rd-party emulators. Ironically, Microsoft&#x27;s discontinued, Android-compatible project Astoria would be exposed (to both Google <i>and</i> Oracle) - Microsoft submitted an amicus in the first Oracle v Google case supporting Oracle&#x27;s cause. I am not sure if Xamarin- and Cordova-&#x2F;Phonegap-type projects would be subject to Apple&#x27;s lawsuits.<p>I also suspect web-APIs might also become risky, making it possibly for Amazon to sue you for providing AWS-compatible APIs[1] for example<p>Disclamer: I am not a lawyer, this is just my layman&#x27;s perspective.<p>1. <a href=""https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Eucalyptus_(software)"" rel=""nofollow"">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Eucalyptus_(software)</a>",2016-05-12 14:22:28,11683566
219,"Bluebeam Softwares awesome engineers develop intuitive applications that revolutionize how people collaborate and share data in real time. As part of the Bluebeam team, you will use your expertise to design and develop customer-centric applications.<p>We are hiring for our Pasadena headquarters and remote offices in Boston, San Diego, and Chicago:<p>Lead Developers (2)<p>Sr. Web Application Developers<p>Sr. Frontend developers<p>Developers for our Xamarin &#x2F; Mobile and Mac teams<p>Learn more about these and other opportunities here: <a href=""http:&#x2F;&#x2F;careers.bluebeam.com&#x2F;join&#x2F;engineering"" rel=""nofollow"">http:&#x2F;&#x2F;careers.bluebeam.com&#x2F;join&#x2F;engineering</a>.<p>And more about our culture here: <a href=""http:&#x2F;&#x2F;careers.bluebeam.com&#x2F;culture"" rel=""nofollow"">http:&#x2F;&#x2F;careers.bluebeam.com&#x2F;culture</a><p>Please apply through the appropriate posting or reach out to laura.marks@bluebeam.com.",2016-06-01 20:21:14,11817804
220,"I heartily agree with what you have said. It is the reason I am not really biting at Pony. Maybe if I needed everything else it offered, or fully understood everything else it offered?<p>The problem I see now is that the entire functional domain is so spread out - Clojure, F#, OCaml, Haskell, Idris, Erlang&#x2F;Elixir&#x2F;LFE, and even the APL&#x2F;J&#x2F;K&#x2F;Q crowd and Java&#x27;s attempt to go functional. I&#x27;m not complaining about the number of functional languages to choose from, which is good. It&#x27;s whether there will be enough critical mass in any one of the functional languages given a new non-functional language popping up every week. I don&#x27;t know.<p>Now that MS has opensourced so much, and Xamarin&#x27;s stuff is free, F# is looking better to me (again).<p>I also find myself dropping to C. C was my third language (after 6502 assembly and CPM Basic). Haskell&#x2F;Idris&#x2F;Elm are my toys of the year. I never fully dove into Haskell, but the concise, readable and very mathematical syntax agrees with my sensibilities.<p>Old! I&#x27;m 52, but I didn&#x27;t stay with programming for a living, so my age doesn&#x27;t reflect my programming experience. I did start with a CPM PET in 1978&#x2F;79, but then went on years later to do other things.",2016-06-11 17:10:55,11884249
221,"Xamarin forms is good for very limited uses. They give the basic layouts that each platform supports and that&#x27;s about it. So if your app is simple, it&#x27;s a great option.",2016-06-12 15:15:22,11888435
222,"As far as I remember the long term plan is to stack the remaining APIs from the full .NET on top of .NET Core.<p>So Microsoft would have: .NET Core - base for everything. .NET - Windows specific bits, Xamarin - mobile specific bits.",2016-06-27 16:36:28,11987331
223,"Any ideas how to do GUI development with .NET Core? Is there a version of Xamarin? Are there plans to port Windows.Forms, WPF? There is this massive thread about it 
<a href=""http:&#x2F;&#x2F;forums.dotnetfoundation.org&#x2F;t&#x2F;cross-platform-wpf&#x2F;421&#x2F;90"" rel=""nofollow"">http:&#x2F;&#x2F;forums.dotnetfoundation.org&#x2F;t&#x2F;cross-platform-wpf&#x2F;421&#x2F;...</a><p>and an issue here
<a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;corefx&#x2F;issues&#x2F;5766"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;corefx&#x2F;issues&#x2F;5766</a>",2016-06-27 18:27:03,11988281
224,SEEKING FREELANCER - Remote&#x2F;Portland Oregon<p>Looking for Xamarin Forms and&#x2F;or PHP&#x2F;Laravel developer for occasional load-leveling. We&#x27;re a small dev firm and sometimes needs help when things get too crazy.<p>Please reply to curtis [at] saltydogtechnology [dot] com.,2016-07-02 08:21:53,12021848
225,"Wow, I am the opposite. Have to move to windows every now and again to develop (Damn you Xamarin and SOE), and I hate every minute of it. Everything is harder, the hardware is crap, it seems slow and buggy.<p>I much prefer xcode on Apple.",2016-07-27 03:09:24,12170238
226,"Even if nothing else (sorry, UWP), Xamarin uses WPF as its view language and MSFTs recent critical acquisition I think keeps WPF alive for at least another 5 years.",2016-08-02 23:45:21,12214325
227,"React Native might look a web-based kind of toolkit but it&#x27;s not. It supports a HTMLish layout system based on Flexbox, but it&#x27;s its own native compositing and layout framework. It circumvents the HTML layouting middle layer and a browser layer. It doesn&#x27;t need any virtual DOM, for example.<p>While it might sound redundant, it&#x27;s more about making UI layout simpler, faster, and all in all more &quot;native&quot;.<p>There&#x27;s already plenty of browser view-based layout frameworks, and in general they run into the same limitations (performance, lack of native components, etc). This is an alternative solution to that. Think of it as a middle ground between Xamarin and Phonegap.",2016-08-03 13:57:43,12217914
228,Does anyone have a prediction when .NET Core will be extended to include UI?  I find this lack is the most confounding aspect of MSFTs strategy.  Is Xamarin really it?,2016-08-06 16:22:55,12238638
229,"Embrace, perhaps. But I think it ends there.<p>My guess is that they wanted to keep onboarding easier for Linux types (Embrace) by creating an implementation they thought would handle the typical use case (like ls and the like) using a wrapper for their Invoke-WebRequest.<p>Unfortunately, they&#x27;ve now created a problem in that they need to modify things to prevent users of real curl from getting hosed but at the same time not breaking the Invoke-WebRequest wrapper.<p>But the goal of something like this may be no more nefarious than, say, Xamarin or similar where the goal is for reuse across systems.",2016-08-19 14:24:18,12320189
230,"It depends on what you mean by, &quot;cross-platform.&quot; In my world there is no such thing. You pick your target platforms and program to them. However it is common to imply &quot;major platforms&quot; (ie: <i>iOS</i>, <i>Android</i>, <i>Windows 10</i>, <i>OSX</i>). Different platforms have different requirements and will shape your solution.<p>Next... what is the application? Do you need to target native APIs? Do you have memory limitations?<p>If you don&#x27;t mind taking up a lot of memory try one of the &quot;cross platform&quot; systems like Xamarin or some Java-based solution. If you need to be more constrained try writing to the native APIs and porting your project to each target platform you need to target. Lastly if you&#x27;re highly constrained maybe you need to try an immediate-mode style library like Nuklear[0].<p>It really depends on your needs. There&#x27;s no one-size-fits-all.<p>[0] <a href=""https:&#x2F;&#x2F;github.com&#x2F;vurtun&#x2F;nuklear"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;vurtun&#x2F;nuklear</a>",2016-08-28 14:43:53,12376715
231,"Gtk# only suppports gtk2.<p>(well last beta release of gtk3 binding was released 2014-06-04, but lot of APIs are missing and buggy)<p>(Xamarin said that they would not going to port xamarin studio to gtk3)<p>since gtk2 doesn&#x27;t support hi-dpi scaling, I would not recommend it.",2016-08-28 23:11:35,12378990
232,"SEEKING WORK - Remote&#x2F;Freelance, with potential for on-site trips<p>Certified Xamarin developer here with mobile cross-platform experience in everything from Xamarin.Forms to native. Designed, built and released iOS &amp; Android apps for multiple happy clients in the double digits.<p>Proficient in:<p>- cross-platform development for various screen dimensions: smartphone, watch, tv &amp; tablet<p>- MVVM architecture and adjacent libraries (MvvmCross, etc.)<p>- connecting mobile apps to backend services via REST APIs<p>- offline functionality, local storage (Sqlite, Realm, etc.) and syncing strategies<p>- authentication and sharing features using social APIs<p>- error-proofing existing mobile apps with Xamarin Test Cloud and other reporting tools<p>- designing and implementing performance &amp; optimization strategies<p>- additional services around mobile apps: UI&#x2F;UX, prototyping, server-side &#x2F; APIs work<p>Website: <a href=""http:&#x2F;&#x2F;crossplatform.io"" rel=""nofollow"">http:&#x2F;&#x2F;crossplatform.io</a><p>Linkedin: <a href=""https:&#x2F;&#x2F;linkedin.com&#x2F;in&#x2F;alexandramarin01"" rel=""nofollow"">https:&#x2F;&#x2F;linkedin.com&#x2F;in&#x2F;alexandramarin01</a><p>Email: alexandra.marin01@gmail.com",2016-09-01 17:44:29,12407343
233,"Not super relevant to the topic, but what&#x27;s with Xamarin not supporting what is arguably the most important platform? This seems like a huge weakness, especially when you can now build a React app that renders natively on web and mobile thanks to React Native.",2016-09-08 19:57:32,12456722
234,"Sorry, how does Xamarin not support this?",2016-09-15 18:24:49,12508519
235,It&#x27;s the API definition that will be shared by .net Core&#x2F;full framework&#x2F;asp.net&#x2F;xamarin.,2016-09-26 17:51:14,12583972
236,"For me, the biggest downside to AS is its reliance on graddle. I used AS pretty extensively and I honestly feel like the Eclipse workflow was much better.<p>I&#x27;m curious about Xamarin. I&#x27;ve been weary of cross platform tools since the days of trying  to use phone gap but I understand the current gen of tools are much better.",2016-09-26 18:30:47,12584362
237,"SEEKING FREELANCER - London, UK or Remote<p>Always looking for great React Native or Xamarin developers. My email: martin@getcodified.com",2016-10-03 17:09:54,12629267
238,"I&#x27;m not a phone gap expert by all means, so I can&#x27;t speak for it&#x27;s new ability. But I wasn&#x27;t very pleased with my experience when I did have to use it.<p>Now that Xamarin is free, it&#x27;s very hard to say no to such a powerful tool.",2016-10-12 17:41:11,12694967
239,"This is what I came here to say. Cordova is relevant, yes, and many people use it. For basic applications, Cordova applications can feel &quot;native enough&quot;.<p>However, I don&#x27;t think Cordova is necessary anymore with Xamarin.",2016-10-12 18:14:40,12695247
240,"I started as a Java dev in JDK1.1, moved to c# @ 1.3 and now apparently im an andriod and iOS dev too with Xamarin ;) I pretty much spent the last month creating a x-platform mobile app, i share 90% of my code across the server&#x2F;client and havnt really even had to learn too much about the intricies of each platform to replace the current version of our product which was written in ObjC  and Java.<p>I can program directly against viewControllrs or Activities, but i dont have to. I use Rx for all async stuff and my Views&#x2F;Models are eventSourced just like my aggeregates an their views are on the server.<p>Not saying Xamarin is bee&#x27;s knees or anything, it has its own quirks and own bugs, but in terms of andriod vs iOS dev, i dont have to buy into any of the core OS&#x27;s to get the job done.",2016-10-13 06:19:54,12698889
241,"The comparaison with JS is perfect. 
Like JS is the asm of the web ecosystem (no one wants to write its code just in JS, we generate it instead), default android and IOS way of programming have to be be generated.<p>Try Xamarin [0] or the newcomer flutter [1]. It&#x27;s such a pain in the ass to dev in raw android or raw ios, use multi platform sdks.<p>And if you start with xamarin, you can target windows phone too, even if nobody cares ;-)<p>[0] <a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;</a>
[1] <a href=""https:&#x2F;&#x2F;flutter.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;flutter.io&#x2F;</a>",2016-10-13 11:45:35,12700014
242,"Depends on what do you want to achieve?<p>We utilize Cordova heavily in product I am working on, but more on a meta-layer, meaning, that user is able to create his simple application with drag-drop ui, see a preview in browser and then package it to a phone-installable file. We even had integrations for apparmor&#x2F;apperian, so that the user is able to upload the app to their corporate app management right away.<p>If I were to build a single app, I would go native.
Or xamarin, because I used it already, know how to get around its quirks, and like C# :)",2016-10-13 15:38:08,12701428
243,"Absolutely! Despite critics, they can feel native due to increasingly better phone hardware and picking a good framework (KendoUI Mobile, Ionic, React Native, Xamarin). I use KendoUI Mobile and Knockout.js for mine currently, with plans to probably switch to Ionic someday. Users don&#x27;t care what the tech is - it&#x27;s about the experience. I&#x27;ve sold over $100k in apps over 3 years... just launched an Untappd beer app if you&#x27;re curious - www.getBeerSwift.com.",2016-10-13 18:28:17,12702924
244,Thanks!<p>1. Xamarin support is heavily requested and we are working on it. Unfortunately I don&#x27;t have an exact release date yet.<p>2. That is a very interesting point. Let me discuss that in our team and I&#x27;m sure we will come up with a solution. So basically you charge a one time fee for the app and then go back to them if an update is required and charge again for that?,2016-10-14 09:19:05,12706932
245,"Yes, they even used TLABs. I believe the issue was that Xamarin was more interested in mobile performance at the time when SGEN was seeing heavy development and preparing for release, so they optimized for memory usage instead of throughput. The generational part was probably more of a hindrance than a benefit at that point in the process.",2016-10-29 03:15:07,12822444
246,"&gt; You can&#x27;t build an app for iOS or OSX on a Windows or a Linux machine<p>Well actually you can, when using something like Xamarin which has worked pretty well for our company. Sure, somewhere you need a Mac build machine, but that can be an older generation mac mini or similar. The development can be done on Windows using Visual Studio and C# which overall is a pretty great experience with the added benefit of sharing a large percentage of the codebase with the native android version of your app.",2016-10-31 09:32:04,12835316
247,"REMOTE Software Engineer Position
We are looking Software Engineer to work in a small Agile team building large scale Single Page Applications. 
Youll work with the latest client-side technologies including: JavaScript, Angular 2, TypeScript, Knockout, Gulp.JS, Ionic and Xamarin.
Youll work with server-side technologies including: C#, ASP.NET MVC and SQL Server.
Youll have access to the latest tools including: Visual Studio 2015, Visual Studio Code, TFS 2015, GIT and Octopus Deploy.of operational data.
Apply online at: <a href=""http:&#x2F;&#x2F;www.cartegraph.com&#x2F;careers&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.cartegraph.com&#x2F;careers&#x2F;</a>",2016-11-01 16:28:56,12847366
248,Great Job.<p>This is the next iteration of Titanium Appcelerator and Xamarin style apps (which basically do the same thing but internally).,2016-11-06 01:40:19,12882981
249,"Given that &quot;Even core features such as C# editing, Xamarin.iOS, Xamarin.Android and ASP.NET Core are implemented as extensions&quot;, I assume it&#x27;d be relatively easy for them to implement, especially since VB and C# effectively compile the same.<p>Presumably, C#, Android, and iOS are their top priorities to support, things like VB are less so, but could be added later.",2016-11-14 07:59:08,12948211
250,"They said it&#x27;s based on Roslyn, so it should support VB.net. In the current release of Xamarin Studio for Mac, VB is supported in GTK and console applications, while Xamarin targets only support C# and F#",2016-11-14 08:09:53,12948274
251,"If you&#x27;re familiar with C# and .NET, it&#x27;s a no brainer.<p>Xamarin is nothing more than a C# wrapper around the native iOS and Android APIs. Everything you&#x27;re familiar with (UIViewController, UIView, UITextField, UIButton, etc) remains the same. The main benefit (other than using C#) is that all non-UI code can be shared across platforms (iOS, Android, Windows, server, etc).<p>Xamarin.Forms is built on top of Xamarin and lets you reuse the same code for UI as well (using their own abstraction that&#x27;s similar to WPF&#x2F;UWP). I would only recommend this for relatively simple apps as you lose some control over platform specific details.",2016-11-14 11:24:05,12949045
252,"Nope.<p>Most of the UI was rewritten for VS2010 with WPF (XAML, DirectX acceleration), but lower&#x2F;deeper parts are written in c++ and this makes porting &quot;probelmatic&quot; (MFC, win32.dll, kernel.dll to posix stuff).<p>MonoDevelop ~ Xamarin.Studio is written in C# (some plugins in F#) and this makes porting easier. That is the reason there was MonoDevelop version on Windows.",2016-11-14 11:32:54,12949080
253,"I loved C#, hated Xamarin forms.
It was about a year ago no, but I doubt things have changed that much.
There were just so sooo many bugs.
I have nothing against them and still think .net is amazing, but that was such a worse experience.
I think reactive will win though.",2016-11-14 11:50:24,12949177
254,"I&#x27;ve been extremely disappointed in Xamarin. The main issue is that you don&#x27;t really get code sharing. I would estimate that only 25% of the Xamarin project I manage is cross platform code. The rest is this bizarre merger of native APIs with C#. It&#x27;s difficult to write because of the lack of examples and documentation. It&#x27;s also buggy, even with simple things like page views.<p>The real problem is that I can write a native iOS app in a fraction of the time it took to write a Xamarin app. Swift has improved iOS development speed so much I&#x27;m not convinced we need cross platform app engines (excluding games).<p>As for Android, yeah, native Android sucks. Activities and fragments are the worst idea anyone has ever had and no one agrees on best practices. But even with cross platform high levels of abstraction like Unity3D you still need to understand them. So, my current advice is to suck it up and write it native twice. Pick your favorite OS, start with that, and then port the logic.",2016-11-14 12:24:23,12949340
255,"Yes it is worth learning. It&#x27;s a skill which is quite in demand especially from established companies for their business applications.<p>However, as others have pointed out, Xamarin Forms is a bit of let down.<p>In my experience, if you try to create custom designed UI (which is quite common in the native apps), then you find that Xamarin Forms is very limited. To overcome this limitation you need to write something called as a custom renderer for each OS you want to support. So it doesn&#x27;t really save you much time.<p>Xamarin has something called as Xamarin Labs project on Github: <a href=""https:&#x2F;&#x2F;github.com&#x2F;XLabs&#x2F;Xamarin-Forms-Labs"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;XLabs&#x2F;Xamarin-Forms-Labs</a> But it&#x27;s  progress has been very slow.<p>If you have a business data collection &#x2F; reporting app, where how things look is not very important, Xamarin can save a lot of time while creating cross-platform apps.<p>However, I wouldn&#x27;t recommend Xamarin Forms for B2C apps.",2016-11-14 12:47:57,12949438
256,"I understand this, but how many people read these kind of angry rants on the internet and realise there are more ways to use Xamarin than using Forms?",2016-11-14 13:07:53,12949537
257,So it&#x27;s an updated version of Xamarin Studio... Not impressed.,2016-11-14 15:24:12,12950326
258,"I think where Xamarin shines is in places where the development stack is already .net.  If you are starting green pasture, and don&#x27;t have .net developers already, then it seems to make very little sense.<p>With that said, I&#x27;ve made a number of apps in it, and it works well enough, but the more abstractions, the more problems, and you want to do anything outside of simple UI apps, you are likely going to have to learn how the native methods work anyway.",2016-11-14 17:36:56,12951564
259,"You can make any sort of UX in Xamarin. Xamarin.Android, Xamarin.IOS are just straight up wrappers to the real api.",2016-11-14 17:42:55,12951622
260,FYI don&#x27;t use x labs. It&#x27;d dead. Maintainer has left project and has joined Xamarin to work on improving forms.,2016-11-14 19:08:32,12952376
261,"Hi, from Xamarin here - what page are you referring to? Community is free, there are a few extra features that come with VS Enterprise. Those are just nice-to-haves, like other VS enterprise features. You can develop with Xamarin for free.",2016-11-14 21:27:43,12953532
262,"if the xamarin cross platform sdk maps closely to one mobile platform, how does make it intuitive for iOS developers?  Or are the classes aliased for each target platform?",2016-11-14 23:44:28,12954374
263,"Native iOS and Android developer here. I switched to Xamarin a few years ago. As a native developer i was afraid of Xamarin and that i couldn&#x27;t harness the power that Swift and Java gave me. However it give&#x27;s you full control over your apps just as Java or Swift does. Everything you do in Java or Swift can be done with Xamarin in C#! Your knowledge isn&#x27;t lost, the syntax has only changed. Nowadays i absolutely love it! I work with enterprise companies as a consultant using Xamarin, code sharing is approximately around 80% when using a Xamarin and a framework like MvvmCross! In my opinion Xamarin is the feature of building apps. Please ask any questions you have and i be happy to answer.",2016-11-15 08:45:01,12956556
264,"This is what I&#x27;ve run through: <a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;aspnet&#x2F;core&#x2F;tutorials&#x2F;your-first-mac-aspnet"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;aspnet&#x2F;core&#x2F;tutorials&#x2F;your-...</a><p>It&#x27;s nice. I went on to modify and hack with what I created to form it into a back end for a mobile app I&#x27;m playing around with. There are still some warts in the process (Namely just figuring out how everything fits together and which packages to import) but I&#x27;ve been pleasantly surprised.<p>It looks like the new Visual Studio for Mac (ie An updated Xamarin Studio) has an ASP.Net Core template. At least I thought I saw that on the live stream earlier today. Might want to check that out!",2016-11-16 22:26:36,12972190
265,"My intuition is that VScode and Visual Studio are likely to remain significantly different products for the foreseeable future. VScode is an Electron app. Visual Studio is more a &#x27;native&#x27; app with deeper integration into the host operating system.<p>Xamarin Studio was built to provide a Visual Studio like experience regarding platform integration and to align with the architecture of Visual Studio. VScode does not appear to have those as the primary goals. It was already available for OSX.<p>To me, this is further evidence that Microsoft&#x27;s acquisition of Xamarin was in hopes of accelerating cross platform product development along a roadmap that tends to be more open source friendly. It may turn out that Xamarin Studio provides the core platform for Visual Studio at some time in the future or at least that the code bases merge to a greater degree over time.",2016-11-17 01:31:56,12973401
266,Just noting that Xamarin is part of Microsoft.,2016-11-17 03:05:44,12973888
267,"Sure here are the logs:<p>[art] Not late-enabling -Xcheck:jni (already on)
[AndroidRuntime] Shutting down VM
[AndroidRuntime] FATAL EXCEPTION: main
[AndroidRuntime] Process: com.greenrobot.testapp, PID: 3218
[AndroidRuntime] java.lang.RuntimeException: Unable to get provider mono.MonoRuntimeProvider: java.lang.RuntimeException: Unable to find application Mono.Android.Platform.ApiLevel_23 or Xamarin.Android.Platform!
[AndroidRuntime] 	at android.app.ActivityThread.installProvider(ActivityThread.java:5156)
[AndroidRuntime] 	at android.app.ActivityThread.installContentProviders(ActivityThread.java:4748)
[AndroidRuntime] 	at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4688)
[AndroidRuntime] 	at android.app.ActivityThread.-wrap1(ActivityThread.java)
[AndroidRuntime] 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1405)
[AndroidRuntime] 	at android.os.Handler.dispatchMessage(Handler.java:102)
[AndroidRuntime] 	at android.os.Looper.loop(Looper.java:148)
[AndroidRuntime] 	at android.app.ActivityThread.main(ActivityThread.java:5417)
[AndroidRuntime] 	at java.lang.reflect.Method.invoke(Native Method)
[AndroidRuntime] 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
[AndroidRuntime] 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
[AndroidRuntime] Caused by: java.lang.RuntimeException: Unable to find application Mono.Android.Platform.ApiLevel_23 or Xamarin.Android.Platform!
[AndroidRuntime] 	at mono.MonoRuntimeProvider.attachInfo(MonoRuntimeProvider.java:38)
[AndroidRuntime] 	at android.app.ActivityThread.installProvider(ActivityThread.java:5153)
[AndroidRuntime] 	... 10 more
[AndroidRuntime] Caused by: android.content.pm.PackageManager$NameNotFoundException: Xamarin.Android.Platform
[AndroidRuntime] 	at android.app.ApplicationPackageManager.getApplicationInfo(ApplicationPackageManager.java:304)
[AndroidRuntime] 	at mono.MonoRuntimeProvider.attachInfo(MonoRuntimeProvider.java:32)
[AndroidRuntime] 	... 11 more
[Process] Sending signal. PID: 3218 SIG: 9<p>Email me at andy@greenrobot.com if you have any questions and don&#x27;t want to post them publicly.",2016-11-17 10:30:00,12976166
268,"While I totally agree way too many apps are just webpages, the problem is that a bunch can&#x27;t be easily be webpages, even with all the HTML niceness.<p>The flaw in this argument I think is that does the author think you can build a great PWA for less than $100k either?<p>In my experience of doing heavy duty mobile web, it is horrendous to polish to a high standard. It was actually more expensive than doing native apps (before even Xamarin&#x2F;RN) if there was any tricky parts in it.",2016-11-23 14:23:44,13022809
269,"I make plenty use of async requests to get files (images) and make web service calls at the same time. It&#x27;s a Xamarin mobile application. Mobile apps are sometimes constrained by latency, so having a few requests in flight at once speeds things up.<p>Performance is not just fewer CPU cycles.<p>&gt; IIS has many threads available to it, that&#x27;s my entire point<p>My web services run on a VM with four cores. That&#x27;s what I get given, and there&#x27;s another twenty websites on it. The less overhead my code has the better. Just because it&#x27;s not 100K TPS doesn&#x27;t mean there aren&#x27;t benefits.",2016-12-08 22:12:19,13134785
270,No doubt there are areas where Xamarin will excel.,2016-12-14 14:52:13,13176330
271,"Xamarin compiles through XCode, so having Mac somewhere is a requirement. Any platform that compiles for iOS would have this same issue. I think the MS is pushing Xamarin Forms because it could eventually become a more direct competitor to React Native. In theory, you could remove the compile requirement for a Xamarin Forms only project. I am  a C# guy, but React Native is attractive and Xamarin needs to have a compelling alternative.",2016-12-14 15:56:29,13176887
272,"Not sure which is setup by default; there is the Android SDK emulator and the newer Hyper-V based Visual Studio Emulator for Android. Based on @snarfy&#x27;s comment elsewhere, I&#x27;m guessing the Xamarin installer isn&#x27;t installing the VS emulator.<p><a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=13176438"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=13176438</a><p><a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;android&#x2F;deployment,_testing,_and_metrics&#x2F;debug-on-emulator&#x2F;visual-studio-android-emulator&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;android&#x2F;deployment,_tes...</a>",2016-12-14 18:32:30,13178387
273,Doesn&#x27;t Async&#x2F;Await help dealing with nested callbacks and simplify exception handling? I wouldn&#x27;t push everyone to use it. But it is really useful in a lot of places. I cannot imaging writing Xamarin apps and distributed cloud services without it.,2017-01-11 17:30:51,13375651
274,"The C# documentation is quite clear:
<a href=""https:&#x2F;&#x2F;realm.io&#x2F;docs&#x2F;xamarin&#x2F;latest&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;realm.io&#x2F;docs&#x2F;xamarin&#x2F;latest&#x2F;</a><p><pre><code>  var puppies = realm.All&lt;Dog&gt;().Where(d =&gt; d.Age &lt; 2);
</code></pre>
The LINQ integration is appreciated.<p><pre><code>  &#x2F;&#x2F; Update and persist objects with a thread-safe transaction
  realm.Write(() =&gt; 
  {
      realm.Add(new Dog { Name = &quot;Rex&quot;, Age = 1 });
  });

  &#x2F;&#x2F; Queries are updated in realtime
  puppies.Count(); &#x2F;&#x2F; =&gt; 1
</code></pre>
I&#x27;m assuming that &quot;updated in realtime&quot; means &quot;realm.Write is a blocking operation&quot;, correct?",2017-01-19 20:02:57,13439007
275,"Microsoft seem to have learned a lot from Java in designing their new .NET Core CLR. It has gotten almost everything right:<p>* a small and fast CLR (JVM)<p>* a class library that defaults to almost nothing but primitive classes<p>* proper and standardized version, platform and package management (NuGet)<p>* open source and MIT license[0]<p>* a patent promise[1]<p>* arguably the best dev IDE available (Visual Studio) and one of the best up-and-coming dev text editors (VS Code)<p>* Native ORM, templating, MVC, web server so there is one way to do things<p>* open source middleware standard (OWIN)<p>* they left out, for now, attempting the hard ugly stuff like x-platform GUI<p>* all platforms are equal citizens, they acquired Xamarin for dev tools and release their own Docker containers.<p>* it&#x27;s already getting good distribution (on RedHat) even tho it&#x27;s only 6 months out from a 1.0 release.<p>Java may have missed the window for fixing some of these issues in their platform - I feel that if Android were being developed today, they&#x27;d almost certainly take .NET Core as the runtime.<p>I&#x27;ve yet to commit to using .NET Core anywhere, but from what I know about it so far it is impressive.<p>[0] <a href=""https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;coreclr"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;coreclr</a><p>[1] <a href=""https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;dotnet&#x2F;coreclr&#x2F;master&#x2F;PATENTS.TXT"" rel=""nofollow"">https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;dotnet&#x2F;coreclr&#x2F;master&#x2F;PATE...</a>",2017-02-02 09:10:34,13549159
276,"This sounds like one of those karma-fishing Reddit posts that start off with, &quot;<i>I know I&#x27;m going to get downvoted for this, but...</i>&quot;, but then go on to state a popular opinion and receive thousands of upvotes for it.<p>No matter which programming language is mentioned here, there will ALWAYS be a few people commenting, &quot;<i>I like &#x27;X&#x27; better!</i>&quot; (where &#x27;X&#x27; is usually an emerging language that they tinker with in hobby projects and haven&#x27;t used professionally yet).<p>That caveat aside, C# has generally been one of HN&#x27;s darlings in recent years.  People who crap on Java turn around and praise C# in the next breath, because:<p>(1) There are some syntactical niceties that make C# feel &quot;lighter&quot;,<p>(2) MS has developed a more &quot;open&quot; and even &quot;cool&quot; reputation over the past few years, at least in comparison to Oracle, and<p>(3) In many cases, it&#x27;s again people who have started tinkering with it in personal projects, and haven&#x27;t yet hit the inevitable pain points of using any language for real professional work in a team setting.<p>C# certainly isn&#x27;t Haskell, but it checks off enough functional checkboxes to have some cred, while still being approachable and familiar enough for non-academic mortals out in industry.  Xamarin and Unity aren&#x27;t perfect, but they give C# a solid foothold in mobile and gaming (which, along with web dev, are the holy trinity of domains that drive hype among young devs.<p>I really haven&#x27;t heard much negative chatter.  There will always be the people holding on to MS&#x27;s propriety brand image from the 90&#x27;s, who always want to comment on it from their Apple devices today.  But on the Internet hype spectrum of &quot;cool&quot; (Rust, Go, Elixir) to &quot;uncool&quot; (Java, PHP)... I&#x27;d say C# is at least 10% off the middle, in the direction of &quot;cool&quot;.  It checks the checkboxs of:<p>* &quot;mildly interesting&quot;,<p>* &quot;low learning curve&quot;,<p>* &quot;ease of actually finding an employer who uses it&quot;, and<p>* &quot;not likely to fade away because people don&#x27;t migrate to version 3, or because Mozilla can&#x27;t find another sponsor after Yahoo, or because yet another Ruby-successor comes along next week and sucks up all the hype, or whatever&quot;.<p>Really, the only people who criticize it a lot are the people in Microsoft shops who <i>actually use it for a living today (!)</i>, but isn&#x27;t that pattern usually true for everything?",2017-02-03 12:55:47,13559437
277,"A GNU&#x2F;Linux distro + vim usually, with some Docker and shell scripts&#x2F;make for the build process. Very transparent and everything can be versioned in Git.<p>Kinda the opposite of IDE-centric development, but the available Xamarin tooling didn&#x27;t support that way of working.",2017-02-04 18:03:37,13568064
278,"As a (former) backend contractor, I decided to switch to mobile app development with aim to create some passive income.<p>As a solo developer who doesn&#x27;t wish to expand and employ people (except odd help with graphics, etc) I want to focus on products, which can be delivered by one person and to create some income for myself.<p>From monetary point of view, I wonder whether it&#x27;s better to focus on utility apps or games.<p>At the moment I&#x27;m playing with Unity and published few simple games. So far it didn&#x27;t bring enough income, but then I accept my games aren&#x27;t great and need to improve before any of my games will get some attention.<p>Nonetheless, I was thinking about switching to Xamarin and try to develop some utilities apps to see whether there&#x27;s a better market response.<p>I can be equally passionate about games or tools development, so I&#x27;m not a type of person &quot;I can do only games and it&#x27;s all my life&quot;, so profit here is deciding factor where to go.<p>Please share your experiences.",2017-02-19 14:01:14,13679716
279,"That is one way to define native. Another is to use the platform native source code and provide access to that. E.g. on Android Xamarin includes an overhead due to constantly passing thru the slow JNI bridge when it needs to communicate with the native UI widgets. It also includes a relatively large overhead because of standard C# libraries that need to be included on iOS&#x2F;Android.<p>OTOH Codename One ( <a href=""https:&#x2F;&#x2F;www.codenameone.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.codenameone.com&#x2F;</a> ) has a very different interpretation of &quot;native&quot;. They use their own widget toolkit like QT which makes them &quot;less native&quot; in that regard. But they are native to Android (being Java based) and translate directly to C&#x2F;Objective-C which means you can literally write OS native code and use native widgets within the hierarchy.<p>I think native is a worthless word in that regard as it doesn&#x27;t properly convey meaning in these sort of complex situations. Once PhoneGap started billing itself as &quot;native&quot; this all went out of the window...",2017-02-21 04:57:18,13693393
280,"Check out Xamarin Workbooks* for the C# equivalent.<p>(*): <a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;workbooks&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;workbook...</a>",2017-02-23 04:56:53,13711765
281,"&gt; I struggle to see where you would prefer Qt for frontend code if you don&#x27;t need a native app.<p>Specially on mobile. their decision to go with QML for mobile OS support, requiring devs to replicate native widgets, means it is a bigger effort to create multiple QML frontends, than it is to follow a MVVM architecture with as much code as possible in C++, while using native support directly, even if in different languages.<p>Also for those targeting mobile OSes, Xamarin has a much support for the respective OS APIs than Qt, that usually requires the extra effort of manually wrapping many of them.<p>As someone that prefers working on native apps to web ones, I kind don&#x27;t understand their current roadmap, it appears that they are trying to spread between C++ and JavaScript devs in an attempt not to lose mind share.",2017-02-27 16:37:19,13745423
282,"I tried Qt 5.4 and wasn&#x27;t happy with the result, ended up settling on a mix of Java, C++&#x2F;CX and C++ for my mobile side projects.<p>From your link it seems that by Qt 6, they might eventually get something that I already have with such setup today.<p>Also I am planning to switch to Xamarin in future side projects.",2017-02-27 18:46:18,13746669
283,"I recently got a Surface Pro after two cycles (~7 years) of MBP 15 inchers. I wanted something lightweight I could draw on, and did think about the iPad Pro with Pencil for a while, but in the end having the flexibility to install any app won out (currently I&#x27;m using Aseprite and Manga Studio).<p>I&#x27;ve been using both Mac and Windows OSes since the last millennium, so I&#x27;m not precious about either one. But I do personally prefer explorer over finder in most aspects.<p>Visual Studio is a beast, and it&#x27;s absolutely ridiculous that MS now give away so many features for free in the community version.<p>I had no expectations for the type cover keyboard, but it turns out it is fantastically comfortable and productive.<p>I have no plans to get a new Mac, but my 2014 MBP is still proving useful to do remote iOS builds from Xamarin. I&#x27;ll probably keep it around just for that but if I never have to open Xcode again it will be too soon.",2017-02-28 05:08:31,13751391
284,"There&#x27;s Urho3D (<a href=""https:&#x2F;&#x2F;urho3d.github.io"" rel=""nofollow"">https:&#x2F;&#x2F;urho3d.github.io</a>) which seems to be mostly a clone of OGRE. I don&#x27;t know if any of the same people work on it.<p>Xamarin have a C# wrapper for it, UrhoSharp (<a href=""https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;urho&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developer.xamarin.com&#x2F;guides&#x2F;cross-platform&#x2F;urho&#x2F;</a>). I&#x27;m working with it now and I like it a lot better than Unity so far; but I strongly prefer to work in code rather than doing everything in Unity&#x27;s IDE.",2017-03-01 16:27:56,13765075
285,"So this is full, 100% Visual Studio for Mac (soonish), or is it Xamarin Studio rebranded?",2017-03-07 16:28:35,13811675
286,"They&#x27;d need to port at least COM, .NET, and XAML&#x2F;WPF to Mac to do that, so I&#x27;d say that is never going to happen. Also, you&#x27;d have a very un-mac like experience.<p>OTOH, Microsoft is the one company I&#x27;d trust with refactoring a gordian knot if neccessary. Look what they&#x27;re doing to the console subsystem, the windows system DLLs, the ~25 year old C compiler, and so on (granted, some are different teams, but still...).<p>Maybe they&#x27;ll be able to salvage some cool parts (the extention API, Intellisense, ...) and make them modular or put them into VS code or Xamarin Studio. I don&#x27;t know, they probably don&#x27;t have a complete plan themselves :-).",2017-03-07 17:45:49,13812675
287,"Imagine you want to find a job around the world and you need to learn the stack that is more or less in demand everywhere.<p>Would you choose Java? ( runs good almost everywhere (linux,windows, others) and can be used for Android development.
Would you choose C# ? ( with .net core while being immature also can run anywhere + xamarin for mobile development. 
Would you choose JS ? ( increasingly becoming also adopted by larger companies due to its flexibility and large pool of developers.+ react native and only viable option for frontend)<p>All of them require significant investment and i would say have similar learning curve. 
I have seen java being occasionally used in MS &quot;only&quot; shops but i have rarely seen C# being used at small &#x2F; mid sized companies running on Linx and developing with java.<p>We all can agree that learning algorithms and concepts is way better than just stick to a single language.
But the objective is to stick to a widely used platform and get a job almost anywhere.",2017-03-12 12:51:48,13850443
288,"To my knowledge, making cross-platform performant listviews is quite the challenge. I remember listening to a lot of xamarin engineers talk about the fickle performance gotchas with using them.<p>The platforms have different ways of exposing various attributes about list and list-items. The API designers then must focus on the trade-off of user friendliness vs control and performance. Thus far it&#x27;s been about user friendliness, but now they are wading in the waters of control&#x2F;performance.<p>That&#x27;s the reason why there are multiple list views being added, instead of just a single one.",2017-03-13 20:49:29,13862201
289,"Now that Xamarin is open source, a reasonably stable Java bytecode -&gt; Xamarin-compatible CIL cross-compiler could be pretty useful. It would also solve the problem of varying VM quality between Android versions (especially around the Dalvik to ART transition).",2017-03-15 09:47:04,13874963
290,"Tizen is a joke, they seem to want to beat Microsoft in how many times one reboots the SDK.<p>Latest change of mind is that future Tizen apps will be written in .NET Core with Xamarin Forms for the UI.",2017-04-02 10:27:46,14016667
291,"Tizen is a joke, they already rebooted the SDK multiple times.<p>1 - GTK+ based<p>2 - Took Bada OS C++ SDK with its Symbian C++ like flavour<p>3 - Rewrote the C++ API into something more appealing<p>4 - Thrown everything away and replaced with EFL, plain C API with C++ will come soon<p>5 - Now they are adopting .NET Core with Xamarin Forms<p>How can anyone invest time developing for them?",2017-04-05 21:16:45,14045704
292,Forms is the only real selling point for Xamarin. Too bad it doesn&#x27;t have a good reputation.,2017-04-08 13:01:19,14066693
293,Last summer was a long time ago in Xamarin world. Works pretty well now.,2017-04-08 14:20:26,14067032
294,"The OS API integration, C# and F# are also selling points.<p>Qt doesn&#x27;t support even half of the OS APIs that Xamarin does.<p>As for JavaScript based solutions, I don&#x27;t intend to ever use it outside the browser.",2017-04-08 14:32:01,14067084
295,"First of all, clearly the advice I&#x27;m giving is a bit too early for where you are at presently. I think that&#x27;s giving credit to you for the quality of the work you are producing. Basically, I want this app. You might want to dial back <i>just a tad</i> on the intricate details, out of fear you may wind up never shipping an initial version. Being a software dev myself, I understand that you could spend another year (hell, even 2-3 years) completely hashing out every minute detail. However I think that what you have is getting to the point of being &quot;above and beyond what is necessary&quot; that you need to stop tinkering so much, and find a way to ship something sooner rather than later.<p>When you get around to desktop clients, ignore the seemingly negative consensus regarding Electron[1] if you think it&#x27;s the right fit for you. All the negativity I&#x27;ve read about it is from &quot;purists&quot; who aren&#x27;t specifically singling out Electron; rather they are hating on <i>all</i> non-native implementations. I noticed the mention of Xamarin on your site; never heard of it, but I&#x27;d be weary as they seem to be oriented more towards mobile whereas you&#x27;re looking for a cross-platform <i>desktop</i> solution which is where Electron shines.<p>If your goal were to be the gold standard for apps, you <i>should</i> be developing using native OS X APIs; the performance you get from a native implementation on OS X is astounding. However, if you do native OS X you&#x27;re putting yourself in a position to do native Windows and possibly Linux apps, and the collective work required for native-everywhere obviously does not come easy or cheap - particularly if you are doing this as a solo project without assistance from a team.<p>Electron is a perfectly fine balance for most UIs that are fairly simplistic, which is going to be true even for the most advanced todo-type app. Extra bonus being that if you put in the effort to plan out the Electron app side-by-side with your web&#x2F;browser-based app, you can share the frontend development between the two, resulting in less overall work.<p>[1] <a href=""https:&#x2F;&#x2F;electron.atom.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;electron.atom.io&#x2F;</a>",2017-04-20 19:45:17,14160153
296,"Personally, I&#x27;m very happy with VS and feel the performance focuses in the last three major versions continues to pay off.<p>SharpDevelop still exists, though I&#x27;m not sure I&#x27;d recommend it as it seemed to get stuck in a time warp somewhere around 2012.<p>MonoDevelop forked from SharpDevelop. Xamarin Studio forked from MonoDevelop. In an interesting twist of fate, Xamarin Studio is now Visual Studio for Mac and looks to be integrating a lot more of Visual Studio in future releases.",2017-04-27 17:53:07,14213421
297,"Not Windows Forms, no. But it is pretty easy to make cross platform .Net apps using Xamarin Mac. Business logic can share code, though UI likely needs its own code for each platform.",2017-05-10 15:47:15,14309099
298,So this Visual Studio for Mac is Xamarin studio repackaged as Visual Studio with tools and compiler&#x2F;transpilers for .NET Core and the rest so you can do your usual stuff (in any other language) + apps on iOS&#x2F;Mac&#x2F;Android with C# with the Xamarin magic. Or ?,2017-05-10 15:48:04,14309107
299,"Xamarin.Forms support for macOS is in preview:<p><a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;preview-bringing-macos-to-xamarin-forms&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;preview-bringing-macos-to-xamarin-f...</a>",2017-05-10 20:26:55,14311339
300,Xamarin uses Cocoa Touch.  It gets compiled to the same thing as something written in Swift.  So definitely iOS Native.,2017-05-11 21:04:29,14319510
301,"<a href=""https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers"" rel=""nofollow"">https:&#x2F;&#x2F;www.xamarin.com&#x2F;customers</a><p>Each example across multiple industries says whether they&#x27;re using test cloud, or the app was developed with the platform :)",2017-05-12 00:42:10,14320651
302,"Also, shortcomings in the mac version of office may be shortcomings in the Mac OSX platform.<p>VIsual studio for mac is a re-write of xamarin, that doesn&#x27;t change anything - xamaerin&#x2F;visual studio&#x2F;c# are all converging to offer a unified platform.<p>And i&#x27;m so glad you seem to know everything about everyone. THe same &quot;billion google now&quot; users probably only 1% USE it day in&#x2F;day out.. but we&#x27;re just going to be blindly bashing windows..<p>please, do us a favor and get over yourself. We get it, you don&#x27;t run&#x2F;don&#x27;t like windows... so just stop wasting energy hating something you really don&#x27;t have any clue about or care about.",2017-05-17 15:51:02,14359642
303,"&gt; Though I have to say that Xamarin has one big disadvantage - it adds another layer of sometimes leaky abstraction, and a whole new source of framework bugs to Android. So you spend a lot of time asking yourself &quot;is this a Google bug, or a Xamarin bug, or my bug?&quot;<p>This the main reason why while I dabble in all interesting technologies to get a taste of what they bring into the table, production code is always written 100% with official SDK languages for the system being targeted.",2017-05-19 13:27:08,14375368
304,"This is false, Xamarin is focused on mobile. Mono has been focused on other use cases since it has existed. We successfully built Event Store on Mono and ported it to .NET and have hit surprisingly few issues. On .NET Core, our six separate attempts to port have not yet yielded anything usable.",2017-05-20 23:20:05,14384891
305,"I use it a fair bit, mostly for enterprise apps. It definitely has its quirks but overall it&#x27;s come a long way.<p>All depends on how polished your UI needs to be. Anything too polished and you&#x27;re better off going straight Xamarin or pure native.",2017-05-24 18:25:03,14412253
306,This actually seems to be more aimed at hurting the ipad for business than hurting intel. You can write your business apps in .Net and roll them out to users who are currently using ios and save pain and cost from using tools like Xamarin to try to use your .Net team to write ios apps with c#.,2017-06-01 16:36:34,14461824
307,"My experience has largely been the same, the whole mono, xamarin, vs studio, etc of tooling (whatever it all is) is a tragedy of good technology made useless. The licensing, tooling, and runtimes are such a mess I give up before I begin. There needs to be one canonical way to do things on every platform, this &quot;band-aid&quot; approach might&#x27;ve worked when you first open sourced but surely no longer does the job.<p>I&#x27;d love to use .NET but the overhead of getting started isn&#x27;t worth it when I can use any number of other truly free languages&#x2F;platforms that are much easier to understand. And are truly cross platform because they have been so for years.<p>For reference languages I use regularly or on occasion which don&#x27;t suffer from any degree of the issues .NET has: ruby, swift, elixir, java, scala, JavaScript, and Elm.<p>CLR and .NET seem very awesome but so far have turned me off in a big way. Please fix &lt;3",2017-06-07 22:47:34,14510457
308,"Practical example, we use C++ as systems language for projects done in Java (Standard, Android), .NET (WPF, UWP, Xamarin), Swift&#x2F;Objective-C (iOS).<p>There isn&#x27;t much Ada tooling available for those environments, and even using GNAT would be increasing project costs regarding having to implement ourselves stuff that we get for free with the SDK tools that support C++ out of the box.",2017-07-28 13:53:59,14874261
309,"It is called Qt, wxWidgets, JavaFX, Xamarin.Forms,....",2017-07-30 09:08:27,14885113
310,"The &quot;.NET Spec&quot; doesn&#x27;t have the name &quot;.NET&quot; in it anywhere - .NET has always been the name of Microsoft&#x27;s implementation of the Common Language Infrastructure spec (<a href=""https:&#x2F;&#x2F;www.ecma-international.org&#x2F;publications&#x2F;standards&#x2F;Ecma-335.htm"" rel=""nofollow"">https:&#x2F;&#x2F;www.ecma-international.org&#x2F;publications&#x2F;standards&#x2F;Ec...</a>).<p>Now that Microsoft itself (and Mono + Xamarin) has multiple implementations of the CLI, it&#x27;s spec&#x27;d the API surface area that is to be expected across the multiple implementations (since this is explicitly not covered in detail in ECMA335) - hence the name, .NET Standard.",2017-08-09 17:08:28,14971303
311,"ECMA spec is for the CLI, essentially the specification for runtime like type system and GC and all the other things that make an environment work at all<p>Net Standard is a specification of APIs.  So in order to be compliant to the standard you must have a class named X with parameters string Y, int Z.<p>&quot;Net Framework&quot; is the name for the Windows &quot;full .net framework&quot; -- this doesn&#x27;t have a descriptive name since it was before all the rest, but basically its an SDK that is a superset of the Net Standard (and therefore is .Net Standard compliant &#x2F; interoperable)<p>Mono is a open source implementation of &quot;Net Framework&quot; that runs on multiple platforms (linux, etc).  It attempts to treat full .NET Framework&#x27;s surface area as a spec but re-implement it cross platform.  It is _also_ a open source CLI implementation.  So in common speech &quot;mono&quot; like &quot;.net&quot; can refer to either the &quot;basic sdk&quot; _or_ the runtime environment.<p>Xamarin is forks of mono for iOS, Android and Mac platforms plus libraries that include full support for interacting with those platforms Native SDKs<p>Unity is a fork of Mono plus gaming tooling and runtime tools.  Microsoft does not maintain this, it&#x27;s a separate company.",2017-08-09 17:41:28,14971672
312,"Not quite. See this comment for the relationships of the specs: <a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=14971769"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=14971769</a><p>.NET Framework, .NET Core, Mono, Xamarin, and Unity are all implementing all the .NET specs. They are share many aspects, but each also bring specific capabilities that the others don&#x27;t have, so its not very useful to think of these having a superset&#x2F;subset relationship.",2017-08-09 17:53:29,14971818
313,"I don&#x27;t think .NET Framework is a supper set of all other implementions of .NET. For example, Mono&#x27;s SIMD types are not in .NET Framework. It is even possible for types to exist in .NET Core that don&#x27;t exist in .NET Framework.<p>I think you could say the following:<p><pre><code>    .NET ECMA Spec  .NET Standard
    .NET Standard  .NET Core
    .NET Standard  Mono
    .NET Standard  Xamarin
    .NET Standard  .NET Framework</code></pre>",2017-08-09 19:28:11,14972717
314,"&gt; It even does iOS and Android without any recajiggering<p>Not really, it is a pain to use versus Xamarin.<p>All you get is QML and the freedom to implement all your bindings to Android and iOS APIs.",2017-08-10 09:10:59,14977871
315,"I find it weird that you consider it a workaround to put a Password Entry field inside a cell rather than using a &quot;PasswordEntryCell&quot;, that&#x27;s just simply nesting a control, in what platform don&#x27;t we have have to do that?  Might this platform or that one _have_ &quot;passwordEntryCell&quot; sure, but I fail to understand why such would be a first class citizen in your mind.<p>I also can&#x27;t imagine jumping ship to React Native.  If you&#x27;re going to jump off Xamarin Forms and already like f# &#x2F; .net then native Xamarin.IOS and Xamarin.Android are more easy, powerful and expressive than React Native.",2017-08-10 17:43:40,14982170
316,"Blog post announcing this feature <a href=""https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.xamarin.com&#x2F;glimpse-future-xamarin-forms-3-0&#x2F;</a>",2017-08-14 18:25:18,15011109
317,"So, you&#x27;d rather use Xamarin than React Native, in short. Xamarin has excellent tooling and arguably works with saner languages (with better type systems), but <i>it doesn&#x27;t work on GNU&#x2F;Linux</i>. We&#x27;re using RN right now, since it allows us to use ClojureScript, which means we can share code between our Clojure sever and our client. This means we&#x27;re limited to the JS environment though, which means no good access to multi-threading and a really wonky target language. Performance implications aside.<p>If Xamarin worked on GNU&#x2F;Linux, we likely would&#x27;ve built our app using it and F#. Until it comes to the Linux world and stops doing things the MS way (open sourcing is a good start), Xamarin is going to be missing out on a number of developers.",2017-08-19 19:44:25,15055192
318,"I found funny to say Javascript moves slowly when a lot of people is using async&#x2F;await, generators, destructuring, etc <i>everywhere</i> right now. And then it dismisses Flow and even Typescript right away, yeah sure<p>And the conclusions seem to favor Phonegap, really? Xamarin might not be that bad but doing really nice UI on both platforms require two separate projects (or modules at least).<p>My bets are still on Javascript :)",2017-08-19 20:26:44,15055395
319,"Do you think this is a better option than Apache Cordova? I&#x27;ve been starting to look at Cordova to build some pretty simple apps for business applications.<p>Does anyone have an opinion on whether Flutter would be a better choice? Why?<p>I also looked at Xamarin but that seems a little in-depth for what I need, which is basically some data-input screens (using standard Web-style controls) and then to upload the data to an API.",2017-08-19 21:54:56,15055835
320,You have tons of well established platform tools that will give you way more power at your fingertips if you wish so.<p>Have you tried QT or Xamarin?,2017-08-19 22:47:24,15056063
321,"Android, UNIX and embedded devices (Ricoh printers and medical devices, factory controls for exemple) prove otherwise.<p>The only problema with Swing (JavaFX not so much) is developers coding away withouth bothering to learn how to use them.<p>Yes, out of the box they are harder to use than Windows Forms, but anyone that bothers to read books like &quot;Filthy Rich Clients&quot; is able to tame Swing.<p>When .NET Core starts supporting a standard GUI (eventually Xamarin.Forms) than runs in all platforms that Java GUIs run today, then you can complain.",2017-09-06 18:31:06,15185978
322,"You&#x27;re comparing cordova with RN, and then you&#x27;re saying xamarin is totaly different. It&#x27;s not. RN are native components.
In NativeScript it&#x27;s the same + you get easy access to native apis",2017-09-11 12:39:28,15218044
323,"This surprises no one.<p>I&#x27;m more interested in: what&#x27;s the future for UWP apps now? Another dead end like silverlight?<p>A cross platform UI library that runs on .Net core (ie. windows, mac, linux, android, ios), some kind of hybrid of ??? and Xamarin forms could potentially be quite a nice tool... but its pretty hard to be excited about the prospect with their track record of killed off UI frameworks so far.",2017-10-09 13:30:02,15433586
324,"Apparently Xamarin.Forms, from the .NET Conf 2017 roadmap talks.",2017-10-09 14:18:04,15433962
325,"Hello world!<p>Developers Ultimate Dream: Kick-start Your App on ANY framework (Angular, React, Vue, Ionic, Electron, Xamarin, .NET )<p>INTRO
NinjaCodeGen aims to disrupt the software development industry by
1. making it easy to generate apps based on any framework
2. incentivizing app-template creators with profit-sharing
Think of it as a Software-factory marketplace to kick-start apps.
VISION
The worlds shared software department to delight developers by making it easy to kick-start apps in multiple frameworks.<p>https:&#x2F;&#x2F;medium.com&#x2F;ninjacodegen&#x2F;developers-ultimate-dream-kick-start-your-app-on-any-framework-angular-react-vue-ionic-43325f5e6cf1<p>Any feedback welcome! Thanks! Let&#x27;s go play with some code!",2017-10-10 20:55:51,15445244
326,"The sad fact of life is that large corporations often dictate the platform. If you&#x27;re a mobile app developer, for example, you&#x27;re only native options are Swift, Java and Kotlin unless you&#x27;re prepared to settle for a less efficient end product (Xamarin, Scala&#x2F;Android, Clojure&#x2F;Android).",2017-10-22 17:27:16,15527865
327,"I do Android dev in Visual Studio with Xamarin.<p>Your app is structured the same as a native one (Activities, Receivers, Services, Layouts, etc) and the XML for your layouts is identical, but you get to work in C# and dont have to deal with Gradle etc.<p>I like it.",2017-10-26 13:54:30,15558788
328,"Can&#x27;t we just make a proper, easy to use portable desktop application framework please? I really don&#x27;t care what language is used so log as JS is avoidable (It can still be a compilation target so it could even be JS), and I can make a snappy desktop app that takes 10 not 100mb.<p>I&#x27;m not even sure which one I&#x27;m hoping for at the moment. Xamarin seems to have bet fully on mobile. Avalonia looks nice but feels like it would need some enterprise backing.",2017-11-03 08:38:41,15617573
329,"Maybe I&#x27;m confused, by Xamarin.Mac do you mean Visual Studio for Mac?",2017-11-03 13:29:59,15619019
330,"From the roadmap linked in that blog post:<p>Xamarin Forms Gtk# Backend - <a href=""https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms&#x2F;pull&#x2F;1174"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xamarin&#x2F;Xamarin.Forms&#x2F;pull&#x2F;1174</a><p>It&#x27;s all floating out there right now but maybe by end-of-year (&quot;Q4 2017&quot;) there will be something solid. This uncertainty promises enough to keep people like me from evaluating alternatives.",2017-11-03 15:16:36,15619793
331,"Yes, it&#x27;s called Kotlin Native: <a href=""https:&#x2F;&#x2F;github.com&#x2F;JetBrains&#x2F;kotlin-native"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;JetBrains&#x2F;kotlin-native</a><p>Kotlin right now is a serious competitor for a full stack, any device language. An alternative may be F# which has Fable for Browser, Xamarin (mobile) and .net core for server. But Kotlin looks more integrated to me.<p>Coming from a C#&#x2F;F# background, Kotlin is really a joy to use.",2017-11-04 19:27:09,15626477
332,"That sounds like the right answer. (I don&#x27;t imagine Mono&#x2F;Xamarin are to blame, as they were independent until recently. This is a big self-inflicted mess by MS.)",2017-11-13 17:52:02,15688345
333,The performance is dramatically different (see TechEmpower benchmark) and the overall stability seems also a topic (the CoreCLR is pretty battle tested). Mono from it&#x27;s first origin as GNOME technology till its current peak now in Xamarin somehow always played in the UI field (which has consequences on e.g. garbage collection or jitting).,2017-11-13 19:10:06,15689178
334,"&gt; ... Coupled with dense and hard to find documentation that seems to be spread out over 14 different msdn domains and GitHub projects.<p>docs.microsoft.com is steadily improving this.<p>&gt;  I&#x27;ve tried no less than 10 times over the last few months to get &quot;intellisense&quot; working in emacs via roslyn and it has never worked.<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;OmniSharp&#x2F;omnisharp-emacs"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;OmniSharp&#x2F;omnisharp-emacs</a><p>Are you not using this? Works great for me.<p>If you want getting started to be less of a chore use VS Code, VS, Rider, VS for Mac, Xamarin Studio, or Monodevelop.",2017-11-19 10:25:14,15733238
335,"Hi Mike, sorry for the late reply, I&#x27;m in exam&#x27;s rush :P<p>here is what we are using de determine the range: <a href=""https:&#x2F;&#x2F;github.com&#x2F;domaven&#x2F;xamarin-plugins&#x2F;tree&#x2F;master&#x2F;Geofence"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;domaven&#x2F;xamarin-plugins&#x2F;tree&#x2F;master&#x2F;Geofe...</a><p>Thanks for reaching out.",2017-12-15 20:27:35,15934790
336,It specifically mentions 2019 for Xamarin not 2018.,2017-12-19 05:45:21,15958063
337,"&gt; <i>with a superior flagship language (C#)</i><p>and don&#x27;t forget VB.net, which is an excellent language for non IT professional novice programmers, particularly if they come form VBA. .net provides a good language for novices that gives access to most of the flexibility and power of the framework (outside Xamarin basically).",2017-12-24 14:14:15,15999598
338,"The APLs and especially, for me, j and k, are really interesting languagues. For one, I agree with Whitney, the creator of k, that you should not have to scroll to read your software. I think making sure at least every function points fits on a phone screen is a large boon for readability and maintainability. It is not the fact that it fits there, it is more so that if it does, you can work on that implementation mentally focused: without jumping pages or even files. I know a lot of people find j,k and even Forth unreadable, but that is really just practice. When I got used to it, I found, for instance, c# a lot more annoying to read. It is somewhat (this is a bit over the top, but you get the idea) the difference between reading Godel his original whitepaper (in German ofcourse) and Godel, Escher Bach explaining that whitepaper. Both are good reads, but the original paper, when you have the background context, is easier to read and debug that that enormous volume.<p>I hope to find more time to explore these avenues. For now, k and forth mixtures are my favorite to mess around with; I created a little language to do live coding on my phone for Xamarin and the forth&#x2F;k mix I use is actually the first thing that is not annoying to work with on a phone screen. Because most happens in your brain and what you type is a few hieroglyphs, the development is interactive, you can walk around doing it. I hope to clean it up enough to release it (I am old, I do not like this releasing of half baked stuff usually, unless it is game related): it saves me a lot hell doing edit&#x2F;compile&#x2F;wait&#x2F;test cycles.<p>For playing around, check out oK  : it is a k implementation in JS, it is slow but works everywhere and has some cool features for making graphics and little games.",2017-12-26 03:20:12,16006870
339,"For example xamarin&#x27;s fork of Cocos2D.<p>Or companies adding closed source features to open source software. You can&#x27;t do that with GPL unless you own all the code.<p>The classic business plan for software is to charge per license&#x2F;copy. But if you release your software for free, you have to sell something else. And anyone who come up with a good solution for this will be the next unicorn.",2018-01-11 10:59:29,16122868
340,Xamarins wrapper for C# made it a breeze to use from C# at least - just add the package. The same is likely true for all ecosystems with reasonable package management. Its only ironic that C++ libs are hardest to use from...C++,2018-01-15 11:19:25,16149857
341,"Yeah, mac-books are one of the favorite choices of unix focused devs. So quite a few people at Xamarin are using that.<p>Also, they are a MacOS focused shop in some ways (Xamarin for iOS).",2018-01-17 09:27:37,16166624
342,"Xamarin has a WPF renderer in some state that is somewhat UWP interoperable.<p>Maintaining a UWP head and WPF head with .NET Standard libraries shared between them is a reasonable option in some circumstances.<p>But better still, maybe encourage your employers not to death race upgrades versus exploits all the way to the bitter end in April 2020 like they did with XP&#x27;s extended support period.",2018-01-17 17:31:30,16169844
343,"I think the opposite is true.<p>First, the backwards compatibility is a key feature. You can open a project written several years ago, and add a new feature to it using the latest language syntax without being forced to rewrite all the old code.<p>I&#x27;m not quite sure about stock visual studio (since I don&#x27;t use it), but Resharper (and their new Rider IDE, which I&#x27;ve played with a bit) is pretty good at highlighting code doing things the old way and even automatically rewriting it for you. This seems to be getting better as they take advantage of what the Roslyn compiler can help with.<p>.NET Core, native, and the work of Xamarin only means more cross platform support, which allows broader use beyond just the Windows world.  The ecosystem is starting to get caught up now, and between most popular libraries being available and the feature parity reached with .NET Core 2.0, things are looking great for it to grow even more popular.",2018-02-11 22:46:15,16355275
344,"It is amazing that React and friends work as well as they do, and for certain applications they make a lot of sense. But there is a fundamental disconnect using web technologies for native apps.<p>The solution I am pursuing right now is Microsoft&#x27;s Xamarin. The C#\XAML stack supports iOS, Android, MacOS and Android. The only thing it is missing is web. But with a couple serious projects working on compiling C# to WebAssembly perhaps that will happen.",2018-02-22 07:43:16,16435927
345,"Disclaimer: I work on Flutter<p>Xamarin currently manipulates OEM SDKs&#x27;s bundled widgets <a href=""https:&#x2F;&#x2F;visualstudiomagazine.com&#x2F;articles&#x2F;2017&#x2F;12&#x2F;04&#x2F;flutter-challenges-xamarin.aspx"" rel=""nofollow"">https:&#x2F;&#x2F;visualstudiomagazine.com&#x2F;articles&#x2F;2017&#x2F;12&#x2F;04&#x2F;flutter...</a><p>Though there is a proof of concept running Xamarin with portable custom widgets on Skia <a href=""https:&#x2F;&#x2F;xamarinhelp.com&#x2F;skixam-skiasharp-platform-xamarin-forms-proof-concept&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;xamarinhelp.com&#x2F;skixam-skiasharp-platform-xamarin-fo...</a>",2018-02-27 21:18:17,16478002
346,"I&#x27;ve used RN for a few projects now. I can recommend it to the extent that the community is active and there&#x27;s a module for just about everything. I also am familiar with React so this was a big plus.<p>In terms of native vs. RN, it depends on the app and on you. For most projects, the result can be pretty good, and the RN components do compile into native ones so you would not notice too much of a difference in the final product.<p>Use it if you like React. If you don&#x27;t and like Angular, use Ionic. If you like new stuff try Flutter with Dart cause that&#x27;s heating up at the moment, and is blazing fast and efficient - Dart&#x27;s easy to learn if you know at least 1 language already.<p>I have not ever met anyone that uses Xamarin nor do I really know much about it. I try to avoid Microsoft&#x27;s ecosystem whenever possible so I can&#x27;t really speak to it too much.",2018-02-28 12:15:42,16482440
347,"Rendering to native components is a dead end. It creates huge surface area for bugs to appear, and it&#x27;s slow.<p>I had a &quot;pleasure&quot; of working with Xamarin Forms and interactions between native UI, behaviour difference between Android manufactures and versions, etc. were a constant source of pain.<p>With Flutter, if something works on one device it will almost certainly work on all devices. You can also customize per platform.<p>It is also possible to run it on desktop (although not officially supported). IMO that&#x27;s a big deal and a potential Electron killer.<p>Dart is meh though.",2018-03-07 11:09:26,16535647
348,"I think react native is a good recommendation for a react dev who wants to do cross platform development on mobile.<p>If you&#x27;re not a web dev it&#x27;s not a great fit.  You&#x27;ll have to deal with learning web, learning mobile, and as well as all learning all of react-native&#x27;s leaky abstractions.<p>Sounds like a nightmare.  I&#x27;d go with either native(Java&#x2F;swift) dev or if you have c#&#x2F;wpf experience then maybe xamarin.",2018-03-10 22:38:52,16560537
349,"Microsoft feels like it always is moving towards a grand unifying vision, but it is always taking longer than you&#x27;d expect. Xamarin is still one of many heads of the great .NET hydra. Microsoft&#x27;s been making big strides to tame them all under .NET Standard, but there&#x27;s still plenty of work to go.",2018-03-12 15:25:16,16568743
350,"&gt; One wonders what would have happened if they just sort of let Windows be Windows. I.e. if they had continued iterating on core stuff but left UI and general philosophy resembling Win7&#x27;s trajectory and not tried to force people into WinRT&#x2F;UWP&#x2F;store.<p>With Windows 8 they tried to do too much too quickly and not well, however their motivations and intention were spot on in my opinion.  Security has always been a pain point for Windows and it&#x27;s only been getting worse, the Store introduced a sandbox like that found on iOS and Android.  ARM, iOS, and Android showed that modern hardware and software can produce power efficiencies that put x86 and Windows to shame.  UWP introduced hardware independence and a modern development framework that would put Windows Apps on a level playing field with iOS and Android.<p>The problem was that Microsoft thought that merely by virtue of their existence, developers would adopt UWP&#x2F;Store despite the path forward being a huge pain in the ass.  We see how that played out.  With Windows 10 we&#x27;ve seen a course correction and a change in strategy.  You can have traditional Applications sandboxed in the Store, and you can have UWP Apps outside the Store.  Microsoft bought Xamarin and is folding it into UWP, the intent is to not just have hardware independence with UWP but also OS independence.",2018-04-02 15:04:40,16735054
351,"So come to Europe. Plenty of WPF jobs here.<p>Not everyone is using Citrix, and there are many markets, like life sciences, ticketing systems, factory management and many other domains, using non networked devices with native UIs in WPF.<p>Of course MS is not supporting WPF on .NET Core, they already announced XAML Standard and Xamarin.Forms is going to support Linux and macOS as well.<p>Also they have big UI announcement planned for BUILD as discussed on .NET Rocks interview with Scott Hunter.",2018-04-09 19:32:44,16796192
352,"CoreCLR will be nice for Unity with the 2x performance improvement.<p>I wish Microsoft had moved to it quicker and Unity wouldn&#x27;t have had that lull on Mono 2.x .NET and had to build IL2CPP.<p>When IL2CPP was being rolled out it was quite impacting to build size and actually making iOS builds for a while in 2015 from like March to summer was not workable for months. Now they have Android on it and it works well but keeping all that up to date is cumbersome for a smaller tech&#x2F;engine team.<p>I still would love a C++ engine&#x2F;lib like they were going to do back when Apple was forcing AOT instead of JIT languages around 2010 [1], but having a C# engine that can be comparable in performance is killer.<p>As long as this update is smooth and is truly faster that would be welcome. It was harder to trust Microsoft before during the Mono&#x2F;.NET disconnected period so Unity treaded carefully but after Microsoft bought Xamarin and went .NET standard&#x2F;core it seems like they are embracing and not extinguishing. Microsoft&#x27;s new focus is Azure and .NET core&#x2F;standard help expand that as well as its use by Unity (always a C# champion) and even Unreal Engine possibly which some have attempted [2]. If Unity switches to .NET core&#x2F;standard possibly Unreal Engine will be compelled to add it natively.<p>[1] <a href=""https:&#x2F;&#x2F;blogs.unity3d.com&#x2F;2010&#x2F;07&#x2F;02&#x2F;unity-and-ios-4-0-update-iii&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blogs.unity3d.com&#x2F;2010&#x2F;07&#x2F;02&#x2F;unity-and-ios-4-0-updat...</a><p>[2] <a href=""https:&#x2F;&#x2F;mono-ue.github.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;mono-ue.github.io&#x2F;</a> or <a href=""https:&#x2F;&#x2F;github.com&#x2F;xiongfang&#x2F;UnrealCS"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;xiongfang&#x2F;UnrealCS</a>",2018-04-10 19:34:11,16804441
353,"I was just thinking about the &#x27;full circle&#x27; today.<p><i></i>OSes of the past<i></i>:  Windows, Variations of Unix&#x27;s,<p><i></i>OSes of 2018<i></i>: Android, IOS, All Varations of Browsers, plus all the old ones<p>---<p><i></i>Cross platform (cross-os) development of the past<i></i>:  nasty (Widget libraries (wxWindows, QT, ... ), os-abstraction libs )<p><i></i>Cross platform  development of 2018<i></i>:  nasty still (react-native, xamarin, etc .. )<p>---<p><i></i>Development pipeline tools of the past<i></i>:  Automake&#x2F;cmake, make, linker<p><i></i>Development pipeline tools of 2018<i></i>:  npm, webpack<p>---<p><i></i>Compiler front ends of the past<i></i> (things that produce assembler or low-level C or stack-machine codes):  various C++ front ends, Eifel, etc<p><i></i>Compiler front ends of 2018<i></i> (things that spit out javascript):   babel (more like macro-assembler), Clojurescript, ReasonML, Fay, Nim .. ,etc<p>---<p>In current times, we also added Wireframe&#x2F;Styling tools into our development pipeline (I do not think we had it in the past).  Eg Bootstrap and other styling (that are not integrated into &#x27;compile-time-verification&#x27; stage of the modern Front-end languages.<p>I realize that above is somewhat front-end-dev oriented, but I think the desire to share &#x27;same language&#x27; for front and backend development, causes the blur.<p>I also would add that for data crunching and data distribution (eg CORBA, DRPC) of the past -- we have gained more options, higher quality and free.  So I would say this is a material advance for our productivity.",2018-04-23 14:57:52,16903935
354,"When was the last time you tried Xamarin.Forms? Visual Studio 2017 doesn&#x27;t have these issues, and Visual Studio for Mac rocks.",2018-05-23 13:37:33,17134048
355,"Don&#x27;t really agree with most comments trashing this hypothetical deal, bringing up the Skype precedent.<p>Its been what, 2 years since the Linked-in and Xamarin acquisitions? Nothing seems to have changed. Microsoft just seems to know that the desktop is no longer the cash cow that it used to be, office still is but may not last long, so its a good idea to diversify its portfolio.<p>Satya is not Ballmer.",2018-06-01 20:56:27,17210186
356,Xamarin is awful. Incredibly slow tooling and useless UI libraries.,2018-06-03 05:16:38,17218023
357,"Far be it from me to question the distrust, but I&#x27;d say in recent years, since around the time they started open sourcing ASP.NET a while back, they&#x27;ve been pretty decent.<p>I mean, some people dislike Windows for various reasons, but this falls more into their development umbrella so I trust it is in good hands as ASP.NET, Xamarin, etc. have been in recent years.",2018-06-04 02:17:50,17224029
358,"I refer to my period as a Xamarin contractor as &quot;bomb technician programming.&quot;  The biggest advantage of Xamarin is also the greatest source of its problems: anyone who programs C# can start a Xamarin.Forms app and get a proof-of-concept sufficiently advanced to show their boss who will run it up the chain and get it approved as a project. And THEN the devs -- who are awesome web developers -- begin to realize just how much they don&#x27;t know about mobile and that they&#x27;ve coded themselves into more than a few corners and aren&#x27;t sure how to get out... and I know this from first-hand experience from my first couple Xamarin projects.  There comes a point where you realize that knowing C# is only part of the solution.  You wouldn&#x27;t take an accomplished ASP.NET MVC developer who has only done web work and assign them to an Akka.net or advanced, massively concurrent, highly-multi-threaded Windows Service project and expect them to succeed right away just because it&#x27;s all C#.  Same idea... different platform.<p>Xamarin is great for people who want to use C# to write mobile apps and know the underlying platforms well enough to know where the landmines are and how to side-step them. There&#x27;s undeniable time-savings in being able to write non-platform-specific code one time and just link to it from the Xamarin.iOS and Xamarin.Android project.  It&#x27;s also possible to write cross platform apps very, very quickly with Xamarin.Forms if you understand where the issues are there as well...<p>But it&#x27;s even faster to just write a mobile web site.  When I am asked for my recommendations for a mobile app idea  my first question always is: &quot;Can this be done with a mobile web site (which is PWA these days)?&quot; If yes, why go further?  If you really want the app store exposure then packing up your PWA as a hybrid app isn&#x27;t all that difficult so mobile web is still my first choice.  It&#x27;s not unless you have specific, unambiguous needs that mobile web or hybrid cannot handle that going native -- Xamarin or otherwise -- is recommended.<p>Keep it simple, deliver value, and go home happy and a little richer.",2018-06-05 14:39:45,17238032
359,"Vendor Native  Xcode or Android Stidio  is still king but clients typically care more about what your app does for them than how you made it (unless the way you made it adds dozens of megabytes to the final app like Xamarin.Forms does).  Learning the vendor-Native stack will give you a far greater understanding of the underlying OS which will set you apart from other Ionic devs who start panicking when an app returns a java exception of Android or similar on iOS.<p>Doing Xamarin development for a few years taught me that you really need to understand the underlying operating system and how it works.  Most of the consulting gigs I got were what I called &quot;bomb squad programming&quot; where a C# web shop decided &quot;How hard can it be?&quot; and embarked on a Xamarin.Form project only to discover too late what they didn&#x27;t know.  When I started mobile work with Xamarin this bit me as well (but I Googled my way out of it quickly enough).  These weren&#x27;t dumb programmers but just because you can expertly apply C# in web development doesn&#x27;t mean you can instantly apply that in another kind of programming (like multi-threading, desktop, server services... or mobile).  The very best Xamarin devs I knew came over from doing ObjC in Xcode or Java in Android Studio.  What made them so good is that they understood at a deep level how to write mobile apps.  It&#x27;s like if you do Java MVC web development and switch over to ASP.NET MVC. The concepts are pretty much identical so the only hurdle is adapting to the language&#x2F;syntax differences.<p>Really long-winded way of saying: sticking with Ionic initially and making friends with someone who can bail you out and&#x2F;or mentor you on deeper understanding of the mobile operating systems will pay off.",2018-06-17 04:03:17,17330814
360,"VS Code binary is vscode plus custom package.json which configures telemetry, gallery, logo, etc. and therefor has a custom license. Similar to Chrome &amp; Chromium, Oracle JDK &amp; OpenJDK, Xamarin Studio &amp; MonoDevelop, etc. [1]<p>Seems fair play to me.<p>[1] <a href=""https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;vscode&#x2F;issues&#x2F;60#issuecomment-161792005"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;vscode&#x2F;issues&#x2F;60#issuecomment-1...</a>",2018-06-19 14:10:19,17346755
361,"It is same with Xamarin. They don&#x27;t have people that would know these languages, and they would be passionate about them.",2018-06-19 20:49:20,17350197
362,"Not exclusive use, but here are some apps that contain the Xamarin code: <a href=""https:&#x2F;&#x2F;www.appbrain.com&#x2F;stats&#x2F;libraries&#x2F;details&#x2F;xamarin&#x2F;xamarin"" rel=""nofollow"">https:&#x2F;&#x2F;www.appbrain.com&#x2F;stats&#x2F;libraries&#x2F;details&#x2F;xamarin&#x2F;xam...</a>",2018-07-02 13:50:10,17441563
363,"Maybe it&#x27;s just my phone (6) but you may find that once you get 1000+ logins, Bitwarden falls apart pretty quickly. I&#x27;ve heard the same from people with 800+ logins. I remember it used to be very quick when I initially used it with a few plugins.<p>IIRC from their Github issue threads, Bitwarden is using Xamarin, and performant UI has been a consistent struggle with many login entries.",2018-07-11 04:25:01,17504466
364,"Firebase is very much easy to get started for mobile apps. You have nice console to create project, and as developer you deal with just its SDK, one CLI and simple API. For something similar to Firebase in AWS, you need to make use of Lambda, API Gateway, DynamoDB, Cognito separate products, which has steep learning curve. And then you need to know the AIM security to get started. AWS has a Mobile Hub product which is trying to make things easy to create mobile apps by automate some of these AWS products for you. So now you have to learn awsmobile CLI tool on top of the core awscli tool. And if you develop for the web, they have this AWS Amplify Javascript library on top of basic JS SDK library which has a higher abstraction thus to make things simple (or worst). If you&#x27;re new to AWS, you often struggle with which library should one learn and use. And if you use AWS Ampify and read the documents, it is as if the library is build for React. I&#x27;m not sure why AWS can be so married to one web stack. So much emphasis and priority is given to React and React Native in this library. They will give the excuse that React is what their customer wants. They now have mature React&#x2F;React Native Amplify library thus giving the impression that to use AWS its better to use React&#x2F;React Native. So they spend resource on AWS-Amplify, even move one of JS cognate-identity-js SDK under this umbrella, hoping the world will standardised on JavaScript and React Native for iOS, Android and web. So what happen if you&#x27;re developing a mobile app using Unity, Xamarin and Flutter? No luck as they only have SDK for iOS, Android and web. Compare this with Firebase that has SDK for iOS, Android, web, Xamarin, Unity, Flutter and C++. AWS has an opportunity in AppSync to make a product as easy to get started as Firebase. What is required is native mobile SDK for iOS, Android, web, Flutter, Unity, Xamarin that is not just specific to AppSync and GraphQL, but also add in authentication, analytics etc APIs. Something like Firebase SDK API. AWS is still stronger for enterprise usage. And you cant use Firebase in China due to its use of Google Play services. But Firebase is definitely a weapon used by Google to draw customers into other Google Clouds offering.",2018-07-13 06:29:47,17520908
365,I guess we&#x27;ll just make do until the Xamarin SDK is ready. Thanks.,2018-07-25 22:06:51,17613359
366,"How is it Apples policy? Apple chooses not to write a tool chain for Windows or Linux. If a third party once to make one, they are free to do so.<p>The post I was responding to said it was against Apples TOS, probably referring to a policy that was rescinded back in 2011.<p>There is a big difference between Apple not <i>allowing</i> something and Apple not <i>supporting</i> something. I choose to write native apps for the platforms I care about. If I wanted to use Xamarin I could.",2018-08-04 19:26:28,17688121
367,"I wouldnt focus my medium term career prospects on Xamarin, but if I could quickly ramp up and do mobile development using it, I would.",2018-08-08 16:21:41,17717189
368,"You can develop on other platforms - see Xamarin<p>You want to be able to install another OS on an iPhone? Unless you happen to have an Android phone that has hardware that is supported by one of the forks - good luck with that.<p>Yes you can use scripting languages with iOS apps, games do it all of the time.<p>Alternate voip apps integrate well with the native iOS dialer. For instance a call using Skype looks just like a call on the native phone dialer and your Skype call history is integrated with your regular phone call history. You can even say call X using Y with Siri and it will use the alternate app - same with messages.  If you use a third party VoIP app, and youre connected to Bluetooth in your car, it uses the phone call Bluetooth protocol just like the native dialer.<p>Third party keyboard support has been available for 3 years and unlike Android, you can install a third party keyboard and not give it network access so youre not installing a keylogger.",2018-08-10 19:12:53,17736004
369,"My understanding is that Mono is being billed as a client framework (Monogame, Xamarin, Unity, Blazor) while Core is more for the server&#x2F;systems target. To add to the confusion, &quot;.Net Standard&quot; is a library compilation target that should work everywhere (even the legacy Windows-only .Net Framework). Interestingly, the newly MIT-licensed Xenko game engine compiles to .Net Standard libraries which is how it supports so many platforms (via barebones launcher&#x2F;shim projects for whichever framework implementation is desired). Edited for clarity, thx.",2018-08-20 18:56:57,17802776
370,"My project isn&#x27;t getting much traction at the moment.  I chose to develop this application in Android native first, as currently I am a single developer working on this project.  Some people have suggested Xamarin forms to be able to produce both Android and IOS.  This may make a difference in having more backers interested.<p>I have been browsing Xamarin forms information, and I understand that if you have complicated user interfaces Xamarin forms may not be a good choice.  Some people in person say that in 2018 things are different now.  I am investigating.<p>Does anyone have any thoughts?<p>I do have a significant portion developed already in Android native, and will soon be putting a demo video on my project page.",2018-08-28 14:16:31,17858915
371,"It&#x27;s similar, but not the same. The details matter. They&#x27;re different because you don&#x27;t need to deal with a complex abstraction layer to share logic. As in, you can expose an iOS Framework and call it from swift&#x2F;Objc just like any other library. That lets you share tested logic and architecture, and do so optionally. It&#x27;s not all-or-nothing. Xamarin is a different approach. Flutter is a very different approach.<p>Part of the issue when evaluating frameworks is expectations and not understand the plusses&#x2F;minuses. If you are looking for a framework that will do 1 codebase for all logic and UI, without sacrificing any UX or capabilities, you&#x27;ll probably be let down. Kotlin Multiplatform will be great for sharing logic and architecture. UI is somewhat of a different case. Why Xamarin wasn&#x27;t great here is you need to do EVERYTHING in Xamarin, and write custom bridge code when not. It&#x27;s an entirely different world, which bad IDE support for most of it&#x27;s history. Jetbrains makes excellent tools, and if you understand that the UI will be &quot;native&quot;, then there&#x27;s a lot of efficiencies you can leverage here. If you get frustrated because you can&#x27;t make one thing do all things, then yeah, it&#x27;ll let you down.<p>Anyway, yeah, they&#x27;re different.",2018-09-17 17:35:37,18008024
372,"Android APIs get partially rebooted at every Google IO, and the NDK is what it is, no need to add extra immature tooling into the mix, which isn&#x27;t even officially endorsed by the Android team.<p>In that regard one is safer (CV) using Qt or Xamarin, given JavaScript, C++, C# and F#.",2018-09-20 06:23:20,18030190
373,"I have many of the issues you have when working VS under Windows; VS under Mac (for iOS dev) a lot less. So because of path of least resistance, I first finish iOS apps on Mac and then compile &#x2F; test on Android (which is far more of a pain, which I find for React Native as well tbh and for their native ObjC&#x2F;iOS vs Java&#x2F;Android as well; my opinion, not saying one is better than the others; probably just what I&#x27;m used to). I use Forms as a framework, not &#x27;out of the box&#x27;; I have many of my own controls and tooling; I have a live XAML editing environment and a crippled but functional C# scripting implementation to not have to deal with IDE&#x27;s so much. When Miguel Icaza did a blogpost about the interpreter environment[0] finally getting some love end last year, I was hopeful, but unfortunately it seems development is going so slow that I implemented my own which is buggy for others (let&#x27;s say unworkable) but allows me to live program on iOS.<p>I think it will make quite a difference; I know it does for me as I use it for everything, but within the confines of what I could implement in my free time.<p>Wish Krueger [1] would open source his interpreter as his has many bugs but far far less than mine and it could be a good effort fixing bugs and getting a better project on the iPad at the same time.<p>A propos ; Continuous is great for playing around with Forms and Xamarin iOS in a fast and responsive environment on an iPad Pro with keyboard. For just getting the screens perfect fast it is pretty good. Not sure why he doesn&#x27;t have XAML support (or he has but I could not find it so I assumed not) as that is pretty trivial to implement.<p>[0] <a href=""https:&#x2F;&#x2F;www.mono-project.com&#x2F;news&#x2F;2017&#x2F;11&#x2F;13&#x2F;mono-interpreter&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.mono-project.com&#x2F;news&#x2F;2017&#x2F;11&#x2F;13&#x2F;mono-interprete...</a><p>[1] <a href=""http:&#x2F;&#x2F;continuous.codes"" rel=""nofollow"">http:&#x2F;&#x2F;continuous.codes</a>",2018-09-21 07:53:33,18037948
374,"It&#x27;s interesting- in the Silicon Valley, hip consumer-centric startup scene, native is king. React Native is touted in a pinch; Flutter is the new flavor of favored cross-platform solution that is getting the hype that RN had. Yet I wonder how many firms in the larger world aren&#x27;t just writing Xamarin apps, but apps using derided old hybrid solutions like Cordova&#x2F;PhoneGap or Appcelerator.",2018-09-21 08:28:58,18038082
375,Well Microsoft is not using Xamarin for any of their cross platform apps. Why should we?,2018-09-21 13:09:45,18039392
376,"Alright, so I just made a run of it and verified it all works.
As you say, the tutorial from Microsoft is for VS[0], but it actually talks about the android emulator, which is the same thing that Android Studio uses, just make sure you update it to latest, atm it&#x27;s 27.3.10
Admittedly, the startup time seems a bit longer than with HAXM, but otherwise the emulation is pretty responsive.
[0]<a href=""https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;android&#x2F;get-started&#x2F;installation&#x2F;android-emulator&#x2F;hardware-acceleration?pivots=windows"" rel=""nofollow"">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;xamarin&#x2F;android&#x2F;get-started...</a>",2018-09-26 01:47:08,18072048
377,"My take on this is because Microsoft cannot match google&#x27;s monetize scheme, and afaik this is the reason wphone can&#x27;t be cheaper than android. Furthermore there already iphone on premium level that replace blackberry at that time.<p>They need to target for specific market segment (lets say phones for corporate and office, or phone for developer) that has minimum apps (whatsapp, etc) and easy to port from other platform (ex: from xamarin &#x2F; android app). Of course they need to rethink the monetization scheme to match android&#x27;s price.",2018-10-06 13:28:40,18155024
378,"My main question is how this offering differs from a UI framework. At first glance, this looks similar to Ionic, Flutter, Cordova, Xamarin, React Native, etc. You&#x27;re fighting an uphill battle because people these days either want to write native applications or use a JavaScript-to-native framework, so you have to be extremely clear on how your tool is superior or different.<p>One piece of criticism is that while the technology looks neat, the UI doesn&#x27;t look professional. You&#x27;re competing with frameworks that have exceptionally polished UI elements out of the box. If design isn&#x27;t one of your core competencies, I&#x27;d highly recommend hiring (or contracting) a designer to help you build a good looking set of UI components, or at least a good looking demo.",2018-10-06 17:14:09,18156130
379,They bought Xamarin. I&#x27;m also pretty sure they do make money from their Enterprise versions of their .NET developer tools.,2018-10-26 15:54:53,18310397
380,Xamarin?,2018-10-26 20:16:59,18312418
381,"Saint Petersburg, Russia.<p><pre><code>  2013-2014     ???                                       Literally pennies while doing odd jobs for random people on the internet.
  2015-2016     $3600             Asp.net developer       Working for a sub-sub-sub contractor on some government project. AFAIK, it has never been shipped to production.
  2016-2017     $12000            Xamarin developer       Small local company that went out of business due to Russian financial crisis [1]
  2017-2018     $25000            .NET developer          Large company(~600 franchise offices) focused on the local market
  2018-now      $36000 -&gt; $32000  Full stack developer    Large outsourcing company, US-based customer.
                                                          Salary has decreased since it&#x27;s bound to RUB and the exchange rate fell by about 10%.
</code></pre>
Income tax is flat 13%, most likely I&#x27;ll get it fully refunded for this year.<p>[1] <a href=""https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Russian_financial_crisis_(20142017)"" rel=""nofollow"">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Russian_financial_crisis_(2014...</a>",2018-10-31 15:08:12,18346293
382,"Visual Studio for Mac is just Xamarin Studio rebranded, not really related to VS for windows.",2018-11-03 01:59:27,18368209
383,"Well for the mainstream VMs: Hotswap on the JVM is very limited, likewise with edit and continue on the CLR. Xamarin has live XAML updates, only for markup though. V8 is better at hot reloading, but then suffers on the performance front, since it&#x27;s basically impossible to do efficient AOT for it.<p>So which languages&#x2F;platforms do you mean?",2018-11-24 08:32:06,18521092
384,Now can they make a real VS for Mac that isnt a rebranded Xamarin?,2018-11-30 12:33:07,18568602
385,Xamarin also follows a similar strategy of wrapping platform native widgets in cross-platform widgets.<p>SWT project also does the same in Java Desktop World. But it never really became widely used.,2018-12-03 10:24:24,18587696
386,"Many projects are porting variants of them to other platforms: Avalonia, Eto, Uno, Xamarin.Forms, etc.<p>Now that it&#x27;s open source, the process should be even easier.",2018-12-04 17:11:16,18601333
387,"I agree with you, but having the Mono interpreter (which does not have the same issues) fully work for mobile (Xamarin Android&#x2F;iOS) and desktop (it is with --interpreter) and web (it is with Blazor) would make life easier for this kind of mainstream development.",2018-12-21 13:27:47,18733124
388,"Xamarin, unfortunately.",2018-12-23 20:17:32,18748085
389,"Author here.<p>Ive worked on C# codebases professionally for about four years. Theyre not open source because half of that time I worked on enterprise software (ASP .NET MVC, Entity Framework, NHibernate) and another half was a closed source product (Xamarin aka MonoTouch, Rx). Prior to that I worked a little on an open source static analysis tool (Gendarme) using Mono Cecil.<p>Prior to that I was moderating the .NET section on one of the largest Russian programming forums and translated documents like LINQ Overview when they came out. I also have a silver C# badge on StackOverflow. (<a href=""https:&#x2F;&#x2F;stackoverflow.com&#x2F;help&#x2F;badges&#x2F;39&#x2F;c-sharp?userid=458193"" rel=""nofollow"">https:&#x2F;&#x2F;stackoverflow.com&#x2F;help&#x2F;badges&#x2F;39&#x2F;c-sharp?userid=4581...</a>)<p>I know how types work. My remark was that I havent worked with C# for about four years. Im not aware of changes between versions 5 and 9, and might have forgotten some of the C# syntax for things like lambdas, having worked a lot with JS since then.",2018-12-29 13:27:59,18783466
390,"Pushing updates without going through the app store has been allowed by Apple as long as the assets being updated are not binary code; specifically CSS, HTML, and JavaScript are okay (I wonder whether WebAssembly will be considered &quot;binary&quot; or not... will be interesting to see).  I convinced a former employer to abandon their Xamarin-built app and switch to Ionic (Cordova with nice, fancy UI additions) specifically because they could push updates to the app without going through the app store.  Officially (unless things changed?) the Google Play store says this isn&#x27;t allowed but there is no review process with Google Play so publishing a new app and then pushing an update for the previous version won&#x27;t likely get you in trouble. If someone HAS been busted by the Google Play cops for this it would be news to me.",2019-01-04 23:02:14,18828574
391,".NET has some warts but it&#x27;s pretty plug and play.  Exception are xamarin, which I give them a pass for because most cross platform technologies are a little rough getting started, and office 365 add-ons.<p>I don&#x27;t have any direct experience but I also assuming sharepoint is awful.",2019-01-20 08:15:58,18951882
392,"SEEKING WORK - Warsaw, Poland<p>Remote: Preferred<p>Willing to relocate: no<p>Technologies: C#, Java, Swift, Xamarin&#x2F;Xamarin.Forms, native Android&#x2F;iOS, UWP, WPF, Windows Forms, Bootstrap, jQuery, Xamarin Test Cloud, Appium, Flutter, ASP.NET MVC&#x2F;Web API&#x2F;Core, Entity Framework 6&#x2F;Core, Azure Functions, Keras&#x2F;Tensorflow, NLP<p>Resume&#x2F;CV: <a href=""https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;1rBbxFsJeD990m1KsWl1mlT4QBkkcviy6"" rel=""nofollow"">https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;1rBbxFsJeD990m1KsWl1mlT4QBkk...</a><p>Email: mierzynski.michal@gmail.com<p>Linkedin: <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;micha%C5%82-mierzy%C5%84ski-a6706792&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;micha%C5%82-mierzy%C5%84ski-a670...</a>",2019-02-08 15:04:10,19114785
393,"Hello, HN!<p>We&#x27;re Antonio, David, Jason, and Mark. Were building Glide (<a href=""https:&#x2F;&#x2F;glideapps.com"" rel=""nofollow"">https:&#x2F;&#x2F;glideapps.com</a>). Before this we worked on Xamarin, quicktype, Ubuntu, Mono, and GNOME Do :D<p>Glide makes it easy &amp; fun for anyone to create apps without code. Pick a Google Sheet and Glide assembles a polished, data-driven app that you can customize, share as a PWA, and publish to the App Store and Google Play if you desire.<p>We&#x27;ve spent the last decade building developer tools. In that time we&#x27;ve watched thousands of developers struggle to design, implement, and maintain apps, and most developers we know avoid mobile development altogether.<p>Apart from developers, we hear worthy app ideas from non-technical colleagues, friends, and family every day: apps for work, new business ideas, and silly apps just for fun. All of these people can make websites, so why can&#x27;t they make apps?<p>We were dismayed to find that there are hundreds of &#x27;low-code app builders&#x27;, but none that excited us. They&#x27;re enterprisey, they output kludgy apps, and their low-code contrivances often felt more complicated than the code they replaced. Why hasn&#x27;t anyone made the Google Docs or Figma of apps yet, we wondered.<p>That&#x27;s our ambition. Glide makes app development web-based, collaborative (coming), and fun by combining data-bound components with a familiar spreadsheet model. Spreadsheets are the most successful programming model of all time, and smartphones are the most successful computer, so we&#x27;re bringing them together to enable anyone to create apps without code.<p>We&#x27;ve implemented a component model based on self-adjusting computation (<a href=""http:&#x2F;&#x2F;www.umut-acar.org&#x2F;self-adjusting-computation"" rel=""nofollow"">http:&#x2F;&#x2F;www.umut-acar.org&#x2F;self-adjusting-computation</a>), which allows Glide apps to update efficiently and continuously just like spreadsheets. You can see the benefit of this in our Comments component, which syncs comments in real-time to instances of the same app. In other words, Glide apps are multiplayer by default.<p>We&#x27;re just getting started and would love feedback on the approach. There are many technical&#x2F;design challenges ahead of us but we are encouraged by the useful apps our users have created with this early version. We even use Glide to build Glideinternally we&#x27;ve created dashboard apps, an app to share updates with our advisors, a directory that shows us which Glide apps are trending, and an app for our YC group.<p>Next on our roadmap: forms, improved image handling, notifications, and offline.<p>- Get started: <a href=""https:&#x2F;&#x2F;go.glideapps.com&#x2F;?signUp"" rel=""nofollow"">https:&#x2F;&#x2F;go.glideapps.com&#x2F;?signUp</a><p>- Video demo: <a href=""https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=smNwrz9wMxU"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=smNwrz9wMxU</a><p>- App templates: <a href=""https:&#x2F;&#x2F;www.glideapps.com&#x2F;samples"" rel=""nofollow"">https:&#x2F;&#x2F;www.glideapps.com&#x2F;samples</a><p>Thank you.",2019-02-14 16:22:17,19163081
394,"Hello,<p>I live in the Philadelphia, PA area and was wondering if anyone on here lives nearby who would like to meet up. I am an intermediate level C# .NET programmer in my early 20&#x27;s who is looking for someone to work on projects with, and help each other learn and get to the next level in the process. Moreover, I am really looking for a friend who programs on a similar level and has similar interests because I have none lol.<p>I have a mentor and he suggested I make a post on this website to see if I have any luck.<p>I have been coding&#x2F;programming for around 3 years now. I started with Java in high school, then moved on to C# which I have practicing for over a year now. Aside from back-end development, I do have some experience with Xamarin and XAML for UI and cross-platform application development where I built a bunch of tiny android projects. Aside from c#, I am also experienced in WordPress and began learning PHP a few months ago to increase the scale of the work I do on WordPress. I am obviously also experienced in HTML and CSS, for what it is worth.<p>Professionally, I am currently employed as a developer for a Lighting Showroom in the area. I built and currently manage their website, online store and have worked on numerous c# projects that integrate with the website including an inventory feed application. Aside from the purely technical aspects, I also handle marketing and SEO for the website and company. I also do have some experience in security.<p>Outside of work, my largest project was a data-mining application that was capable of scraping&#x2F;crawling hundreds of social media pages in minutes. It was meant to be a part of what I consider a million dollar idea, but it eventually fell through due to various conflicts.<p>If you&#x27;re interested in chatting or getting together, you can email me here: jmerk12086@gmail.com<p>Also, I play xbox pretty regularly if anyone wants to game and talk about anything tech!
Gamertag: XxAdversityzxX<p>Thanks!",2019-03-05 01:42:22,19307423
395,"That&#x27;s the problem, ms is creating these amazing open source solutions and hitching the rotting carcass of visual studio to all of them.Even visual studio code is such a joy to use in comparison to even visual studio 2019.however you can&#x27;t for some reason run solution based projects in code.i&#x27;m  currently making xamarin apps and boy is it a fucking chore to do in visual studio to the point where the whole program crashes routinely in a normal workday(switching to flutter for this reason).<p>having an answer that would let me escape from the arcanities of visual studio in a corporate environment would be a joy",2019-03-09 06:55:09,19344886
