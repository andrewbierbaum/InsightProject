,body,date
0,"I'll admit, a few years ago I had little trust in Microsoft and would have viewed this purchase as disastrous for an amazing development platform like GitHub. However, Microsoft over the last few years has really surprised me and is earning my trust back. They've made some excellent steps towards an open, developer friendly ecosystem. To name a few, they built a seriously amazing editor, visual studio code, open sourced .Net Core and made it cross platform, did the whole xamarin move, active  in JS space with the Chakra JS engine. They also have created some amazing cross platform languages like Typescript and C# too. Credit where it's due, I have hopes and renewed faith that this purchase will be great for everyone.",2018-06-04 13:52:58
1,"See section ""Future of Windows Desktop Development"" here:

https://blogs.msdn.microsoft.com/visualstudio/2018/05/07/microsoft-build-2018-new-releases-for-visual-studio-visual-studio-for-mac-net-core-and-xamarin-forms/",2018-06-15 21:12:00
2,What were your pain points with xamarin?,2018-06-20 07:10:04
3,Ah thats a shame. This is built with Java/eclipse and not c# and xamarin right?,2018-07-29 14:34:22
4,"Recently did a test where it was much more difficult to reverse engineer the app since it used compiled libraries instead of just Java. I believe they used [Xamarin](https://visualstudio.microsoft.com/xamarin/). It doesn't prevent reverse engineering but it makes it more difficult which is the best to hope for

Edit: phone autocorrect fail",2018-07-29 23:40:38
5,"https://github.com/Azure-Samples/active-directory-xamarin-native-v2

That should do the trick. ",2018-08-08 06:23:42
6,"[https://docs.microsoft.com/EN-US/xamarin/xamarin-forms/app-fundamentals/data-binding/index](https://docs.microsoft.com/EN-US/xamarin/xamarin-forms/app-fundamentals/data-binding/index)

They are explaining you clearly the actual problem &amp; why data binding is useful , it's good to start by reading this to understand what we'll use data binding for.

So now you should understand that one of the best things about Bindings is they keep the UI in sync with the data in the view model ( code behind ).

You'll use the interface INotifyPropertyChanged so that your View can search for the changes in the View model so it can update it self if the value is changed.

I recommend you to do like me , to use a Generic Method to handle the PropertyChanged event so that you can pass any type of property as a parameter into the Generic Method : 

`protected virtual void OnPropertyChanged(string propertyName) { PropertyChangedEventHandler handler = PropertyChanged;` 

`if (handler != null) handler(this, new PropertyChangedEventArgs(propertyName)); }` 

`protected bool SetField&lt;T&gt;(ref T field, T value, string propertyName) { if (EqualityComparer&lt;T&gt;.Default.Equals(field, value)) return false;         field = value; OnPropertyChanged(propertyName); return true; }`

now you can define the properties like this , by implementing in the set method the SetField generic method so that no matter if your property is an int or a string or whatever , the View will be informed by changes occuring in the view model ;)

`private string name;`

 `public string Name {         get { return name; } set { SetField(ref name, value, ""Name""); } }`

The generic method SetField returns a `boolean` which returns false when the property actual value equals to the new value you set on the property and returns true when the property actual value is different then the new value set on the property &amp; then the code goes on to notify the property changed event.

It may sound a  bit overcomplicated ik but just get the concept&amp; understand it I don't think you have to understand each fking line , you can juste copy paste this shit and edit i as you want",2018-08-16 03:55:56
7,I feel comfortable when i was using xamarin.,2018-08-28 13:01:43
8,Look at unity.  I really like xamarin a lot cross platform.  Both are c# I believe,2018-09-03 02:24:57
9,I think qt is a technology on the out.  I would recommend xamarin as it has some really cool cross platform setup.  ,2018-09-03 02:42:19
10, Any method that modifies View before it is created can cause this according to [This post](https://forums.xamarin.com/discussion/99482/could-not-activate-jni-handle). so you may have to work around this.,2018-09-03 08:20:13
11,"I only program in c# and I only use macs, so resoundingly - yes. You would do very well getting yourself Jetbrains Rider which has a free student license. Also, as said elsewhere here, the main implementation on Mac these days is .Net Core, however C# has been supported for a long time on mac via xamarin and mono.

TL;DR - you have nothing to worry about",2018-09-03 20:20:24
12,"Yes I see them, same list that I have in xcode, but when I click the play button if builds without opening the simulator.

Remote simulator on Windows is also turned on in xamarin iOS settings

  
",2018-09-03 22:57:42
13,Thanks! I did see your app but there were a few things i wanted to improve and hopefully i should be adding some new features! I use xamarin and c# myself. What do you do now?,2018-09-04 19:56:17
14,"This exactly, though kotlin native is an exciting alternative. Being able to use one language and codeline for app development is one of the big benefits of xamarin, but the execution is kludgy. As kotlin increases support for building iOS apps, it could really challenge the 3rd party suites like xamarin.",2018-09-05 15:13:58
15,"Having written apps in both xamarin and react native, the latter is a much better product. Community support is A LOT better, expo is a great option for getting up and running, and the overall product just feels so much better. Xamarin is clunky, unstable, and feels like beta/alpha level as a platform (which is sad since it's been around for quite some time now).

My 'xamarin' experience is with xamarin.forms, which is the 'cross-platform ui' approach.",2018-09-05 15:49:06
16,"Xamarin, hands down.

You'll be developing with C#, and you'll get iOS, Android, and Universal Windows Apps for Windows 10 with a single code base. If you still need a vanilla windows experience you can create a forms based app to go along with the Xamarin ones in, you guessed it, C#

The tooling for all of that is available within the Visual Studio Community 2017 IDE for free, including an extremely rich debugging experience utilising virtual devices as well as the ability to tether your physical phone and test on it with debugging functionality.

https://visualstudio.microsoft.com/vs/community/

In addition to that, you'll also receive the tools to create the entire back-end including database and host it onto Azure, as well as a web front end and web API if necessary, all from within the IDE.

https://blog.xamarin.com/kickstart-your-project-with-our-new-bootstrapped-mobile-apps/",2018-09-06 06:47:11
17,"None, develop with xamarin, and use a compile service ;)",2018-09-06 18:50:55
18,Did you make sure you have the xamarin packages installed?,2018-09-07 10:56:28
19,[https://developer.xamarin.com/releases/#xamarin-forms](https://developer.xamarin.com/releases/#xamarin-forms),2018-09-07 20:44:01
20,[https://github.com/xamarin/Xamarin.Forms/releases](https://github.com/xamarin/Xamarin.Forms/releases),2018-09-08 07:03:57
21,Use xamarin,2018-09-09 22:44:39
22,"on xamarin I spent most of my time making the IDE to work instead of programming, and it was frustrating, maybe one day xamarin wont be so tied to visual studio.",2018-09-10 22:52:58
23,"I certainly find React Native to be a lot less frustrating that xamarin, so thumbs up from me.",2018-09-10 22:57:58
24,"Look up .net mvc web apps, xamarin mobile apps, or unity game tutorials. All of them use C#.",2018-09-11 18:49:46
25,"See https://docs.microsoft.com/en-us/xamarin/ios/platform/exception-marshaling#events which is for iOS but applies to macOS.

There are events you can listen for unhanded exceptions:

https://github.com/xamarin/xamarin-macios/blob/master/src/ObjCRuntime/Runtime.cs#L304",2018-09-12 19:19:32
26,"If you are just trying to get the crash you can either have them run it from a terminal or launch the console app and find the crash report. 

Unless you aot https://docs.microsoft.com/en-us/xamarin/mac/internals/aot your app the stack trace may be useless but the report should give you a hint. ",2018-09-13 00:07:11
27,"have you tried the standard .net method for when the app domain encounters an exception?

i came from a .net background and used similar in asp.net web apps as a last resort to log an exception that slipped through other exception handling. i brought a similar concept over to our xamarin ios app and i recall it worked.

UncaughtExceptionHandler.cs

	public class UncaughtExceptionHandler
	{
		protected static readonly ILog log = LogManager.GetLogger(typeof(UncaughtExceptionHandler));

		public void HandleException(object sender, UnhandledExceptionEventArgs e)
		{
			log.Fatal(e.ExceptionObject);
		}
	}

LogManager was a class that wrote output to Debug.WriteLine for debug builds or Xamarin Insights / HockeyApp for Ad-Hoc / Production builds. 

then a private member in AppDelegate.cs

    private static UncaughtExceptionHandler uncaughtExceptionHandler;

then in AppDelegate.FinishedLaunching

    uncaughtExceptionHandler = new UncaughtExceptionHandler();
    AppDomain.CurrentDomain.UnhandledException += uncaughtExceptionHandler.HandleException;    

i've never done any xamarin.mac but this is the best i got. good luck.",2018-09-13 00:18:49
28,"Just like any new platform, the language doesn't define the difficulty, it's the ecosystem, paradigms, and quirky habits that it entales... think ruby on rails, react.js, xamarin etc. ",2018-09-13 02:43:11
29,"It is a bit outdated, but you can start by having a look at Petzold's book.

https://docs.microsoft.com/en-us/xamarin/xamarin-forms/creating-mobile-apps-xamarin-forms/

To get good at it, you also need to really understand Android, iOS and their APIs.

Just like knowing .NET doesn't shield you from OS APIs if you really want to take advantage of everything that users expect from an app.

",2018-09-13 09:54:37
30,Im trying for a few hours now to find some good YouTube playlist for learning xamarin. Thank you very much!!,2018-09-13 11:36:25
31,"I'm currently doing this having worked with mvc.net for 6 years.

Best I've found is http://university.xamarin.com
Use a Microsoft account to log in, any old hotmail address works fine.
Click on Account at the top and then follow the certification tutorials for Xamarin Forms.

Once you've completed these, do some research on mvvm and transition anything you've done to that pattern.

Then start looking at tutorials for more native features, such as cloud messaging/background notifications using Firebase, making use of the Dependency Service to allow your Xamarin Forms app to use native app services.

This will give you a good start on what you can and cannot do with forms apps and how to go about it. As other have said, Xamarin isn't a do all framework, some things need to be native. But for apps that work much like a forms application it's very good.",2018-09-13 15:15:26
32,"These look just like the qT charts I used to use in Python - only problem is that if theyre leveraging forms/xamarin, I dont think its an option since Im targeting .NET Core",2018-09-13 16:25:49
33,"You could with xamarin, wouldn't be a easy feat too accomplish and its far from a native, *compile for android* button though.",2018-09-14 14:22:15
34,"i don't lose anything, i moved onto .net core/xamarin for apis/apps and react/js for web/desktop. python is fun but it's not that fun, cool to see python is getting some app support finally(albeit seeming like it's not really ready for primetime, having to optimise apps for quick loading  sounds very very fun)",2018-09-14 17:07:18
35,"OK, since you have 3 weeks to do both Android and iOS versions and you admit to being a Swift beginner I'd just learn a framework that can produce both versions from the same code and spend your time working on that. It will give you the full time to work on the full program rather than learning two wildly different languages, frameworks, etc.

I've heard good things about [Xamarin](https://visualstudio.microsoft.com/xamarin/), although I have no personal experience using it.",2018-09-15 22:04:54
36,"Yeah, I've tried it. I'm a fan of C#, but don't like using xamarin. It uses the mono runtime, rather than being native code. There is a new-ish option to compile to native code, but there are so many inefficiencies that come with that.",2018-09-17 00:06:07
37,"How much prior programming experience do you have? If you're just starting out, then it really doesn't matter which language you pick, as long as it's a modern in use programming language. What I mean by that is that when you're starting out to learn programming, it's not even about the specific language you're learning to think in a different way. As you advance in your skills you start learning languages that help you solve specific problems.

C++ is generally faster and used in more performant games and applications. You can also build web applications in C++ , but it's not common.

C# can used used for games (unity) and has a broad range of applications from web to desktop to mobile (xamarin apps)

A major difference between the two relates to memory allocation. C# is a managed language it takes care of memory and frees memory when not in use (garbage collection.) C++ on the otherhand does not do that and requires you to be explicit in your memory management.

",2018-09-17 20:29:03
38,"If you have access to a Mac, you'll want to use Swift via X-Code.

If you don't have access to a Mac, you can use Visual Studio with C# and Xamarin on Windows, but I believe you still need a Mac to compile and submit to the app store.

Swift documentation: https://www.apple.com/swift/

Xamarin documentation: https://docs.microsoft.com/en-us/xamarin/",2018-09-18 20:19:09
39,"You can sign up to Xamarin university for videos and taught classes on mobile development. 
They offer 2 qualifications, 1 is free and easy to get its the professional developer qualification which you can get by going through their self taught course work

the second is the xamarin certified developer qualification for which you will need to do attend several online taught classes and pass an exam.
the exam is hard enough and the pass rate is 80% so make sure you know your stuff before trying as i think you only have 2 goes

Other than doing that there are also some courses on pluralsight, check out james montamangnos github for some examples and try making your own apps",2018-09-19 10:32:20
40,"Lots of guys here will recommend Xamarin.Native, which is performant but requires writing your UI twice.  Personally, I would go with Xamarin.Forms, which lets you make your UI once, and needs some third party controls to look pretty. A word against Xamarin.Forms is that sometimes you have to fight the XAML - but the reason I switched to Forms in the first place is because I had to fight the UI in Xamarin.IOS.


Some very important concepts in Xamarin.Forms are

* XAML

* BindingContext

* Commands

* MVVM with INotifyPropertyChanged

This link gives you a good ground in all of those concepts.
https://blog.xamarin.com/simplifying-events-with-commanding/


It's hard to link to any specific tutorial, because there are lots of concepts. But for getting your feet wet with a non-toy tutorial, that link's really good.


After you played with that, I think it'd be a good idea looking into Android/IOS idiosyncracies. For example, iOS and Android handle permissions differently. iOS doesn't give you access to the phone number, Android does. 

If you have any specific questions on getting started, feel free to PM me.",2018-09-19 17:02:21
41,I've been using the tutorials at [https://docs.microsoft.com/en-us/xamarin/](https://docs.microsoft.com/en-us/xamarin/).,2018-09-19 21:41:52
42,"I've been researching building apps and I think the best w to start would be to look at a cross platform framework such as xamarin.    

&amp;#x200B;",2018-09-19 22:20:32
43,"Eventually Ill get there. My computer guy is intimidatingly smart, and he taught himself from the basics up

I started in highschool, where they taught me how to use visual studio and xamarin. Up until now Ive just been diddling but Im getting into JavaScript/CSS/HTML, just seems practical for where I live",2018-09-20 02:02:14
44,"Nah... Just use C#, that thing's MIT licensed

Edit: as tons of comments below says, .Net is by no means Windows exclusive nowadays, because .Net core and xamarin/mono is a thing, and both have cross platform support. And both the .Net core and the C# runtime support (Roslyn) are MIT licensed so that's why I said that. Stop posting ""it's only for Windows "" and save yourself a little bit of karma.",2018-09-20 10:58:58
45,"I read it as slimmer, faster, more portable. Which it is. .net framework isn't necessarily better.

My webserver and microservice runs in Linux on containers just fine. If not better than Windows

The main missing feature right now is a UI framework for desktop applications. But that's planned already. and there are some promising open source solutions.

There is a UI for Android &amp; iOS via xamarin...",2018-09-20 14:19:15
46,"I dev xamarin on a macbook pro running windows 10 on parallels. 

I love it. I do native apps as well as Xamarin.Forms, and it's really great to work with. It has some cons but ultimately it's pretty amazing what Xamarin has been able to pull of with Mono, so most of the cons are outshined by the benefits of the framework. 

I would suggest you dev with a modern Windows machine or Mac machine. It's not really supported to use it on Linux (tho possible). I think a lot of the frustrations you had were because you weren't deving with the right hardware. You need hyper-V due to the very nature of simulating another OS on your machine. ",2018-09-20 14:28:56
47,"TLDR: I have lots of small complaints and small concessions. 

**Things I'm still not used to**

Grids take a lot of work. Just look at this working tutorial for WPF.
https://www.wpf-tutorial.com/panels/grid-rows-and-columns/

I wanted to try a (responsive layout grid)[https://material.io/design/layout/responsive-layout-grid.html#columns-gutters-margins] 

    &lt;Grid&gt;
       &lt;Grid.ColumnDefinitions&gt;....&lt;/Grid.ColumnDefinitions&gt;
 
       &lt;Label Text=""This one is aligned"" Grid.Column=""2""/&gt;
       &lt;StackLayout Grid.Column=""0""&gt;
             &lt;Label Text=""Uhoh, we're in a new layout, this doesn't work!"" Grid.Column=""2""/&gt;
        &lt;/StackLayout&gt;
    &lt;/Grid&gt;         
 

The behavior of HorizontalOptions=End, EndAndExpand is unknown to me. I haven't used it much.

**Things you have to fight XAML, until you find a way to stop fighting it**

If you don't know how to use BindingContexts, it can take a while to get used to. It's fairly hard to test if something is working. Maybe you're setting Label.Text to a ViewModel.PhoneNumber. ViewModel.PhoneNumber changes, but it doesn't change in UI because it requires INotifyPropertyChanged.   That's quite some boilerplate, so people recommend a MVVM like MVVMLight. I haven't experienced MVVMLight - personally I like StephenCleary's CalculatedProperties. 

* ListViews should always have footer=""""
https://xamgirl.com/quick-trick-remove-extra-separator-line-in-listview-xamarin-forms-ios/

* ListViews shouldn't have margins. Haven't checked in a while, but on iOS, the separators would have a some crazy offset.

* Suppose you downloaded the icon ""icons8-phone-50.png""

    &lt;Image Source=""icons8-phone-50""/&gt;

This works perfectly on iOS. But Androids require underscores. You just won't know until you notice that some image is missing.


* Which leads maybe to my biggest complaint of XAML, is that it doesn't really help you out. Intellisense is awkward. Typing `AbsoluteLayout.LayoutFlags=""XProportional,Wi` will give you intellisense for `WidthProportional`. Pressing enter will result in `AbsoluteLayout.LayoutFlags=""WidthProportional""` ; not what I wanted.  Proportional is hard to type and I have to type it twice. I don't like complaining about names, but of the two, one is easier to type and read

* `AbsoluteLayout.ProportionalFlags = ""Width,X""`      //FICTIONAL

* `AbsoluteLayout.LayoutFlags = ""WidthProportional,XProportional""`

Intellisense doesn't work with Fontnames. It doesn't work for Bindings, which leads to lots of looking back and forth.  Commenting XAML has its quirks.

I wish I could easily switch between xaml and cs without hunting for it in the solution explorer/tab view. And the reason I have to hunt for it is because I about twice the files opened than I need.",2018-09-20 15:54:43
48,".Net core and xamarin/mono is cross platform. So they basically have to profit from people buying their ide and cloud service (MSTS, Azure, Xamarin, and so on).",2018-09-20 17:20:45
49,"&gt; Why you want to learn C# instead of Javascript if you're just starting out ? the JS open source ecosystem is much bigger and there is way more jobs etc JS is more cutting edge and all the innovations happen mostly with JS first etc you can code Js in the backend now with Node, React can build mobile apps too etc xamarin isn't popular

op comment in case of deletion by silliness/embarrasment",2018-09-20 17:26:24
50,"I do a lot of dev with xamarin, and while I do have a hiccup every now and then, it generally works just fine. ",2018-09-20 17:55:59
51,"So you started clicking on random buttons expecting it to work. The visual editor is there as an aid on seeing how your UIs will look, however you still NEED to know how Android layout works (and not just layout, but activities, lifecycle, etc) before trying to tackle a mobile app.

I see this loads of times from web/desktop devs, coming all happy to mobile and then bitching when nothing goes their way. Mobile development is a beast of its own, and you need a solid base to get anything non-trivial going on - even with modern devices packing octa-core CPUs, you still need to understand how things work under the hood. And sometimes they aren't intuitive at all, and this isn't the fault of Xamarin - it's only a thin wrapper over the native platforms.

And no, you didn't pay a penny for Xamarin, since it's free. Did you pay for [Xamarin University](https://university.xamarin.com/welcome) instead?",2018-09-20 18:30:16
52,"No. I didn't randomly click anything. I clicked the listview control and dragged it to the designer. Yes, i did expect it to work. If having a listview in an android app is ""non-trivial"" then I fully expect the android OS to have died by now. It's not ""non trivial"" at all. Thousands of apps use it.
We paid for visual studio and are using the xamarin plugin. 
I've used wpf, winforms and even vb5 back when I had to force it to compile on the orange SVP...and in comparison, that was a doddle. The machine I'm using is an i7 with 32 gig of ram. If that's not enough, then I don't know what is.
If it's this tricky to get a simple app up and running, whilst having to fight bugs every step of the way, then it's really not in a state to be released.",2018-09-20 18:44:36
53,"Ok. I'll try xamarin forms again. I hear rather hoping to be able to use my C# experience, but hey ho.",2018-09-20 19:00:43
54,"Another option is to use local Razor with a WebView.  

https://docs.microsoft.com/en-us/xamarin/cross-platform/platform/razor-html-templates/

Has anyone had any issues with this?  From my current experience it is pretty awesome, especially when coming from more of a web background.  The two-way binding of being able to call C# from javascript is awesome.",2018-09-20 19:03:18
55,"So not an exact answer to your question, but you might (maybe) be able to draw some inspiration or help from this got repo around scanning barcodes in xamarin https://github.com/Redth/ZXing.Net.Mobile
Good luck.",2018-09-21 05:21:30
56,"Well, maybe I'm unlucky.
It's simply awful. The designer goes black randomly, that's if I don't get the ""Exception has occurred in the previewer"" message.
About a third of the time, it simply runs around building for hours (and never deploying - either to an emulator or phone), or until I kill VS. The axml it creates is apparently incorrect.
The whole thing feels like an alpha release of something. Even with xamarin forms, those same issues exist, and it makes it a tiresome, painful experience instead of actually getting on and coding.
For example. I've switched to xamarin forms this morning. I'm trying to update a listview with data from a webservice. Got the connection and data base from the webservice in minutes of coding. Then I want to display it in a listview.
It's now nearly 2 hours later, and I'm no closer.",2018-09-21 09:03:04
57,"&gt; React can build mobile apps too etc xamarin isn't popular

Last I checked React Native isn't too popular either",2018-09-21 12:40:23
58,"Well those are alot of questions. First of all it depends on what you want. If u want native apps then u need android studio to develop for android (java/kotlin) and xcode to develop for ios (swift) or if u want cross platform apps there is many frameworks out there look for ionic or xamarin (there is more frameworks actually). And it is good to have diagrams before starting. And for the back end front end question , i recommend starting development on back end first because it will be the core process (if u have no idea on how to make back end look for tutorials on how to make Restful APIs ) when your backend is ready u can jump to make the app itself (look for volley for android and alamofire for ios and you will understand how to get the  front and back end combined together ). I'm not an expert myself but i'm trying to help you with what i know :)",2018-09-22 02:51:21
59,Didn't touch it. Simply installed the xamarin plugin. It's fine 3/4 of the time. It also does the same when deploying to the device over usb.,2018-09-22 05:12:21
60, learning how to work around those issues is part of learning the language imo. i know xcode is a cantankerous thing lagging behind many more polished ways of making apple apps(from reading reviews of it on reddit and hackernews) but i want to learn stuff the apple way before i move onto xamarin or react,2018-09-22 06:09:26
61,"There is a way to call C++ code from Java in Android, this may help you: https://developer.android.com/ndk/

I've never used it, I heard that it has its own problems so it may be as problematic as xamarin. If you try it, feel free to update this thread with your experience, I'm sure people will appreciate it.",2018-09-22 09:24:03
62,"I never used Xamarin so maybe this is a stupid answer but looking at the [docs](https://docs.microsoft.com/en-us/dotnet/api/xamarin.forms.navigationpage.pushasync?view=xamarin-forms) for the NavigationPage class, can't you just do something like:


```new NavigationPage(/*your arguments*/).PushAsync()```

?

Or maybe get your MainNavigation page (like the one you are creating in the Welcome_Clicked callback) and call pushAsync() on that.",2018-09-22 21:36:40
63,"I do not own a Mac actually, but I will do a video on xamarin at some point.

I have a unity course in the words that will be linked in future videos. :)

Subscribe to keep updated with it!",2018-09-23 00:55:00
64,"I had taken a class in Android development at my university and we use xamarin a lot on my team at work, so I use it almost daily, but still learning!

Idk if MySQL has anything for NuGet, there are web services you'll need to connect to (your own or someones public web service) where there are SQL queries you'll call from the app.

As the other user mentioned, there are some resources online that can help you, there are tons of free stuff out there. Dont get intimidated by the Microsoft MSDN documentations on Xamarin, they kind of suck. 

Start small and keep building yourself up. It's good you have a long term goal. Itll hopefully help you not feel too overwhelmed at first knowing it'll take time to work yourself up. Just ask questions here, other subs, or even stackoverflow",2018-09-23 07:40:00
65,"I wouldn't say that, but I agree one should learn the platform itself, and not expect knowledge of c# and .net to replace that. I've seen c# devs become efficient at xamarin much faster than they would have learning a new language at the same time as learning a new sdk. a lot of a xamarin apps code isn't even different than it would be on windows or the web, business logic is often fully shared, it's mostly the ui stuff that takes a lot of effort. ",2018-09-23 09:10:44
66,"You can use classic C# libraries like [here](https://stackoverflow.com/questions/14877237/getting-all-file-names-from-a-folder-using-c-sharp) , or [here](https://stackoverflow.com/questions/44724428/get-files-from-a-folder-that-i-have-created-in-xamarin-android)",2018-09-24 12:27:56
67,"If you're desparate to hire someone and can't find any asp mvc devs, showing that you were able to pick up xamarin quickly from scratch and be productive (need evidence other than just saying it), then yes, it's better than nothing. if you really want to show you're competent with asp mvc, then learn it and do something with it.",2018-09-24 13:56:41
68,I agree with all your points. On the xamarin front what I understand is its great for internal enterprise apps but not great for much else.,2018-09-24 16:55:09
69,"&gt; per il fatto che usa codice nativo e non in VM

Piccolo appunto, dalla versione 5.0 di Android si  passati definitivamente da Dalvik a ART(Android RunTime), con questo cambio si  passati da una compilazione JIT( just-in-time) di bytecode (all'inizio java bytecode, poi davlik) ad una compilazione ahead-of-time dove l'applicazione viene compilata in codice nativo una volta sola durante l'installazione, inoltre sono considerati linguaggi first-class di android oltra a java: C++ per librerie di classi, e kotlin, oltre a questi linguaggi son disponibili vari sdk di alto livello per altri linguaggi come xamarin/c#.",2018-09-24 17:21:57
70,"Bro, you're over thinking about it. Depending on your app demandings there are multiple ways to for you to get one. If you're willing to code, go for Ionic based web apps, that's my go to right now, which basically is a web page incorporated on a chromium app, Google for ionic apps, that will also give some advantage since you can copy and paste your code and build a website simultaneously.
On the more complex side you can go with xamarin, which builds ios and Android apps with only C#. Google for those, message me if you need something. Peace. ",2018-09-24 17:24:44
71,"&gt;You can remote with expo

Remote just the simulator, like this? [https://docs.microsoft.com/en-us/xamarin/tools/ios-simulator/](https://docs.microsoft.com/en-us/xamarin/tools/ios-simulator/)

Or is it a remote desktop for macOS?

I use a macOS virtual machine as my build host, and also as my dev environment for macOS, and it works great; aside from having no 3D acceleration. Haven't experienced any other issues. The up-side is that I can snapshot though, so that's pretty cool.",2018-09-24 18:16:58
72,"THAANK YOU !!!!  
i know few things and BUT I WILL learn everything you wrote here, as you have mentioned ""  deleted completely incorrect code "" i have done it so many times due to frustration.

still on the new day i am able to understand the footprints and have multiple feel dumb moment.

&amp;#x200B;

one other note many of my engineering pals said you should go with react native or flutter, 

i am so really confused.  
and i am confused about many programming languages  (java/kotlin) (react/flutter/xamarin/ionic/angular)

&amp;#x200B;

please if you have time would you like to explain me like a dumb kid and in simplest manner.

i am sorry if i am asking too much from you.  


thank you once again",2018-09-25 14:05:59
73,"Their own system, tfs online (now called azure dev ops) was always free. I see them opening github up. Look at xamarin. Xamarin was letting you build dotnet apps for android and iphone but it was expensive. Microsoft bought them and made it free for everyone. They want developers using tbeir services so they will pay for the ones that need it. ",2018-09-27 02:35:00
74,With [Xamarin](https://docs.microsoft.com/en-us/xamarin/cross-platform/platform/visual-basic/) you can create apps with VB.net.,2018-09-27 14:26:07
75,"Eventually i won't need a desktop environment, but i do need to be able to develop a custom UI. Having a desktop is the best way i know of to have an image on my screen with a cursor. i know very little about linux itself, and so far getting a ui up on the screen has been easiest with mono (because i can build my UI in xamarin with c#) but it had to be on a compatible rootfs, and i really don't want to use Qt. i just don't know how to get my UI on the screen when there's no graphics to begin with.  I've looked into X11 and Wayland and Framebuffer and none of it makes sense to me, so i figured I'd just go with linaro debian to make this device feel like a PC for the time being.  I'm just trying to figure out how to get to the base minimum but easily develop my own UI.",2018-09-28 03:39:43
76,[Yep!](https://docs.microsoft.com/en-us/dotnet/framework/get-started/net-core-and-open-source) It's amazing. Microsoft also bought the open source app development framework [Xamarin](https://visualstudio.microsoft.com/xamarin/) and fostered more development of it and integrated it in to Visual Studio. They've been doing amazing things on the dev side.,2018-09-28 13:10:06
77,"For something like this, I'd recommend looking into [Xamarin](https://visualstudio.microsoft.com/xamarin/). It's still C#, but your code will be translated into native apps for both Android and iOS.",2018-09-29 14:42:37
78,"Could try the Embeddinator-4000?

https://github.com/mono/Embeddinator-4000

https://docs.microsoft.com/en-us/xamarin/tools/dotnet-embedding/index",2018-09-30 13:58:23
79,"For someone who knows Javascript, the easiest way would probably be to write them as web apps and then wrapping them in browser containers (with tools like phone gap).

Additionally, there are frameworks like xamarin (C#), Kivy (Python), robovm (Java), which allow for cross-platform development",2018-09-30 17:41:58
80,"You'll want to use [Xamarin.Mac](https://docs.microsoft.com/en-us/xamarin/mac/), I think.",2018-09-30 20:29:08
81,"With Google's track record of dropping projects as soon as they get bored of them makes me want to never invest in flutter. It's just too risky, no matter how cool it may be.
Microsoft on the other hand has an industry leading track record regarding this, so xamarin seems like a much safer choice",2018-10-03 19:14:52
82,"seems like a pretty good summary of xamarin and cordova. no experience with react native.

i'd add jet brains rider into the mix of xamarin IDEs. it works across both windows and mac and unlike visual studio, isn't a completely different product depending in the platform.

i'd also add to the list of cons for cross platform in general is the added layer of bugs. not only do you have to deal with bugs that exist in the native SDKs but you'll also have to deal with the bugs in whatever framework you're relying upon.",2018-10-05 18:45:32
83,Are you really limited though? Worst case is that you grab a reference to the native view and use the native animation apis. Dropping xamarin completely seems extreme,2018-10-11 04:12:34
84,"Sviluppo app per lavoro, ti lascio i miei 5cent

1) dipende da tante cose. Le ""ibride"" basate su tecnologie web hanno prestazioni pessime e fanno cagare, per le ibride che compilano in nativo (React native, xamarin, flutter) sono buone e utili se la tua app  ad alto livello, mentre se devi utilizzare molto le risorse a basso livello (bluetooth, grafica avanzata tipo videogiochi ecc) sei obbligato ad usare il nativo. Poi dipende dalla tua formazione, se conosci react ti conviene usare react native, se sai gi bene sviluppare in nativo ci potresti mettere di meno a fare due app native separate che non una unica con tecnologia non nota. Un'infarinatura dei due nativi  comunque necessaria anche in caso di tecnologie cross-platform, per effettuare i corretti binding, le librerie e il bug solving in generale

2) percezione dell'utente (che non ha sbatti di usare il sito ma preferisce usare l'app), performance, push notification e in generale pi controllo a basso livello (bluetooth, fotocamera, sensori vari ecc ecc). Se poi ne valga la pena dipende tutto dall'applicazione specifica

3) Direi React native ",2018-10-13 09:33:32
85,"No storage access isn't required. The reason the app needs storage location is to temporarily store a collection of objects/user entered data as JSON, so that it can be restored later for user to finish entering. If the user doesn't give access then no big deal we don't store locally.

I have code that gives context of why we're requesting access, I just didn't include it. In iOS I'm storing the files in the application root like described [here](https://docs.microsoft.com/en-us/xamarin/ios/app-fundamentals/file-system#application-directories) so I don't need to request for storage access. I've posted my app to Apple Test flight and it was approved doing it this way. My only issue now is with Android.",2018-10-16 18:23:33
86,"Definitely compare it to native. A lot of people still write native apps. I started to write crossplatform apps with flutter first. 

Things you should/could compare are:

\- How easy is it to get something in the play/app store.

\- How many easy to use plugins are there? (flutter plugins are growing very fast)

\- Number of integrated Tutorials/Examples for everyday tasks

\- Testing methods (especially UI) 

\- Answer speed to bugs by watching issues in the github.

\- Ui design, generation (I think there is a big difference how you build your UI between flutter and android if you use for example constraint layout with the design helper)

Development speed (hot reload) as you wrote is a little bit hard to compare I think. 

&amp;#x200B;

I wrote apps natively in android first and write a semi big app in flutter now so I experienced these two frameworks and webapps in polymer. I have no experience in native IOs or xamarin. 

If you have any questions feel free to pm me as I am currently writing my masters thesis about UI Testing. ",2018-10-17 10:07:01
87,"Tbh this kind of post was happening like 3-4 years ago with Cordova/phonegap/Xamarin, of which only xamarin has barely survived.",2018-10-19 06:30:06
88,"&gt;  the only problem is that the data persists unless I diligently reset the values of those method used,

That's why you don't put *transient data* (that should only be persisted across process death, but not quitting the app) inside shared pref

(although this *is* the only way how you'd be able to do it in a xamarin.forms/flutter app)",2018-10-29 04:23:14
89,"I thought it was mostly for C++ ???  How good is it for C++ ? can it compete with C# ui ? or portability across devices ? (like xamarin or react-native)

Ive heard only good things about QT and its only growing, nothing beat C++ power/speed when well done",2018-11-04 00:16:28
90,"Hell, write it in android or what ever the iOS freeks use these day.  Or xamarin? 

Andriod it you can imho ;)

Im sure someone smarter than me will tell you if you can lock down the tablet.",2018-11-05 09:55:58
91,Eu percebi isso no 2 perodo agora to caindo de cabea no C# e xamarin.,2018-11-14 14:25:05
92,"I highly recommend taking the Xamarin University ""Getting Started""-courses, before deciding which framework you want to roll with. The Xamarin native vs Xamarin.Forms solutions each have their pros and cons. 

The ""Getting Started""-courses and self-learning courses are free and made by Microsoft themselves with Xamarin Professionals, and tells you a lot about everything Xamarin. 

&amp;#x200B;

[https://university.xamarin.com/classes/track/self-guided](https://university.xamarin.com/classes/track/self-guided)",2018-11-21 13:44:57
93,"I'm new to upwork (started in June 2018) but so far, I think it's possible to make up to $25K. I've already made about $15K now, and my rates vary from 40-70/hr. I also do a lot of fixed rate/milestones which underpays a lot but gives me more flexibility. I have a full time job as well so using Upwork for side projects seems better than driving for Lyft or Uber so far :)

&amp;#x200B;

Edit: I do mobile development  (swift, java, xamarin, ionic) and I also help with [asp.net](https://asp.net) or c# projects.",2018-11-24 11:36:55
94,"According to the docs https://developer.xamarin.com/api/member/OpenTK.Matrix4.LookAt/p/OpenTK.Vector3/OpenTK.Vector3/OpenTK.Vector3/ isn't the first parameter the position of your 'eye'/camera in the world?

Or am I misunderstanding your question? ",2018-12-01 17:28:58
95,/u/drusual I can't snap you because my child is doing his french homework on my phone but instead of going to bed early like I was going to do - tell me why I'm researching xamarin? lol turns out I already have what I need for it so I'll just be making some quick test apps the rest of the night. thanks for the no sleep. lol ,2018-12-02 02:37:02
96,What do you think about xamarin or react native? They are cross platform and compile native apps with no web view.,2018-12-02 15:17:20
97,Haha so true. The talk is not going specifically into a topic (recorded at xamarin evolve) but its a great overview of how much you can do with c# and how powerful the langue is/was in 2014.,2018-12-03 07:28:48
98,"being doing xamarin development for about 6 years now. the mac IDE has come a long way but i still end up having to restart it at least a couple times per day due to various issues i know a reboot will solve or it crashing on its own.

visual studio for windows has a much longer pedigree and as such is inherently more stable. i can leave it open for days with constant usage without issue. only hokey part there is the connection to a mac build host can be finicky AF.",2018-12-03 11:39:32
99,"I could leave VS open as well.. and I do only for it to be restarted when said in use crashes occur.

I did update the post to point out it's specifically xamarin.naitive.ios.watchos issues on the PC IDE I'm having.",2018-12-03 17:50:06
100,Yes.  Updated the part to more specifically call out xamarin.naitive.ios.watchos. on VS 2017 PC. And the machine being otherwise notably stable.,2018-12-03 17:53:16
101,"You're right, i probably should have/would have, started with xamarin forms.  But one thing I failed to mention was the wearable app part. I want sure of the performance on the devices and also I didn't know it at the time but wearable don't support forms so I needed to know naitive anyway.  But yes even my single landing page mobile projects might have benefited from forms. The neuances of of creating the platform specific UIs are burdening.",2018-12-03 18:06:55
102,"If you are going to program swift you are going to need a mac. Or at least i havent found a solid solution with pc. Technically you can do IOS with xamarin c#, or flutter with dart.",2018-12-04 02:28:30
103,xamarin would be orders of magnitude easier than Qt. Really no comparison,2018-12-04 03:36:18
104,"yes, xamarin has xaml which allows you to layout content easily, qt has c++ for every single aspect, not fun",2018-12-04 13:31:36
105,"Microsoft has already bought Xamarin, open-sourced it, and made it free. And in the Xamarin Forms project they are working on making UI code defined in Xamarin Forms-compatible XAML cross platform on all the major desktop platforms: [https://blog.xamarin.com/glimpse-future-xamarin-forms-3-0/](https://blog.xamarin.com/glimpse-future-xamarin-forms-3-0/)

&gt;Xamarin.Forms is heading to more platforms! Get ready to run on macOS, Linux, and even more Windows applications using WPF. Weve started with [macOSin preview today](https://blog.xamarin.com/preview-bringing-macos-to-xamarin-forms/), but we arent stopping therewere enabling you to target every desktop platform! Our team iswell under way developing for GTK# and WPF.

Support for WPF got out of beta earlier this year, and I don't think that Mac/Linux support are far behind. I think Xamarin Forms (and maybe the XAML Standard project, which is somewhat similar in its end-goal: [https://github.com/Microsoft/xaml-standard](https://github.com/Microsoft/xaml-standard)) are Microsoft's plan for cross-platform desktop development.

Since they have a lot of eggs in that basket, I'd be surprised if they invested heavily in making WPF work cross-platform, especially since Mac and Linux differ in their implementation of some of the core WPF idioms like Window Handles etc. - it wouldn't end up being a good product, I don't think.",2018-12-04 19:15:37
106,"Not too familiar with the landscape, but I think [Xamarin.Forms](https://docs.microsoft.com/en-us/xamarin/xamarin-forms/platform/) might be a contender as well. One difference I see is that it uses Gtk# while Avalonia P/Invokes directly to GTK+ libs.",2018-12-05 01:33:02
107,"Removed: Rule 4.

You can repost it, but do include your csproj and/or whatever related files. Ideally, post your project to GitHub so it can be viewed, downloaded, and tested.

If you haven't already, start small with the simplest ""Hello World"" tutorial (for example: https://docs.microsoft.com/en-us/xamarin/android/get-started/hello-android/hello-android-quickstart?pivots=windows). Get something like that going then it will help give you a baseline going forward.",2018-12-05 03:48:29
108,"Not so sure about what?

That making Win32/GDI/User32/DirectX/etc. ""work"" on Linux and MacOS would be incredibly expensive, take a long time, and result in a poorly optimized 15 year old cross-plat UI framework by the time it would would be in beta? Mind you that ""making it work"" is not the same thing as designing with cross-plat in mind or being ready for business use, nor does it cover the much needed complete re-write of the layout engine and move to D2D.

Or that investing in WinUI (better optimized/faster), Xamarin (existing), Blazor (promising/exiting), a web framework (much more widely adopted), or something brand new dedicated to cross-plat would be a better alternative? Also, [Xamarin Forms now runs on Linux](https://docs.microsoft.com/en-us/xamarin/xamarin-forms/platform/gtk?tabs=windows).

I get that you like WPF and are personally invested in it. That doesn't mean it is a good idea to shoehorn the framework and all of the required Windows components to work on MacOS and Linux, let alone mobile devices or the web.",2018-12-05 08:36:32
109,Thanks i totally confuesed RN with cordova or electron. That means that RN is more like xamarin but still different from flutter since flutter actually draws it's own components. RN and Xsmarin seems to utilise the underlying UI toolkit. While I personally think the Flutter way is the way to go I changed my mind on RN because it's a hell of a lot better than what i thought. Thanks for enlightening me.,2018-12-05 09:15:44
110,"My web server is down. I recently installed java8. I don't know if was down before that.

I have downloaded the app from [Lidarr.develop.0.5.0.576.osx-app.zip](https://github.com/lidarr/Lidarr/releases/download/v0.5.0.576/Lidarr.develop.0.5.0.576.osx-app.zip)

[14.4 MB](https://github.com/lidarr/Lidarr/releases/download/v0.5.0.576/Lidarr.develop.0.5.0.576.osx-app.zip)

copied it to /Applications and passed Gate Keeper

I have reinstalled MonoFramework-MDK-5.10.0.160.macos10.xamarin.universal and rebooted.

Didn't work


I have reinstalled MonoFramework-MDK-5.12.macos10.xamarin.universal and rebooted.

Didnt work. ",2018-12-05 09:38:17
111,"I would say so. I used xamarin android, and I like react native (specially with expo) a lot more.",2018-12-05 17:29:14
112,I'm pretty sure xamarin isn't a web view and compiles to native code,2018-12-05 17:36:44
113,"I wouldn't know, I use VS as my primary IDE for .NET Code (it's not open source, but there is a free version for small companies), but a brief Google search suggests that it does work: [https://mikebluestein.com/2015/04/29/visual-studio-code-with-xamarin-on-a-mac/](https://mikebluestein.com/2015/04/29/visual-studio-code-with-xamarin-on-a-mac/)  


And RE: your other comment about whether it will still be supported in 10 years, I imagine so - Microsoft paid $400M for the company, and has continued investing pretty heavily in the platform since then. Even Microsoft doesn't spend that sort of cash on a whim. As I mentioned above, the only competitor I see for this in the Microsoft wheelhouse is XAML Standard, which will be slow to take off, if it ever does.",2018-12-06 14:45:52
114,"It has less to do with me being dumb. But since many people are ignorant fanboys, let me share my story.

0. Its from microsoft

1. Its a garbage collected language. All garbage collected languages have its right in this world but not in my projects.
2. It is inherently slow.
3. The Linux support is super bad. Just imagine having to use MONO just because Windows decided that they dont like Linux. Then they buy xamarin/mono... okay rant off.

Overall its better than Java and PHP. Thats about it. I used it for my project of a website. Back then PHP was not good enough to support my requirements but then .NET came out and I could write a nice server application with a nice Web integration namely .NET and webforms etc. Lets ignore the fact that its a little wanky sometimes. The thing is, it just generates a lot of code that is inherently slow due to the similarity to Java. The fact that it is garbage collected did not make my life easier. My application regularily went out of memory because of the poor garbage collection. Its just much easier to manage the memory yourself. At least you know that you were the issue when your application is running out of memory for whatever reason. So comming to that it misses a lot of things that hardcore C# people now adays call ""unsafe"" code. Btw. Did I mention that you can not use unsafe code in .NET? Its pain really. It just makes a lot of stuff very painful. Adding to that there is a horrible IDE integration for microsofty languages besides Visual studio. But ya, Im using Linux so using that crap is not an option.

Anyways, at some point I manged to overcome most of these obstacles just to discover that my application scales poorly, because I can not do all these things. It definitely has one nice thing (named linq) but thats about it. 

If I wanted to write Java code, I could have written the stuff in java and not had to discover that C# is some poor Java/C++ clone that desperately cries attention. 

The main point of the story is as /u/[cubap3t3](https://www.reddit.com/user/cubap3t3) mentioned. Its microsoft and microsoft does not make things easy. They make things hard so you get into their proprietary crap cycle. 

Anyways over the years I've been working, I have evaluated C# as a language that constantly works against me and I dont like that at all. 

Oh and did I mention that the documentation of C# is absolutely garbage?

But ya, I used all kinds of languages and even python had been a lot better than C# so far and that says everything...

Oh damn, I forgot. Im on programminghumor where everyone is some serious python programmer. Kek

Out of these 3 none would be my choice of a favorite language, but over the years I learned to love the simplicity of C and C++ and learned to hate the unnecessary complexity of C#

But the further you dig into computer science, the more you will learn to hate microsoft and its products ;)

I let you discover that for yourself :&gt;",2018-12-07 15:30:18
115,"You seem pretty biased against Microsoft when you say that they bought xamarin to keep monodevelop from being usable. Because that's just FUD. 

Nothing compares to VS. ",2018-12-09 16:56:37
116,"They won't have compilers and jitters on iOS, but there is absolutely no problem with shipping compiled c# code on iOS and macOS. Visual Studio and xamarin support building executables for them, and you can easily build apps in c# for both with xamarin. Blaming Apple as the only problem is objectively false.",2018-12-10 09:58:18
117,http://konpa.github.io/devicon/ has csharp but not xamarin. I guess just pull the svg from somewhere.,2018-12-10 22:00:11
118,[Xamarin.Forms](https://docs.microsoft.com/en-us/xamarin/xamarin-forms/platform/) can target Linux and Mac. Still in a preview state though.,2018-12-10 22:37:54
119,"There are a few options for this. If you're trying to create native apps (not Webviews) the 3 players in the market are [React Native](https://facebook.github.io/react-native/), [Flutter](https://flutter.io/) and [Xamarin](https://visualstudio.microsoft.com/xamarin/). 

They all have strengths and weaknesses, but the idea is that they allow you to share code between platforms. 

I'm a Xamarin developer and I really like it, but it's not for everyone.  ",2018-12-11 00:48:17
120,"Android studio is ugly? You can write code in plain notepad if you like, nothing is stopping you.

Gradle is pain in the ass? Then build your app and manage all your dependencies without it, let's see how far it will take you.

Android doesn't have any folder structure? Try this simple trick: right click -&gt; new package. 

Oh and please use xamarin, I am sure you will enjoy.",2018-12-11 01:10:36
121,"There are options. 

If youre writing in java, then youll need to write a separate iOS version. 

Option 1: Go hybrid. 

Use something like ionic or phone gap to write once and run anywhere. You essentially write a web app that is rendered using a web view. Performance suffers and the app doesnt feel like its built using native components. 

Option 2: go semi-native

Tools like flutter (written in dart), react native (JavaScript) and xamarin (c#) allow you to write logic once and plug into native components (or write your own. Both flutter and react native transpire to vanilla JavaScript, interacting with native components. Youll need to provide any components that arent included out of the box using native languages.  Xamarin is similar, but doesnt compile down to JavaScript. 

Option 3: maintain separate native apps. ",2018-12-11 02:28:08
122,"React Native has the largest community backing, probably the largest number of apps in the wild (despite being many years younger than xamarin). Flutter is up and coming but has some warning bells - proprietary language, google backed, small community.

The rest are either niche like unity for games or never really took off.",2018-12-11 09:38:50
123,It's just xamarin rebranded ,2018-12-11 18:38:56
124,"I'll leave it upto the reader to determine that. 

Dart is a language developed by Google, it's IP is owned by Google and is a a trademark of Google. That makes it proprietary.

Lastly Flutter is not going to give anyone a short development cycle if their one Dart developer walks out and they can't find a new one. Apart from it being crap it's also the reason why I wouldn't recommend xamarin.

Like I said you're clearly a developer not a business person. Just because you like something doesn't mean it's a good idea. Maybe one day and please keep on hacking for your side projects but it's not ready.",2018-12-11 20:10:08
125,"Web will never FULLY take over mobile. It might gain more and more speed, but native mobile will not die for a very long time, just like desktop development still isn't dead. I personally will never fully switch to react native. I hate js, ive been doing native for a few years and have been embracing flutter and xamarin, but every time i create a new project in RN, i get dissapointed. Just my thoughts.",2018-12-11 21:24:15
126,"I'd very much argue that it's not. Flutter is kind of cool, but is also very unproven, immature and has a very small community

Seeing how the rest is written in .net, xamarin would be a much more obvious choice",2018-12-12 01:01:03
127,"Speaking of xamarin, how good is rider for xamarin development? I have an iOS project coming soon and if rider is a better environment for developing that side of our mobile app then I'm planning on upgrading my resharper license to the all products pack. ",2018-12-12 12:27:18
128,"i'm the one in charge of this transition and the boss has given me the go ahead to do what i will(i can even split up the app into 2 native apps on each platform if i feel like it)    
i have seen xamarin essentials but wanted to know if any expert could light the way. the xamarin github does not inspire confidence, most of the droid samples are out of date with the latest android versions",2018-12-12 14:33:45
129,"Hi.

I used Visual Studio 2017. No Live Update Function because the Type Provider for parsing the HTML throws an exception (the fscd.exe from fabulous.)
I mostly build the easy structures in my head and then mostly by looking it in the emulator. For other thinks I used a simple C# project and wrote it in xaml and use the preview of xamarin.
The Portation is easy from xaml to fabulous.

This is my 3 mobile application. And all these are made with F# Fabulous (or how ever the naming before that was.)
Please look into my Github repo. All there. FSharpris a Tetris clone and a Crypto Currency Portfolio Calculator with Online Price Refresh. (MyCryptoPortfolio)

The Last App have I written the first time in plain C# UWP for Windows 10 and Windows 10 Mobile (it's in the store there). So it was the first try for me to port this app to xamarin f#.

So I don't have any expirience in mobile development rather than with Fabulous. I build WPF and UWP Desktop Application and for the Last 12 years. Backend Stuff.

I learn wit every app. So my first try was do it all in one view. Than I saw the way to separate the view, model, update stuff into sub models, sub views and sub update function.
Now I have extended this with elements like the audiobookItem with their own model, view update function. And a list of these items will be used in sub views. So that we have here basically a bunch of sub sub views inside sub views.

It feels nice.

I also have to extend some Cmd functions. Like the Cmd.ofAsyncMsgWithInternalDispatch or something like that.

I have Async Commands which throws while there working progress updates. So instead to make message loops, I make the dispatcher an argument of the async Cmd to dispatch messages while the file will be downloaded and unzipped. (normally you dispatch the message after your async function is ready with return Msg). So here I have the dispatch function inside a async command like it is in the view function. (I don't know if break this any convention - but it works for me) ",2018-12-12 16:52:14
130,"With appium you can run it on a Mac as a server and connect it to a selenium hub. Then if youre sticking with c#, you can run the code for your existing windows machine. .net core runs on a Mac, but you may find you need to swap out a small number of libraries. Ive never used t, but you might want to check out xamarin.",2018-12-13 20:39:28
131,"i don't disagree with a lot of what you said. i've been using xamarin forms since 2013 as well which was version 1.0. what a horrible, horrible experience that was. it has come a long way but still has far to go.

&gt; I can't name a Google product released after 2008 that's lasted more than 2 years.

i am sure i am missing a bunch but angular is now on version 7 and is immensely popular. it's not a mobile product per se but angular works very well in hybrid app scenarios.",2018-12-14 02:10:22
132,Do you think that xamarin forms fully-grown up to use it in complex enterprise application?,2018-12-14 07:53:25
133,"ye xamarin seems pretty cool, but 90% of places seem to only recruit native devs, esp for iOS",2018-12-14 23:13:03
134,"I built an app that I'm selling (not many) so I'd say it's pretty good. It's not too fancy, but developing for both platforms at the same time was a pretty major time saver. 

Before I settled on flutter (it was barely even in beta) I tried xamarin and react native. I found react a little daunting as I don't do any web dev. 

Xamarin worked, but I found it tough to develop for. I'm a c# dev, so the code wasn't the problem, but the tooling seemed unreliable. I was constantly getting errors that I couldn't figure out. I think I ended up restarting the project a number of times just to be able to build. It also took about 2 mins each time I built to android, so everything was just super slow. 

For me, that's where flutter wins out. The tooling is simple, but pretty reliable and building the UI is fast, what with hot reloading (usually less than a second for small tweaks). I also found building for iOS pretty nice. I didn't really have to do much apart from set the version and go. 

Basically, give it a shot. I think it's maybe the best hybrid for simpler apps. ",2018-12-15 00:03:54
135,"This is not something that people can just answer. There is no ""Android developer"" career that shares responsibilities and income across all industries. However, there are a few things you can think about.

1. Technologies don't matter that much. Software is software. You can learn almost anything. Even if mobile development dries up, your skills will transfer. This is especially true for java-like languages and event driven programming (Android). 

2. A lot of development for mobile is actually done using cross platform frameworks with JavaScript (xamarin, cordova, etc). If you really want to position yourself as a mobile dev then knowing JS is useful.

2. Kotlin is growing for Android. It is hard to say if it it will take over but it might be worth getting in on the ground floor.",2018-12-15 18:53:15
136,"I had an idea to make youtube mp3 music download app... but the problem was, that the package I downloaded doesn't work on xamarin + It's not good, cause it downloads mp4, than convers to mp3... at least that is what my code did, so it would  use a lot of DATA, tho I could just download 144p",2018-12-15 20:05:00
137,I bet there is a xamarin community that could help you with that.,2018-12-15 20:06:37
138,"Had simillar issue with async methods in xamarin but with HttpClient, fixed easily by running it on another thread, definitely not the most elegant solution but works good so far!",2018-12-16 11:09:01
139,"I have done some xamarin (.android/forms/mvvmcross) projects and must say that I am pleased to see a tool-chain does support the developer instead of slowing him down. 

* App state is not saved, that means when your app is killed while in background, all state is lost (this even crashes certain plugins like the image\_picker)!!!
   * Besides the crashes you mention, this is the same as in native android, right? No variables or navigation stack whatsoever is saved when the app is killed. Saving variables could be done by serializing classes or a tree of classes. I am not sure how to save the navigation stack or recreate it. Any ideas on that?
* All communication with the platform is asynchronous
   * Why is this bad?
* only basic support for sqlite (third party, not ready for testing)
   * Do you mean, not ready for production? There is no ORM, but besides that it's working nice, isn't it? The only downside may be that you have to write sql statements, but that is not a bad thing, is it?
* Firebase support is very basic. I had to reimplement Firebase Cloud messaging from scratch because some advanced features were not available.
* Consuming JSON APIs requires a lot more work than on other platforms.
* No way to cancel long running http requests (e.g. downloads) in dart:http
* Material UI library contains bugs, many advanced widgets are inferior to native views.
* No synchronous streams and some other strange stream behaviors
   * The bloc pattern says that everything must be a stream/sink. But the code is so much easier if you just call a function in a bloc, eg in a button's onpressed and want to do something with the result. Does this relate to a synchronous stream, or is there another use case of a synchronous stream?
   * I think that everything is asynchronous in flutter, because (besides isolates), there is just one thread (that has access to the UI). To have everything fluid, all code has to be async.
* Very difficult to run dart code in the background (and only a single incomplete tutorial)
* Less powerful hero animations
* No official vector drawable support (there are inconvenient workarounds)
* ListView  
 is inferior to Android's RecyclerView  
 (e.g. no animations on sort order change)
* List with Drag'n'Drop laggy with more than 50 items, also less polished than native
* Text input features are limited compared to native
   * I write mostly data entry applications, so this is important for me. Can you tell a bit more about the limitations?
* Less libraries and plugins
* A lot of traps for beginners
   * Agree! As a beginner, you have to be careful about a lot of traps. For me the problems started with state management. You can read about it all day and still have no idea what the best solution is. But you also have to be careful as a lot of opinions/guides/howtos on the internet are written by beginners and not experts. 

&amp;#x200B;",2018-12-17 08:41:23
140,"For this question id recommend r/learnprogramming but heres my shitty answer anyways

1) i dont have any personally, did all my learning from college and YouTube videos. See my answer to 3

2) you will need to program in objective-c or swift for iOS and you will need to program in java or kotlin for Android. Or you can use a cross-platform framework like Xamarin but that gives much worse performance. If you use xamarin you just program once and it works on both iOS and Android.

3)  Ive heard good things about cs50 courses (free online CS courses from harvard) you can find them on YouTube

4) not sure what this means, is it a drag and drop kinda thing? If so you probably wont get that far, i guess you could try though",2018-12-17 14:16:17
141,"That means it's a shitty app.  Native mobile experience done right makes it way more enjoyable than navigating a mobile webpage or even the best cross-platform solutions like xamarin, react native or cordova (yuck).

Native applications that are made up webviews displaying webpages don't really count.",2018-12-17 18:46:53
142,"Do you want your app to work on both Android and iPhone?  If so then you want to learn a cross platform framework.

&amp;#x200B;

Xamarin or React Native  are probably one of your best bets.

&amp;#x200B;

Xamarin is C#

 [https://university.xamarin.com/](https://university.xamarin.com/)

&amp;#x200B;

React Native is Javascript

[http://www.reactnative.com/courses/](http://www.reactnative.com/courses/)

&amp;#x200B;

You will need access to a Mac in order to develop IOS apps.

&amp;#x200B;

Some apps written using Xamarin

[https://insights.daffodilsw.com/blog/10-popular-mobile-apps-that-are-built-using-xamarin](https://insights.daffodilsw.com/blog/10-popular-mobile-apps-that-are-built-using-xamarin)

&amp;#x200B;

Some apps written in React Native.

[https://insights.daffodilsw.com/blog/10-amazing-apps-that-are-built-using-react-native](https://insights.daffodilsw.com/blog/10-amazing-apps-that-are-built-using-react-native)

&amp;#x200B;

Paying someone to write your app is anywhere from expensive to extremely expensive (50K to 1M)

&amp;#x200B;

  
",2018-12-17 20:29:48
143,"The javascript library works for web applications that are targeting mobile devices (so web apps that are responsive / PWA.

Arkane is also possible for native mobile applications (ios / android / xamarin), but there is no library available (yet). More info on how to integrate this inside a (native) mobile application will follow shortly.",2018-12-18 11:09:04
144,As of 2 months ago it was trash. Borderline a reskin of xamarin studio. ,2018-12-18 20:00:50
145,"You can use xamarin for Android and mac/iPhone. It's not perfect but most stuff can be done. In general yli recommend after you k ow the basics and are comfy with language, learn patterns since they are universal to any environment. In desktop you most likely will end up with wpf, so knowledge of mvvm will be beneficial to you. With web I would suggest learn net core (if you use Windows server then net mvc) with mvc and crap like js",2018-12-20 15:42:22
146,"If you really want cross platform, any of the following will do: Flutter, xamarin, react native.

Xamarin is the most mature of the three, but I feel that it has a steeper learning curve.",2018-12-20 18:43:41
147,Could you link to that post please? This Elmish like aproach paired with xaml and especially xamarin seems like a good deal.,2018-12-21 09:22:59
148,[https://github.com/adamped/xamarin.flutter](https://github.com/adamped/xamarin.flutter) this is also a very promising project.,2018-12-21 15:37:37
149,"Sounds like an application I'd be interested in using! I recommend using Xamarin.Forms (https://docs.microsoft.com/en-us/xamarin/xamarin-forms/). It's the best framework I've found for building cross-platform GUI apps. There's some support for deployment to macOS and Linux, but you may have to tweak it (Xamarin.Forms is open source).

Alternatively, Mono should do the trick (Linux included), though GUI building might not be as easy as with Xamarin.Forms.",2018-12-21 22:42:34
150,"Well I never used xamarin , but if you are willing to leqrn flutter , just do it . Its nice . No comment . ",2018-12-22 07:41:55
151,I am already learning xamarin for graduation project but i am confused which side should i go after college ,2018-12-22 07:45:05
152,There is a difference between xamarin.android and xamarin.forms. You are probable looking at a xamarin.android tutorial,2018-12-22 10:44:28
153,I have never used xamarin(visual studio only) but i am familiar with monogame. Where in monogame is the issue taking place and which version are you using ,2018-12-22 12:54:50
154,"It's targeted at mobile, but it works well for Windows 10 and there's already some support for macOS and Linux (https://github.com/xamarin/Xamarin.Forms/wiki/Platform-Support).

It's definitely open source. ""The Xamarin SDKs, Xamarin.Forms, and Mono runtime are open source on GitHub"" (https://visualstudio.microsoft.com/xamarin/#opensource).",2018-12-22 20:16:30
155,Are you on mac or linux? I ask because the memory profiler on visual studio might be better. Was just wondering on xamarin choice. Also be careful with creating and destroying objects in the loop. ,2018-12-22 21:38:29
156,"To me it seems unnecessary more complecate your developer life only for use a language. Using the proper languages for the project make it more easy to develop.

I not like xamarin. I prefer native, it's easy, fast and work well.

I not like mono for Linux (bad experience, a lot of waste of time). Maybe now is more mature but personally prefer more supported languages.",2018-12-22 21:53:41
157,"dll not found sqlite3

sqlite3.dll is a windows dll

it might work if you switch to sqlite-net-pcl


https://docs.microsoft.com/en-us/xamarin/android/data-cloud/data-access/using-sqlite-orm

https://github.com/ericsink/SQLitePCL.raw",2018-12-23 08:59:29
158,"I actually meant using c#/.net with flutter, instead of Dart.
OTOH Just recently Miguel tweeted that Xamarin is working on interpretor (mostly done), so hot reloading with mono/xamarin might be possible soon. Once that's available, porting flutter to xamarin sounds realistic. ",2018-12-23 17:03:57
159,If i can use C# with flutter it means that i can use xamarin too !,2018-12-23 17:05:28
160,"I hit this on fedora 28 about a month ago:

 file /usr/bin/csc from install of mono-core-5.18.0.225-0.xamarin.1.epel7.x86_64 conflicts with file from package chicken-4.12.0-6.fc28.x86_64

file /usr/bin/csi from install of mono-core-5.18.0.225-0.xamarin.1.epel7.x86_64 conflicts with file from package chicken-4.12.0-6.fc28.x86_64

Anyone have any good ideas about how to solve this?   ",2018-12-24 05:31:47
161,"C# for Mono would work on iOS/Android. You can download Xamarin which will allow you to target mobile devices

https://visualstudio.microsoft.com/xamarin/

Edit: Basically, download Visual Studio 2017 Community Edition (Free), then download Xamarin (Also Free). And you'll be able to develop for any mobile device using C#

https://docs.microsoft.com/en-us/xamarin/cross-platform/get-started/installation/?tabs=windows",2018-12-24 12:48:58
162,"I am using xamarin and flutter and i must say xamarin is not flexible and not univarsal..

Horizontal listview from xamarin? Nothing like that you need to use plugins

i cant do alot of stuff i want in xamarin (ui wise) or if i want to do something i am ending up writing 2 different classes, one for each platform.

You want to change text input decorations write 2 classes, you want to change the color of something really specific write 2 classes, you want to have different listview behaviour on item click write 2 classes etc...

So whats the point of xamarin if i ending writing a class for each platform?
If you want to have simple default ui without any customization yes xamarin is good option except of that i wouldnt recommend it to anyone.

Writing ui in xamarin is hell, using grid layout is hell you want to add a row or change column you must go through all other rows to update their indexes. It takes too long to write ui in xamarin comparing to flutter.

Flutter is way better, way faster development and more flexible in my opinion.",2018-12-24 21:08:31
163,"not a game framework, but a graphics framework                 
https://github.com/mellinoe/Veldrid          
https://mellinoe.github.io/veldrid-docs/ 

    
    Veldrid is a cross-platform, graphics API-agnostic rendering and compute library for .NET. 
    It provides a powerful, unified interface to a system's GPU and includes more advanced features 
    than any other .NET library. 
    Unlike other platform- or vendor-specific technologies, Veldrid can be used to create 
    high-performance 3D applications that are truly portable.
    
    Supported backends:
    
    Direct3D 11
    Vulkan
    Metal
    OpenGL 3
    OpenGL ES 3
    

there's also          
https://www.gamefromscratch.com/post/2018/09/04/CSharp_Game_Engines.aspx

https://www.youtube.com/watch?v=SAczwFDbWlQ        

https://www.youtube.com/watch?v=_XJfNAhS7F8

https://www.youtube.com/watch?v=p8A4OTtegIc

https://github.com/xamarin/urho",2018-12-25 04:44:44
164,"most people are using java. xamarin is okay too. you can use whichever you are comfortable with and gets the job done. be aware that the mobile market is extremely saturated nowadays. other than that, keep going forward.",2018-12-25 15:09:21
165,"For Android and iOS I use flutter, makes it easier

Else, you would need to choose between all the options that there is that allow a single app to be in android and ios(cordoba, react native, xamarin, etc,etc). Or make a version of the app in java/kotlin for android and another in objectivec/switft for ios",2018-12-25 17:31:58
166,"Xamarin is Microsoft's framework for Cross-Platform Mobile Development. They do allow you to use VB.NET in building your apps. Do you want to use VB or do you have another language you're more comfortable with?

 https://docs.microsoft.com/en-us/xamarin/cross-platform/platform/visual-basic/native-apps",2018-12-25 19:47:58
167,"Yes im talking about forms... I dont see the point of using xamarin for platform specific development.

There are better languages than c# to create shared code base and if forms is that shit why xamarin.android or iOS would be any better ?",2018-12-26 00:32:53
168,Haha lol if only it were that simple. Flutters fallback mechanism right now is to write platform specific code. It's as bad as xamarin,2018-12-26 09:41:57
169,"If you're doing xamarin.forms then MVVM is the way to go. It is extremely similar to WPF in how it's structured, and xaml binding are a lot easier with MVVM.",2018-12-26 11:56:25
170,"I did 

    sudo apt update 
before the

    sudo apt upgrade 
that broke everything 
anyway this is the output when i do it again:

    home@Mladen-PC:~$ sudo apt update
    [sudo] password for home: 
    Hit:1 http://repo.steampowered.com/steam precise InRelease
    Hit:2 http://linux.teamviewer.com/deb stable InRelease                         
    Hit:3 http://ppa.launchpad.net/noobslab/icons/ubuntu bionic InRelease          
    Hit:4 http://archive.ubuntu.com/ubuntu bionic InRelease                        
    Hit:5 http://archive.canonical.com bionic InRelease                            
    Hit:6 http://ppa.launchpad.net/numix/ppa/ubuntu bionic InRelease               
    Get:7 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]      
    Ign:8 http://repo.vivaldi.com/stable/deb stable InRelease                      
    Hit:9 http://repo.vivaldi.com/stable/deb stable Release                        
    Hit:10 http://ppa.launchpad.net/snwh/ppa/ubuntu bionic InRelease               
    Hit:11 https://download.mono-project.com/repo/ubuntu stable-bionic InRelease   
    Hit:12 https://download.mono-project.com/repo/ubuntu vs-bionic InRelease       
    Hit:13 http://ppa.launchpad.net/webupd8team/java/ubuntu bionic InRelease       
    Get:14 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]
    Get:15 http://archive.ubuntu.com/ubuntu bionic-security InRelease [83.2 kB]
    Fetched 247 kB in 3s (94.7 kB/s)                                
    Reading package lists... Done
    Building dependency tree       
    Reading state information... Done
    4 packages can be upgraded. Run 'apt list --upgradable' to see them.
    home@Mladen-PC:~$ sudo apt upgrade
    Reading package lists... Done
    Building dependency tree       
    Reading state information... Done
    You might want to run 'apt --fix-broken install' to correct these.
    The following packages have unmet dependencies:
     mono-devel : Depends: ca-certificates-mono (= 5.18.0.225-0xamarin1+ubuntu1804b1) but 5.16.0.220-0xamarin4+ubuntu1804b1 is installed
    E: Unmet dependencies. Try 'apt --fix-broken install' with no packages (or specify a solution).
    home@Mladen-PC:~$ sudo apt --fix-broken install
    Reading package lists... Done
    Building dependency tree       
    Reading state information... Done
    Correcting dependencies... Done
    The following additional packages will be installed:
      ca-certificates-mono
    The following packages will be upgraded:
      ca-certificates-mono
    1 upgraded, 0 newly installed, 0 to remove and 3 not upgraded.
    122 not fully installed or removed.
    Need to get 0 B/28.5 kB of archives.
    After this operation, 1,024 B of additional disk space will be used.
    Do you want to continue? [Y/n] 

And as before after hitting 'Y' it just spits the same thing that is in the github file, and it does it over and over without ever ending. I let it run for a couple of minutes earlier but it never changes.",2018-12-26 14:45:07
171,"&gt; ok i guess all the java based answers are going to be worthless soon?

Yes, just like TypeScript deprecated JS. ^^^/s

&gt; but from the rxjava part of my answer onwards, all of these things seem to be IGNORED by all the cross platform solutions i've looked at in favor of their own language specific implementations- xamarin,react.js,flutter
so.

Ignored where? Rx is universal, SQL/ORMs are universal, HTTP clients are universal, dependency injection is universal.
",2018-12-26 15:12:11
172,"Well the output changed this time but i guess that while trying to fix this i made the problem even bigger.

    home@Mladen-PC:~$ sudo dpkg-reconfigure --force mono-devel
    [sudo] password for home: 
    home@Mladen-PC:~$ sudo dpkg -r {mono-gac,mono-devel,ca-certificates-mono}
    dpkg: dependency problems prevent removal of mono-gac:
     mono-runtime-common depends on mono-gac (= 5.18.0.225-0xamarin1+ubuntu1804b1).
    dpkg: error processing package mono-gac (--remove):
     dependency problems - not removing
    dpkg: dependency problems prevent removal of mono-devel:
     fsharp depends on mono-devel (&gt;= 4.0.0~); however:
      Package mono-devel is to be removed.
    dpkg: error processing package mono-devel (--remove):
     dependency problems - not removing
    dpkg: dependency problems prevent removal of ca-certificates-mono:
     mono-devel depends on ca-certificates-mono (= 5.18.0.225-0xamarin1+ubuntu1804b1); however:
      Package ca-certificates-mono is to be removed.
    dpkg: error processing package ca-certificates-mono (--remove):
     dependency problems - not removing
    Errors were encountered while processing:
     mono-gac
     mono-devel
     ca-certificates-mono
    home@Mladen-PC:~$ 


Is there a way to manually remove everything mono related, or I guess i have to try the third command you listed even though i would like to not have to reinstall the system.

Anyways i really appreciate you trying to help me out. ",2018-12-26 16:15:48
173,"xamarin was **the worst** application development experience in my 15 years of development

[here's a great thread you should read up on](https://forums.xamarin.com/discussion/89286/xamarin-sucks-lessons-learned-from-weeks-wasted)

my experience with xamarin is that the brochure is great ""write less code! cross platform! yay!"" but as soon as you start building anything it falls apart quick.",2018-12-26 18:41:24
174,"React nstive suffers from JavaScript woes. 

Things like xamarin have near native performance with much better toolings",2018-12-27 00:40:08
175,"Hi, I'm the product marketing manager for Visual Studio. We recommend using Google's emulator, as it supports the latest version of Android and we have worked with them to get it [supported on Hyper-V](https://docs.microsoft.com/xamarin/android/get-started/installation/android-emulator/hardware-acceleration?tabs=vswin&amp;pivots=windows). Hope that solves both your concerns!",2018-12-28 13:50:52
176,this.. every xamarin update always break something. And Xamarin Forms is slow,2018-12-29 17:39:53
177,"I'd honestly recommend to pick up a few, .NET is handy here in Chattanooga, but that may differ depending on where you live (though talking with many people online in various cities, it's hard to go wrong with .NET, especially if you're _good_).

Java is still widely used, the language shows its age and I generally stay away from it for new projects, but I've worked on older software and projects that had some requirements that leaned on ""Java is a better solution"" (though .NET Core is filling that requirement now).

Python and Ruby are hard options to ignore, both are pretty easy languages to pick up, have powerful tool chains for building web apps. Python can be really useful for systems automation. I've used Ruby a bit for API automation too because it's so easy to slam out small scripts to automate JSON stuff.

Javascript is a must if you do web development (so you'll pick this up even if you just learn .NET for the web), at least on the front-end, a lot of that language knowledge can apply to back-end node.js code if you want to go that route, though I'm not the biggest fan of node.js from previous projects (mainly the quality of a lot of 3rd party packages is lacking).

---

For mobile development you have some options, a lot of mobile projects I do today are actually just .NET MVC sites leaning towards Single Page Applications (known generally as a SPA, these are Javascript applications that are built entirely in a web browser and run client-side, think of it like a traditional desktop app that communicates with a server for its data, but entirely within a browser, it allows us to break outside of the constraints of individual pages being loaded when clicking things and whatnot) -- done right people don't really notice it's not a native app and it saves your team and the company a lot of money, time, effort, pain, etc. I've had web app deployments beat the pants off of native applications simply because they're designed _well_.

If you need native there are lots of options, things like [phonegap](https://phonegap.com/) allow you to effectively write apps that run locally in HTML5 (so HTML/CSS/Javascript) and have access to local hardware. [Xamarin](https://visualstudio.microsoft.com/xamarin/) allows you to write .NET code that'll run on Android and iOS. Then again you can just learn [Swift](https://developer.apple.com/swift/) and [Kotlin](https://en.wikipedia.org/wiki/Kotlin_\(programming_language\)) (which is really pretty much just Java) and write apps in the languages the phone operating systems were designed in.

---

I know this is very much a ""Well it _depends_"" answer which kind of sucks -- but ultimately you'll find you like some languages more than others, so it's good to try a few and see what you like and try to work in that language, but on top of that keep some other languages handy in case the job market shifts or a project lands in your lap that your platform isn't quite the best solution for.


---

Also, fun to see you again /u/midacts!",2018-12-29 17:45:28
178,"You can hack together a Xamarin.Forms app with mono develop on Linux:

https://stackoverflow.com/questions/48693220/can-i-build-and-compile-cross-platform-xamarin-apps-on-linux",2018-12-30 17:18:22
179,"OP - take a look. Here's a walkthrough with a link to a trial account you can get started with. It says 10 free Apps for that trial but no word on SQL. You might need to put a credit card up for that part 

&amp;#x200B;

[https://docs.microsoft.com/en-us/azure/app-service-mobile/app-service-mobile-xamarin-forms-get-started](https://docs.microsoft.com/en-us/azure/app-service-mobile/app-service-mobile-xamarin-forms-get-started)",2018-12-31 17:13:53
